<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.1" xmlns:xmi="http://schema.omg.org/spec/XMI/2.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:CDA="http://www.openhealthtools.org/mdht/schemas/cda/4" xmlns:Ecore="http://www.eclipse.org/uml2/schemas/Ecore/5" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/4.0.0/UML" xsi:schemaLocation="http://www.eclipse.org/uml2/schemas/Ecore/5 pathmap://UML_PROFILES/Ecore.profile.uml#_z1OFcHjqEdy8S4Cr8Rc_NA">
  <uml:Package xmi:id="_2B30sBSVEeGGzu7fmW9pXw" name="consol">
    <packageImport xmi:id="_PKZrwE3jEeGVaJScxwOy7g">
      <importedPackage href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_ii81kjxVEd6JwqSGecoePg"/>
    </packageImport>
    <packageImport xmi:id="_hPUsgNcZEeGfQ6frO0B-Jg">
      <importedPackage href="../../org.openhealthtools.mdht.uml.hl7.datatypes/model/datatypes.uml#_XgMSwzxVEd6JwqSGecoePg"/>
    </packageImport>
    <packageImport xmi:id="_q3SeUD49EeKUq_Bmx5Topg">
      <importedPackage href="../../org.openhealthtools.mdht.uml.hl7.vocab/model/vocab.uml#__yVbeUDcEd6xYZuu1VKCVw"/>
    </packageImport>
    <packageImport xmi:id="_FEFdMD5QEeKUq_Bmx5Topg">
      <importedPackage xmi:type="uml:Model" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#_0"/>
    </packageImport>
    <packagedElement xmi:type="uml:Class" xmi:id="_2DNRcBSVEeGGzu7fmW9pXw" name="GeneralHeaderConstraints">
      <ownedComment xmi:id="_2DNRcRSVEeGGzu7fmW9pXw" annotatedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <body>This section describes constraints that apply to the header for all documents within the scope of this implementation guide. Header constraints specific to each document type are described in the appropriate document-specific section below

Document Type Codes
CDA R2 states that LOINC is the preferred vocabulary for document type codes, which specify the type of document being exchanged (e.g., History and Physical). Each document type in this guide recommends a single preferred clinicalDocument/code, with further specification provided by author or performer, setting, or specialty</body>
      </ownedComment>
      <ownedRule xmi:id="_jXOYoMa8EeGp28IjMvW3Ag" name="GeneralHeaderConstraintsTypeIdRoot" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_p0SisMa8EeGp28IjMvW3Ag">
          <language>OCL</language>
          <body>not self.typeId.oclIsUndefined() and self.typeId.root = '2.16.840.1.113883.1.3'</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_meGqAMa8EeGp28IjMvW3Ag" name="GeneralHeaderConstraintsTypeIdExtension" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_q-aMcMa8EeGp28IjMvW3Ag">
          <language>OCL</language>
          <body>not self.typeId.oclIsUndefined() and self.typeId.extension = 'POCD_HD000040'</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_QNCUUMa_EeGp28IjMvW3Ag" name="GeneralHeaderConstraintsSetIdVersionNumber" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YGu0cMa_EeGp28IjMvW3Ag">
          <language>OCL</language>
          <body>not self.setId.oclIsUndefined() implies not self.versionNumber.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_SYLWMMa_EeGp28IjMvW3Ag" name="GeneralHeaderConstraintsVersionNumberSetId" constrainedElement="_QNCUUMa_EeGp28IjMvW3Ag">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cEBwcMa_EeGp28IjMvW3Ag">
          <language>OCL</language>
          <body>not self.versionNumber.oclIsUndefined() implies not self.setId.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ujg44IokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsTemplateId" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ujhf8IokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.1.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ukw2EIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRealmCode" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ukw2EYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.realmCode->isEmpty() or self.realmCode->exists(element | element.isNullFlavorUndefined())) implies (self.realmCode->size() = 1 and self.realmCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = element.oclAsType(datatypes::CS) in &#xD;
value.code = 'US'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ukz5YIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsTypeId" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ukz5YYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.typeId.oclIsUndefined() or self.typeId.isNullFlavorUndefined()) implies (not self.typeId.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uk1HgIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsId" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uk1HgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id.oclIsUndefined() or self.id.isNullFlavorUndefined()) implies (not self.id.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uk28sIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsCode" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uk28sYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uk4x4IokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsTitle" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uk4x4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uk6nEIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsEffectiveTime" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uk6nEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ulIpgIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsConfidentialityCodeP" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ulIpgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.confidentialityCode.oclIsUndefined() or self.confidentialityCode.isNullFlavorUndefined()) implies (not self.confidentialityCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ulFmMIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsConfidentialityCode" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ulFmMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.confidentialityCode.oclIsUndefined() or self.confidentialityCode.isNullFlavorUndefined()) implies (not self.confidentialityCode.oclIsUndefined() and self.confidentialityCode.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.confidentialityCode.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.5.25' and (value.code = 'N' or value.code = 'R' or value.code = 'V'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ulM68IokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsLanguageCode" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ulM68YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.languageCode.oclIsUndefined() or self.languageCode.isNullFlavorUndefined()) implies (not self.languageCode.oclIsUndefined() and self.languageCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.languageCode.oclAsType(datatypes::CS) in &#xD;
not value.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ulQlUIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsSetId" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ulQlUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.setId.oclIsUndefined() or self.setId.isNullFlavorUndefined()) implies (not self.setId.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ulTBkIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsVersionNumber" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ulTBkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.versionNumber.oclIsUndefined() or self.versionNumber.isNullFlavorUndefined()) implies (not self.versionNumber.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uqGpEIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsAuthor" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uqGpEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->exists(author : cda::Author | not author.oclIsUndefined() and author.oclIsKindOf(cda::Author))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uqHQIIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsDataEnterer" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uqHQIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.dataEnterer->one(dataEnterer : cda::DataEnterer | not dataEnterer.oclIsUndefined() and dataEnterer.oclIsKindOf(cda::DataEnterer))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uqIeQIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsCustodian" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uqIeQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.custodian->one(custodian : cda::Custodian | not custodian.oclIsUndefined() and custodian.oclIsKindOf(cda::Custodian))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uqJFUIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsInformationRecipient" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uqJFUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.informationRecipient->exists(informationRecipient : cda::InformationRecipient | not informationRecipient.oclIsUndefined() and informationRecipient.oclIsKindOf(cda::InformationRecipient))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uqJsYIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsLegalAuthenticator" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uqJsYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.legalAuthenticator->one(legalAuthenticator : cda::LegalAuthenticator | not legalAuthenticator.oclIsUndefined() and legalAuthenticator.oclIsKindOf(cda::LegalAuthenticator))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uqKTcIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsAuthenticator" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uqKTcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.authenticator->exists(authenticator : cda::Authenticator | not authenticator.oclIsUndefined() and authenticator.oclIsKindOf(cda::Authenticator))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uqLhkIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTarget" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uqLhkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->exists(recordTarget : cda::RecordTarget | not recordTarget.oclIsUndefined() and recordTarget.oclIsKindOf(cda::RecordTarget))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uqMIoIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsComponentOf" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uqMIoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->one(componentOf : cda::Component1 | not componentOf.oclIsUndefined() and componentOf.oclIsKindOf(cda::Component1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vErsQYokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsInformant" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vErsQookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.informant->exists(informant : cda::Informant12 | not informant.oclIsUndefined() and informant.oclIsKindOf(cda::Informant12))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vEvWoYokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsSupportParticipant" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vEvWoookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->exists(participant : cda::Participant1 | not participant.oclIsUndefined() and participant.oclIsKindOf(cda::Participant1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vEwkwIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsInFulfillmentOf" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vEwkwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.inFulfillmentOf->exists(inFulfillmentOf : cda::InFulfillmentOf | not inFulfillmentOf.oclIsUndefined() and inFulfillmentOf.oclIsKindOf(cda::InFulfillmentOf))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vZEA0IokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsDocumentationOf" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vZEA0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->exists(documentationOf : cda::DocumentationOf | not documentationOf.oclIsUndefined() and documentationOf.oclIsKindOf(cda::DocumentationOf))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vZGdEIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsAuthorization" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vZGdEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.authorization->exists(authorization : cda::Authorization | not authorization.oclIsUndefined() and authorization.oclIsKindOf(cda::Authorization))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wJJZ8IokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRoleGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wJJZ8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject(isNullFlavorUndefined() implies ( streetAddressLine->size() >=1 and streetAddressLine->size() &lt;=4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wJKBAIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRoleGeneralHeaderConstraintsUSRealmAddressCity" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wJKBAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((city->isEmpty() or city->exists(element | element.isNullFlavorUndefined())) implies (city->size() = 1) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wJKoEIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRoleGeneralHeaderConstraintsUSRealmAddressCountry" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wJKoEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((country->isEmpty() or country->exists(element | element.isNullFlavorUndefined())) implies (not country->isEmpty()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wJLPIIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRoleGeneralHeaderConstraintsUSRealmAddressPostalCode" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wJLPIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((postalCode->isEmpty() or postalCode->exists(element | element.isNullFlavorUndefined())) implies (not postalCode->isEmpty()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wJL2MIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRoleGeneralHeaderConstraintsUSRealmAddressState" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wJL2MYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((state->isEmpty() or state->exists(element | element.isNullFlavorUndefined())) implies (not state->isEmpty()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wJMdQIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRoleGeneralHeaderConstraintsUSRealmAddressStreetAddressLine" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wJMdQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((streetAddressLine->isEmpty() or streetAddressLine->exists(element | element.isNullFlavorUndefined())) implies (not streetAddressLine->isEmpty()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wJNEUIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRoleGeneralHeaderConstraintsUSRealmAddressUseP" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wJNEUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies (not use->isEmpty() )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wJNrYIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRoleGeneralHeaderConstraintsUSRealmAddressUse" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wJNrYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies (use->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(vocab::PostalAddressUse) and &#xD;
let value : vocab::PostalAddressUse = element.oclAsType(vocab::PostalAddressUse) in &#xD;
value = vocab::PostalAddressUse::BAD or value = vocab::PostalAddressUse::DIR or value = vocab::PostalAddressUse::H or value = vocab::PostalAddressUse::HP or value = vocab::PostalAddressUse::HV or value = vocab::PostalAddressUse::PHYS or value = vocab::PostalAddressUse::PST or value = vocab::PostalAddressUse::PUB or value = vocab::PostalAddressUse::TMP or value = vocab::PostalAddressUse::WP) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wJPgkIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRoleTELUse" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wJPgkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).telecom->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies (not use->isEmpty() )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wJTK8IokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientTSBirthTimePreciseToYear" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wJTK8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null).birthTime->excluding(null)->select(isNullFlavorUndefined())->reject(not value.oclIsUndefined() and value.size() >= 4)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wJTK8ookEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientTSBirthTimePreciseToDay" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wJTK84okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null).birthTime->excluding(null)->select(isNullFlavorUndefined())->reject(not value.oclIsUndefined() and value.size() >= 6)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wJTyAIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientTSValue" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wJTyAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null).birthTime->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies (not value.oclIsUndefined() )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wJYqgIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientGeneralHeaderConstraintsUSRealmPatientNameUSRealmPatientNameMixedContent" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wJYqgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null).name->excluding(null)->select(isNullFlavorUndefined())->reject(getText(true)='')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wJZRkIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientGeneralHeaderConstraintsUSRealmPatientNameFamily" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wJZRkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null).name->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((family->isEmpty() or family->exists(element | element.isNullFlavorUndefined())) implies (family->size() = 1) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wJZ4oIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientGeneralHeaderConstraintsUSRealmPatientNameGiven" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wJZ4oYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null).name->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((given->isEmpty() or given->exists(element | element.isNullFlavorUndefined())) implies (not given->isEmpty()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wJZ4oookEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientGeneralHeaderConstraintsUSRealmPatientNamePrefix" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wJZ4o4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null).name->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((prefix->isEmpty() or prefix->exists(element | element.isNullFlavorUndefined())) implies (not prefix->isEmpty()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wJafsIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientGeneralHeaderConstraintsUSRealmPatientNameSuffix" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wJafsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null).name->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((suffix->isEmpty() or suffix->exists(element | element.isNullFlavorUndefined())) implies (not suffix->isEmpty()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wJbGwIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientGeneralHeaderConstraintsUSRealmPatientNameUseP" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wJbGwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null).name->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies (not use->isEmpty() )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wJbGwookEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientGeneralHeaderConstraintsUSRealmPatientNameUse" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wJbGw4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null).name->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies (use->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(vocab::EntityNameUse) and &#xD;
let value : vocab::EntityNameUse = element.oclAsType(vocab::EntityNameUse) in &#xD;
value = vocab::EntityNameUse::A or value = vocab::EntityNameUse::ABC or value = vocab::EntityNameUse::ASGN or value = vocab::EntityNameUse::C or value = vocab::EntityNameUse::I or value = vocab::EntityNameUse::IDE or value = vocab::EntityNameUse::L or value = vocab::EntityNameUse::P or value = vocab::EntityNameUse::PHON or value = vocab::EntityNameUse::R or value = vocab::EntityNameUse::SNDX or value = vocab::EntityNameUse::SRCH or value = vocab::EntityNameUse::SYL) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wJh0cIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wJh0cYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null).guardian->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject(isNullFlavorUndefined() implies ( streetAddressLine->size() >=1 and streetAddressLine->size() &lt;=4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wJibgIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianGeneralHeaderConstraintsUSRealmAddressCity" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wJibgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null).guardian->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((city->isEmpty() or city->exists(element | element.isNullFlavorUndefined())) implies (city->size() = 1) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wJjCkIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianGeneralHeaderConstraintsUSRealmAddressCountry" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wJjCkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null).guardian->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((country->isEmpty() or country->exists(element | element.isNullFlavorUndefined())) implies (not country->isEmpty()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wJjCkookEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianGeneralHeaderConstraintsUSRealmAddressPostalCode" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wJjCk4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null).guardian->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((postalCode->isEmpty() or postalCode->exists(element | element.isNullFlavorUndefined())) implies (not postalCode->isEmpty()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wJjpoIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianGeneralHeaderConstraintsUSRealmAddressState" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wJjpoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null).guardian->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((state->isEmpty() or state->exists(element | element.isNullFlavorUndefined())) implies (not state->isEmpty()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wJkQsIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianGeneralHeaderConstraintsUSRealmAddressStreetAddressLine" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wJkQsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null).guardian->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((streetAddressLine->isEmpty() or streetAddressLine->exists(element | element.isNullFlavorUndefined())) implies (not streetAddressLine->isEmpty()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wJkQsookEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianGeneralHeaderConstraintsUSRealmAddressUseP" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wJkQs4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null).guardian->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies (not use->isEmpty() )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wJk3wIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianGeneralHeaderConstraintsUSRealmAddressUse" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wJk3wYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null).guardian->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies (use->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(vocab::PostalAddressUse) and &#xD;
let value : vocab::PostalAddressUse = element.oclAsType(vocab::PostalAddressUse) in &#xD;
value = vocab::PostalAddressUse::BAD or value = vocab::PostalAddressUse::DIR or value = vocab::PostalAddressUse::H or value = vocab::PostalAddressUse::HP or value = vocab::PostalAddressUse::HV or value = vocab::PostalAddressUse::PHYS or value = vocab::PostalAddressUse::PST or value = vocab::PostalAddressUse::PUB or value = vocab::PostalAddressUse::TMP or value = vocab::PostalAddressUse::WP) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wJnUAIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianTELUse" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wJnUAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null).guardian->excluding(null).telecom->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies (not use->isEmpty() )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wJoiIIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianPersonName" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wJoiIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null).guardian->excluding(null).guardianPerson->excluding(null)->reject((name->isEmpty() or name->exists(element | element.isNullFlavorUndefined())) implies (not name->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wJoiIookEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianCodeFromPersonalRelationshipOrResponsibleParty" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wJoiI4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null).guardian->excluding(null)->reject((not code.oclIsUndefined()) and code.isNullFlavorUndefined() implies&#xD;
(code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = code.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.5.111' and (value.code = 'ADOPT' or value.code = 'AUNT' or value.code = 'CHILD' or value.code = 'CHLDINLAW' or value.code = 'COUSN' or value.code = 'DOMPART' or value.code = 'FAMMEMB' or value.code = 'CHLDFOST' or value.code = 'GRNDCHILD' or value.code = 'GPARNT' or value.code = 'GRPRN' or value.code = 'GGRPRN' or value.code = 'HSIB' or value.code = 'MAUNT' or value.code = 'MCOUSN' or value.code = 'MGRPRN' or value.code = 'MGGRPRN' or value.code = 'MUNCLE' or value.code = 'NCHILD' or value.code = 'NPRN' or value.code = 'NSIB' or value.code = 'NBOR' or value.code = 'NIENEPH' or value.code = 'PRN' or value.code = 'PRNINLAW' or value.code = 'PAUNT' or value.code = 'PCOUSN' or value.code = 'PGRPRN' or value.code = 'PGGRPRN' or value.code = 'PUNCLE' or value.code = 'ROOM' or value.code = 'SIB' or value.code = 'SIBINLAW' or value.code = 'SIGOTHR' or value.code = 'SPS' or value.code = 'STEP' or value.code = 'STPPRN' or value.code = 'STPSIB' or value.code = 'UNCLE' or value.code = 'FRND' or value.code = 'RESPRSN' or value.code = 'EXCEST' or value.code = 'GUADLTM' or value.code = 'GUARD' or value.code = 'POWATT' or value.code = 'DPOWATT' or value.code = 'HPOWATT' or value.code = 'SPOWATT')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wJpJMIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianAddr" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wJpJMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null).guardian->excluding(null)->reject((addr->isEmpty() or addr->exists(element | element.isNullFlavorUndefined())) implies (not addr->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wJpwQIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianCode" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wJpwQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null).guardian->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wJqXUIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianTelecom" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wJqXUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null).guardian->excluding(null)->reject((telecom->isEmpty() or telecom->exists(element | element.isNullFlavorUndefined())) implies (not telecom->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wJqXUookEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianGuardianPerson" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wJqXU4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null).guardian->excluding(null)->reject(guardianPerson->one(guardianPerson : cda::Person | not guardianPerson.oclIsUndefined() and guardianPerson.oclIsKindOf(cda::Person)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wJsMgIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientBirthplacePlaceAddr" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wJsMgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null).birthplace->excluding(null).place->excluding(null)->reject((addr.oclIsUndefined() or addr.isNullFlavorUndefined()) implies (not addr.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wJszkIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientBirthplacePlace" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wJszkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null).birthplace->excluding(null)->reject(place->one(place : cda::Place | not place.oclIsUndefined() and place.oclIsKindOf(cda::Place)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wJtaoIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationPreferenceInd" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wJtaoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null).languageCommunication->excluding(null)->reject((preferenceInd.oclIsUndefined() or preferenceInd.isNullFlavorUndefined()) implies (not preferenceInd.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wJuBsIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationProficiencyLevelCodeP" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wJuBsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null).languageCommunication->excluding(null)->reject((proficiencyLevelCode.oclIsUndefined() or proficiencyLevelCode.isNullFlavorUndefined()) implies (not proficiencyLevelCode.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wJuowIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationProficiencyLevelCode" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wJuowYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null).languageCommunication->excluding(null)->reject((proficiencyLevelCode.oclIsUndefined() or proficiencyLevelCode.isNullFlavorUndefined()) implies (not proficiencyLevelCode.oclIsUndefined() and proficiencyLevelCode.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = proficiencyLevelCode.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.5.61' and (value.code = 'E' or value.code = 'F' or value.code = 'G' or value.code = 'P')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wJvP0IokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationModeCodeP" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wJvP0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null).languageCommunication->excluding(null)->reject((modeCode.oclIsUndefined() or modeCode.isNullFlavorUndefined()) implies (not modeCode.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wJvP0ookEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationModeCode" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wJvP04okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null).languageCommunication->excluding(null)->reject((modeCode.oclIsUndefined() or modeCode.isNullFlavorUndefined()) implies (not modeCode.oclIsUndefined() and modeCode.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = modeCode.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.5.60' and (value.code = 'ESGN' or value.code = 'ESP' or value.code = 'EWR' or value.code = 'RSGN' or value.code = 'RSP' or value.code = 'RWR')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wJv24IokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationLanguageCode" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wJv24YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null).languageCommunication->excluding(null)->reject((languageCode.oclIsUndefined() or languageCode.isNullFlavorUndefined()) implies (not languageCode.oclIsUndefined() and languageCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = languageCode.oclAsType(datatypes::CS) in &#xD;
not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wJwd8IokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationLanguageCodeP" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wJwd8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null).languageCommunication->excluding(null)->reject((languageCode.oclIsUndefined() or languageCode.isNullFlavorUndefined()) implies (not languageCode.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wJxFAIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientIfSdtcEnforceRaceCode" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wJxFAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null)->reject(sDTCRaceCode->notEmpty() implies not raceCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wJxsEIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientAdministrativeGenderCode" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wJxsEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null)->reject((administrativeGenderCode.oclIsUndefined() or administrativeGenderCode.isNullFlavorUndefined()) implies (not administrativeGenderCode.oclIsUndefined() and administrativeGenderCode.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = administrativeGenderCode.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.5.1' and (value.code = 'F' or value.code = 'M' or value.code = 'UN')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wJxsEookEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientBirthTime" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wJxsE4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null)->reject((birthTime.oclIsUndefined() or birthTime.isNullFlavorUndefined()) implies (not birthTime.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wJyTIIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientEthnicGroupCodeP" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wJyTIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null)->reject((ethnicGroupCode.oclIsUndefined() or ethnicGroupCode.isNullFlavorUndefined()) implies (not ethnicGroupCode.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wJy6MIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientEthnicGroupCode" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wJy6MYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null)->reject((ethnicGroupCode.oclIsUndefined() or ethnicGroupCode.isNullFlavorUndefined()) implies (not ethnicGroupCode.oclIsUndefined() and ethnicGroupCode.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = ethnicGroupCode.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.238' and (value.code = '2135-2' or value.code = '2186-5')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wJy6MookEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientMaritalStatusCodeP" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wJy6M4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null)->reject((maritalStatusCode.oclIsUndefined() or maritalStatusCode.isNullFlavorUndefined()) implies (not maritalStatusCode.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wJzhQIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientMaritalStatusCode" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wJzhQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null)->reject((maritalStatusCode.oclIsUndefined() or maritalStatusCode.isNullFlavorUndefined()) implies (not maritalStatusCode.oclIsUndefined() and maritalStatusCode.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = maritalStatusCode.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.5.2' and (value.code = 'A' or value.code = 'D' or value.code = 'I' or value.code = 'L' or value.code = 'M' or value.code = 'P' or value.code = 'S' or value.code = 'T' or value.code = 'W')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wJ0IUIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientName" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wJ0IUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null)->reject((name->isEmpty() or name->exists(element | element.isNullFlavorUndefined())) implies (not name->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wJ0vYIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientRaceCodeP" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wJ0vYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null)->reject((raceCode.oclIsUndefined() or raceCode.isNullFlavorUndefined()) implies (not raceCode.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wJ0vYookEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientRaceCode" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wJ0vY4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null)->reject((raceCode.oclIsUndefined() or raceCode.isNullFlavorUndefined()) implies (not raceCode.oclIsUndefined() and raceCode.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = raceCode.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.238' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wJ1WcIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientReligiousAffiliationCodeP" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wJ1WcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null)->reject((religiousAffiliationCode.oclIsUndefined() or religiousAffiliationCode.isNullFlavorUndefined()) implies (not religiousAffiliationCode.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wJ19gIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientReligiousAffiliationCode" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wJ19gYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null)->reject((religiousAffiliationCode.oclIsUndefined() or religiousAffiliationCode.isNullFlavorUndefined()) implies (not religiousAffiliationCode.oclIsUndefined() and religiousAffiliationCode.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = religiousAffiliationCode.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.5.1076' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wJ2kkIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientSDTCRaceCodeP" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wJ2kkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null)->reject((sDTCRaceCode->isEmpty() or sDTCRaceCode->exists(element | element.isNullFlavorUndefined())) implies (not sDTCRaceCode->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wJ2kkookEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientSDTCRaceCode" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wJ2kk4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null)->reject((sDTCRaceCode->isEmpty() or sDTCRaceCode->exists(element | element.isNullFlavorUndefined())) implies (sDTCRaceCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = element.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.238' and not value.code.oclIsUndefined())))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wJ3LoIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardian" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wJ3LoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null)->reject(guardian->exists(guardian : cda::Guardian | not guardian.oclIsUndefined() and guardian.oclIsKindOf(cda::Guardian)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wJ3ysIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientBirthplace" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wJ3ysYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null)->reject(birthplace->one(birthplace : cda::Birthplace | not birthplace.oclIsUndefined() and birthplace.oclIsKindOf(cda::Birthplace)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wJ4ZwIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunication" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wJ4ZwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null)->reject(languageCommunication->exists(languageCommunication : cda::LanguageCommunication | not languageCommunication.oclIsUndefined() and languageCommunication.oclIsKindOf(cda::LanguageCommunication)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wJ-gYIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wJ-gYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).providerOrganization->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject(isNullFlavorUndefined() implies ( streetAddressLine->size() >=1 and streetAddressLine->size() &lt;=4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wJ_HcIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationGeneralHeaderConstraintsUSRealmAddressCity" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wJ_HcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).providerOrganization->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((city->isEmpty() or city->exists(element | element.isNullFlavorUndefined())) implies (city->size() = 1) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wJ_ugIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationGeneralHeaderConstraintsUSRealmAddressCountry" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wJ_ugYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).providerOrganization->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((country->isEmpty() or country->exists(element | element.isNullFlavorUndefined())) implies (not country->isEmpty()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wKAVkIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationGeneralHeaderConstraintsUSRealmAddressPostalCode" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wKAVkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).providerOrganization->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((postalCode->isEmpty() or postalCode->exists(element | element.isNullFlavorUndefined())) implies (not postalCode->isEmpty()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wKAVkookEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationGeneralHeaderConstraintsUSRealmAddressState" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wKAVk4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).providerOrganization->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((state->isEmpty() or state->exists(element | element.isNullFlavorUndefined())) implies (not state->isEmpty()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wKA8oIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationGeneralHeaderConstraintsUSRealmAddressStreetAddressLine" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wKA8oYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).providerOrganization->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((streetAddressLine->isEmpty() or streetAddressLine->exists(element | element.isNullFlavorUndefined())) implies (not streetAddressLine->isEmpty()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wKBjsIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationGeneralHeaderConstraintsUSRealmAddressUseP" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wKBjsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).providerOrganization->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies (not use->isEmpty() )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wKCKwIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationGeneralHeaderConstraintsUSRealmAddressUse" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wKCKwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).providerOrganization->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies (use->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(vocab::PostalAddressUse) and &#xD;
let value : vocab::PostalAddressUse = element.oclAsType(vocab::PostalAddressUse) in &#xD;
value = vocab::PostalAddressUse::BAD or value = vocab::PostalAddressUse::DIR or value = vocab::PostalAddressUse::H or value = vocab::PostalAddressUse::HP or value = vocab::PostalAddressUse::HV or value = vocab::PostalAddressUse::PHYS or value = vocab::PostalAddressUse::PST or value = vocab::PostalAddressUse::PUB or value = vocab::PostalAddressUse::TMP or value = vocab::PostalAddressUse::WP) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wKD_8IokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationTELUse" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wKD_8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).providerOrganization->excluding(null).telecom->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies (not use->isEmpty() )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wKEnAIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationHasNationalProviderIdentifier" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wKEnAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).providerOrganization->excluding(null)->reject(id->exists( root='2.16.840.1.113883.4.6' ))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wKFOEIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationAddr" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wKFOEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).providerOrganization->excluding(null)->reject((addr->isEmpty() or addr->exists(element | element.isNullFlavorUndefined())) implies (not addr->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wKF1IIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationId" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wKF1IYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).providerOrganization->excluding(null)->reject((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wKGcMIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationName" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wKGcMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).providerOrganization->excluding(null)->reject((name->isEmpty() or name->exists(element | element.isNullFlavorUndefined())) implies (not name->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wKGcMookEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationTelecom" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wKGcM4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).providerOrganization->excluding(null)->reject((telecom->isEmpty() or telecom->exists(element | element.isNullFlavorUndefined())) implies (not telecom->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wKHDQIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRoleAddr" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wKHDQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null)->reject((addr->isEmpty() or addr->exists(element | element.isNullFlavorUndefined())) implies (not addr->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wKHqUIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRoleId" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wKHqUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null)->reject((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wKIRYIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRoleTelecom" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wKIRYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null)->reject((telecom->isEmpty() or telecom->exists(element | element.isNullFlavorUndefined())) implies (not telecom->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wKI4cIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRolePatient" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wKI4cYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null)->reject(patient->one(patient : cda::Patient | not patient.oclIsUndefined() and patient.oclIsKindOf(cda::Patient)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wKI4cookEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganization" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wKI4c4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null)->reject(providerOrganization->one(providerOrganization : cda::Organization | not providerOrganization.oclIsUndefined() and providerOrganization.oclIsKindOf(cda::Organization)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wKJfgIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTargetPatientRole" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wKJfgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null)->reject(patientRole->one(patientRole : cda::PatientRole | not patientRole.oclIsUndefined() and patientRole.oclIsKindOf(cda::PatientRole)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wKKtoIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsComponentOfEncompassingEncounterEffectiveTime" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wKLUsIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject((effectiveTime.oclIsUndefined() or effectiveTime.isNullFlavorUndefined()) implies (not effectiveTime.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wKLUsYokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsComponentOfEncompassingEncounterId" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wKLUsookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wKL7wIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsComponentOfEncompassingEncounter" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wKL7wYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null)->reject(encompassingEncounter->one(encompassingEncounter : cda::EncompassingEncounter | not encompassingEncounter.oclIsUndefined() and encompassingEncounter.oclIsKindOf(cda::EncompassingEncounter)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wKTQgIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wKTQgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->excluding(null).assignedAuthor->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject(isNullFlavorUndefined() implies ( streetAddressLine->size() >=1 and streetAddressLine->size() &lt;=4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wKT3kIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressCity" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wKT3kYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->excluding(null).assignedAuthor->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((city->isEmpty() or city->exists(element | element.isNullFlavorUndefined())) implies (city->size() = 1) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wKUeoIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressCountry" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wKUeoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->excluding(null).assignedAuthor->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((country->isEmpty() or country->exists(element | element.isNullFlavorUndefined())) implies (not country->isEmpty()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wKVFsIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressPostalCode" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wKVFsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->excluding(null).assignedAuthor->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((postalCode->isEmpty() or postalCode->exists(element | element.isNullFlavorUndefined())) implies (not postalCode->isEmpty()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wKVFsookEeSkH97cUQxLGA" name="GeneralHeaderConstraintsAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressState" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wKVFs4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->excluding(null).assignedAuthor->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((state->isEmpty() or state->exists(element | element.isNullFlavorUndefined())) implies (not state->isEmpty()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wKVswIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressStreetAddressLine" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wKVswYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->excluding(null).assignedAuthor->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((streetAddressLine->isEmpty() or streetAddressLine->exists(element | element.isNullFlavorUndefined())) implies (not streetAddressLine->isEmpty()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wKWT0IokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressUseP" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wKWT0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->excluding(null).assignedAuthor->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies (not use->isEmpty() )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wKXh8IokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressUse" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wKXh8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->excluding(null).assignedAuthor->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies (use->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(vocab::PostalAddressUse) and &#xD;
let value : vocab::PostalAddressUse = element.oclAsType(vocab::PostalAddressUse) in &#xD;
value = vocab::PostalAddressUse::BAD or value = vocab::PostalAddressUse::DIR or value = vocab::PostalAddressUse::H or value = vocab::PostalAddressUse::HP or value = vocab::PostalAddressUse::HV or value = vocab::PostalAddressUse::PHYS or value = vocab::PostalAddressUse::PST or value = vocab::PostalAddressUse::PUB or value = vocab::PostalAddressUse::TMP or value = vocab::PostalAddressUse::WP) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wKZXIIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsAuthorAssignedAuthorTELUse" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wKZXIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->excluding(null).assignedAuthor->excluding(null).telecom->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies (not use->isEmpty() )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wKalQIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsAuthorAssignedAuthorAuthoringDeviceManufacturerModelName" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wKalQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->excluding(null).assignedAuthor->excluding(null).assignedAuthoringDevice->excluding(null)->reject((manufacturerModelName.oclIsUndefined() or manufacturerModelName.isNullFlavorUndefined()) implies (not manufacturerModelName.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wKbMUIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsAuthorAssignedAuthorAuthoringDeviceSoftwareName" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wKbMUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->excluding(null).assignedAuthor->excluding(null).assignedAuthoringDevice->excluding(null)->reject((softwareName.oclIsUndefined() or softwareName.isNullFlavorUndefined()) implies (not softwareName.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wKbzYIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsAuthorAssignedAuthorPersonName" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wKbzYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->excluding(null).assignedAuthor->excluding(null).assignedPerson->excluding(null)->reject((name->isEmpty() or name->exists(element | element.isNullFlavorUndefined())) implies (not name->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wKcacIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsAuthorAssignedAuthorHasOneAssignedPersonOrOneAssignedAuthoringDevice" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wKcacYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->excluding(null).assignedAuthor->excluding(null)->reject(assignedPerson->one(element | not element.oclIsUndefined() implies (element.isNullFlavorDefined() or element->size() = 1) ) xor assignedAuthoringDevice->one(element | not element.oclIsUndefined() implies (element.isNullFlavorDefined() or element->size() = 1) ))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wKdBgIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsAuthorAssignedAuthorHasNationalProviderIdentifier" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wKdBgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->excluding(null).assignedAuthor->excluding(null)->reject((not assignedPerson.oclIsUndefined() and not id->isEmpty()) implies id->exists(id | (id.isNullFlavorDefined() and id.extension->isEmpty() and id.root->isEmpty()) or (id.isNullFlavorDefined() and id.root='2.16.840.1.113883.4.6') or (id.root='2.16.840.1.113883.4.6' and id.extension->size() = 1)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wKdBgookEeSkH97cUQxLGA" name="GeneralHeaderConstraintsAuthorAssignedAuthorAddr" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wKdokIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->excluding(null).assignedAuthor->excluding(null)->reject((addr->isEmpty() or addr->exists(element | element.isNullFlavorUndefined())) implies (not addr->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wKdokYokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsAuthorAssignedAuthorCodeP" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wKdokookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->excluding(null).assignedAuthor->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wKePoIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsAuthorAssignedAuthorCode" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wKePoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->excluding(null).assignedAuthor->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined() and code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = code.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.101' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wKe2sIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsAuthorAssignedAuthorId" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wKe2sYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->excluding(null).assignedAuthor->excluding(null)->reject((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wKfdwIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsAuthorAssignedAuthorTelecom" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wKfdwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->excluding(null).assignedAuthor->excluding(null)->reject((telecom->isEmpty() or telecom->exists(element | element.isNullFlavorUndefined())) implies (not telecom->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wKgE0IokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsAuthorTime" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wKgE0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->excluding(null)->reject((time.oclIsUndefined() or time.isNullFlavorUndefined()) implies (not time.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wKgr4IokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsAuthorAssignedAuthor" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wKgr4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->excluding(null)->reject(assignedAuthor->one(assignedAuthor : cda::AssignedAuthor | not assignedAuthor.oclIsUndefined() and assignedAuthor.oclIsKindOf(cda::AssignedAuthor)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wKnZkIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsDataEntererAssignedEntityGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wKnZkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.dataEnterer->excluding(null).assignedEntity->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject(isNullFlavorUndefined() implies ( streetAddressLine->size() >=1 and streetAddressLine->size() &lt;=4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wKoAoIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsDataEntererAssignedEntityGeneralHeaderConstraintsUSRealmAddressCity" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wKoAoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.dataEnterer->excluding(null).assignedEntity->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((city->isEmpty() or city->exists(element | element.isNullFlavorUndefined())) implies (city->size() = 1) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wKonsIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsDataEntererAssignedEntityGeneralHeaderConstraintsUSRealmAddressCountry" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wKonsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.dataEnterer->excluding(null).assignedEntity->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((country->isEmpty() or country->exists(element | element.isNullFlavorUndefined())) implies (not country->isEmpty()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wKonsookEeSkH97cUQxLGA" name="GeneralHeaderConstraintsDataEntererAssignedEntityGeneralHeaderConstraintsUSRealmAddressPostalCode" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wKons4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.dataEnterer->excluding(null).assignedEntity->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((postalCode->isEmpty() or postalCode->exists(element | element.isNullFlavorUndefined())) implies (not postalCode->isEmpty()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wKpOwIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsDataEntererAssignedEntityGeneralHeaderConstraintsUSRealmAddressState" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wKpOwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.dataEnterer->excluding(null).assignedEntity->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((state->isEmpty() or state->exists(element | element.isNullFlavorUndefined())) implies (not state->isEmpty()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wKp10IokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsDataEntererAssignedEntityGeneralHeaderConstraintsUSRealmAddressStreetAddressLine" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wKp10YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.dataEnterer->excluding(null).assignedEntity->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((streetAddressLine->isEmpty() or streetAddressLine->exists(element | element.isNullFlavorUndefined())) implies (not streetAddressLine->isEmpty()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wKqc4IokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsDataEntererAssignedEntityGeneralHeaderConstraintsUSRealmAddressUseP" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wKqc4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.dataEnterer->excluding(null).assignedEntity->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies (not use->isEmpty() )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wKrD8IokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsDataEntererAssignedEntityGeneralHeaderConstraintsUSRealmAddressUse" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wKrD8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.dataEnterer->excluding(null).assignedEntity->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies (use->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(vocab::PostalAddressUse) and &#xD;
let value : vocab::PostalAddressUse = element.oclAsType(vocab::PostalAddressUse) in &#xD;
value = vocab::PostalAddressUse::BAD or value = vocab::PostalAddressUse::DIR or value = vocab::PostalAddressUse::H or value = vocab::PostalAddressUse::HP or value = vocab::PostalAddressUse::HV or value = vocab::PostalAddressUse::PHYS or value = vocab::PostalAddressUse::PST or value = vocab::PostalAddressUse::PUB or value = vocab::PostalAddressUse::TMP or value = vocab::PostalAddressUse::WP) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wKs5IIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsDataEntererAssignedEntityTELUse" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wKtgMIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.dataEnterer->excluding(null).assignedEntity->excluding(null).telecom->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies (not use->isEmpty() )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wKuHQIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsDataEntererAssignedEntityPersonName" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wKuHQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.dataEnterer->excluding(null).assignedEntity->excluding(null).assignedPerson->excluding(null)->reject((name->isEmpty() or name->exists(element | element.isNullFlavorUndefined())) implies (not name->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wKuuUIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsDataEntererAssignedEntityHasNationalProviderIdentifier" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wKuuUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.dataEnterer->excluding(null).assignedEntity->excluding(null)->reject(id->exists( root='2.16.840.1.113883.4.6' ))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wKvVYIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsDataEntererAssignedEntityAddr" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wKvVYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.dataEnterer->excluding(null).assignedEntity->excluding(null)->reject((addr->isEmpty() or addr->exists(element | element.isNullFlavorUndefined())) implies (not addr->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wKv8cIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsDataEntererAssignedEntityCodeP" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wKv8cYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.dataEnterer->excluding(null).assignedEntity->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wKwjgIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsDataEntererAssignedEntityCode" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wKwjgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.dataEnterer->excluding(null).assignedEntity->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined() and code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = code.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.101'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wKxKkIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsDataEntererAssignedEntityId" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wKxKkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.dataEnterer->excluding(null).assignedEntity->excluding(null)->reject((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wKxxoIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsDataEntererAssignedEntityTelecom" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wKxxoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.dataEnterer->excluding(null).assignedEntity->excluding(null)->reject((telecom->isEmpty() or telecom->exists(element | element.isNullFlavorUndefined())) implies (not telecom->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wKxxoookEeSkH97cUQxLGA" name="GeneralHeaderConstraintsDataEntererAssignedEntityAssignedPerson" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wKxxo4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.dataEnterer->excluding(null).assignedEntity->excluding(null)->reject(assignedPerson->one(assignedPerson : cda::Person | not assignedPerson.oclIsUndefined() and assignedPerson.oclIsKindOf(cda::Person)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wKyYsIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsDataEntererAssignedEntity" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wKyYsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.dataEnterer->excluding(null)->reject(assignedEntity->one(assignedEntity : cda::AssignedEntity | not assignedEntity.oclIsUndefined() and assignedEntity.oclIsKindOf(cda::AssignedEntity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wK5tcIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wK5tcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.custodian->excluding(null).assignedCustodian->excluding(null).representedCustodianOrganization->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject(isNullFlavorUndefined() implies ( streetAddressLine->size() >=1 and streetAddressLine->size() &lt;=4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wK6UgIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationGeneralHeaderConstraintsUSRealmAddressCity" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wK6UgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.custodian->excluding(null).assignedCustodian->excluding(null).representedCustodianOrganization->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((city->isEmpty() or city->exists(element | element.isNullFlavorUndefined())) implies (city->size() = 1) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wK67kIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationGeneralHeaderConstraintsUSRealmAddressCountry" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wK67kYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.custodian->excluding(null).assignedCustodian->excluding(null).representedCustodianOrganization->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((country->isEmpty() or country->exists(element | element.isNullFlavorUndefined())) implies (not country->isEmpty()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wK7ioIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationGeneralHeaderConstraintsUSRealmAddressPostalCode" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wK7ioYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.custodian->excluding(null).assignedCustodian->excluding(null).representedCustodianOrganization->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((postalCode->isEmpty() or postalCode->exists(element | element.isNullFlavorUndefined())) implies (not postalCode->isEmpty()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wK8JsIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationGeneralHeaderConstraintsUSRealmAddressState" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wK8JsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.custodian->excluding(null).assignedCustodian->excluding(null).representedCustodianOrganization->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((state->isEmpty() or state->exists(element | element.isNullFlavorUndefined())) implies (not state->isEmpty()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wK8wwIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationGeneralHeaderConstraintsUSRealmAddressStreetAddressLine" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wK8wwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.custodian->excluding(null).assignedCustodian->excluding(null).representedCustodianOrganization->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((streetAddressLine->isEmpty() or streetAddressLine->exists(element | element.isNullFlavorUndefined())) implies (not streetAddressLine->isEmpty()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wLDecIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationGeneralHeaderConstraintsUSRealmAddressUseP" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wLEFgIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.custodian->excluding(null).assignedCustodian->excluding(null).representedCustodianOrganization->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies (not use->isEmpty() )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wLEFgYokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationGeneralHeaderConstraintsUSRealmAddressUse" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wLEFgookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.custodian->excluding(null).assignedCustodian->excluding(null).representedCustodianOrganization->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies (use->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(vocab::PostalAddressUse) and &#xD;
let value : vocab::PostalAddressUse = element.oclAsType(vocab::PostalAddressUse) in &#xD;
value = vocab::PostalAddressUse::BAD or value = vocab::PostalAddressUse::DIR or value = vocab::PostalAddressUse::H or value = vocab::PostalAddressUse::HP or value = vocab::PostalAddressUse::HV or value = vocab::PostalAddressUse::PHYS or value = vocab::PostalAddressUse::PST or value = vocab::PostalAddressUse::PUB or value = vocab::PostalAddressUse::TMP or value = vocab::PostalAddressUse::WP) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wLGhwIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationTELUse" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wLGhwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.custodian->excluding(null).assignedCustodian->excluding(null).representedCustodianOrganization->excluding(null).telecom->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies (not use->isEmpty() )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wLHI0IokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationHasNationalProviderIdentifier" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wLHI0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.custodian->excluding(null).assignedCustodian->excluding(null).representedCustodianOrganization->excluding(null)->reject(id->exists( root='2.16.840.1.113883.4.6' ))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wLHv4IokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationAddr" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wLHv4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.custodian->excluding(null).assignedCustodian->excluding(null).representedCustodianOrganization->excluding(null)->reject((addr.oclIsUndefined() or addr.isNullFlavorUndefined()) implies (not addr.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wLIW8IokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationId" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wLIW8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.custodian->excluding(null).assignedCustodian->excluding(null).representedCustodianOrganization->excluding(null)->reject((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wLI-AIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationName" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wLI-AYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.custodian->excluding(null).assignedCustodian->excluding(null).representedCustodianOrganization->excluding(null)->reject((name.oclIsUndefined() or name.isNullFlavorUndefined()) implies (not name.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wLJlEIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationTelecom" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wLJlEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.custodian->excluding(null).assignedCustodian->excluding(null).representedCustodianOrganization->excluding(null)->reject((telecom.oclIsUndefined() or telecom.isNullFlavorUndefined()) implies (not telecom.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wLKMIIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsCustodianAssignedCustodianRepresentedCustodianOrganization" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wLKMIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.custodian->excluding(null).assignedCustodian->excluding(null)->reject(representedCustodianOrganization->one(representedCustodianOrganization : cda::CustodianOrganization | not representedCustodianOrganization.oclIsUndefined() and representedCustodianOrganization.oclIsKindOf(cda::CustodianOrganization)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wLKMIookEeSkH97cUQxLGA" name="GeneralHeaderConstraintsCustodianAssignedCustodian" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wLKzMIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.custodian->excluding(null)->reject(assignedCustodian->one(assignedCustodian : cda::AssignedCustodian | not assignedCustodian.oclIsUndefined() and assignedCustodian.oclIsKindOf(cda::AssignedCustodian)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wLMoYIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsInformationRecipientIntendedRecipientPersonName" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wLMoYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.informationRecipient->excluding(null).intendedRecipient->excluding(null).informationRecipient->excluding(null)->reject((name->isEmpty() or name->exists(element | element.isNullFlavorUndefined())) implies (not name->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wLN2gIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsInformationRecipientIntendedRecipientOrganizationName" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wLN2gYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.informationRecipient->excluding(null).intendedRecipient->excluding(null).receivedOrganization->excluding(null)->reject((name->isEmpty() or name->exists(element | element.isNullFlavorUndefined())) implies (name->size() = 1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wLOdkIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsInformationRecipientIntendedRecipientInformationRecipient" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wLOdkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.informationRecipient->excluding(null).intendedRecipient->excluding(null)->reject(informationRecipient->one(informationRecipient : cda::Person | not informationRecipient.oclIsUndefined() and informationRecipient.oclIsKindOf(cda::Person)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wLPEoIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsInformationRecipientIntendedRecipientRecievedOrganization" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wLPEoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.informationRecipient->excluding(null).intendedRecipient->excluding(null)->reject(receivedOrganization->one(receivedOrganization : cda::Organization | not receivedOrganization.oclIsUndefined() and receivedOrganization.oclIsKindOf(cda::Organization)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wLPrsIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsInformationRecipientIntendedRecipient" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wLPrsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.informationRecipient->excluding(null)->reject(intendedRecipient->one(intendedRecipient : cda::IntendedRecipient | not intendedRecipient.oclIsUndefined() and intendedRecipient.oclIsKindOf(cda::IntendedRecipient)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wLYOkIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wLYOkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.legalAuthenticator->excluding(null).assignedEntity->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject(isNullFlavorUndefined() implies ( streetAddressLine->size() >=1 and streetAddressLine->size() &lt;=4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wLY1oIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressCity" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wLY1oYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.legalAuthenticator->excluding(null).assignedEntity->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((city->isEmpty() or city->exists(element | element.isNullFlavorUndefined())) implies (city->size() = 1) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wLZcsIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressCountry" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wLZcsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.legalAuthenticator->excluding(null).assignedEntity->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((country->isEmpty() or country->exists(element | element.isNullFlavorUndefined())) implies (not country->isEmpty()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wLaDwIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressPostalCode" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wLaDwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.legalAuthenticator->excluding(null).assignedEntity->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((postalCode->isEmpty() or postalCode->exists(element | element.isNullFlavorUndefined())) implies (not postalCode->isEmpty()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wLaq0IokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressState" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wLaq0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.legalAuthenticator->excluding(null).assignedEntity->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((state->isEmpty() or state->exists(element | element.isNullFlavorUndefined())) implies (not state->isEmpty()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wLaq0ookEeSkH97cUQxLGA" name="GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressStreetAddressLine" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wLbR4IokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.legalAuthenticator->excluding(null).assignedEntity->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((streetAddressLine->isEmpty() or streetAddressLine->exists(element | element.isNullFlavorUndefined())) implies (not streetAddressLine->isEmpty()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wLbR4YokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressUseP" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wLbR4ookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.legalAuthenticator->excluding(null).assignedEntity->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies (not use->isEmpty() )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wLb48IokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressUse" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wLb48YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.legalAuthenticator->excluding(null).assignedEntity->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies (use->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(vocab::PostalAddressUse) and &#xD;
let value : vocab::PostalAddressUse = element.oclAsType(vocab::PostalAddressUse) in &#xD;
value = vocab::PostalAddressUse::BAD or value = vocab::PostalAddressUse::DIR or value = vocab::PostalAddressUse::H or value = vocab::PostalAddressUse::HP or value = vocab::PostalAddressUse::HV or value = vocab::PostalAddressUse::PHYS or value = vocab::PostalAddressUse::PST or value = vocab::PostalAddressUse::PUB or value = vocab::PostalAddressUse::TMP or value = vocab::PostalAddressUse::WP) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wLeVMIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityTELUse" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wLeVMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.legalAuthenticator->excluding(null).assignedEntity->excluding(null).telecom->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies (not use->isEmpty() )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wLfjUIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityPersonName" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wLfjUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.legalAuthenticator->excluding(null).assignedEntity->excluding(null).assignedPerson->excluding(null)->reject((name->isEmpty() or name->exists(element | element.isNullFlavorUndefined())) implies (not name->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wLgKYIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityHasNationalProviderIdentifier" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wLgKYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.legalAuthenticator->excluding(null).assignedEntity->excluding(null)->reject(id->exists( root='2.16.840.1.113883.4.6' ))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wLgxcIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityAddr" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wLgxcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.legalAuthenticator->excluding(null).assignedEntity->excluding(null)->reject((addr->isEmpty() or addr->exists(element | element.isNullFlavorUndefined())) implies (not addr->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wLhYgIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityCodeP" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wLhYgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.legalAuthenticator->excluding(null).assignedEntity->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wLh_kIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityCode" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wLh_kYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.legalAuthenticator->excluding(null).assignedEntity->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined() and code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = code.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.101' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wLh_kookEeSkH97cUQxLGA" name="GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityId" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wLimoIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.legalAuthenticator->excluding(null).assignedEntity->excluding(null)->reject((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wLimoYokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityTelecom" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wLimoookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.legalAuthenticator->excluding(null).assignedEntity->excluding(null)->reject((telecom->isEmpty() or telecom->exists(element | element.isNullFlavorUndefined())) implies (not telecom->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wLj0wIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityAssignedPerson" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wLj0wYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.legalAuthenticator->excluding(null).assignedEntity->excluding(null)->reject(assignedPerson->one(assignedPerson : cda::Person | not assignedPerson.oclIsUndefined() and assignedPerson.oclIsKindOf(cda::Person)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wLkb0IokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsLegalAuthenticatorTime" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wLkb0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.legalAuthenticator->excluding(null)->reject((time.oclIsUndefined() or time.isNullFlavorUndefined()) implies (not time.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wLlC4IokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsLegalAuthenticatorSignatureCodeP" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wLlC4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.legalAuthenticator->excluding(null)->reject((signatureCode.oclIsUndefined() or signatureCode.isNullFlavorUndefined()) implies (not signatureCode.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wLlp8IokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsLegalAuthenticatorSignatureCode" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wLlp8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.legalAuthenticator->excluding(null)->reject((signatureCode.oclIsUndefined() or signatureCode.isNullFlavorUndefined()) implies (not signatureCode.oclIsUndefined() and signatureCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = signatureCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'S'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wLsXoIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wLsXoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.authenticator->excluding(null).assignedEntity->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject(isNullFlavorUndefined() implies ( streetAddressLine->size() >=1 and streetAddressLine->size() &lt;=4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wLs-sIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressCity" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wLs-sYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.authenticator->excluding(null).assignedEntity->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((city->isEmpty() or city->exists(element | element.isNullFlavorUndefined())) implies (city->size() = 1) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wLtlwIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressCountry" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wLtlwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.authenticator->excluding(null).assignedEntity->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((country->isEmpty() or country->exists(element | element.isNullFlavorUndefined())) implies (not country->isEmpty()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wLuM0IokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressPostalCode" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wLuM0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.authenticator->excluding(null).assignedEntity->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((postalCode->isEmpty() or postalCode->exists(element | element.isNullFlavorUndefined())) implies (not postalCode->isEmpty()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wLuz4IokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressState" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wLuz4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.authenticator->excluding(null).assignedEntity->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((state->isEmpty() or state->exists(element | element.isNullFlavorUndefined())) implies (not state->isEmpty()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wLva8IokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressStreetAddressLine" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wLva8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.authenticator->excluding(null).assignedEntity->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((streetAddressLine->isEmpty() or streetAddressLine->exists(element | element.isNullFlavorUndefined())) implies (not streetAddressLine->isEmpty()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wLwCAIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressUseP" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wLwCAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.authenticator->excluding(null).assignedEntity->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies (not use->isEmpty() )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wLwpEIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressUse" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wLwpEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.authenticator->excluding(null).assignedEntity->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies (use->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(vocab::PostalAddressUse) and &#xD;
let value : vocab::PostalAddressUse = element.oclAsType(vocab::PostalAddressUse) in &#xD;
value = vocab::PostalAddressUse::BAD or value = vocab::PostalAddressUse::DIR or value = vocab::PostalAddressUse::H or value = vocab::PostalAddressUse::HP or value = vocab::PostalAddressUse::HV or value = vocab::PostalAddressUse::PHYS or value = vocab::PostalAddressUse::PST or value = vocab::PostalAddressUse::PUB or value = vocab::PostalAddressUse::TMP or value = vocab::PostalAddressUse::WP) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wLzFUIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsAuthenticatorAssignedEntityTELUse" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wLzFUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.authenticator->excluding(null).assignedEntity->excluding(null).telecom->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies (not use->isEmpty() )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wL0TcIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsAuthenticatorAssignedEntityPersonName" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wL0TcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.authenticator->excluding(null).assignedEntity->excluding(null).assignedPerson->excluding(null)->reject((name->isEmpty() or name->exists(element | element.isNullFlavorUndefined())) implies (not name->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wL06gIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsAuthenticatorAssignedEntityHasNationalProviderIdentifier" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wL06gYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.authenticator->excluding(null).assignedEntity->excluding(null)->reject(id->exists( root='2.16.840.1.113883.4.6' ))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wL1hkIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsAuthenticatorAssignedEntityAddr" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wL1hkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.authenticator->excluding(null).assignedEntity->excluding(null)->reject((addr->isEmpty() or addr->exists(element | element.isNullFlavorUndefined())) implies (not addr->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wL2IoIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsAuthenticatorAssignedEntityCodeP" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wL2IoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.authenticator->excluding(null).assignedEntity->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wL2vsIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsAuthenticatorAssignedEntityCode" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wL2vsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.authenticator->excluding(null).assignedEntity->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined() and code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = code.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.101' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wL3WwIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsAuthenticatorAssignedEntityId" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wL3WwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.authenticator->excluding(null).assignedEntity->excluding(null)->reject((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wL3WwookEeSkH97cUQxLGA" name="GeneralHeaderConstraintsAuthenticatorAssignedEntityTelecom" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wL390IokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.authenticator->excluding(null).assignedEntity->excluding(null)->reject((telecom->isEmpty() or telecom->exists(element | element.isNullFlavorUndefined())) implies (not telecom->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wL390YokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsAuthenticatorAssignedEntityAssignedPerson" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wL390ookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.authenticator->excluding(null).assignedEntity->excluding(null)->reject(assignedPerson->one(assignedPerson : cda::Person | not assignedPerson.oclIsUndefined() and assignedPerson.oclIsKindOf(cda::Person)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wL4k4IokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsAuthenticatorTime" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wL4k4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.authenticator->excluding(null)->reject((time.oclIsUndefined() or time.isNullFlavorUndefined()) implies (not time.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wL5L8IokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsAuthenticatorSignatureCode" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wL5L8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.authenticator->excluding(null)->reject((signatureCode.oclIsUndefined() or signatureCode.isNullFlavorUndefined()) implies (not signatureCode.oclIsUndefined() and signatureCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = signatureCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'S'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wL5zAIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsAuthenticatorAssignedEntity" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wL5zAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.authenticator->excluding(null)->reject(assignedEntity->one(assignedEntity : cda::AssignedEntity | not assignedEntity.oclIsUndefined() and assignedEntity.oclIsKindOf(cda::AssignedEntity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wMBHwIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsInformantAssignedEntityGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wMBHwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.informant->excluding(null).assignedEntity->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject(isNullFlavorUndefined() implies ( streetAddressLine->size() >=1 and streetAddressLine->size() &lt;=4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wMBu0IokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsInformantAssignedEntityGeneralHeaderConstraintsUSRealmAddressCity" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wMBu0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.informant->excluding(null).assignedEntity->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((city->isEmpty() or city->exists(element | element.isNullFlavorUndefined())) implies (city->size() = 1) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wMCV4IokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsInformantAssignedEntityGeneralHeaderConstraintsUSRealmAddressCountry" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wMCV4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.informant->excluding(null).assignedEntity->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((country->isEmpty() or country->exists(element | element.isNullFlavorUndefined())) implies (not country->isEmpty()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wMC88IokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsInformantAssignedEntityGeneralHeaderConstraintsUSRealmAddressPostalCode" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wMC88YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.informant->excluding(null).assignedEntity->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((postalCode->isEmpty() or postalCode->exists(element | element.isNullFlavorUndefined())) implies (not postalCode->isEmpty()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wMDkAIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsInformantAssignedEntityGeneralHeaderConstraintsUSRealmAddressState" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wMDkAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.informant->excluding(null).assignedEntity->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((state->isEmpty() or state->exists(element | element.isNullFlavorUndefined())) implies (not state->isEmpty()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wMELEIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsInformantAssignedEntityGeneralHeaderConstraintsUSRealmAddressStreetAddressLine" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wMELEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.informant->excluding(null).assignedEntity->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((streetAddressLine->isEmpty() or streetAddressLine->exists(element | element.isNullFlavorUndefined())) implies (not streetAddressLine->isEmpty()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wMEyIIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsInformantAssignedEntityGeneralHeaderConstraintsUSRealmAddressUseP" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wMEyIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.informant->excluding(null).assignedEntity->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies (not use->isEmpty() )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wMFZMIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsInformantAssignedEntityGeneralHeaderConstraintsUSRealmAddressUse" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wMFZMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.informant->excluding(null).assignedEntity->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies (use->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(vocab::PostalAddressUse) and &#xD;
let value : vocab::PostalAddressUse = element.oclAsType(vocab::PostalAddressUse) in &#xD;
value = vocab::PostalAddressUse::BAD or value = vocab::PostalAddressUse::DIR or value = vocab::PostalAddressUse::H or value = vocab::PostalAddressUse::HP or value = vocab::PostalAddressUse::HV or value = vocab::PostalAddressUse::PHYS or value = vocab::PostalAddressUse::PST or value = vocab::PostalAddressUse::PUB or value = vocab::PostalAddressUse::TMP or value = vocab::PostalAddressUse::WP) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wMGnUIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsInformantAssignedEntityPersonName" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wMGnUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.informant->excluding(null).assignedEntity->excluding(null).assignedPerson->excluding(null)->reject((name->isEmpty() or name->exists(element | element.isNullFlavorUndefined())) implies (not name->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wMHOYIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsInformantAssignedEntityHasNationalProviderIdentifier" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wMHOYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.informant->excluding(null).assignedEntity->excluding(null)->reject(id->exists( root='2.16.840.1.113883.4.6' ))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wMH1cIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsInformantAssignedEntityAddr" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wMH1cYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.informant->excluding(null).assignedEntity->excluding(null)->reject((addr->isEmpty() or addr->exists(element | element.isNullFlavorUndefined())) implies (not addr->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wMIcgIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsInformantAssignedEntityCodeP" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wMIcgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.informant->excluding(null).assignedEntity->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wMJDkIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsInformantAssignedEntityCode" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wMJDkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.informant->excluding(null).assignedEntity->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined() and code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = code.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.101'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wMKRsIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsInformantAssignedEntityId" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wMKRsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.informant->excluding(null).assignedEntity->excluding(null)->reject((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wMK4wIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsInformantAssignedEntityAssignedPerson" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wMK4wYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.informant->excluding(null).assignedEntity->excluding(null)->reject(assignedPerson->one(assignedPerson : cda::Person | not assignedPerson.oclIsUndefined() and assignedPerson.oclIsKindOf(cda::Person)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wMRmcIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsInformantRelatedEntityGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wMRmcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.informant->excluding(null).relatedEntity->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject(isNullFlavorUndefined() implies ( streetAddressLine->size() >=1 and streetAddressLine->size() &lt;=4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wMSNgIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsInformantRelatedEntityGeneralHeaderConstraintsUSRealmAddressCity" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wMSNgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.informant->excluding(null).relatedEntity->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((city->isEmpty() or city->exists(element | element.isNullFlavorUndefined())) implies (city->size() = 1) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wMS0kIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsInformantRelatedEntityGeneralHeaderConstraintsUSRealmAddressCountry" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wMS0kYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.informant->excluding(null).relatedEntity->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((country->isEmpty() or country->exists(element | element.isNullFlavorUndefined())) implies (not country->isEmpty()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wMTboIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsInformantRelatedEntityGeneralHeaderConstraintsUSRealmAddressPostalCode" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wMTboYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.informant->excluding(null).relatedEntity->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((postalCode->isEmpty() or postalCode->exists(element | element.isNullFlavorUndefined())) implies (not postalCode->isEmpty()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wMUCsIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsInformantRelatedEntityGeneralHeaderConstraintsUSRealmAddressState" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wMUCsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.informant->excluding(null).relatedEntity->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((state->isEmpty() or state->exists(element | element.isNullFlavorUndefined())) implies (not state->isEmpty()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wMUpwIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsInformantRelatedEntityGeneralHeaderConstraintsUSRealmAddressStreetAddressLine" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wMUpwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.informant->excluding(null).relatedEntity->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((streetAddressLine->isEmpty() or streetAddressLine->exists(element | element.isNullFlavorUndefined())) implies (not streetAddressLine->isEmpty()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wMVQ0IokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsInformantRelatedEntityGeneralHeaderConstraintsUSRealmAddressUseP" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wMVQ0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.informant->excluding(null).relatedEntity->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies (not use->isEmpty() )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wMV34IokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsInformantRelatedEntityGeneralHeaderConstraintsUSRealmAddressUse" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wMV34YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.informant->excluding(null).relatedEntity->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies (use->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(vocab::PostalAddressUse) and &#xD;
let value : vocab::PostalAddressUse = element.oclAsType(vocab::PostalAddressUse) in &#xD;
value = vocab::PostalAddressUse::BAD or value = vocab::PostalAddressUse::DIR or value = vocab::PostalAddressUse::H or value = vocab::PostalAddressUse::HP or value = vocab::PostalAddressUse::HV or value = vocab::PostalAddressUse::PHYS or value = vocab::PostalAddressUse::PST or value = vocab::PostalAddressUse::PUB or value = vocab::PostalAddressUse::TMP or value = vocab::PostalAddressUse::WP) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wMXGAIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsInformantRelatedEntityGeneralHeaderConstraintsInformantAssignedEntityPersonName" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wMXGAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.informant->excluding(null).relatedEntity->excluding(null).relatedPerson->excluding(null)->reject((name->isEmpty() or name->exists(element | element.isNullFlavorUndefined())) implies (not name->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wMXtEIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsInformantRelatedEntityAddr" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wMXtEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.informant->excluding(null).relatedEntity->excluding(null)->reject((addr->isEmpty() or addr->exists(element | element.isNullFlavorUndefined())) implies (not addr->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wMYUIIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsInformantRelatedEntityPerson" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wMYUIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.informant->excluding(null).relatedEntity->excluding(null)->reject(relatedPerson->one(relatedPerson : cda::Person | not relatedPerson.oclIsUndefined() and relatedPerson.oclIsKindOf(cda::Person)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wMY7MIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsInformantHasAssignedEntityOrRelatedEntity" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wMY7MYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.informant->excluding(null)->reject(assignedEntity.oclIsUndefined() xor relatedEntity.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wMZiQIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsInformantAssignedEntity" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wMZiQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.informant->excluding(null)->reject(assignedEntity->one(assignedEntity : cda::AssignedEntity | not assignedEntity.oclIsUndefined() and assignedEntity.oclIsKindOf(cda::AssignedEntity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wMaJUIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsInformantRelatedEntity" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wMaJUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.informant->excluding(null)->reject(relatedEntity->one(relatedEntity : cda::RelatedEntity | not relatedEntity.oclIsUndefined() and relatedEntity.oclIsKindOf(cda::RelatedEntity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wMbXcIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsParticipantSupportAssociatedEntityHasAssociatedPersonOrScopingOrganization" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wMbXcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->reject((not associatedEntity.associatedPerson.oclIsUndefined()) or (not associatedEntity.scopingOrganization.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wMb-gIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsParticipantSupportTime" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wMb-gYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->reject((time.oclIsUndefined() or time.isNullFlavorUndefined()) implies (not time.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wMdMoIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsInFulfillmentOfOrderId" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wMdMoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.inFulfillmentOf->excluding(null).order->excluding(null)->reject((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wMdzsIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsInFulfillmentOfOrder" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wMdzsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.inFulfillmentOf->excluding(null)->reject(order->one(order : cda::Order | not order.oclIsUndefined() and order.oclIsKindOf(cda::Order)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wMg3AIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsDocumentationOfServiceEventPerformer1AssignedEntityHasNationalProviderIdentifier" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wMg3AYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null).performer->excluding(null).assignedEntity->excluding(null)->reject(id->exists( root='2.16.840.1.113883.4.6' ))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wMheEIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsDocumentationOfServiceEventPerformer1AssignedEntityCodeP" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wMheEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null).performer->excluding(null).assignedEntity->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wMiFIIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsDocumentationOfServiceEventPerformer1AssignedEntityCode" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wMiFIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null).performer->excluding(null).assignedEntity->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined() and code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = code.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.101'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wMisMIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsDocumentationOfServiceEventPerformer1AssignedEntityId" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wMisMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null).performer->excluding(null).assignedEntity->excluding(null)->reject((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wMjTQIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsDocumentationOfServiceEventPerformer1FunctionCodeP" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wMjTQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null).performer->excluding(null)->reject((functionCode.oclIsUndefined() or functionCode.isNullFlavorUndefined()) implies (not functionCode.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wMj6UIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsDocumentationOfServiceEventPerformer1FunctionCode" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wMj6UYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null).performer->excluding(null)->reject((functionCode.oclIsUndefined() or functionCode.isNullFlavorUndefined()) implies (not functionCode.oclIsUndefined() and functionCode.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = functionCode.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.5.88'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wMkhYIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsDocumentationOfServiceEventPerformer1TypeCode" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wMkhYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null).performer->excluding(null)->reject(isDefined('typeCode'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wMlIcIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsDocumentationOfServiceEventPerformer1AssignedEntity" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wMlIcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null).performer->excluding(null)->reject(assignedEntity->one(assignedEntity : cda::AssignedEntity | not assignedEntity.oclIsUndefined() and assignedEntity.oclIsKindOf(cda::AssignedEntity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wMlvgIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsDocumentationOfServiceEventEffectiveTimeLow" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wMlvgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject(effectiveTime->forAll(not low.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wMmWkIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsDocumentationOfServiceEventEffectiveTime" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wMmWkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject((effectiveTime.oclIsUndefined() or effectiveTime.isNullFlavorUndefined()) implies (not effectiveTime.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wMm9oIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsDocumentationOfServiceEventPerformer" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wMm9oYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject(performer->exists(performer : cda::Performer1 | not performer.oclIsUndefined() and performer.oclIsKindOf(cda::Performer1)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wMoLwIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsDocumentationOfServiceEvent" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wMoLwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null)->reject(serviceEvent->one(serviceEvent : cda::ServiceEvent | not serviceEvent.oclIsUndefined() and serviceEvent.oclIsKindOf(cda::ServiceEvent)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wMpZ4IokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsAuthorizationConsentCode" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wMpZ4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.authorization->excluding(null).consent->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wMqA8IokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsAuthorizationConsentId" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wMqA8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.authorization->excluding(null).consent->excluding(null)->reject((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wMqoAIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsAuthorizationConsentStatusCodeP" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wMqoAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.authorization->excluding(null).consent->excluding(null)->reject((statusCode.oclIsUndefined() or statusCode.isNullFlavorUndefined()) implies (not statusCode.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wMrPEIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsAuthorizationConsentStatusCode" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wMrPEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.authorization->excluding(null).consent->excluding(null)->reject((statusCode.oclIsUndefined() or statusCode.isNullFlavorUndefined()) implies (not statusCode.oclIsUndefined() and statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'completed'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wMr2IIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsAuthorizationConsent" constrainedElement="_2DNRcBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wMr2IYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.authorization->excluding(null)->reject(consent->one(consent : cda::Consent | not consent.oclIsUndefined() and consent.oclIsKindOf(cda::Consent)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2D-tgBSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_S9OzADxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2EAisBSVEeGGzu7fmW9pXw" name="AllergyProblemAct">
      <eAnnotations xmi:id="_2EAisRSVEeGGzu7fmW9pXw" source="uml2.alias">
        <details xmi:id="_2EAishSVEeGGzu7fmW9pXw" key="Allergies and Drug Sensitivities"/>
      </eAnnotations>
      <eAnnotations xmi:id="_2EAisxSVEeGGzu7fmW9pXw" source="uml2.alias">
        <details xmi:id="_2EAitBSVEeGGzu7fmW9pXw" key="Allergy and Drug Sensitivity"/>
      </eAnnotations>
      <ownedComment xmi:id="_2GDKEBSVEeGGzu7fmW9pXw" annotatedElement="_2EAisBSVEeGGzu7fmW9pXw">
        <body>This clinical statement act represents a concern relating to a patient's allergies or adverse events. A concern is a term used when referring to patient's problems that are related to one another. Observations of problems or other clinical statements captured at a point in time are wrapped in a Allergy Problem Act, or &quot;Concern&quot; act, which represents the ongoing process tracked over time. This outer Allergy Problem Act (representing the &quot;Concern&quot;) can contain nested problem observations or other nested clinical statements relevant to the allergy concern.</body>
      </ownedComment>
      <ownedRule xmi:id="_L5MNcCWFEeGWfpmyutaqOA" name="AllergyProblemActEffectiveTimeLow" constrainedElement="_2EAisBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_UD7aQCWFEeGWfpmyutaqOA">
          <language>OCL</language>
          <body>(self.statusCode.code = 'active') implies not self.effectiveTime.low.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2F-RkBSVEeGGzu7fmW9pXw" name="AllergyProblemActEffectiveTimeHigh">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2F-RkRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>(self.statusCode.code = 'completed') implies not self.effectiveTime.high.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uqMvsIokEeSkH97cUQxLGA" name="AllergyProblemActTemplateId" constrainedElement="_2EAisBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uqMvsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.30')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uqPzAIokEeSkH97cUQxLGA" name="AllergyProblemActClassCode" constrainedElement="_2EAisBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uqPzAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryAct::ACT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_urFggIokEeSkH97cUQxLGA" name="AllergyProblemActMoodCode" constrainedElement="_2EAisBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_urFggYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_urGuoIokEeSkH97cUQxLGA" name="AllergyProblemActId" constrainedElement="_2EAisBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_urGuoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_urIj0IokEeSkH97cUQxLGA" name="AllergyProblemActCode" constrainedElement="_2EAisBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_urIj0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_urMOMIokEeSkH97cUQxLGA" name="AllergyProblemActStatusCode" constrainedElement="_2EAisBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_urMOMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'active' or value.code = 'suspended' or value.code = 'aborted' or value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_urPRgIokEeSkH97cUQxLGA" name="AllergyProblemActEffectiveTime" constrainedElement="_2EAisBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_urPRgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_utwaAIokEeSkH97cUQxLGA" name="AllergyProblemActAllergyObservation" constrainedElement="_2EAisBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_utwaAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::AllergyObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wOIAkIokEeSkH97cUQxLGA" name="AllergyProblemActCDCodeAndCodeSystemValues" constrainedElement="_2EAisBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wOIAkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.code->excluding(null)->select(isNullFlavorUndefined())->reject((code = 'CONC' and codeSystem = '2.16.840.1.113883.5.6') or (code = '48765-2' and codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wOInoIokEeSkH97cUQxLGA" name="AllergyProblemActCDCode" constrainedElement="_2EAisBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wOInoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.code->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies (not code.oclIsUndefined() )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wOInoookEeSkH97cUQxLGA" name="AllergyProblemActCDCodeSystem" constrainedElement="_2EAisBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wOIno4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.code->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies (not codeSystem.oclIsUndefined() )))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2GDKExSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_utxBEIokEeSkH97cUQxLGA" name="getAllergyObservations" bodyCondition="_utxBE4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_utxBE4okEeSkH97cUQxLGA" name="body" constrainedElement="_utxBEIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_utxBFIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::AllergyObservation)).oclAsType(consol::AllergyObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_utxBEYokEeSkH97cUQxLGA" type="_2EaLUBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_utxBEookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2EaLUBSVEeGGzu7fmW9pXw" name="AllergyObservation">
      <eAnnotations xmi:id="_2EaLURSVEeGGzu7fmW9pXw" source="uml2.alias">
        <details xmi:id="_2EaLUhSVEeGGzu7fmW9pXw" key="Allergies and Intolerances"/>
      </eAnnotations>
      <ownedComment xmi:id="_2F5ZEBSVEeGGzu7fmW9pXw" annotatedElement="_2EaLUBSVEeGGzu7fmW9pXw">
        <body>This clinical statement represents that an allergy or adverse reaction exists or does not exist. The agent that is the cause of the allergy or adverse reaction is represented as a manufactured material participant playing entity in the allergy - intolerance observation. While the agent is often implicit in the alert observation (e.g. &quot;allergy to penicillin&quot;), it should also be asserted explicitly as an entity. The manufactured material participant is used to represent natural and non-natural occurring substances.&#xD;
NOTE: The agent responsible for an allergy or adverse reaction is not always a manufactured material (for example, food allergies), nor is it necessarily consumed. The following constraints reflect limitations in the base CDA R2 specification, and should be used to represent any type of responsible agent.</body>
      </ownedComment>
      <ownedRule xmi:id="_ouJssCFKEeG9m6LRl9ardQ" name="AllergyObservationValueOriginalText" constrainedElement="_2EaLUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_5qNlMCFKEeG9m6LRl9ardQ">
          <language>OCL</language>
          <body>self.value.oclAsType(datatypes::CD).originalText->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cf38gCFLEeG9m6LRl9ardQ" name="AllergyObservationOriginalTextReference" constrainedElement="_2EaLUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iuCH4CFLEeG9m6LRl9ardQ">
          <language>OCL</language>
          <body>self.value.oclAsType(datatypes::CD).originalText->size() = 1 implies self.value.oclAsType(datatypes::CD).originalText->one(reference->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_bTC9MOJPEeG3cO7ebC3QuA" name="AllergyObservationOriginalTextReferenceValue" constrainedElement="_cf38gCFLEeG9m6LRl9ardQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_e7dOUOJPEeG3cO7ebC3QuA">
          <language>OCL</language>
          <body>self.value.oclAsType(datatypes::CD).originalText.reference->size() = 1 implies self.value.oclAsType(datatypes::CD).originalText.reference.value->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nV_8ECFMEeG9m6LRl9ardQ" name="AllergyObservationReferenceValue" constrainedElement="_2EaLUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j5kg4CKeEeG9m6LRl9ardQ">
          <language>OCL</language>
          <body>not self.code.originalText.reference.value.oclIsUndefined() implies not self.getSection().text.getText(self.code.originalText.reference.value.substring(2, self.code.originalText.reference.value.size())).oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_8gb1UCFTEeG9m6LRl9ardQ" name="AllergyObservationAllergyStatusInversionIndicator" constrainedElement="_2EaLUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_L6csQCFUEeG9m6LRl9ardQ">
          <language>OCL</language>
          <body>self.entryRelationship->select(er : cda::EntryRelationship | er.observation.oclIsTypeOf(consol::AllergyStatusObservation))->forAll(ent : cda::EntryRelationship | ent.inversionInd=true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_VBabUCFVEeG9m6LRl9ardQ" name="AllergyObservationReactionInversionIndicator" constrainedElement="_2EaLUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_f5vPwCFVEeG9m6LRl9ardQ">
          <language>OCL</language>
          <body>self.entryRelationship->select(er : cda::EntryRelationship | er.observation.oclIsTypeOf(consol::ReactionObservation))->forAll(ent : cda::EntryRelationship | ent.inversionInd=true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2EaLbxSVEeGGzu7fmW9pXw" name="AllergyObservationSeverityInversionIndicator">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2EaLcBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.entryRelationship->select(er : cda::EntryRelationship | er.observation.oclIsTypeOf(consol::SeverityObservation))->forAll(ent : cda::EntryRelationship | ent.inversionInd=true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_urUKAYokEeSkH97cUQxLGA" name="SubstanceOrDeviceAllergyObservationTemplateId" constrainedElement="_2EaLUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_urUKAookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.7')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uraQoIokEeSkH97cUQxLGA" name="AllergyObservationClassCode" constrainedElement="_2EaLUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uraQoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_urcF0IokEeSkH97cUQxLGA" name="AllergyObservationMoodCode" constrainedElement="_2EaLUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_urcF0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_urdT8IokEeSkH97cUQxLGA" name="AllergyObservationId" constrainedElement="_2EaLUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_urdT8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_urhlYIokEeSkH97cUQxLGA" name="AllergyObservationCodeP" constrainedElement="_2EaLUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uriMcIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_urfJIIokEeSkH97cUQxLGA" name="AllergyObservationCode" constrainedElement="_2EaLUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_urfJIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = 'ASSERTION' and value.codeSystem = '2.16.840.1.113883.5.4')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_urlPwIokEeSkH97cUQxLGA" name="AllergyObservationStatusCode" constrainedElement="_2EaLUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_urlPwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_urnsAIokEeSkH97cUQxLGA" name="AllergyObservationEffectiveTime" constrainedElement="_2EaLUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_urnsAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_urphMIokEeSkH97cUQxLGA" name="AllergyObservationValue" constrainedElement="_2EaLUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_urphMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.96' and (value.code = '420134006' or value.code = '418038007' or value.code = '419511003' or value.code = '418471000' or value.code = '419199007' or value.code = '416098002' or value.code = '414285001' or value.code = '59037007' or value.code = '235719002' or value.code = '232347008' or value.code = '426232007')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ur8cIIokEeSkH97cUQxLGA" name="AllergyObservationReactionObservation" constrainedElement="_2EaLUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ur9DMIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::ReactionObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::MFST)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ur_fcIokEeSkH97cUQxLGA" name="AllergyObservationSeverityObservation" constrainedElement="_2EaLUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ur_fcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::SeverityObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u9oCAIokEeSkH97cUQxLGA" name="AllergyObservationAllergyStatusObservation" constrainedElement="_2EaLUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u9oCAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::AllergyStatusObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vE4gkIokEeSkH97cUQxLGA" name="AllergyObservationParticipant" constrainedElement="_2EaLUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vE4gkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->one(participant : cda::Participant2 | not participant.oclIsUndefined() and participant.oclIsKindOf(cda::Participant2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wOM5EIokEeSkH97cUQxLGA" name="AllergyObservationParticipantParticipantRolePlayingEntityCEOriginalText" constrainedElement="_2EaLUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wOM5EYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).participantRole->excluding(null).playingEntity->excluding(null).code->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((originalText.oclIsUndefined() or originalText.isNullFlavorUndefined()) implies (not originalText.oclIsUndefined()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wONgIIokEeSkH97cUQxLGA" name="AllergyObservationParticipantParticipantRolePlayingEntityCETranslation" constrainedElement="_2EaLUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wONgIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).participantRole->excluding(null).playingEntity->excluding(null).code->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((translation->isEmpty() or translation->exists(element | element.isNullFlavorUndefined())) implies (not translation->isEmpty()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wONgIookEeSkH97cUQxLGA" name="AllergyObservationParticipantParticipantRolePlayingEntityOriginalTextReferenceValue" constrainedElement="_2EaLUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wONgI4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).participantRole->excluding(null).playingEntity->excluding(null)->reject(not code.originalText.reference.value.oclIsUndefined() implies not getSection().text.getText(code.originalText.reference.value.substring(2, code.originalText.reference.value.size())).oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wOOHMIokEeSkH97cUQxLGA" name="AllergyObservationParticipantParticipantRolePlayingEntityReferenceValue" constrainedElement="_2EaLUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wOOHMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).participantRole->excluding(null).playingEntity->excluding(null)->reject(not code.originalText.reference.oclIsUndefined() implies code.originalText.reference.value->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wOOuQIokEeSkH97cUQxLGA" name="AllergyObservationParticipantParticipantRolePlayingEntityOriginalTextReference" constrainedElement="_2EaLUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wOOuQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).participantRole->excluding(null).playingEntity->excluding(null)->reject(not code.originalText.oclIsUndefined() implies not code.originalText.reference.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wOOuQookEeSkH97cUQxLGA" name="AllergyObservationParticipantParticipantRolePlayingEntityCodeTerminologyValueSetGroupSRFI" constrainedElement="_2EaLUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wOOuQ4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).participantRole->excluding(null).playingEntity->excluding(null)->reject(( code.oclIsUndefined() or code.isNullFlavorUndefined() ) implies ( not code.oclIsUndefined() and code.oclIsKindOf(datatypes::CE) and ( ( let value : datatypes::CE = code.oclAsType(datatypes::CE) in value.codeSystem = '2.16.840.1.113883.3.26.1.5' and not value.code.oclIsUndefined() ) or ( let value : datatypes::CE = code.oclAsType(datatypes::CE) in value.codeSystem = '2.16.840.1.113883.6.88' and not value.code.oclIsUndefined() ) or ( let value : datatypes::CE = code.oclAsType(datatypes::CE) in value.codeSystem = '2.16.840.1.113883.4.9' and not value.code.oclIsUndefined() ) or ( let value : datatypes::CE = code.oclAsType(datatypes::CE) in value.codeSystem = '2.16.840.1.113883.6.96' and not value.code.oclIsUndefined() ) ) ))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wOPVUIokEeSkH97cUQxLGA" name="AllergyObservationParticipantParticipantRolePlayingEntityClassCode" constrainedElement="_2EaLUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wOPVUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).participantRole->excluding(null).playingEntity->excluding(null)->reject(isDefined('classCode'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wOP8YIokEeSkH97cUQxLGA" name="AllergyObservationParticipantParticipantRolePlayingEntityCode" constrainedElement="_2EaLUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wOP8YYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).participantRole->excluding(null).playingEntity->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wOP8YookEeSkH97cUQxLGA" name="AllergyObservationParticipantParticipantRoleClassCode" constrainedElement="_2EaLUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wOP8Y4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).participantRole->excluding(null)->reject(not classCode.oclIsUndefined() and classCode.oclIsKindOf(vocab::RoleClassRoot) and &#xD;
let value : vocab::RoleClassRoot = classCode.oclAsType(vocab::RoleClassRoot) in &#xD;
value = vocab::RoleClassRoot::MANU)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wOQjcIokEeSkH97cUQxLGA" name="AllergyObservationParticipantParticipantRolePlayingEntity" constrainedElement="_2EaLUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wOQjcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).participantRole->excluding(null)->reject(playingEntity->one(playingEntity : cda::PlayingEntity | not playingEntity.oclIsUndefined() and playingEntity.oclIsKindOf(cda::PlayingEntity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wOQjcookEeSkH97cUQxLGA" name="AllergyObservationParticipantTypeCode" constrainedElement="_2EaLUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wOQjc4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->reject(not typeCode.oclIsUndefined() and typeCode.oclIsKindOf(vocab::ParticipationType) and &#xD;
let value : vocab::ParticipationType = typeCode.oclAsType(vocab::ParticipationType) in &#xD;
value = vocab::ParticipationType::CSM)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wORKgIokEeSkH97cUQxLGA" name="AllergyObservationParticipantParticipantRole" constrainedElement="_2EaLUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wORKgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->reject(participantRole->one(participantRole : cda::ParticipantRole | not participantRole.oclIsUndefined() and participantRole.oclIsKindOf(cda::ParticipantRole)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2F5ZERSVEeGGzu7fmW9pXw" general="_mgny4NF8EeOHUokOVP95oQ"/>
      <ownedOperation xmi:id="_ur-RUIokEeSkH97cUQxLGA" name="getConsolReactionObservations" bodyCondition="_ur-4YYokEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_ur-4YYokEeSkH97cUQxLGA" name="body" constrainedElement="_ur-RUIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ur-4YookEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ReactionObservation)).oclAsType(consol::ReactionObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ur-RUYokEeSkH97cUQxLGA" type="_2E_aIRSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ur-4YIokEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_usAtkIokEeSkH97cUQxLGA" name="getConsolSeverityObservation" bodyCondition="_usAtk4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_usAtk4okEeSkH97cUQxLGA" name="body" constrainedElement="_usAtkIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_usAtlIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::SeverityObservation))->asSequence()->any(true).oclAsType(consol::SeverityObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_usAtkYokEeSkH97cUQxLGA" type="_2FGu4hSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_usAtkookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_u9opEIokEeSkH97cUQxLGA" name="getConsolAllergyStatusObservation" bodyCondition="_u9opE4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_u9opE4okEeSkH97cUQxLGA" name="body" constrainedElement="_u9opEIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_u9opFIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::AllergyStatusObservation))->asSequence()->any(true).oclAsType(consol::AllergyStatusObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_u9opEYokEeSkH97cUQxLGA" type="_2FRuAhSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_u9opEookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2EqqABSVEeGGzu7fmW9pXw" name="AgeObservation">
      <ownedComment xmi:id="_2EqqARSVEeGGzu7fmW9pXw" annotatedElement="_2EqqABSVEeGGzu7fmW9pXw">
        <body>This Age Observation represents the subject's age at onset of an event or observation. The age of a relative in a Family History Observation at the time of that observation could also be inferred by comparing RelatedSubject/subject/birthTime with Observation/effectiveTime. However, a common scenario is that a patient will know the age of a relative when the relative had a certain condition or when the relative died, but will not know the actual year (e.g., &quot;grandpa died of a heart attack at the age of 50&quot;). Often times, neither precise dates nor ages are known (e.g. &quot;cousin died of congenital heart disease as an infant&quot;).</body>
      </ownedComment>
      <ownedRule xmi:id="_sPoAUCBCEeG938evaWkvcA" name="AgeObservationValueUnits" constrainedElement="_2EqqABSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_yRGakCBCEeG938evaWkvcA">
          <language>OCL</language>
          <body>self.value.oclAsType(datatypes::PQ).unit->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_usBUoIokEeSkH97cUQxLGA" name="AgeObservationTemplateId" constrainedElement="_2EqqABSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_usBUoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.31')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_usDw4IokEeSkH97cUQxLGA" name="AgeObservationClassCode" constrainedElement="_2EqqABSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_usDw4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_usE_AIokEeSkH97cUQxLGA" name="AgeObservationMoodCode" constrainedElement="_2EqqABSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_usE_AYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_usJ3gIokEeSkH97cUQxLGA" name="AgeObservationCodeP" constrainedElement="_2EqqABSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_usJ3gYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_usHbQIokEeSkH97cUQxLGA" name="AgeObservationCode" constrainedElement="_2EqqABSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_usHbQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '445518008' and value.codeSystem = '2.16.840.1.113883.6.96')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_usNh4IokEeSkH97cUQxLGA" name="AgeObservationStatusCode" constrainedElement="_2EqqABSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_usNh4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_usP-IIokEeSkH97cUQxLGA" name="AgeObservationStatusCodeP" constrainedElement="_2EqqABSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_usP-IYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_usTogIokEeSkH97cUQxLGA" name="AgeObservationValue" constrainedElement="_2EqqABSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_usTogYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::PQ)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2EvigBSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2ExXsBSVEeGGzu7fmW9pXw" name="HealthStatusObservation">
      <ownedComment xmi:id="_2ExXsRSVEeGGzu7fmW9pXw" annotatedElement="_2ExXsBSVEeGGzu7fmW9pXw">
        <body>The Health Status Observation records information about the current health status of the patient.</body>
      </ownedComment>
      <ownedRule xmi:id="_2ExXshSVEeGGzu7fmW9pXw" name="HealthStatusObservationHasTextReference">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2ExXsxSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined() implies self.text->forAll(reference->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_1RiOwOJrEeG3cO7ebC3QuA" name="HealthStatusObservationTextReferenceValue" constrainedElement="_QEznYCf4EeGO5_JBy9h6BA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_8fXHYOJrEeG3cO7ebC3QuA">
          <language>OCL</language>
          <body>self.text->forAll(reference->size() = 1) implies self.text->forAll(reference->one(value->size() = 1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_QEznYCf4EeGO5_JBy9h6BA" name="HealthStatusObservationHasTextReferenceValue" constrainedElement="_2ExXshSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_SLltsCf4EeGO5_JBy9h6BA">
          <language>OCL</language>
          <body>not self.text.reference.value.oclIsUndefined() implies not self.getSection().text.getText(self.text.reference.value.substring(2, self.text.reference.value.size())).oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_usVdsIokEeSkH97cUQxLGA" name="HealthStatusObservationTemplateId" constrainedElement="_2ExXsBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_usVdsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.5')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_usYhAIokEeSkH97cUQxLGA" name="HealthStatusObservationClassCode" constrainedElement="_2ExXsBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_usYhAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_usZvIIokEeSkH97cUQxLGA" name="HealthStatusObservationMoodCode" constrainedElement="_2ExXsBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_usaWMIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_usbkUIokEeSkH97cUQxLGA" name="HealthStatusObservationCode" constrainedElement="_2ExXsBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_usbkUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '11323-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_useAkIokEeSkH97cUQxLGA" name="HealthStatusObservationText" constrainedElement="_2ExXsBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_useAkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.text.oclIsUndefined() or self.text.isNullFlavorUndefined()) implies (not self.text.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_usgc0IokEeSkH97cUQxLGA" name="HealthStatusObservationStatusCode" constrainedElement="_2ExXsBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_usgc0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_usjgIIokEeSkH97cUQxLGA" name="HealthStatusObservationValue" constrainedElement="_2ExXsBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_usjgIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.96' and (value.code = '81323004' or value.code = '313386006' or value.code = '162467007' or value.code = '161901003' or value.code = '271593001' or value.code = '21134002' or value.code = '161045001')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_usl8YIokEeSkH97cUQxLGA" name="HealthStatusObservationValueP" constrainedElement="_2ExXsBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_usl8YYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2E56kRSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2E_aIRSVEeGGzu7fmW9pXw" name="ReactionObservation">
      <ownedComment xmi:id="_j3HUIBraEeGo461UQq-B1g">
        <body>This clinical statement represents an undesired symptom, finding, etc., due to an administered or exposed substance. A reaction can be defined with respect to its severity, and can have been treated by one or more interventions.</body>
      </ownedComment>
      <ownedRule xmi:id="_gBlYICKdEeG9m6LRl9ardQ" name="ReactionObservationTextReference" constrainedElement="_2E_aIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_sG9OgCKdEeG9m6LRl9ardQ">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined() implies self.text->forAll(reference->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_l-kdAOJVEeG3cO7ebC3QuA" name="ReactionObservationTextReferenceValue" constrainedElement="_gBlYICKdEeG9m6LRl9ardQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_qB5IgOJVEeG3cO7ebC3QuA">
          <language>OCL</language>
          <body>self.text->forAll(reference->size() = 1) implies self.text->forAll(reference->one(value->size() = 1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_0eDcUCKdEeG9m6LRl9ardQ" name="ReactionObservationReferenceValue" constrainedElement="_2E_aIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_3rGAECKdEeG9m6LRl9ardQ">
          <language>OCL</language>
          <body>not self.text.reference.value.oclIsUndefined() implies not self.getSection().text.getText(self.text.reference.value.substring(2, self.text.reference.value.size())).oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_1SPc4CKeEeG9m6LRl9ardQ" name="ReactionObservationEffectiveTimeLow" constrainedElement="_2E_aIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_7fXGcCKeEeG9m6LRl9ardQ">
          <language>OCL</language>
          <body>not self.effectiveTime.oclIsUndefined() implies not self.effectiveTime.low.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_3qPPACKeEeG9m6LRl9ardQ" name="ReactionObservationEffectiveTimeHigh" constrainedElement="_2E_aIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_8rNOgCKeEeG9m6LRl9ardQ">
          <language>OCL</language>
          <body>not self.effectiveTime.oclIsUndefined() implies not self.effectiveTime.high.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jm2UICYKEeGWfpmyutaqOA" name="ReactionObservationSeverityObservationInversionInd" constrainedElement="_2E_aIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_qNTDsCYKEeGWfpmyutaqOA">
          <language>OCL</language>
          <body>self.entryRelationship->select(er : cda::EntryRelationship | er.observation.oclIsTypeOf(consol::SeverityObservation))->forAll(ent : cda::EntryRelationship | ent.inversionInd=true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_IvIIQBrcEeGo461UQq-B1g" name="ReactionObservationProcedureActivityProcedureInversionInd" constrainedElement="_2E_aIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_XcWKoBrcEeGo461UQq-B1g">
          <language>OCL</language>
          <body>self.entryRelationship->select(er : cda::EntryRelationship | er.procedure.oclIsTypeOf(consol::ProcedureActivityProcedure))->forAll(ent : cda::EntryRelationship | ent.inversionInd=true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_P3TE0BrcEeGo461UQq-B1g" name="ReactionObservationMedicationActivityInversionInd" constrainedElement="_2E_aIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_U-Q-oBrcEeGo461UQq-B1g">
          <language>OCL</language>
          <body>self.entryRelationship->select(er : cda::EntryRelationship | er.substanceAdministration.oclIsTypeOf(consol::MedicationActivity))->forAll(ent : cda::EntryRelationship | ent.inversionInd=true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_usoYoIokEeSkH97cUQxLGA" name="ReactionObservationTemplateId" constrainedElement="_2E_aIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_usoYoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.9')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_usufQIokEeSkH97cUQxLGA" name="ReactionObservationClassCode" constrainedElement="_2E_aIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_usufQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_usvtYIokEeSkH97cUQxLGA" name="ReactionObservationMoodCode" constrainedElement="_2E_aIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_usvtYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_usw7gIokEeSkH97cUQxLGA" name="ReactionObservationId" constrainedElement="_2E_aIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_usw7gYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (self.id->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_usywsIokEeSkH97cUQxLGA" name="ReactionObservationCode" constrainedElement="_2E_aIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_usywsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_usz-0IokEeSkH97cUQxLGA" name="ReactionObservationText" constrainedElement="_2E_aIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_usz-0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.text.oclIsUndefined() or self.text.isNullFlavorUndefined()) implies (not self.text.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_us10AIokEeSkH97cUQxLGA" name="ReactionObservationStatusCode" constrainedElement="_2E_aIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_us10AYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_us4QQIokEeSkH97cUQxLGA" name="ReactionObservationEffectiveTime" constrainedElement="_2E_aIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_us4QQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_us6FcIokEeSkH97cUQxLGA" name="ReactionObservationValue" constrainedElement="_2E_aIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_us6FcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.96' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_utLyQIokEeSkH97cUQxLGA" name="ReactionObservationSeverityObservation" constrainedElement="_2E_aIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_utLyQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::SeverityObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vB_koIokEeSkH97cUQxLGA" name="ReactionObservationProcedureActivityProcedure" constrainedElement="_2E_aIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vB_koYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.procedure.oclIsUndefined() and entryRelationship.procedure.oclIsKindOf(consol::ProcedureActivityProcedure) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::RSON)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vCAywIokEeSkH97cUQxLGA" name="ReactionObservationMedicationActivity" constrainedElement="_2E_aIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vCAywYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.substanceAdministration.oclIsUndefined() and entryRelationship.substanceAdministration.oclIsKindOf(consol::MedicationActivity) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::RSON)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2FwPIhSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_utNAYIokEeSkH97cUQxLGA" name="getSeverityObservation" bodyCondition="_utNAY4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_utNAY4okEeSkH97cUQxLGA" name="body" constrainedElement="_utNAYIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_utNAZIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::SeverityObservation))->asSequence()->any(true).oclAsType(consol::SeverityObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_utNAYYokEeSkH97cUQxLGA" type="_2FGu4hSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_utNAYookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vCALsIokEeSkH97cUQxLGA" name="getProcedureActivityProcedures" bodyCondition="_vCALs4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vCALs4okEeSkH97cUQxLGA" name="body" constrainedElement="_vCALsIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vCALtIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getProcedures()->select(procedure : cda::Procedure | not procedure.oclIsUndefined() and procedure.oclIsKindOf(consol::ProcedureActivityProcedure)).oclAsType(consol::ProcedureActivityProcedure)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vCALsYokEeSkH97cUQxLGA" type="_2OG58RSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vCALsookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vCCA4IokEeSkH97cUQxLGA" name="getMedicationActivities" bodyCondition="_vCCA44okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vCCA44okEeSkH97cUQxLGA" name="body" constrainedElement="_vCCA4IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vCCA5IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(consol::MedicationActivity)).oclAsType(consol::MedicationActivity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vCCA4YokEeSkH97cUQxLGA" type="_2GHbgBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vCCA4ookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2FGu4hSVEeGGzu7fmW9pXw" name="SeverityObservation">
      <ownedComment xmi:id="_2FGu4xSVEeGGzu7fmW9pXw" annotatedElement="_2FGu4hSVEeGGzu7fmW9pXw">
        <body>This clinical statement represents the gravity of the problem, such as allergy or reaction, in terms of its actual or potential impact on the patient. The Severity Observation can be associated with an Allergy Obervation, Reaction Observation or both. When the Severity Observation is associated directly with an Allergy it characterizes the Allergy. When the Severity Observation is associated with a Reaction Observation it characterizes a Reaction. A person may manifest many symptoms in a reaction to a single substance, and each reaction to the substance can be represented. However, each reaction observation can have only one severity observation associated with it. For example, someone may have a rash reaction observation as well as an itching reaction observation, but each can have only one level of severity</body>
      </ownedComment>
      <ownedRule xmi:id="_sBN0ECK3EeG9m6LRl9ardQ" name="SeverityObservationTextReference" constrainedElement="_2FGu4hSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wsR1ACK3EeG9m6LRl9ardQ">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined() implies self.text->forAll(reference->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wNrf4OJWEeG3cO7ebC3QuA" name="SeverityObservationTextReferenceValue" constrainedElement="_sBN0ECK3EeG9m6LRl9ardQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ztTocOJWEeG3cO7ebC3QuA">
          <language>OCL</language>
          <body>self.text->forAll(reference->size() = 1) implies self.text->forAll(reference->one(value->size() = 1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_0IXhYCK3EeG9m6LRl9ardQ" name="SeverityObservationReferenceValue" constrainedElement="_2FGu4hSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_3NEBcCK3EeG9m6LRl9ardQ">
          <language>OCL</language>
          <body>not self.text.reference.value.oclIsUndefined() implies not self.getSection().text.getText(self.text.reference.value.substring(2, self.text.reference.value.size())).oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_us76oIokEeSkH97cUQxLGA" name="SeverityObservationTemplateId" constrainedElement="_2FGu4hSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_us76oYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.8')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_us_lAIokEeSkH97cUQxLGA" name="SeverityObservationClassCode" constrainedElement="_2FGu4hSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_us_lAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_utAzIIokEeSkH97cUQxLGA" name="SeverityObservationMoodCode" constrainedElement="_2FGu4hSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_utAzIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_utCBQIokEeSkH97cUQxLGA" name="SeverityObservationCode" constrainedElement="_2FGu4hSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_utCBQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = 'SEV' and value.codeSystem = '2.16.840.1.113883.5.4')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_utEdgIokEeSkH97cUQxLGA" name="SeverityObservationText" constrainedElement="_2FGu4hSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_utEdgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.text.oclIsUndefined() or self.text.isNullFlavorUndefined()) implies (not self.text.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_utG5wIokEeSkH97cUQxLGA" name="SeverityObservationStatusCode" constrainedElement="_2FGu4hSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_utG5wYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_utJWAIokEeSkH97cUQxLGA" name="SeverityObservationValue" constrainedElement="_2FGu4hSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_utJWAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.96' and (value.code = '255604002' or value.code = '371923003' or value.code = '6736007' or value.code = '371924009' or value.code = '24484000' or value.code = '399166001')))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2FODoBSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2FRuAhSVEeGGzu7fmW9pXw" name="AllergyStatusObservation">
      <ownedComment xmi:id="_2FRuAxSVEeGGzu7fmW9pXw" annotatedElement="_2FRuAhSVEeGGzu7fmW9pXw">
        <body>This template represents the status of the allergy indicating whether it is active, no longer active, or is an historic allergy. There can be only one allergy status observation per alert observation.</body>
      </ownedComment>
      <ownedRule xmi:id="_utNAZYokEeSkH97cUQxLGA" name="AllergyStatusObservationTemplateId" constrainedElement="_2FRuAhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_utNncIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.28')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_utO1kIokEeSkH97cUQxLGA" name="AllergyStatusObservationClassCode" constrainedElement="_2FRuAhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_utO1kYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_utQDsIokEeSkH97cUQxLGA" name="AllergyStatusObservationMoodCode" constrainedElement="_2FRuAhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_utQDsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_utR44IokEeSkH97cUQxLGA" name="AllergyStatusObservationCode" constrainedElement="_2FRuAhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_utSf8IokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '33999-4' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_utU8MIokEeSkH97cUQxLGA" name="AllergyStatusObservationStatusCode" constrainedElement="_2FRuAhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_utU8MYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_utX_gIokEeSkH97cUQxLGA" name="AllergyStatusObservationValue" constrainedElement="_2FRuAhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_utX_gYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = element.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.96' and (value.code = '55561003' or value.code = '73425007' or value.code = '413322009')))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2FbfABSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2FhloBSVEeGGzu7fmW9pXw" name="CommentActivity">
      <ownedComment xmi:id="_70j2oHeeEeGLwesdFe7o6w">
        <body>Comments are free text data that cannot otherwise be recorded using data elements already defined by this specification. They are not to be used to record information that can be recorded elsewhere. For example, a free text description of the severity of an allergic reaction would not be recorded in a comment.</body>
      </ownedComment>
      <ownedRule xmi:id="_kCuRsOZCEeGINOJ_SD9_dA" name="CommentActivityTextReference" constrainedElement="_2FhloBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pkWuQOZCEeGINOJ_SD9_dA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined() implies self.text->forAll(reference->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mmOwQOZCEeGINOJ_SD9_dA" name="CommentActivityTextReferenceValue" constrainedElement="_kCuRsOZCEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_rrcWkOZCEeGINOJ_SD9_dA">
          <language>OCL</language>
          <body>self.text->forAll(reference->size() = 1) implies self.text->forAll(reference->one(value->size() = 1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_npxQ4OZCEeGINOJ_SD9_dA" name="CommentActivityReferenceValue" constrainedElement="_mmOwQOZCEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wZmu0OZCEeGINOJ_SD9_dA">
          <language>OCL</language>
          <body>not self.text.reference.value.oclIsUndefined() implies not self.getSection().text.getText(self.text.reference.value.substring(2, self.text.reference.value.size())).oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_utZ0sIokEeSkH97cUQxLGA" name="CommentActivityTemplateId" constrainedElement="_2FhloBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_utZ0sYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.64')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_utdfEIokEeSkH97cUQxLGA" name="CommentActivityClassCode" constrainedElement="_2FhloBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_utdfEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryAct::ACT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_utetMIokEeSkH97cUQxLGA" name="CommentActivityMoodCode" constrainedElement="_2FhloBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_utetMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_utf7UIokEeSkH97cUQxLGA" name="CommentActivityCode" constrainedElement="_2FhloBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_utf7UYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '48767-8' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_utiXkIokEeSkH97cUQxLGA" name="CommentActivityText" constrainedElement="_2FhloBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_utiXkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.text.oclIsUndefined() or self.text.isNullFlavorUndefined()) implies (not self.text.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_utvL4IokEeSkH97cUQxLGA" name="CommentActivityAuthor" constrainedElement="_2FhloBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_utvL4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->one(author : cda::Author | not author.oclIsUndefined() and author.oclIsKindOf(cda::Author))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wOa7gIokEeSkH97cUQxLGA" name="CommentActivityAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet" constrainedElement="_2FhloBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wOa7gYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->excluding(null).assignedAuthor->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject(isNullFlavorUndefined() implies ( streetAddressLine->size() >=1 and streetAddressLine->size() &lt;=4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wOa7gookEeSkH97cUQxLGA" name="CommentActivityAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressCity" constrainedElement="_2FhloBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wObikIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->excluding(null).assignedAuthor->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((city->isEmpty() or city->exists(element | element.isNullFlavorUndefined())) implies (city->size() = 1) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wObikYokEeSkH97cUQxLGA" name="CommentActivityAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressCountry" constrainedElement="_2FhloBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wObikookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->excluding(null).assignedAuthor->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((country->isEmpty() or country->exists(element | element.isNullFlavorUndefined())) implies (not country->isEmpty()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wOcJoIokEeSkH97cUQxLGA" name="CommentActivityAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressPostalCode" constrainedElement="_2FhloBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wOcJoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->excluding(null).assignedAuthor->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((postalCode->isEmpty() or postalCode->exists(element | element.isNullFlavorUndefined())) implies (not postalCode->isEmpty()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wOcJoookEeSkH97cUQxLGA" name="CommentActivityAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressState" constrainedElement="_2FhloBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wOcJo4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->excluding(null).assignedAuthor->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((state->isEmpty() or state->exists(element | element.isNullFlavorUndefined())) implies (not state->isEmpty()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wOcwsIokEeSkH97cUQxLGA" name="CommentActivityAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressStreetAddressLine" constrainedElement="_2FhloBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wOcwsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->excluding(null).assignedAuthor->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((streetAddressLine->isEmpty() or streetAddressLine->exists(element | element.isNullFlavorUndefined())) implies (not streetAddressLine->isEmpty()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wOdXwIokEeSkH97cUQxLGA" name="CommentActivityAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressUseP" constrainedElement="_2FhloBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wOdXwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->excluding(null).assignedAuthor->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies (not use->isEmpty() )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wOdXwookEeSkH97cUQxLGA" name="CommentActivityAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressUse" constrainedElement="_2FhloBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wOdXw4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->excluding(null).assignedAuthor->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies (use->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(vocab::PostalAddressUse) and &#xD;
let value : vocab::PostalAddressUse = element.oclAsType(vocab::PostalAddressUse) in &#xD;
value = vocab::PostalAddressUse::BAD or value = vocab::PostalAddressUse::DIR or value = vocab::PostalAddressUse::H or value = vocab::PostalAddressUse::HP or value = vocab::PostalAddressUse::HV or value = vocab::PostalAddressUse::PHYS or value = vocab::PostalAddressUse::PST or value = vocab::PostalAddressUse::PUB or value = vocab::PostalAddressUse::TMP or value = vocab::PostalAddressUse::WP) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wOd-0IokEeSkH97cUQxLGA" name="CommentActivityAuthorAssignedAuthorHasPersonOrOrganization" constrainedElement="_2FhloBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wOd-0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->excluding(null).assignedAuthor->excluding(null)->reject(assignedPerson->one(element | not element.oclIsUndefined() and element.name->size() = 1) or representedOrganization->one(element | not element.oclIsUndefined() and element.name->size() = 1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wOd-0ookEeSkH97cUQxLGA" name="CommentActivityAuthorAssignedAuthorAssignPersonName" constrainedElement="_2FhloBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wOd-04okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->excluding(null).assignedAuthor->excluding(null)->reject(assignedPerson.name->forAll(name | name.oclIsTypeOf(datatypes::PN)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wOel4IokEeSkH97cUQxLGA" name="CommentActivityAuthorAssignedAuthorAddr" constrainedElement="_2FhloBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wOel4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->excluding(null).assignedAuthor->excluding(null)->reject((addr->isEmpty() or addr->exists(element | element.isNullFlavorUndefined())) implies (addr->size() = 1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wOfM8IokEeSkH97cUQxLGA" name="CommentActivityAuthorAssignedAuthorId" constrainedElement="_2FhloBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wOfM8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->excluding(null).assignedAuthor->excluding(null)->reject((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (id->size() = 1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wOfM8ookEeSkH97cUQxLGA" name="CommentActivityAuthorTime" constrainedElement="_2FhloBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wOfM84okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->excluding(null)->reject((time.oclIsUndefined() or time.isNullFlavorUndefined()) implies (not time.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wOf0AIokEeSkH97cUQxLGA" name="CommentActivityAuthorAssignedAuthor" constrainedElement="_2FhloBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wOf0AYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->excluding(null)->reject(assignedAuthor->one(assignedAuthor : cda::AssignedAuthor | not assignedAuthor.oclIsUndefined() and assignedAuthor.oclIsKindOf(cda::AssignedAuthor)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2FrWohSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2GHbgBSVEeGGzu7fmW9pXw" name="MedicationActivity">
      <ownedComment xmi:id="_NWhH8B-vEeGKirKJsFylGA">
        <body>A medication activity describes substance administrations that have actually occurred (e.g. pills ingested or injections given) or are intended to occur (e.g. &quot;take 2 tablets twice a day for the next 10 days&quot;). Medication activities in &quot;INT&quot; mood are reflections of what a clinician intends a patient to be taking. Medication activities in &quot;EVN&quot; mood reflect actual use.&#xD;
Medication timing is complex. This template requires that there be a substanceAdministration/effectiveTime valued with a time interval, representing the start and stop dates. Additional effectiveTime elements are optional, and can be used to represent frequency and other aspects of more detailed dosing regimens.</body>
      </ownedComment>
      <ownedRule xmi:id="_K_ZiwB-zEeGKirKJsFylGA" name="MedicationActivityDoseQuantityorrateQuantity" constrainedElement="_2GHbgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_PVv38B-zEeGKirKJsFylGA">
          <language>OCL</language>
          <body>self.doseQuantity->size() = 1 or self.rateQuantity->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nSTKYEFiEeG2TLeVPbv7pg" name="MedicationActivityTextReference" constrainedElement="_2GHbgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_qEPtkEFiEeG2TLeVPbv7pg">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined() implies self.text->forAll(reference->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ovaIgOL7EeGfv4R-kzpM0g" name="MedicationActivityReferenceValue" constrainedElement="_nSTKYEFiEeG2TLeVPbv7pg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_rICz0OL7EeGfv4R-kzpM0g">
          <language>OCL</language>
          <body>self.text->forAll(reference->size() = 1) implies self.text->forAll(reference->one(value->size() = 1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ukkeIEFiEeG2TLeVPbv7pg" name="MedicationActivityTextReferenceValue" constrainedElement="_nSTKYEFiEeG2TLeVPbv7pg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wqKRoEFiEeG2TLeVPbv7pg">
          <language>OCL</language>
          <body>not self.text.reference.value.oclIsUndefined() implies not self.getSection().text.getText(self.text.reference.value.substring(2, self.text.reference.value.size())).oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_5BnBgEIiEeG4bZAl2IGXmQ" name="MedicationActivityEffectiveTimeIVLTSorTS" constrainedElement="_4CqJMEFiEeG2TLeVPbv7pg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_BbXhwEIjEeG4bZAl2IGXmQ">
          <language>OCL</language>
          <body>self.effectiveTime->select(ef | ef.oclIsTypeOf(datatypes::IVL_TS))->size() = 1 xor self.effectiveTime->select(ef | ef.oclIsTypeOf(datatypes::SXCM_TS))->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_4CqJMEFiEeG2TLeVPbv7pg" name="MedicationActivityEffectiveTimeIVLTSLow" constrainedElement="_ukkeIEFiEeG2TLeVPbv7pg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pwzXsEFjEeG2TLeVPbv7pg">
          <language>OCL</language>
          <body>self.effectiveTime->select(ef | ef.oclIsTypeOf(datatypes::IVL_TS))->forAll( eff | eff.oclAsType(datatypes::IVL_TS).low->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_6ODpwEFiEeG2TLeVPbv7pg" name="MedicationActivityEffectiveTimeIVLTSHigh" constrainedElement="_4CqJMEFiEeG2TLeVPbv7pg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_6jRPUEFjEeG2TLeVPbv7pg">
          <language>OCL</language>
          <body>self.effectiveTime->select(ef | ef.oclIsTypeOf(datatypes::IVL_TS))->forAll( eff | eff.oclAsType(datatypes::IVL_TS).high->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_MI3dwL59EeO8lb9TgnhnOQ" name="MedicationActivityEffectiveTimeTSValue" constrainedElement="_2GHbgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_S4L1cL59EeO8lb9TgnhnOQ">
          <language>OCL</language>
          <body>self.effectiveTime->select(ef | ef.oclIsTypeOf(datatypes:: SXCM_TS))->forAll( eff | eff.oclAsType(datatypes:: SXCM_TS).value->size() = 1 or eff.oclAsType(datatypes:: SXCM_TS).isNullFlavorDefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_0bGJYEIiEeG4bZAl2IGXmQ" name="MedicationActivityEffectiveTimePIVLTS" constrainedElement="_6ODpwEFiEeG2TLeVPbv7pg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Jd8REEIjEeG4bZAl2IGXmQ">
          <language>OCL</language>
          <body>self.effectiveTime->select(ef | ef.oclIsTypeOf(datatypes::PIVL_TS) or ef.oclIsTypeOf(datatypes::EIVL_TS))->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Ldxa0EIjEeG4bZAl2IGXmQ" name="MedicationActivityEffectiveTimeOperator" constrainedElement="_0bGJYEIiEeG4bZAl2IGXmQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_VcK9oEIjEeG4bZAl2IGXmQ">
          <language>OCL</language>
          <body>self.effectiveTime->select(ef | ef.oclIsTypeOf(datatypes::PIVL_TS) or ef.oclIsTypeOf(datatypes::EIVL_TS))->forAll(eff | eff.operator = vocab::SetOperator::A and eff.operator->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cWfuoEInEeG4bZAl2IGXmQ" name="MedicationActivityDoseQuantityUnit" constrainedElement="_Ldxa0EIjEeG4bZAl2IGXmQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ffCM4EInEeG4bZAl2IGXmQ">
          <language>OCL</language>
          <body>not self.doseQuantity.oclIsUndefined() implies not self.doseQuantity.unit.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_1smJUEIpEeG4bZAl2IGXmQ" name="MedicationActivityDrugVehicleTypeCode" constrainedElement="_2GHbgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_FEb2AEIqEeG4bZAl2IGXmQ">
          <language>OCL</language>
          <body>self.participant->select(par : cda::Participant2 | par.participantRole.oclIsKindOf(consol::DrugVehicle))->forAll(p : cda::Participant2 | p.typeCode=vocab::ParticipationType::CSM)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_L0emcEIqEeG4bZAl2IGXmQ" name="MedicationActivityInstructionsInversionInd" constrainedElement="_1smJUEIpEeG4bZAl2IGXmQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_QiVcsEIqEeG4bZAl2IGXmQ">
          <language>OCL</language>
          <body>self.entryRelationship->select(er : cda::EntryRelationship | er.act.oclIsTypeOf(consol::Instructions))->forAll(ent : cda::EntryRelationship | ent.inversionInd=true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_0EuxoAXoEeOc4J5a9hlM-Q" name="MedicationActivityRateQuantityUnit" constrainedElement="_Ldxa0EIjEeG4bZAl2IGXmQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_6TqZEAXoEeOc4J5a9hlM-Q">
          <language>OCL</language>
          <body>not self.rateQuantity.oclIsUndefined() implies self.rateQuantity.oclAsType(datatypes::PQ).unit->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_utxoIIokEeSkH97cUQxLGA" name="MedicationActivityTemplateId" constrainedElement="_2GHbgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_utxoIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.16')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ut6yEIokEeSkH97cUQxLGA" name="MedicationActivityClassCode" constrainedElement="_2GHbgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ut6yEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClass::SBADM</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ut8nQIokEeSkH97cUQxLGA" name="MedicationActivityMoodCode" constrainedElement="_2GHbgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ut8nQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.moodCode.oclIsUndefined() and self.moodCode.oclIsKindOf(vocab::x_DocumentSubstanceMood) and &#xD;
let value : vocab::x_DocumentSubstanceMood = self.moodCode.oclAsType(vocab::x_DocumentSubstanceMood) in &#xD;
value = vocab::x_DocumentSubstanceMood::EVN or value = vocab::x_DocumentSubstanceMood::INT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ut_DgIokEeSkH97cUQxLGA" name="MedicationActivityId" constrainedElement="_2GHbgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ut_DgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uuARoIokEeSkH97cUQxLGA" name="MedicationActivityCode" constrainedElement="_2GHbgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uuARoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uuBfwIokEeSkH97cUQxLGA" name="MedicationActivityStatusCode" constrainedElement="_2GHbgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uuBfwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uuFxMIokEeSkH97cUQxLGA" name="MedicationActivityRouteCodeP" constrainedElement="_2GHbgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uuFxMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.routeCode.oclIsUndefined() or self.routeCode.isNullFlavorUndefined()) implies (not self.routeCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uuD8AIokEeSkH97cUQxLGA" name="MedicationActivityRouteCode" constrainedElement="_2GHbgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uuD8AYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.routeCode.oclIsUndefined() or self.routeCode.isNullFlavorUndefined()) implies (not self.routeCode.oclIsUndefined() and self.routeCode.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.routeCode.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and (value.code = 'C38192' or value.code = 'C38193' or value.code = 'C38194' or value.code = 'C38675' or value.code = 'C38197' or value.code = 'C38633' or value.code = 'C38205' or value.code = 'C38206' or value.code = 'C38208' or value.code = 'C38209' or value.code = 'C38210' or value.code = 'C38211' or value.code = 'C38212' or value.code = 'C38200' or value.code = 'C38215' or value.code = 'C38219' or value.code = 'C38220' or value.code = 'C38221' or value.code = 'C38222' or value.code = 'C38223' or value.code = 'C38224' or value.code = 'C38225' or value.code = 'C38226' or value.code = 'C38227' or value.code = 'C38228' or value.code = 'C38229' or value.code = 'C38230' or value.code = 'C38231' or value.code = 'C38232' or value.code = 'C38233' or value.code = 'C38234' or value.code = 'C38217' or value.code = 'C38218' or value.code = 'C38235' or value.code = 'C38238' or value.code = 'C38239' or value.code = 'C38240' or value.code = 'C38241' or value.code = 'C38242' or value.code = 'C38243' or value.code = 'C38245' or value.code = 'C38246' or value.code = 'C38247' or value.code = 'C38249' or value.code = 'C38250' or value.code = 'C38251' or value.code = 'C38252' or value.code = 'C38253' or value.code = 'C38254' or value.code = 'C28161' or value.code = 'C38255' or value.code = 'C38256' or value.code = 'C38257' or value.code = 'C38258' or value.code = 'C38259' or value.code = 'C38260' or value.code = 'C38261' or value.code = 'C38262' or value.code = 'C38263' or value.code = 'C38264' or value.code = 'C38265' or value.code = 'C38266' or value.code = 'C38267' or value.code = 'C38207' or value.code = 'C38268' or value.code = 'C38269' or value.code = 'C38270' or value.code = 'C38272' or value.code = 'C38273' or value.code = 'C38276' or value.code = 'C38277' or value.code = 'C38278' or value.code = 'C38280' or value.code = 'C38203' or value.code = 'C38281' or value.code = 'C38282' or value.code = 'C38284' or value.code = 'C38285' or value.code = 'C48623' or value.code = 'C38286' or value.code = 'C38287' or value.code = 'C38288' or value.code = 'C38289' or value.code = 'C38291' or value.code = 'C38676' or value.code = 'C38292' or value.code = 'C38677' or value.code = 'C38293' or value.code = 'C38294' or value.code = 'C38295' or value.code = 'C38216' or value.code = 'C38296' or value.code = 'C38198' or value.code = 'C38297' or value.code = 'C38298' or value.code = 'C38299' or value.code = 'C38300' or value.code = 'C38301' or value.code = 'C38304' or value.code = 'C38305' or value.code = 'C38283' or value.code = 'C38307' or value.code = 'C38308' or value.code = 'C38309' or value.code = 'C38312' or value.code = 'C38271'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uuLQwIokEeSkH97cUQxLGA" name="MedicationActivityApproachSiteCodeP" constrainedElement="_2GHbgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uuLQwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.approachSiteCode->isEmpty() or self.approachSiteCode->exists(element | element.isNullFlavorUndefined())) implies (not self.approachSiteCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uuI0gIokEeSkH97cUQxLGA" name="MedicationActivityApproachSiteCode" constrainedElement="_2GHbgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uuI0gYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.approachSiteCode->isEmpty() or self.approachSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.approachSiteCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.96' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uuNF8IokEeSkH97cUQxLGA" name="MedicationActivityDoseQuantity" constrainedElement="_2GHbgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uuNF8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.doseQuantity.oclIsUndefined() or self.doseQuantity.isNullFlavorUndefined()) implies (not self.doseQuantity.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uuO7IIokEeSkH97cUQxLGA" name="MedicationActivityRateQuantity" constrainedElement="_2GHbgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uuO7IYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.rateQuantity.oclIsUndefined() or self.rateQuantity.isNullFlavorUndefined()) implies (not self.rateQuantity.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uuQJQIokEeSkH97cUQxLGA" name="MedicationActivityMaxDoseQuantity" constrainedElement="_2GHbgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uuQJQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.maxDoseQuantity.oclIsUndefined() or self.maxDoseQuantity.isNullFlavorUndefined()) implies (not self.maxDoseQuantity.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uuR-cIokEeSkH97cUQxLGA" name="MedicationActivityAdministrationUnitCode" constrainedElement="_2GHbgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uuR-cYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.administrationUnitCode.oclIsUndefined() or self.administrationUnitCode.isNullFlavorUndefined()) implies (not self.administrationUnitCode.oclIsUndefined() and self.administrationUnitCode.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.administrationUnitCode.oclAsType(datatypes::CE) in &#xD;
not value.codeSystem.oclIsUndefined() or not value.codeSystemName.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uuVBwIokEeSkH97cUQxLGA" name="MedicationActivityText" constrainedElement="_2GHbgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uuVBwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.text.oclIsUndefined() or self.text.isNullFlavorUndefined()) implies (not self.text.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uuWP4IokEeSkH97cUQxLGA" name="MedicationActivityRepeatNumber" constrainedElement="_2GHbgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uuWP4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.repeatNumber.oclIsUndefined() or self.repeatNumber.isNullFlavorUndefined()) implies (not self.repeatNumber.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uuahUIokEeSkH97cUQxLGA" name="MedicationActivityMedicationSupplyOrder" constrainedElement="_2GHbgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uuahUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.supply.oclIsUndefined() and entryRelationship.supply.oclIsKindOf(consol::MedicationSupplyOrder) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uubvcookEeSkH97cUQxLGA" name="MedicationActivityReactionObservation" constrainedElement="_2GHbgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uubvc4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::ReactionObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::CAUS)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uueLsIokEeSkH97cUQxLGA" name="MedicationActivityPerformer" constrainedElement="_2GHbgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uueLsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->one(performer : cda::Performer2 | not performer.oclIsUndefined() and performer.oclIsKindOf(rim::Participation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uu9T4IokEeSkH97cUQxLGA" name="MedicationActivityInstructions" constrainedElement="_2GHbgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uu9T4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(consol::Instructions) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u7pFAIokEeSkH97cUQxLGA" name="MedicationActivityIndication" constrainedElement="_2GHbgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u7pFAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::Indication) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::RSON)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u8CtoIokEeSkH97cUQxLGA" name="MedicationActivityMedicationDispense" constrainedElement="_2GHbgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u8CtoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.supply.oclIsUndefined() and entryRelationship.supply.oclIsKindOf(consol::MedicationDispense) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u8I0QIokEeSkH97cUQxLGA" name="MedicationActivityDrugVehicle" constrainedElement="_2GHbgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u8I0QYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->exists(participant : cda::Participant2 | not participant.participantRole.oclIsUndefined() and participant.participantRole.oclIsKindOf(consol::DrugVehicle))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vOH8IIokEeSkH97cUQxLGA" name="MedicationActivityConsumable" constrainedElement="_2GHbgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vOH8IYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.consumable->one(consumable : cda::Consumable | not consumable.oclIsUndefined() and consumable.oclIsKindOf(cda::Consumable))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wGOBwIokEeSkH97cUQxLGA" name="MedicationActivityPrecondition" constrainedElement="_2GHbgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wGOBwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.precondition->exists(precondition : cda::Precondition | not precondition.oclIsUndefined() and precondition.oclIsKindOf(cda::Precondition))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wOnv0IokEeSkH97cUQxLGA" name="MedicationActivityConsumableMedicationInformation" constrainedElement="_2GHbgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wOnv0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.consumable->excluding(null)->reject(manufacturedProduct->one(manufacturedProduct : cda::ManufacturedProduct | not manufacturedProduct.oclIsUndefined() and manufacturedProduct.oclIsKindOf(consol::MedicationInformation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wOoW4IokEeSkH97cUQxLGA" name="MedicationActivityPreconditionTypeCode" constrainedElement="_2GHbgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wOoW4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.precondition->excluding(null)->reject(isDefined('typeCode') and typeCode=vocab::ActRelationshipType::PRCN)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wOo98IokEeSkH97cUQxLGA" name="MedicationActivityPreconditionPreconditionForSubstanceAdministration" constrainedElement="_2GHbgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wOo98YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.precondition->excluding(null)->reject(criterion->one(criterion : cda::Criterion | not criterion.oclIsUndefined() and criterion.oclIsKindOf(consol::PreconditionForSubstanceAdministration)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2H1SwhSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_nazskEbuEd6besF9iFIJkQ"/>
      </generalization>
      <ownedOperation xmi:id="_uubIYIokEeSkH97cUQxLGA" name="getMedicationSupplyOrder" bodyCondition="_uubvcIokEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_uubvcIokEeSkH97cUQxLGA" name="body" constrainedElement="_uubIYIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_uubvcYokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getSupplies()->select(supply : cda::Supply | not supply.oclIsUndefined() and supply.oclIsKindOf(consol::MedicationSupplyOrder))->asSequence()->any(true).oclAsType(consol::MedicationSupplyOrder)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_uubIYYokEeSkH97cUQxLGA" type="_j3aTQBrTEeGo461UQq-B1g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uubIYookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_uuc9kIokEeSkH97cUQxLGA" name="getReactionObservation" bodyCondition="_uudkoookEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_uudkoookEeSkH97cUQxLGA" name="body" constrainedElement="_uuc9kIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_uudko4okEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ReactionObservation))->asSequence()->any(true).oclAsType(consol::ReactionObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_uudkoIokEeSkH97cUQxLGA" type="_2E_aIRSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uudkoYokEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_uu968IokEeSkH97cUQxLGA" name="getInstructions" bodyCondition="_uu9684okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_uu9684okEeSkH97cUQxLGA" name="body" constrainedElement="_uu968IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_uu969IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::Instructions))->asSequence()->any(true).oclAsType(consol::Instructions)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_uu968YokEeSkH97cUQxLGA" type="_2G8h9RSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uu968ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_u7psEIokEeSkH97cUQxLGA" name="getIndications" bodyCondition="_u7psE4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_u7psE4okEeSkH97cUQxLGA" name="body" constrainedElement="_u7psEIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_u7psFIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::Indication)).oclAsType(consol::Indication)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_u7psEYokEeSkH97cUQxLGA" type="_sHrUoBUSEeG6PvUxSTZnaw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_u7psEookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_u8DUsIokEeSkH97cUQxLGA" name="getMedicationDispenses" bodyCondition="_u8DUs4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_u8DUs4okEeSkH97cUQxLGA" name="body" constrainedElement="_u8DUsIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_u8DUtIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getSupplies()->select(supply : cda::Supply | not supply.oclIsUndefined() and supply.oclIsKindOf(consol::MedicationDispense)).oclAsType(consol::MedicationDispense)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_u8DUsYokEeSkH97cUQxLGA" type="_DpoGkBUUEeG6PvUxSTZnaw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_u8DUsookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_u8JbUIokEeSkH97cUQxLGA" name="getDrugVehicles" bodyCondition="_u8JbU4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_u8JbU4okEeSkH97cUQxLGA" name="body" constrainedElement="_u8JbUIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_u8JbVIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getParticipantRoles()->select(participantRole : cda::ParticipantRole | not participantRole.oclIsUndefined() and participantRole.oclIsKindOf(consol::DrugVehicle)).oclAsType(consol::DrugVehicle)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_u8JbUYokEeSkH97cUQxLGA" type="_VBXq8BUTEeG6PvUxSTZnaw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_u8JbUookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2G2bUxSVEeGGzu7fmW9pXw" name="ProductInstance">
      <ownedComment xmi:id="_2G2bVBSVEeGGzu7fmW9pXw" annotatedElement="_2G2bUxSVEeGGzu7fmW9pXw">
        <body>This clinical statement represents a particular device that was placed in or used as part of a procedure or other act. This provides a record of the identifier and other details about the given product that was used. For example, it is important to have a record that indicates not just that a hip prostheses was placed in a patient but that it was a particular hip prostheses number with a unique identifier.&#xD;
The FDA Amendments Act specifies the creation of a Unique Device Identification (UDI) System that requires the label of devices to bear a unique identifier that will standardize device identification and identify the device through distribution and use.  &#xD;
The UDI should be sent in the participantRole/id.</body>
      </ownedComment>
      <ownedRule xmi:id="_uueywIokEeSkH97cUQxLGA" name="ProductInstanceTemplateId" constrainedElement="_2G2bUxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uufZ0IokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.37')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uuhPAIokEeSkH97cUQxLGA" name="ProductInstanceClassCode" constrainedElement="_2G2bUxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uuhPAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>isDefined('classCode') and self.classCode=vocab::RoleClassRoot::MANU</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uuidIIokEeSkH97cUQxLGA" name="ProductInstanceId" constrainedElement="_2G2bUxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uuidIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vKUaNYokEeSkH97cUQxLGA" name="ProductInstanceScopingEntity" constrainedElement="_2G2bUxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vKUaNookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.scopingEntity->one(scopingEntity : cda::Entity | not scopingEntity.oclIsUndefined() and scopingEntity.oclIsKindOf(cda::Entity))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vKVoUIokEeSkH97cUQxLGA" name="ProductInstancePlayingDevice" constrainedElement="_2G2bUxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vKVoUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.playingDevice->one(playingDevice : cda::Device | not playingDevice.oclIsUndefined() and playingDevice.oclIsKindOf(cda::Device))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wOqMEIokEeSkH97cUQxLGA" name="ProductInstanceScopingEntityId" constrainedElement="_2G2bUxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wOqMEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.scopingEntity->excluding(null)->reject((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wOqzIIokEeSkH97cUQxLGA" name="ProductInstancePlayingDeviceCode" constrainedElement="_2G2bUxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wOqzIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.playingDevice->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2G43kBSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#__QZaIEcZEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2G8h9RSVEeGGzu7fmW9pXw" name="Instructions">
      <ownedComment xmi:id="_-HE7oB7lEeGEaLkc3UAsAg">
        <body>The Instructions template can be used in several ways, such as to record patient instructions within a Medication Activity or to record fill instructions within a supply order. The act/code defines the type of instruction.Though not defined in this template, a Vaccine Information Statement (VIS) document could be referenced through act/reference/externalDocument, and patient awareness of the instructions can be represented with the generic participant and the participant/awarenessCode.</body>
      </ownedComment>
      <ownedRule xmi:id="_VsoLUBueEeGnMahsPjlwOw" name="InstructionsTextReference" constrainedElement="_2G8h9RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Y-ZeEBueEeGnMahsPjlwOw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined() implies self.text->forAll(reference->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_1sHS4OMkEeGfv4R-kzpM0g" name="InstructionsReferenceValue" constrainedElement="_VsoLUBueEeGnMahsPjlwOw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_5-UH4OMkEeGfv4R-kzpM0g">
          <language>OCL</language>
          <body>self.text->forAll(reference->size() = 1) implies self.text->forAll(reference->one(value->size() = 1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_8FmGoB-WEeGtfPlBCjHWkw" name="InstructionsTextReferenceValue" constrainedElement="_VsoLUBueEeGnMahsPjlwOw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__GkkUB-WEeGtfPlBCjHWkw">
          <language>OCL</language>
          <body>not self.text.reference.value.oclIsUndefined() implies not self.getSection().text.getText(self.text.reference.value.substring(2, self.text.reference.value.size())).oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uuojwIokEeSkH97cUQxLGA" name="InstructionsTemplateId" constrainedElement="_2G8h9RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uupK0IokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.20')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uutcQIokEeSkH97cUQxLGA" name="InstructionsClassCode" constrainedElement="_2G8h9RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uutcQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryAct::ACT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uuuqYIokEeSkH97cUQxLGA" name="InstructionsMoodCode" constrainedElement="_2G8h9RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uuuqYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentActMood::INT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uu0xAIokEeSkH97cUQxLGA" name="InstructionsCodeP" constrainedElement="_2G8h9RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uu0xAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uuxGoIokEeSkH97cUQxLGA" name="InstructionsCode" constrainedElement="_2G8h9RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uuxGoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.96' and not value.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uu4bYIokEeSkH97cUQxLGA" name="InstructionsText" constrainedElement="_2G8h9RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uu4bYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.text.oclIsUndefined() or self.text.isNullFlavorUndefined()) implies (not self.text.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uu63oIokEeSkH97cUQxLGA" name="InstructionsStatusCode" constrainedElement="_2G8h9RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uu63oYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2HCBgRSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2HIvMBSVEeGGzu7fmW9pXw" name="NonMedicinalSupplyActivity">
      <ownedComment xmi:id="_kXIeEDiAEeGSytqLITd2FA">
        <body>This template records non-medicinal supplies provided, such as medical equipment</body>
      </ownedComment>
      <ownedRule xmi:id="_uejSEEa6EeG7gbamepbPeA" name="NonMedicinalSupplyActivityEffectiveTimeHigh" constrainedElement="_2HIvMBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_BKhB8Ea7EeG7gbamepbPeA">
          <language>OCL</language>
          <body>self.effectiveTime->size() = 1 implies self.effectiveTime.oclAsType(datatypes::IVL_TS)->forAll(high->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_fELj4Ea8EeG75M7WNoZ4Xg" name="NonMedicinalSupplyActivityProductInstanceTypeCode" constrainedElement="_uejSEEa6EeG7gbamepbPeA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kenzUEa8EeG75M7WNoZ4Xg">
          <language>OCL</language>
          <body>self.participant->select(par : cda::Participant2 | par.participantRole.oclIsKindOf(consol::ProductInstance))->forAll(p : cda::Participant2 | p.typeCode=vocab::ParticipationType::PRD)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uu-iAIokEeSkH97cUQxLGA" name="NonMedicinalSupplyActivityTemplateId" constrainedElement="_2HIvMBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uu-iAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.50')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uvA-QIokEeSkH97cUQxLGA" name="NonMedicinalSupplyActivityClassCode" constrainedElement="_2HIvMBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uvA-QYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassSupply::SPLY</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uvCzcIokEeSkH97cUQxLGA" name="NonMedicinalSupplyActivityMoodCode" constrainedElement="_2HIvMBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uvCzcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.moodCode.oclIsUndefined() and self.moodCode.oclIsKindOf(vocab::x_DocumentSubstanceMood) and &#xD;
let value : vocab::x_DocumentSubstanceMood = self.moodCode.oclAsType(vocab::x_DocumentSubstanceMood) in &#xD;
value = vocab::x_DocumentSubstanceMood::EVN or value = vocab::x_DocumentSubstanceMood::INT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uvFPsIokEeSkH97cUQxLGA" name="NonMedicinalSupplyActivityId" constrainedElement="_2HIvMBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uvFPsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uvGd0IokEeSkH97cUQxLGA" name="NonMedicinalSupplyActivityStatusCode" constrainedElement="_2HIvMBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uvGd0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uvHr8IokEeSkH97cUQxLGA" name="NonMedicinalSupplyActivityEffectiveTime" constrainedElement="_2HIvMBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uvHr8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.effectiveTime->isEmpty() or self.effectiveTime->exists(element | element.isNullFlavorUndefined())) implies (not self.effectiveTime->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uvI6EIokEeSkH97cUQxLGA" name="NonMedicinalSupplyActivityQuantity" constrainedElement="_2HIvMBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uvI6EYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.quantity.oclIsUndefined() or self.quantity.isNullFlavorUndefined()) implies (not self.quantity.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uvKIMIokEeSkH97cUQxLGA" name="NonMedicinalSupplyActivityProductInstance" constrainedElement="_2HIvMBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uvKIMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->one(participant : cda::Participant2 | not participant.participantRole.oclIsUndefined() and participant.participantRole.oclIsKindOf(consol::ProductInstance))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2HnQUhSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_3gL0sEbuEd6besF9iFIJkQ"/>
      </generalization>
      <ownedOperation xmi:id="_uvLWUIokEeSkH97cUQxLGA" name="getProductInstance" bodyCondition="_uvL9YookEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_uvL9YookEeSkH97cUQxLGA" name="body" constrainedElement="_uvLWUIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_uvL9Y4okEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getParticipantRoles()->select(participantRole : cda::ParticipantRole | not participantRole.oclIsUndefined() and participantRole.oclIsKindOf(consol::ProductInstance))->asSequence()->any(true).oclAsType(consol::ProductInstance)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_uvL9YIokEeSkH97cUQxLGA" type="_2G2bUxSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uvL9YYokEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2H6yUBSVEeGGzu7fmW9pXw" name="ProblemConcernAct">
      <ownedComment xmi:id="_KPRpwCApEeGetMjKLkqR8g">
        <body>Observations of problems or other clinical statements captured at a point in time are wrapped in a &quot;Concern&quot; act, which represents the ongoing process tracked over time. This allows for binding related observations of problems. For example, the observation of &quot;Acute MI&quot; in 2004 can be related to the observation of &quot;History of MI&quot; in 2006 because they are the same concern. The conformance statements in this section define an outer &quot;problem act&quot; (representing the &quot;Concern&quot;) that can contain a nested &quot;problem observation&quot; or other nested clinical statements.</body>
      </ownedComment>
      <ownedRule xmi:id="_2IFKYxSVEeGGzu7fmW9pXw" name="ProblemConcernActEffectiveTimeLow">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2IFKZBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.effectiveTime.low.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_SxxO0Cf2EeGO5_JBy9h6BA" name="ProblemConcernActEffectiveTimeHigh" constrainedElement="_2IFKYxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X8yiMCf2EeGO5_JBy9h6BA">
          <language>OCL</language>
          <body>not self.effectiveTime.high.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uvL9ZIokEeSkH97cUQxLGA" name="ProblemConcernActTemplateId" constrainedElement="_2H6yUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uvL9ZYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.3')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uvPAsIokEeSkH97cUQxLGA" name="ProblemConcernActClassCode" constrainedElement="_2H6yUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uvPAsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryAct::ACT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uvQO0IokEeSkH97cUQxLGA" name="ProblemConcernActMoodCode" constrainedElement="_2H6yUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uvQO0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uvRc8IokEeSkH97cUQxLGA" name="ProblemConcernActId" constrainedElement="_2H6yUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uvRc8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uvVuYIokEeSkH97cUQxLGA" name="ProblemConcernActCodeP" constrainedElement="_2H6yUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uvVuYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uvTSIIokEeSkH97cUQxLGA" name="ProblemConcernActCode" constrainedElement="_2H6yUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uvTSIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = 'CONC' and value.codeSystem = '2.16.840.1.113883.5.6')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uvYKoIokEeSkH97cUQxLGA" name="ProblemConcernActStatusCode" constrainedElement="_2H6yUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uvYKoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'active' or value.code = 'suspended' or value.code = 'aborted' or value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uvam4IokEeSkH97cUQxLGA" name="ProblemConcernActEffectiveTime" constrainedElement="_2H6yUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uvam4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u-Y3AIokEeSkH97cUQxLGA" name="ProblemConcernActProblemObservation" constrainedElement="_2H6yUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u-Y3AYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::ProblemObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2IINsxSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_u-ZeEIokEeSkH97cUQxLGA" name="getProblemObservations" bodyCondition="_u-ZeE4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_u-ZeE4okEeSkH97cUQxLGA" name="body" constrainedElement="_u-ZeEIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_u-ZeFIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProblemObservation)).oclAsType(consol::ProblemObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_u-ZeEYokEeSkH97cUQxLGA" type="_5Ha7ABUyEeGbmN_W114JUw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_u-ZeEookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2IJb0BSVEeGGzu7fmW9pXw" name="ContinuityOfCareDocument">
      <ownedComment xmi:id="_2IJb0RSVEeGGzu7fmW9pXw" annotatedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <body>This section, Continuity of Care Document (CCD) Release 1.1, describes CDA constraints  in accordance with Stage 1 Meaningful Use. The CCD requirements in this guide supersede CCD Release 1; in the near future, this guide could supersede HITSP C32 .&#xD;
&#xD;
The CCD is a core data set of the most relevant administrative, demographic, and clinical information facts about a patient's healthcare, covering one or more healthcare encounters. It provides a means for one healthcare practitioner, system, or setting to aggregate all of the pertinent data about a patient and forward it to another practitioner, system, or setting to support the continuity of care. The primary use case for the CCD is to provide a snapshot in time containing the pertinent clinical, demographic, and administrative data for a specific patient . More specific use cases, such as a Discharge Summary or Progress Note, are available as alternative documents in this guide.</body>
      </ownedComment>
      <ownedRule xmi:id="_uvccEIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsTemplateId" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uvccEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.1.2')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uvhUkIokEeSkH97cUQxLGA" name="ContinuityOfCareDocumentCodeP" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uvhUkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uveRQIokEeSkH97cUQxLGA" name="ContinuityOfCareDocumentCode" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uve4UIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '34133-9' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uvjw0IokEeSkH97cUQxLGA" name="ContinuityOfCareDocumentLanguageCode" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uvjw0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.languageCode.oclIsUndefined() or self.languageCode.isNullFlavorUndefined()) implies (not self.languageCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vNwvwIokEeSkH97cUQxLGA" name="ContinuityOfCareDocumentDocumentationOf" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vNwvwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->one(documentationOf : cda::DocumentationOf | not documentationOf.oclIsUndefined() and documentationOf.oclIsKindOf(cda::DocumentationOf))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vNx94YokEeSkH97cUQxLGA" name="ContinuityOfCareDocumentAuthor" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vNx94ookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->exists(author : cda::Author | not author.oclIsUndefined() and author.oclIsKindOf(cda::Author))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vNzzEIokEeSkH97cUQxLGA" name="ContinuityOfCareDocumentAllergiesSection" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vNzzEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vN1BMIokEeSkH97cUQxLGA" name="ContinuityOfCareDocumentMedicationsSection" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vN1BMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vN2PUIokEeSkH97cUQxLGA" name="ContinuityOfCareDocumentProblemSection" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vN2PUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vN3dcIokEeSkH97cUQxLGA" name="ContinuityOfCareDocumentProceduresSection" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vN3dcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vN4rkIokEeSkH97cUQxLGA" name="ContinuityOfCareDocumentResultsSection" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vN4rkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ResultsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vN55sIokEeSkH97cUQxLGA" name="ContinuityOfCareDocumentAdvanceDirectivesSection" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vN55sYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AdvanceDirectivesSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vN7H0IokEeSkH97cUQxLGA" name="ContinuityOfCareDocumentEncountersSection" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vN7H0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::EncountersSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vN8V8IokEeSkH97cUQxLGA" name="ContinuityOfCareDocumentFamilyHistorySection" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vN8V8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::FamilyHistorySection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vN9kEIokEeSkH97cUQxLGA" name="ContinuityOfCareDocumentFunctionalStatusSection" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vN9kEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::FunctionalStatusSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vN-yMIokEeSkH97cUQxLGA" name="ContinuityOfCareDocumentImmunizationsSectionEntriesOptional" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vN-yMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ImmunizationsSectionEntriesOptional))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vOAAUIokEeSkH97cUQxLGA" name="ContinuityOfCareDocumentMedicalEquipmentSection" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vOAAUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicalEquipmentSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vOBOcIokEeSkH97cUQxLGA" name="ContinuityOfCareDocumentPayersSection" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vOBOcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PayersSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vOCckYokEeSkH97cUQxLGA" name="ContinuityOfCareDocumentPlanOfCareSection" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vOCckookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfCareSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vOERwIokEeSkH97cUQxLGA" name="ContinuityOfCareDocumentSocialHistorySection" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vOERwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::SocialHistorySection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vOFf4IokEeSkH97cUQxLGA" name="ContinuityOfCareDocumentVitalSignsSectionEntriesOptional" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vOFf4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSectionEntriesOptional))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wOudgIokEeSkH97cUQxLGA" name="ContinuityOfCareDocumentDocumentationOfServiceEventEffectiveTimeHigh" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wOudgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null).effectiveTime->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((high.oclIsUndefined() or high.isNullFlavorUndefined()) implies (not high.oclIsUndefined()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wOvEkIokEeSkH97cUQxLGA" name="ContinuityOfCareDocumentDocumentationOfServiceEventEffectiveTimeLow" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wOvEkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null).effectiveTime->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((low.oclIsUndefined() or low.isNullFlavorUndefined()) implies (not low.oclIsUndefined()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wOwSsIokEeSkH97cUQxLGA" name="ContinuityOfCareDocumentDocumentationOfServiceEventPerformerAssignedEntityHasNationalProviderIdentifier" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wOwSsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null).performer->excluding(null).assignedEntity->excluding(null)->reject(id->exists(root='2.16.840.1.113883.4.6'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wOw5wIokEeSkH97cUQxLGA" name="ContinuityOfCareDocumentDocumentationOfServiceEventPerformerAssignedEntityCode" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wOw5wYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null).performer->excluding(null).assignedEntity->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined() and code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = code.oclAsType(datatypes::CE) in &#xD;
not value.codeSystem.oclIsUndefined() or not value.codeSystemName.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wOxg0IokEeSkH97cUQxLGA" name="ContinuityOfCareDocumentDocumentationOfServiceEventPerformerAssignedEntityId" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wOyH4IokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null).performer->excluding(null).assignedEntity->excluding(null)->reject((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wOyu8IokEeSkH97cUQxLGA" name="ContinuityOfCareDocumentDocumentationOfServiceEventPerformerTypeCode" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wOyu8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null).performer->excluding(null)->reject(typeCode=vocab::x_ServiceEventPerformer::PRF)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wOyu8ookEeSkH97cUQxLGA" name="ContinuityOfCareDocumentDocumentationOfServiceEventPerformerAssignedEntity" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wOyu84okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null).performer->excluding(null)->reject(assignedEntity->one(assignedEntity : cda::AssignedEntity | not assignedEntity.oclIsUndefined() and assignedEntity.oclIsKindOf(cda::AssignedEntity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wOzWAIokEeSkH97cUQxLGA" name="ContinuityOfCareDocumentDocumentationOfServiceEventClassCode" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wOzWAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject(isDefined('classCode') and classCode=vocab::ActClassRoot::PCPR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wOz9EIokEeSkH97cUQxLGA" name="ContinuityOfCareDocumentDocumentationOfServiceEventEffectiveTime" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wOz9EYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject((effectiveTime.oclIsUndefined() or effectiveTime.isNullFlavorUndefined()) implies (not effectiveTime.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wO0kIIokEeSkH97cUQxLGA" name="ContinuityOfCareDocumentDocumentationOfServiceEventPerformer" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wO0kIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject(performer->exists(performer : cda::Performer1 | not performer.oclIsUndefined() and performer.oclIsKindOf(cda::Performer1)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wO1LMIokEeSkH97cUQxLGA" name="ContinuityOfCareDocumentDocumentationOfServiceEvent" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wO1LMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null)->reject(serviceEvent->one(serviceEvent : cda::ServiceEvent | not serviceEvent.oclIsUndefined() and serviceEvent.oclIsKindOf(cda::ServiceEvent)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wO2ZUIokEeSkH97cUQxLGA" name="ContinuityOfCareDocumentAuthorAssignedAuthorHasAssignedPersonOrRepresentedOrganization" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wO2ZUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->excluding(null).assignedAuthor->excluding(null)->reject((not assignedPerson.oclIsUndefined()) or (not representedOrganization.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wO2ZUookEeSkH97cUQxLGA" name="ContinuityOfCareDocumentAuthorAssignedAuthorHasRepresentOrganization" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wO2ZU4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->excluding(null).assignedAuthor->excluding(null)->reject((not representedOrganization.oclIsUndefined() and assignedPerson.oclIsUndefined() and assignedAuthoringDevice.oclIsUndefined()) implies id->exists(id | not id.isNullFlavorUndefined() and id.nullFlavor = vocab::NullFlavor::NA))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wO3AYIokEeSkH97cUQxLGA" name="ContinuityOfCareDocumentAuthorAssignedAuthor" constrainedElement="_2IJb0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wO3AYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->excluding(null)->reject(assignedAuthor->one(assignedAuthor : cda::AssignedAuthor | not assignedAuthor.oclIsUndefined() and assignedAuthor.oclIsKindOf(cda::AssignedAuthor)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2PQJchSVEeGGzu7fmW9pXw" general="_2DNRcBSVEeGGzu7fmW9pXw"/>
      <ownedOperation xmi:id="_vN0aIIokEeSkH97cUQxLGA" name="getAllergiesSection" bodyCondition="_vN0aI4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vN0aI4okEeSkH97cUQxLGA" name="body" constrainedElement="_vN0aIIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vN0aJIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSection))->asSequence()->any(true).oclAsType(consol::AllergiesSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vN0aIYokEeSkH97cUQxLGA" type="_2LMIwBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vN0aIookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vN1oQIokEeSkH97cUQxLGA" name="getMedicationsSection" bodyCondition="_vN1oQ4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vN1oQ4okEeSkH97cUQxLGA" name="body" constrainedElement="_vN1oQIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vN1oRIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsSection))->asSequence()->any(true).oclAsType(consol::MedicationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vN1oQYokEeSkH97cUQxLGA" type="_2NIpgBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vN1oQookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vN22YIokEeSkH97cUQxLGA" name="getProblemSection" bodyCondition="_vN22Y4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vN22Y4okEeSkH97cUQxLGA" name="body" constrainedElement="_vN22YIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vN22ZIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSection))->asSequence()->any(true).oclAsType(consol::ProblemSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vN22YYokEeSkH97cUQxLGA" type="_2LSPYBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vN22YookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vN4EgIokEeSkH97cUQxLGA" name="getProceduresSection" bodyCondition="_vN4Eg4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vN4Eg4okEeSkH97cUQxLGA" name="body" constrainedElement="_vN4EgIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vN4EhIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSection))->asSequence()->any(true).oclAsType(consol::ProceduresSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vN4EgYokEeSkH97cUQxLGA" type="_2OAzQRSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vN4EgookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vN5SoIokEeSkH97cUQxLGA" name="getResultsSection" bodyCondition="_vN5So4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vN5So4okEeSkH97cUQxLGA" name="body" constrainedElement="_vN5SoIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vN5SpIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ResultsSection))->asSequence()->any(true).oclAsType(consol::ResultsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vN5SoYokEeSkH97cUQxLGA" type="_2Js7AxSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vN5SoookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vN6gwIokEeSkH97cUQxLGA" name="getAdvanceDirectivesSection" bodyCondition="_vN6gw4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vN6gw4okEeSkH97cUQxLGA" name="body" constrainedElement="_vN6gwIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vN6gxIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AdvanceDirectivesSection))->asSequence()->any(true).oclAsType(consol::AdvanceDirectivesSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vN6gwYokEeSkH97cUQxLGA" type="_2KgzUBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vN6gwookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vN7u4IokEeSkH97cUQxLGA" name="getEncountersSection" bodyCondition="_vN7u44okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vN7u44okEeSkH97cUQxLGA" name="body" constrainedElement="_vN7u4IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vN7u5IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::EncountersSection))->asSequence()->any(true).oclAsType(consol::EncountersSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vN7u4YokEeSkH97cUQxLGA" type="_2LWg0BSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vN7u4ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vN89AIokEeSkH97cUQxLGA" name="getFamilyHistorySection" bodyCondition="_vN89A4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vN89A4okEeSkH97cUQxLGA" name="body" constrainedElement="_vN89AIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vN89BIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::FamilyHistorySection))->asSequence()->any(true).oclAsType(consol::FamilyHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vN89AYokEeSkH97cUQxLGA" type="_2IWQIxSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vN89AookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vN-LIIokEeSkH97cUQxLGA" name="getFunctionalStatusSection" bodyCondition="_vN-LI4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vN-LI4okEeSkH97cUQxLGA" name="body" constrainedElement="_vN-LIIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vN-LJIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::FunctionalStatusSection))->asSequence()->any(true).oclAsType(consol::FunctionalStatusSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vN-LIYokEeSkH97cUQxLGA" type="_2KKOBhSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vN-LIookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vN_ZQIokEeSkH97cUQxLGA" name="getImmunizationsSectionEntriesOptional" bodyCondition="_vN_ZQ4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vN_ZQ4okEeSkH97cUQxLGA" name="body" constrainedElement="_vN_ZQIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vN_ZRIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ImmunizationsSectionEntriesOptional))->asSequence()->any(true).oclAsType(consol::ImmunizationsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vN_ZQYokEeSkH97cUQxLGA" type="_EuPloBVeEeGQCvUGzi1kDQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vN_ZQookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vOAnYIokEeSkH97cUQxLGA" name="getMedicalEquipmentSection" bodyCondition="_vOAnY4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vOAnY4okEeSkH97cUQxLGA" name="body" constrainedElement="_vOAnYIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vOAnZIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicalEquipmentSection))->asSequence()->any(true).oclAsType(consol::MedicalEquipmentSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vOAnYYokEeSkH97cUQxLGA" type="_2KEucBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vOAnYookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vOB1gIokEeSkH97cUQxLGA" name="getPayersSection" bodyCondition="_vOB1g4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vOB1g4okEeSkH97cUQxLGA" name="body" constrainedElement="_vOB1gIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vOCckIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PayersSection))->asSequence()->any(true).oclAsType(consol::PayersSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vOB1gYokEeSkH97cUQxLGA" type="_2MV_UBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vOB1gookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vODqsIokEeSkH97cUQxLGA" name="getPlanOfCareSection" bodyCondition="_vODqs4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vODqs4okEeSkH97cUQxLGA" name="body" constrainedElement="_vODqsIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vODqtIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfCareSection))->asSequence()->any(true).oclAsType(consol::PlanOfCareSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vODqsYokEeSkH97cUQxLGA" type="_2NP-QxSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vODqsookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vOE40IokEeSkH97cUQxLGA" name="getSocialHistorySection" bodyCondition="_vOE404okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vOE404okEeSkH97cUQxLGA" name="body" constrainedElement="_vOE40IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vOE41IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::SocialHistorySection))->asSequence()->any(true).oclAsType(consol::SocialHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vOE40YokEeSkH97cUQxLGA" type="_2JKvgBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vOE40ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vOGG8IokEeSkH97cUQxLGA" name="getVitalSignsSectionEntriesOptional" bodyCondition="_vOGG84okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vOGG84okEeSkH97cUQxLGA" name="body" constrainedElement="_vOGG8IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vOGG9IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSectionEntriesOptional))->asSequence()->any(true).oclAsType(consol::VitalSignsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vOGG8YokEeSkH97cUQxLGA" type="_bRH8sBVeEeGQCvUGzi1kDQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vOGG8ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2IWQIxSVEeGGzu7fmW9pXw" name="FamilyHistorySection">
      <ownedComment xmi:id="_2JJhYBSVEeGGzu7fmW9pXw" annotatedElement="_2IWQIxSVEeGGzu7fmW9pXw">
        <body>This section contains data defining the patient's genetic relatives in terms of possible or relevant health risk factors that have a potential impact on the patient's healthcare risk profile.</body>
      </ownedComment>
      <ownedRule xmi:id="_uv2EsIokEeSkH97cUQxLGA" name="FamilyHistorySectionTemplateId" constrainedElement="_2IWQIxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uv2EsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.15')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uv354IokEeSkH97cUQxLGA" name="FamilyHistorySectionCode" constrainedElement="_2IWQIxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uv354YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '10157-6' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uv6WIIokEeSkH97cUQxLGA" name="FamilyHistorySectionCodeP" constrainedElement="_2IWQIxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uv6WIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uv8yYIokEeSkH97cUQxLGA" name="FamilyHistorySectionTitle" constrainedElement="_2IWQIxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uv8yYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uv-AgIokEeSkH97cUQxLGA" name="FamilyHistorySectionText" constrainedElement="_2IWQIxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uv-AgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uv_OoIokEeSkH97cUQxLGA" name="FamilyHistorySectionFamilyHistory" constrainedElement="_2IWQIxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uv_OoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(consol::FamilyHistoryOrganizer))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2JJhYhSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_uwAcwIokEeSkH97cUQxLGA" name="getFamilyHistories" bodyCondition="_uwAcw4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_uwAcw4okEeSkH97cUQxLGA" name="body" constrainedElement="_uwAcwIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_uwAcxIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getOrganizers()->select(organizer : cda::Organizer | not organizer.oclIsUndefined() and organizer.oclIsKindOf(consol::FamilyHistoryOrganizer)).oclAsType(consol::FamilyHistoryOrganizer)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_uwAcwYokEeSkH97cUQxLGA" type="_2IbIoBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uwAcwookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2IbIoBSVEeGGzu7fmW9pXw" name="FamilyHistoryOrganizer">
      <ownedComment xmi:id="_nxLqwCEhEeGCQOQgxKvcXw">
        <body>The Family History Oranizer associates a set of observations with a family member. For example, the Family History Organizer can group a set of observations about the patient's father.</body>
      </ownedComment>
      <ownedRule xmi:id="_uwAcxYokEeSkH97cUQxLGA" name="FamilyHistoryOrganizerTemplateId" constrainedElement="_2IbIoBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uwBD0IokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.45')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uwCR8IokEeSkH97cUQxLGA" name="FamilyHistoryOrganizerClassCode" constrainedElement="_2IbIoBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uwCR8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryOrganizer::CLUSTER</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uwDgEIokEeSkH97cUQxLGA" name="FamilyHistoryOrganizerMoodCode" constrainedElement="_2IbIoBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uwDgEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::ActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uwHxgIokEeSkH97cUQxLGA" name="FamilyHistoryOrganizerStatusCodeP" constrainedElement="_2IbIoBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uwIYkIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uwFVQIokEeSkH97cUQxLGA" name="FamilyHistoryOrganizerStatusCode" constrainedElement="_2IbIoBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uwFVQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uw1jMIokEeSkH97cUQxLGA" name="FamilyHistoryOrganizerFamilyHistoryObservation" constrainedElement="_2IbIoBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uw1jMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.component->exists(component : cda::Component4 | not component.observation.oclIsUndefined() and component.observation.oclIsKindOf(consol::FamilyHistoryObservation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vRcV4IokEeSkH97cUQxLGA" name="FamilyHistoryOrganizerSubject" constrainedElement="_2IbIoBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vRcV4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.subject->one(subject : cda::Subject | not subject.oclIsUndefined() and subject.oclIsKindOf(cda::Subject))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wO8f8IokEeSkH97cUQxLGA" name="FamilyHistoryOrganizerSubjectRelatedSubjectSubjectPersonAdministrativeGenderCode" constrainedElement="_2IbIoBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wO8f8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.subject->excluding(null).relatedSubject->excluding(null).subject->excluding(null)->reject((administrativeGenderCode.oclIsUndefined() or administrativeGenderCode.isNullFlavorUndefined()) implies (not administrativeGenderCode.oclIsUndefined() and administrativeGenderCode.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = administrativeGenderCode.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.5.1' and (value.code = 'F' or value.code = 'M' or value.code = 'UN')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wO8f8ookEeSkH97cUQxLGA" name="FamilyHistoryOrganizerSubjectRelatedSubjectSubjectPersonAdministrativeGenderCodeP" constrainedElement="_2IbIoBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wO8f84okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.subject->excluding(null).relatedSubject->excluding(null).subject->excluding(null)->reject((administrativeGenderCode.oclIsUndefined() or administrativeGenderCode.isNullFlavorUndefined()) implies (not administrativeGenderCode.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wO9HAIokEeSkH97cUQxLGA" name="FamilyHistoryOrganizerSubjectRelatedSubjectSubjectPersonBirthTime" constrainedElement="_2IbIoBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wO9HAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.subject->excluding(null).relatedSubject->excluding(null).subject->excluding(null)->reject((birthTime.oclIsUndefined() or birthTime.isNullFlavorUndefined()) implies (not birthTime.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wO9uEIokEeSkH97cUQxLGA" name="FamilyHistoryOrganizerSubjectRelatedSubjectSubjectPersonSDTCDeceasedInd" constrainedElement="_2IbIoBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wO9uEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.subject->excluding(null).relatedSubject->excluding(null).subject->excluding(null)->reject((sDTCDeceasedInd.oclIsUndefined() or sDTCDeceasedInd.isNullFlavorUndefined()) implies (not sDTCDeceasedInd.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wO9uEookEeSkH97cUQxLGA" name="FamilyHistoryOrganizerSubjectRelatedSubjectSubjectPersonSDTCDeceasedTime" constrainedElement="_2IbIoBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wO9uE4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.subject->excluding(null).relatedSubject->excluding(null).subject->excluding(null)->reject((sDTCDeceasedTime.oclIsUndefined() or sDTCDeceasedTime.isNullFlavorUndefined()) implies (not sDTCDeceasedTime.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wO-VIIokEeSkH97cUQxLGA" name="FamilyHistoryOrganizerSubjectRelatedSubjectSubjectPersonSDTCId" constrainedElement="_2IbIoBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wO-VIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.subject->excluding(null).relatedSubject->excluding(null).subject->excluding(null)->reject((sDTCId->isEmpty() or sDTCId->exists(element | element.isNullFlavorUndefined())) implies (not sDTCId->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wO-VIookEeSkH97cUQxLGA" name="FamilyHistoryOrganizerSubjectRelatedSubjectClassCode" constrainedElement="_2IbIoBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wO-VI4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.subject->excluding(null).relatedSubject->excluding(null)->reject(isDefined('classCode') and classCode=vocab::x_DocumentSubject::PRS)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wO-8MIokEeSkH97cUQxLGA" name="FamilyHistoryOrganizerSubjectRelatedSubjectCode" constrainedElement="_2IbIoBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wO-8MYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.subject->excluding(null).relatedSubject->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined() and code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = code.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.5.111' and (value.code = 'ADOPT' or value.code = 'AUNT' or value.code = 'CHILD' or value.code = 'CHLDINLAW' or value.code = 'COUSN' or value.code = 'DOMPART' or value.code = 'FAMMEMB' or value.code = 'CHLDFOST' or value.code = 'GRNDCHILD' or value.code = 'GPARNT' or value.code = 'GRPRN' or value.code = 'GGRPRN' or value.code = 'HSIB' or value.code = 'MAUNT' or value.code = 'MCOUSN' or value.code = 'MGRPRN' or value.code = 'MGGRPRN' or value.code = 'MUNCLE' or value.code = 'NCHILD' or value.code = 'NPRN' or value.code = 'NSIB' or value.code = 'NIENEPH' or value.code = 'PRN' or value.code = 'PRNINLAW' or value.code = 'PAUNT' or value.code = 'PCOUSN' or value.code = 'PGRPRN' or value.code = 'PGGRPRN' or value.code = 'PUNCLE' or value.code = 'SIB' or value.code = 'SIBINLAW' or value.code = 'SIGOTHR' or value.code = 'SPS' or value.code = 'STEP' or value.code = 'STPPRN' or value.code = 'STPSIB' or value.code = 'UNCLE')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wO_jQIokEeSkH97cUQxLGA" name="FamilyHistoryOrganizerSubjectRelatedSubjectCodeP" constrainedElement="_2IbIoBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wO_jQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.subject->excluding(null).relatedSubject->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wO_jQookEeSkH97cUQxLGA" name="FamilyHistoryOrganizerSubjectRelatedSubjectSubject" constrainedElement="_2IbIoBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wO_jQ4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.subject->excluding(null).relatedSubject->excluding(null)->reject(subject->one(subject : cda::SubjectPerson | not subject.oclIsUndefined() and subject.oclIsKindOf(cda::SubjectPerson)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wPAKUIokEeSkH97cUQxLGA" name="FamilyHistoryOrganizerSubjectRelatedSubject" constrainedElement="_2IbIoBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wPAKUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.subject->excluding(null)->reject(relatedSubject->one(relatedSubject : cda::RelatedSubject | not relatedSubject.oclIsUndefined() and relatedSubject.oclIsKindOf(cda::RelatedSubject)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2JHFIBSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_B6aX4EbvEd6besF9iFIJkQ"/>
      </generalization>
      <ownedOperation xmi:id="_uw2KQIokEeSkH97cUQxLGA" name="getFamilyHistoryObservations" bodyCondition="_uw2KQ4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_uw2KQ4okEeSkH97cUQxLGA" name="body" constrainedElement="_uw2KQIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_uw2KRIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::FamilyHistoryObservation)).oclAsType(consol::FamilyHistoryObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_uw2KQYokEeSkH97cUQxLGA" type="_2IpyIxSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uw2KQookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2IpyIxSVEeGGzu7fmW9pXw" name="FamilyHistoryObservation">
      <ownedComment xmi:id="_nCE7QCHgEeGFLIX-2_sWzA">
        <body>Family History Observations related to a particular family member are contained within a Family History Organizer. The effectiveTime in the Family History Observation is the biologically or clinically relevant time of the observation. The biologically or clinically relevant time is the time at which the observation holds (is effective) for the family member (the subject of the observation).</body>
      </ownedComment>
      <ownedRule xmi:id="_web2ECHiEeGFLIX-2_sWzA" name="FamilyHistoryObservationAgeObservationInversion" constrainedElement="_2IpyIxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_663_wCHiEeGFLIX-2_sWzA">
          <language>OCL</language>
          <body>self.entryRelationship->forAll(ent : cda::EntryRelationship | ent.observation.oclIsTypeOf(consol::AgeObservation) implies ent.inversionInd=true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uwdvwIokEeSkH97cUQxLGA" name="FamilyHistoryObservationTemplateId" constrainedElement="_2IpyIxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uwdvwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.46')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uwgMAIokEeSkH97cUQxLGA" name="FamilyHistoryObservationClassCode" constrainedElement="_2IpyIxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uwgMAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uwhaIIokEeSkH97cUQxLGA" name="FamilyHistoryObservationMoodCode" constrainedElement="_2IpyIxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uwhaIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uwioQIokEeSkH97cUQxLGA" name="FamilyHistoryObservationId" constrainedElement="_2IpyIxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uwioQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uwngwIokEeSkH97cUQxLGA" name="FamilyHistoryObservationCodeP" constrainedElement="_2IpyIxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uwoH0IokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uwlEgIokEeSkH97cUQxLGA" name="FamilyHistoryObservationCode" constrainedElement="_2IpyIxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uwlEgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.96' and (value.code = '404684003' or value.code = '409586006' or value.code = '282291009' or value.code = '64572001' or value.code = '248536006' or value.code = '418799008' or value.code = '55607006' or value.code = '373930000'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uwrLIIokEeSkH97cUQxLGA" name="FamilyHistoryObservationStatusCode" constrainedElement="_2IpyIxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uwrLIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uwtnYIokEeSkH97cUQxLGA" name="FamilyHistoryObservationStatusCodeP" constrainedElement="_2IpyIxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uwtnYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uwvckIokEeSkH97cUQxLGA" name="FamilyHistoryObservationEffectiveTime" constrainedElement="_2IpyIxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uwvckYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uwx40IokEeSkH97cUQxLGA" name="FamilyHistoryObservationValue" constrainedElement="_2IpyIxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uwx40YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.96' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uw0VEIokEeSkH97cUQxLGA" name="FamilyHistoryObservationAgeObservation" constrainedElement="_2IpyIxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uw0VEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::AgeObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u-bTQIokEeSkH97cUQxLGA" name="FamilyHistoryObservationFamilyHistoryDeathObservation" constrainedElement="_2IpyIxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u-bTQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::FamilyHistoryDeathObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::CAUS)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2I5CsRSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_uw08IIokEeSkH97cUQxLGA" name="getAgeObservation" bodyCondition="_uw08I4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_uw08I4okEeSkH97cUQxLGA" name="body" constrainedElement="_uw08IIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_uw08JIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::AgeObservation))->asSequence()->any(true).oclAsType(consol::AgeObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_uw08IYokEeSkH97cUQxLGA" type="_2EqqABSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uw08IookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_u-b6UIokEeSkH97cUQxLGA" name="getFamilyHistoryDeathObservation" bodyCondition="_u-b6U4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_u-b6U4okEeSkH97cUQxLGA" name="body" constrainedElement="_u-b6UIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_u-b6VIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::FamilyHistoryDeathObservation))->asSequence()->any(true).oclAsType(consol::FamilyHistoryDeathObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_u-b6UYokEeSkH97cUQxLGA" type="_2SC-sBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_u-b6UookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2JKvgBSVEeGGzu7fmW9pXw" name="SocialHistorySection">
      <ownedComment xmi:id="_LJ4sMDyWEeGOm9opnDhYAQ">
        <body>This section contains data defining the patient's occupational, personal (e.g. lifestyle), social, and environmental history and health risk factors, as well as administrative data such as marital status, race, ethnicity and religious affiliation. Social history can have significant influence on a patient's physical, psychological and emotional health and wellbeing so should be considered in the development of a complete record.</body>
      </ownedComment>
      <ownedRule xmi:id="_uw2xUIokEeSkH97cUQxLGA" name="SocialHistorySectionTemplateId" constrainedElement="_2JKvgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uw2xUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.17')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uw4mgIokEeSkH97cUQxLGA" name="SocialHistorySectionCode" constrainedElement="_2JKvgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uw5NkIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '29762-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uw7CwIokEeSkH97cUQxLGA" name="SocialHistorySectionCodeP" constrainedElement="_2JKvgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uw7CwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uw9fAIokEeSkH97cUQxLGA" name="SocialHistorySectionTitle" constrainedElement="_2JKvgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uw9fAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uw_UMIokEeSkH97cUQxLGA" name="SocialHistorySectionText" constrainedElement="_2JKvgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uw_UMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uxBJYIokEeSkH97cUQxLGA" name="SocialHistorySectionSocialHistoryObservation" constrainedElement="_2JKvgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uxBJYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::SocialHistoryObservation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u-6bcIokEeSkH97cUQxLGA" name="SocialHistorySectionPregnancyObservation" constrainedElement="_2JKvgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u-6bcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::PregnancyObservation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vSv9cIokEeSkH97cUQxLGA" name="SocialHistorySectionSmokingStatusObservation" constrainedElement="_2JKvgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vSv9cYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::SmokingStatusObservation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vSxLkYokEeSkH97cUQxLGA" name="SocialHistorySectionTobaccoUse" constrainedElement="_2JKvgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vSxLkookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::TobaccoUse))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2Jrs4hSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_uxBwcIokEeSkH97cUQxLGA" name="getSocialHistoryObservations" bodyCondition="_uxBwc4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_uxBwc4okEeSkH97cUQxLGA" name="body" constrainedElement="_uxBwcIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_uxBwdIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::SocialHistoryObservation)).oclAsType(consol::SocialHistoryObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_uxBwcYokEeSkH97cUQxLGA" type="_2JOZ4BSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uxBwcookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_u-7CgIokEeSkH97cUQxLGA" name="getPregnancyObservations" bodyCondition="_u-7pkYokEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_u-7pkYokEeSkH97cUQxLGA" name="body" constrainedElement="_u-7CgIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_u-7pkookEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::PregnancyObservation)).oclAsType(consol::PregnancyObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_u-7CgYokEeSkH97cUQxLGA" type="_2N6soBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_u-7pkIokEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vSwkgIokEeSkH97cUQxLGA" name="getSmokingStatusObservations" bodyCondition="_vSwkg4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vSwkg4okEeSkH97cUQxLGA" name="body" constrainedElement="_vSwkgIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vSxLkIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::SmokingStatusObservation)).oclAsType(consol::SmokingStatusObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vSwkgYokEeSkH97cUQxLGA" type="_RYJj0OWQEeGKmvzED_He2w" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vSwkgookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vSxyoIokEeSkH97cUQxLGA" name="getTobaccoUses" bodyCondition="_vSxyo4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vSxyo4okEeSkH97cUQxLGA" name="body" constrainedElement="_vSxyoIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vSyZsIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::TobaccoUse)).oclAsType(consol::TobaccoUse)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vSxyoYokEeSkH97cUQxLGA" type="_gIH_QOWQEeGKmvzED_He2w" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vSxyoookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2JOZ4BSVEeGGzu7fmW9pXw" name="SocialHistoryObservation">
      <ownedComment xmi:id="_fG0UsDyWEeGOm9opnDhYAQ">
        <body>This Social History Observation defines the patient's occupational, personal (e.g., lifestyle), social, and environmental history and health risk factors, as well as administrative data such as marital status, race, ethnicity, and religious affiliation.</body>
      </ownedComment>
      <ownedRule xmi:id="_L9YKgBtsEeGT89b80j3MTg" name="SocialHistoryObservationOriginalText" constrainedElement="_2JOZ4BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nzLzwBtsEeGT89b80j3MTg">
          <language>OCL</language>
          <body>not self.code.oclIsUndefined() implies not self.code.originalText.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_4G8WIBtsEeGT89b80j3MTg" name="SocialHistoryObservationReference" constrainedElement="_2JOZ4BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_79Cd8BtsEeGT89b80j3MTg">
          <language>OCL</language>
          <body>not self.code.originalText.oclIsUndefined() implies not self.code.originalText.reference.value.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_O-ANcBttEeGT89b80j3MTg" name="SocialHistoryObservationReferenceValue" constrainedElement="_2JOZ4BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aUIYMBttEeGT89b80j3MTg">
          <language>OCL</language>
          <body>not self.code.originalText.reference.value.oclIsUndefined() implies not self.getSection().text.getText(self.code.originalText.reference.value.substring(2, self.code.originalText.reference.value.size())).oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uxCXgIokEeSkH97cUQxLGA" name="SocialHistoryObservationTemplateId" constrainedElement="_2JOZ4BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uxCXgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.38')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uxGB4IokEeSkH97cUQxLGA" name="SocialHistoryObservationClassCode" constrainedElement="_2JOZ4BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uxGB4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uxHQAIokEeSkH97cUQxLGA" name="SocialHistoryObservationMoodCode" constrainedElement="_2JOZ4BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uxHQAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uxIeIIokEeSkH97cUQxLGA" name="SocialHistoryObservationId" constrainedElement="_2JOZ4BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uxIeIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uxMvkIokEeSkH97cUQxLGA" name="SocialHistoryObservationCodeP" constrainedElement="_2JOZ4BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uxMvkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uxK6YIokEeSkH97cUQxLGA" name="SocialHistoryObservationCode" constrainedElement="_2JOZ4BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uxK6YYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.96' and (value.code = '229819007' or value.code = '256235009' or value.code = '160573003' or value.code = '364393001' or value.code = '364703007' or value.code = '425400000' or value.code = '363908000' or value.code = '228272008' or value.code = '105421008' or value.code = '302160007' or value.code = '423514004' or value.code = '102487004' or value.code = '424483007' or value.code = '442133001' or value.code = '446996006'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uxPy4IokEeSkH97cUQxLGA" name="SocialHistoryObservationStatusCode" constrainedElement="_2JOZ4BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uxPy4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uxSPIIokEeSkH97cUQxLGA" name="SocialHistoryObservationValue" constrainedElement="_2JOZ4BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uxSPIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2Jii8hSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2Js7AxSVEeGGzu7fmW9pXw" name="ResultsSection">
      <ownedComment xmi:id="_XjcvMDr8EeGVevaNZNc6DA">
        <body>The Results section contains the results of observations generated by laboratories, imaging procedures, and other procedures. The scope includes observations such as hematology, chemistry, serology, virology, toxicology, microbiology, plain x-ray, ultrasound, CT, MRI, angiography, echocardiography, nuclear medicine, pathology, and procedure observations. The section often includes notable results such as abnormal values or relevant trends, and could contain all results for the period of time being documented.&#xD;
Laboratory results are typically generated by laboratories providing analytic services in areas such as chemistry, hematology, serology, histology, cytology, anatomic pathology, microbiology, and/or virology. These observations are based on analysis of specimens obtained from the patient and submitted to the laboratory.&#xD;
Imaging results are typically generated by a clinician reviewing the output of an imaging procedure, such as where a cardiologist reports the left ventricular ejection fraction based on the review of a cardiac echocardiogram.&#xD;
Procedure results are typically generated by a clinician to provide more granular information about component observations made during  a procedure, such as where a gastroenterologist reports the size of a polyp observed during a colonoscopy.</body>
      </ownedComment>
      <ownedRule xmi:id="_uxTdQYokEeSkH97cUQxLGA" name="ResultsSectionEntriesOptionalTemplateId" constrainedElement="_2Js7AxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uxUEUIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.3.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uxYVwIokEeSkH97cUQxLGA" name="ResultsSectionEntriesOptionalCodeP" constrainedElement="_2Js7AxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uxYVwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uxV5gIokEeSkH97cUQxLGA" name="ResultsSectionEntriesOptionalCode" constrainedElement="_2Js7AxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uxV5gYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '30954-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uxbZEIokEeSkH97cUQxLGA" name="ResultsSectionEntriesOptionalTitle" constrainedElement="_2Js7AxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uxbZEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uxdOQIokEeSkH97cUQxLGA" name="ResultsSectionText" constrainedElement="_2Js7AxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uxdOQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vCpr8IokEeSkH97cUQxLGA" name="ResultsSectionResultOrganizer" constrainedElement="_2Js7AxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vCpr8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(consol::ResultOrganizer))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_ksO6UBVgEeGQCvUGzi1kDQ" general="_xGqiEBVdEeGQCvUGzi1kDQ">
        <ownedComment xmi:id="_IxQaoHavEeGK39q3kclbsA">
          <body>couple</body>
        </ownedComment>
      </generalization>
      <ownedOperation xmi:id="_vCqTAIokEeSkH97cUQxLGA" name="getConsolResultOrganizers" bodyCondition="_vCqTA4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vCqTA4okEeSkH97cUQxLGA" name="body" constrainedElement="_vCqTAIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vCqTBIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getOrganizers()->select(organizer : cda::Organizer | not organizer.oclIsUndefined() and organizer.oclIsKindOf(consol::ResultOrganizer)).oclAsType(consol::ResultOrganizer)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vCqTAYokEeSkH97cUQxLGA" type="_2JxzgBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vCqTAookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2JxzgBSVEeGGzu7fmW9pXw" name="ResultOrganizer">
      <ownedComment xmi:id="_MrZPsCvWEeGz1sWhj323cg">
        <body>&lt;p>&#xD;
This clinical statement identifies set of result observations. It contains information applicable to all of the contained result observations. Result type codes categorize a result into one of several commonly accepted values (e.g., &quot;Hematology&quot;, &quot;Chemistry&quot;, &quot;Nuclear Medicine&quot;). These values are often implicit in the Organizer/code (e.g., an Organizer/code of &quot;complete blood count&quot; implies a ResultTypeCode of &quot;Hematology&quot;). This template requires Organizer/code to include a ResultTypeCode either directly or as a translation of a code from some other code system.&#xD;
&lt;/p>&#xD;
&#xD;
&lt;p>&#xD;
An appropriate nullFlavor can be used when the organizer/code or organizer/id is unknown.&#xD;
&lt;/p>&#xD;
&#xD;
&lt;p>&#xD;
If any Results Observation within the organizer has a statusCode of 'active', the Result Organizer must also have as statusCode of 'active.&#xD;
&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="_2J_O4BSVEeGGzu7fmW9pXw" name="ResultOrganizerCodeValue">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2J_O4RSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.code.isNullFlavorDefined() or self.code.codeSystem = '2.16.840.1.113883.6.1' or self.code.codeSystem = '2.16.840.1.113883.6.96' or self.code.codeSystem = '2.16.840.1.113883.6.12'</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_1dxCgBtuEeG4C_iCHrZZ9w" name="ResultOrganizerClassCodeValue" constrainedElement="_2JxzgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="__kVC0BtuEeG4C_iCHrZZ9w">
          <language>OCL</language>
          <body>self.isClassCodeDefined() and (self.classCode = vocab::x_ActClassDocumentEntryOrganizer::CLUSTER or self.classCode = vocab::x_ActClassDocumentEntryOrganizer::BATTERY)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uxecYIokEeSkH97cUQxLGA" name="ResultOrganizerTemplateId" constrainedElement="_2JxzgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uxecYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uxg4oIokEeSkH97cUQxLGA" name="ResultOrganizerClassCode" constrainedElement="_2JxzgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uxg4oYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>isDefined('classCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uxit0IokEeSkH97cUQxLGA" name="ResultOrganizerMoodCode" constrainedElement="_2JxzgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uxit0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::ActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uxjU4IokEeSkH97cUQxLGA" name="ResultOrganizerId" constrainedElement="_2JxzgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uxjU4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uxnmUIokEeSkH97cUQxLGA" name="ResultOrganizerStatusCodeP" constrainedElement="_2JxzgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uxoNYIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uxlKEIokEeSkH97cUQxLGA" name="ResultOrganizerStatusCode" constrainedElement="_2JxzgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uxlxIIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'aborted' or value.code = 'active' or value.code = 'cancelled' or value.code = 'completed' or value.code = 'held' or value.code = 'suspended')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uxtF4IokEeSkH97cUQxLGA" name="ResultOrganizerCode" constrainedElement="_2JxzgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uxtF4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uxuUAIokEeSkH97cUQxLGA" name="ResultOrganizerResultObservation" constrainedElement="_2JxzgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uxuUAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.component->exists(component : cda::Component4 | not component.observation.oclIsUndefined() and component.observation.oclIsKindOf(consol::ResultObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2KCSNBSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_B6aX4EbvEd6besF9iFIJkQ"/>
      </generalization>
      <ownedOperation xmi:id="_uxviIIokEeSkH97cUQxLGA" name="getResultObservations" bodyCondition="_uxviI4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_uxviI4okEeSkH97cUQxLGA" name="body" constrainedElement="_uxviIIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_uxviJIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ResultObservation)).oclAsType(consol::ResultObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_uxviIYokEeSkH97cUQxLGA" type="_2J1d4BSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uxviIookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2J1d4BSVEeGGzu7fmW9pXw" name="ResultObservation">
      <ownedComment xmi:id="_JIcp4CXiEeGmGonM_wRfcQ">
        <body>This clinical statement represents details of a lab, radiology, or other study performed on a patient.&#xD;
&#xD;
&lt;p>&#xD;
The result observation includes a statusCode to allow recording the status of an observation. If a Results Observation is not completed, the Result Organizer must include corresponding statusCode. &quot;Pending&quot; results (e.g., a test has been run but results have not been reported yet) should be represented as &quot;active&quot; ActStatus.&#xD;
&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="_tjUmsB7rEeGaOZtrEokzNQ" name="ResultObservationTextReference">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_1j5x8B7rEeGaOZtrEokzNQ">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined() implies self.text->forAll(reference->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_VTuBkOJbEeG3cO7ebC3QuA" name="ResultObservationReferenceValue" constrainedElement="_tjUmsB7rEeGaOZtrEokzNQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YA29QOJbEeG3cO7ebC3QuA">
          <language>OCL</language>
          <body>self.text->forAll(reference->size() = 1) implies self.text->forAll(reference->one(value->size() = 1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_sq16gDsOEeGVevaNZNc6DA" name="ResultObservationTextReferenceValue" constrainedElement="_tjUmsB7rEeGaOZtrEokzNQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wwPCkDsOEeGVevaNZNc6DA">
          <language>OCL</language>
          <body>not self.text.reference.value.oclIsUndefined() implies not self.getSection().text.getText(self.text.reference.value.substring(2, self.text.reference.value.size())).oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2J69cBSVEeGGzu7fmW9pXw" name="ResultObservationCodeValue">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2J69cRSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.code.isNullFlavorDefined() or self.code.codeSystem = '2.16.840.1.113883.6.1' or self.code.codeSystem = '2.16.840.1.113883.6.96'</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jXJw0B7vEeGDhvvzMMgVgQ" name="ResultObservationNoObservationRangeCode" constrainedElement="_2J1d4BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2eEXUB7vEeGDhvvzMMgVgQ">
          <language>OCL</language>
          <body>self.referenceRange->forAll(range : cda::ReferenceRange | range.observationRange.code.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_OYDHUB-4EeGZsIzHpWxp_Q" name="ResultObservationAuthorMultiplicity" constrainedElement="_2J1d4BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_UtV1cB-4EeGZsIzHpWxp_Q">
          <language>OCL</language>
          <body>self.author->size()&lt;2</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uxwJMIokEeSkH97cUQxLGA" name="ResultObservationTemplateId" constrainedElement="_2J1d4BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uxwJMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.2')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uyBO8IokEeSkH97cUQxLGA" name="ResultObservationClassCode" constrainedElement="_2J1d4BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uyBO8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uyCdEIokEeSkH97cUQxLGA" name="ResultObservationMoodCode" constrainedElement="_2J1d4BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uyCdEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uyDrMIokEeSkH97cUQxLGA" name="ResultObservationId" constrainedElement="_2J1d4BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uyDrMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uyE5UIokEeSkH97cUQxLGA" name="ResultObservationCode" constrainedElement="_2J1d4BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uyE5UYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uyGHcIokEeSkH97cUQxLGA" name="ResultObservationText" constrainedElement="_2J1d4BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uyGHcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.text.oclIsUndefined() or self.text.isNullFlavorUndefined()) implies (not self.text.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uyIjsIokEeSkH97cUQxLGA" name="ResultObservationStatusCode" constrainedElement="_2J1d4BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uyIjsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'aborted' or value.code = 'active' or value.code = 'cancelled' or value.code = 'completed' or value.code = 'held' or value.code = 'suspended')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uyKY4IokEeSkH97cUQxLGA" name="ResultObservationStatusCodeP" constrainedElement="_2J1d4BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uyK_8IokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uyM1IIokEeSkH97cUQxLGA" name="ResultObservationEffectiveTime" constrainedElement="_2J1d4BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uyM1IYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uyODQIokEeSkH97cUQxLGA" name="ResultObservationValue" constrainedElement="_2J1d4BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uyODQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uyPRYIokEeSkH97cUQxLGA" name="ResultObservationInterpretationCode" constrainedElement="_2J1d4BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uyPRYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.interpretationCode->isEmpty() or self.interpretationCode->exists(element | element.isNullFlavorUndefined())) implies (not self.interpretationCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uyQfgIokEeSkH97cUQxLGA" name="ResultObservationMethodCode" constrainedElement="_2J1d4BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uyQfgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.methodCode->isEmpty() or self.methodCode->exists(element | element.isNullFlavorUndefined())) implies (not self.methodCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uySUsIokEeSkH97cUQxLGA" name="ResultObservationTargetSiteCode" constrainedElement="_2J1d4BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uySUsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.targetSiteCode->forAll(element | element.oclIsTypeOf(datatypes::CE)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2J-AwRSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2KEucBSVEeGGzu7fmW9pXw" name="MedicalEquipmentSection">
      <ownedComment xmi:id="_6K0pUDh_EeGSytqLITd2FA">
        <body>The Medical Equipment section defines a patient's implanted and external medical devices and equipment that their health status depends on, as well as any pertinent equipment or device history. This section is also used to itemize any pertinent current or historical durable medical equipment (DME) used to help maintain the patient's health status. All pertinent equipment relevant to the diagnosis, care, and treatment of a patient should be included.</body>
      </ownedComment>
      <ownedRule xmi:id="_uyTi0IokEeSkH97cUQxLGA" name="MedicalEquipmentSectionTemplateId" constrainedElement="_2KEucBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uyTi0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.23')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uyVYAIokEeSkH97cUQxLGA" name="MedicalEquipmentSectionCode" constrainedElement="_2KEucBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uyVYAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '46264-8' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uyX0QIokEeSkH97cUQxLGA" name="MedicalEquipmentSectionCodeP" constrainedElement="_2KEucBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uyX0QYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uyZpcIokEeSkH97cUQxLGA" name="MedicalEquipmentSectionTitle" constrainedElement="_2KEucBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uyZpcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uya3kIokEeSkH97cUQxLGA" name="MedicalEquipmentSectionText" constrainedElement="_2KEucBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uya3kYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uycswIokEeSkH97cUQxLGA" name="MedicalEquipmentSectionNonMedicinalSupplyActivity" constrainedElement="_2KEucBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uycswYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.supply.oclIsUndefined() and entry.supply.oclIsKindOf(consol::NonMedicinalSupplyActivity))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2KJm8hSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_uydT0IokEeSkH97cUQxLGA" name="getNonMedicinalSupplyActivities" bodyCondition="_uydT04okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_uydT04okEeSkH97cUQxLGA" name="body" constrainedElement="_uydT0IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_uydT1IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getSupplies()->select(supply : cda::Supply | not supply.oclIsUndefined() and supply.oclIsKindOf(consol::NonMedicinalSupplyActivity)).oclAsType(consol::NonMedicinalSupplyActivity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_uydT0YokEeSkH97cUQxLGA" type="_2HIvMBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uydT0ookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2KKOBhSVEeGGzu7fmW9pXw" name="FunctionalStatusSection">
      <ownedComment xmi:id="_2KTX8xSVEeGGzu7fmW9pXw" annotatedElement="_2KKOBhSVEeGGzu7fmW9pXw">
        <body>The Functional Status section describes the patient's physical state, status of functioning, and environmental status at the time the document was created. &#xD;
A patient's physical state may include information regarding the patient's physical findings as they relate to problems, including but not limited to:&#xD;
Pressure Ulcers&#xD;
Amputations&#xD;
Heart murmur&#xD;
Ostomies&#xD;
A patient's functional status may include information regarding the patient relative to their general functional and cognitive ability, including:&#xD;
Ambulatory ability&#xD;
Mental status or competency&#xD;
Activities of Daily Living (ADLs), including bathing, dressing, feeding, grooming&#xD;
Home or living situation having an effect on the health status of the patient&#xD;
Ability to care for self&#xD;
Social activity, including issues with social cognition, participation with friends and acquaintances other than family members&#xD;
Occupation activity, including activities partly or directly related to working, housework or volunteering, family and home responsibilities or activities related to home and family&#xD;
Communication ability, including issues with speech, writing or cognition required for communication&#xD;
Perception, including sight, hearing, taste, skin sensation, kinesthetic sense, proprioception, or balance&#xD;
A patient's environmental status may include information regarding the patient's current exposures from their daily environment, including but not limited to:&#xD;
Airborne hazards such as second-hand smoke, volatile organic compounds, dust, or other allergens&#xD;
Radiation&#xD;
Safety hazards in home, such as throw rugs, poor lighting, lack of railings/grab bars, etc.&#xD;
Safety hazards at work, such as communicable diseases, excessive heat, excessive noise, etc.&#xD;
The patient's functional status may be expressed as a problem or as a result observation. A functional or cognitive status problem observation describes a patient's problem, symptoms or condition. A functional or cognitive status result observation may include observations resulting from an assessment scale, evaluation or question and answer assessment.&#xD;
Any deviation from normal function displayed by the patient and recorded in the record should be included. Of particular interest are those limitations that would interfere with self-care or the medical therapeutic process in any way. In addition, a note of normal function, an improvement, or a change in functioning status may be included.</body>
      </ownedComment>
      <ownedRule xmi:id="_uydT1YokEeSkH97cUQxLGA" name="FunctionalStatusSectionTemplateId" constrainedElement="_2KKOBhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uyd64IokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.14')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uyfwEIokEeSkH97cUQxLGA" name="FunctionalStatusSectionCode" constrainedElement="_2KKOBhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uyfwEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '47420-5' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uyhlQIokEeSkH97cUQxLGA" name="FunctionalStatusSectionTitle" constrainedElement="_2KKOBhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uyhlQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uyjacIokEeSkH97cUQxLGA" name="FunctionalStatusSectionText" constrainedElement="_2KKOBhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uyjacYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vYxs8ookEeSkH97cUQxLGA" name="FunctionalStatusSectionFunctionalStatusResultOrganizer" constrainedElement="_2KKOBhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vYxs84okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(consol::FunctionalStatusResultOrganizer))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vYy7EYokEeSkH97cUQxLGA" name="FunctionalStatusSectionCognitiveStatusResultOrganizer" constrainedElement="_2KKOBhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vYy7EookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(consol::CognitiveStatusResultOrganizer))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vY0JMIokEeSkH97cUQxLGA" name="FunctionalStatusSectionFunctionalStatusResultObservation" constrainedElement="_2KKOBhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vY0JMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::FunctionalStatusResultObservation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vY1XUIokEeSkH97cUQxLGA" name="FunctionalStatusSectionCognitiveStatusResultObservation" constrainedElement="_2KKOBhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vY1XUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::CognitiveStatusResultObservation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vY2lcIokEeSkH97cUQxLGA" name="FunctionalStatusSectionFunctionalStatusProblemObservation" constrainedElement="_2KKOBhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vY2lcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::FunctionalStatusProblemObservation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vY3zkIokEeSkH97cUQxLGA" name="FunctionalStatusSectionCognitiveStatusProblemObservation" constrainedElement="_2KKOBhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vY3zkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::CognitiveStatusProblemObservation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vY5BsIokEeSkH97cUQxLGA" name="FunctionalStatusSectionCaregiverCharacteristics" constrainedElement="_2KKOBhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vY5BsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::CaregiverCharacteristics))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vY6P0IokEeSkH97cUQxLGA" name="FunctionalStatusSectionAssessmentScaleObservation" constrainedElement="_2KKOBhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vY6P0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::AssessmentScaleObservation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vY7d8ookEeSkH97cUQxLGA" name="FunctionalStatusSectionNonMedicinalSupplyActivity" constrainedElement="_2KKOBhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vY7d84okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.supply.oclIsUndefined() and entry.supply.oclIsKindOf(consol::NonMedicinalSupplyActivity))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vY8sEookEeSkH97cUQxLGA" name="FunctionalStatusSectionPressureUlcerObservation" constrainedElement="_2KKOBhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vY8sE4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::PressureUlcerObservation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vY96MYokEeSkH97cUQxLGA" name="FunctionalStatusSectionNumberOfPressureUlcersObservation" constrainedElement="_2KKOBhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vY96MookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::NumberOfPressureUlcersObservation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vY_IUYokEeSkH97cUQxLGA" name="FunctionalStatusSectionHighestPressureUlcerStage" constrainedElement="_2KKOBhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vY_IUookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::HighestPressureUlcerStage))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2KT_ABSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_vYyUAIokEeSkH97cUQxLGA" name="getFunctionalStatusResultOrganizers" bodyCondition="_vYyUA4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vYyUA4okEeSkH97cUQxLGA" name="body" constrainedElement="_vYyUAIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vYy7EIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getOrganizers()->select(organizer : cda::Organizer | not organizer.oclIsUndefined() and organizer.oclIsKindOf(consol::FunctionalStatusResultOrganizer)).oclAsType(consol::FunctionalStatusResultOrganizer)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vYyUAYokEeSkH97cUQxLGA" type="_zBlUUOZbEeGINOJ_SD9_dA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vYyUAookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vYziIIokEeSkH97cUQxLGA" name="getCognitiveStatusResultOrganizers" bodyCondition="_vYziI4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vYziI4okEeSkH97cUQxLGA" name="body" constrainedElement="_vYziIIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vYziJIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getOrganizers()->select(organizer : cda::Organizer | not organizer.oclIsUndefined() and organizer.oclIsKindOf(consol::CognitiveStatusResultOrganizer)).oclAsType(consol::CognitiveStatusResultOrganizer)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vYziIYokEeSkH97cUQxLGA" type="_jfoCUOZbEeGINOJ_SD9_dA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vYziIookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vY0wQIokEeSkH97cUQxLGA" name="getFunctionalStatusResultObservations" bodyCondition="_vY0wQ4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vY0wQ4okEeSkH97cUQxLGA" name="body" constrainedElement="_vY0wQIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vY0wRIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::FunctionalStatusResultObservation)).oclAsType(consol::FunctionalStatusResultObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vY0wQYokEeSkH97cUQxLGA" type="_viRU0OZbEeGINOJ_SD9_dA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vY0wQookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vY1-YIokEeSkH97cUQxLGA" name="getCognitiveStatusResultObservations" bodyCondition="_vY1-Y4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vY1-Y4okEeSkH97cUQxLGA" name="body" constrainedElement="_vY1-YIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vY1-ZIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::CognitiveStatusResultObservation)).oclAsType(consol::CognitiveStatusResultObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vY1-YYokEeSkH97cUQxLGA" type="_gkBM0OZbEeGINOJ_SD9_dA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vY1-YookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vY3MgIokEeSkH97cUQxLGA" name="getFunctionalStatusProblemObservations" bodyCondition="_vY3Mg4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vY3Mg4okEeSkH97cUQxLGA" name="body" constrainedElement="_vY3MgIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vY3MhIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::FunctionalStatusProblemObservation)).oclAsType(consol::FunctionalStatusProblemObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vY3MgYokEeSkH97cUQxLGA" type="_rVl5AOZbEeGINOJ_SD9_dA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vY3MgookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vY4aoIokEeSkH97cUQxLGA" name="getCognitiveStatusProblemObservations" bodyCondition="_vY4ao4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vY4ao4okEeSkH97cUQxLGA" name="body" constrainedElement="_vY4aoIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vY4apIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::CognitiveStatusProblemObservation)).oclAsType(consol::CognitiveStatusProblemObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vY4aoYokEeSkH97cUQxLGA" type="_dXKPQOZbEeGINOJ_SD9_dA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vY4aoookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vY5owIokEeSkH97cUQxLGA" name="getCaregiverCharacteristicss" bodyCondition="_vY5ow4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vY5ow4okEeSkH97cUQxLGA" name="body" constrainedElement="_vY5owIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vY5oxIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::CaregiverCharacteristics)).oclAsType(consol::CaregiverCharacteristics)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vY5owYokEeSkH97cUQxLGA" type="__pNCUOY-EeGINOJ_SD9_dA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vY5owookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vY624IokEeSkH97cUQxLGA" name="getAssessmentScaleObservations" bodyCondition="_vY7d8IokEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vY7d8IokEeSkH97cUQxLGA" name="body" constrainedElement="_vY624IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vY7d8YokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::AssessmentScaleObservation)).oclAsType(consol::AssessmentScaleObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vY624YokEeSkH97cUQxLGA" type="_Zi33YOYxEeGINOJ_SD9_dA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vY624ookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vY8FAIokEeSkH97cUQxLGA" name="getNonMedicinalSupplyActivities" bodyCondition="_vY8sEIokEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vY8sEIokEeSkH97cUQxLGA" name="body" constrainedElement="_vY8FAIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vY8sEYokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getSupplies()->select(supply : cda::Supply | not supply.oclIsUndefined() and supply.oclIsKindOf(consol::NonMedicinalSupplyActivity)).oclAsType(consol::NonMedicinalSupplyActivity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vY8FAYokEeSkH97cUQxLGA" type="_2HIvMBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vY8FAookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vY9TIIokEeSkH97cUQxLGA" name="getPressureUlcerObservations" bodyCondition="_vY9TI4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vY9TI4okEeSkH97cUQxLGA" name="body" constrainedElement="_vY9TIIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vY96MIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::PressureUlcerObservation)).oclAsType(consol::PressureUlcerObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vY9TIYokEeSkH97cUQxLGA" type="_9rQowOZbEeGINOJ_SD9_dA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vY9TIookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vY-hQIokEeSkH97cUQxLGA" name="getNumberOfPressureUlcersObservations" bodyCondition="_vY-hQ4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vY-hQ4okEeSkH97cUQxLGA" name="body" constrainedElement="_vY-hQIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vY_IUIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::NumberOfPressureUlcersObservation)).oclAsType(consol::NumberOfPressureUlcersObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vY-hQYokEeSkH97cUQxLGA" type="_7c4ssOZbEeGINOJ_SD9_dA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vY-hQookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vY_vYIokEeSkH97cUQxLGA" name="getHighestPressureUlcerStages" bodyCondition="_vY_vY4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vY_vY4okEeSkH97cUQxLGA" name="body" constrainedElement="_vY_vYIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vY_vZIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::HighestPressureUlcerStage)).oclAsType(consol::HighestPressureUlcerStage)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vY_vYYokEeSkH97cUQxLGA" type="_4YgVsOZbEeGINOJ_SD9_dA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vY_vYookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2KgzUBSVEeGGzu7fmW9pXw" name="AdvanceDirectivesSection">
      <ownedRule xmi:id="_uylPoYokEeSkH97cUQxLGA" name="AdvanceDirectivesSectionEntriesOptionalTemplateId" constrainedElement="_2KgzUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uylPoookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.21.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uyphEIokEeSkH97cUQxLGA" name="AdvanceDirectivesSectionCodeP" constrainedElement="_2KgzUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uyphEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uynE0IokEeSkH97cUQxLGA" name="AdvanceDirectivesSectionCode" constrainedElement="_2KgzUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uynE0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '42348-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uyskYIokEeSkH97cUQxLGA" name="AdvanceDirectivesSectionTitle" constrainedElement="_2KgzUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uyskYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uyuZkIokEeSkH97cUQxLGA" name="AdvanceDirectivesSectionText" constrainedElement="_2KgzUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uyuZkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uyvnsIokEeSkH97cUQxLGA" name="AdvanceDirectivesSectionAdvanceDirectiveObservation" constrainedElement="_2KgzUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uyvnsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::AdvanceDirectiveObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_8UhPsBVfEeGQCvUGzi1kDQ" general="_1RZdIBVdEeGQCvUGzi1kDQ">
        <ownedComment xmi:id="_94HnEEFqEeGleIzZ12qTpQ">
          <body>couple</body>
        </ownedComment>
      </generalization>
      <ownedOperation xmi:id="_uywOwIokEeSkH97cUQxLGA" name="getConsolAdvanceDirectiveObservations" bodyCondition="_uyw10ookEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_uyw10ookEeSkH97cUQxLGA" name="body" constrainedElement="_uywOwIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_uyw104okEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::AdvanceDirectiveObservation)).oclAsType(consol::AdvanceDirectiveObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_uyw10IokEeSkH97cUQxLGA" type="_2KlEwBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uyw10YokEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2KlEwBSVEeGGzu7fmW9pXw" name="AdvanceDirectiveObservation">
      <ownedComment xmi:id="_N7l9YCwEEeGs-ue-ukBpXg">
        <body>Advance Directives Observatations assert findings (e.g., &quot;resuscitation status is Full Code&quot;) rather than orders, and should not be considered legal documents. A legal document can be referenced using the reference/externalReference construct.</body>
      </ownedComment>
      <ownedRule xmi:id="_2KlExRSVEeGGzu7fmW9pXw" name="AdvanceDirectiveObservationHasStartingTime" constrainedElement="_2KlEwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2KlExhSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.effectiveTime.low.hasContent()  or self.effectiveTime.low.isNullFlavorDefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2KlEyhSVEeGGzu7fmW9pXw" name="AdvanceDirectiveObservationHasEndingTime" constrainedElement="_2KlEwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2KlEyxSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.effectiveTime.high.hasContent() or self.effectiveTime.high.isNullFlavorDefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uyw11IokEeSkH97cUQxLGA" name="AdvanceDirectiveObservationTemplateId" constrainedElement="_2KlEwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uyw11YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.48')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uyzSEIokEeSkH97cUQxLGA" name="AdvanceDirectiveObservationClassCode" constrainedElement="_2KlEwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uyz5IIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uy1HQIokEeSkH97cUQxLGA" name="AdvanceDirectiveObservationMoodCode" constrainedElement="_2KlEwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uy1HQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uy1uUIokEeSkH97cUQxLGA" name="AdvanceDirectiveObservationId" constrainedElement="_2KlEwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uy1uUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uy5_wIokEeSkH97cUQxLGA" name="AdvanceDirectiveObservationCodeP" constrainedElement="_2KlEwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uy5_wYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uy4KkIokEeSkH97cUQxLGA" name="AdvanceDirectiveObservationCode" constrainedElement="_2KlEwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uy4KkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.96' and (value.code = '281789004' or value.code = '89666000' or value.code = '225204009' or value.code = '52765003' or value.code = '78823007' or value.code = '304251008' or value.code = '61420007' or value.code = '71388002'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uy9DEIokEeSkH97cUQxLGA" name="AdvanceDirectiveObservationStatusCode" constrainedElement="_2KlEwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uy9DEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uy_fUIokEeSkH97cUQxLGA" name="AdvanceDirectiveObservationEffectiveTime" constrainedElement="_2KlEwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uy_fUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vECMAIokEeSkH97cUQxLGA" name="AdvanceDirectiveObservationVerifier" constrainedElement="_2KlEwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vECMAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->select(participant : cda::Participant2 | not participant.oclIsUndefined() and participant.oclIsKindOf(cda::Participant2))->select(typeCode=vocab::ParticipationType::VRF)->notEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vEEBMIokEeSkH97cUQxLGA" name="AdvanceDirectiveObservationCustodian" constrainedElement="_2KlEwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vEEBMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->select(participant : cda::Participant2 | not participant.oclIsUndefined() and participant.oclIsKindOf(cda::Participant2))->select(typeCode=vocab::ParticipationType::CST)->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vEEoQIokEeSkH97cUQxLGA" name="AdvanceDirectiveObservationReference" constrainedElement="_2KlEwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vEEoQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.reference->exists(reference : cda::Reference | not reference.oclIsUndefined() and reference.oclIsKindOf(cda::Reference))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wPCmkIokEeSkH97cUQxLGA" name="AdvanceDirectiveObservationVerifierTime" constrainedElement="_2KlEwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wPCmkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->select(typeCode=vocab::ParticipationType::VRF)->select(typeCode=vocab::ParticipationType::VRF)->reject((time.oclIsUndefined() or time.isNullFlavorUndefined()) implies (not time.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wPDNoIokEeSkH97cUQxLGA" name="AdvanceDirectiveObservationVerifierTypeCode" constrainedElement="_2KlEwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wPDNoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->select(typeCode=vocab::ParticipationType::VRF)->select(typeCode=vocab::ParticipationType::VRF)->reject(isDefined('typeCode'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wPDNoookEeSkH97cUQxLGA" name="AdvanceDirectiveObservationVerifierParticipantRole" constrainedElement="_2KlEwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wPDNo4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->select(typeCode=vocab::ParticipationType::VRF)->select(typeCode=vocab::ParticipationType::VRF)->reject(participantRole->one(participantRole : cda::ParticipantRole | not participantRole.oclIsUndefined() and participantRole.oclIsKindOf(rim::Role)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wPFC0IokEeSkH97cUQxLGA" name="AdvanceDirectiveObservationCustodianCustodianRoleCustodianEntityName" constrainedElement="_2KlEwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wPFC0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->select(typeCode=vocab::ParticipationType::CST).participantRole->excluding(null).playingEntity->excluding(null)->reject((name->isEmpty() or name->exists(element | element.isNullFlavorUndefined())) implies (not name->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wPFp4IokEeSkH97cUQxLGA" name="AdvanceDirectiveObservationCustodianCustodianRoleAddr" constrainedElement="_2KlEwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wPFp4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->select(typeCode=vocab::ParticipationType::CST).participantRole->excluding(null)->reject((addr->isEmpty() or addr->exists(element | element.isNullFlavorUndefined())) implies (not addr->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wPGQ8IokEeSkH97cUQxLGA" name="AdvanceDirectiveObservationCustodianCustodianRoleClassCode" constrainedElement="_2KlEwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wPGQ8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->select(typeCode=vocab::ParticipationType::CST).participantRole->excluding(null)->reject(isDefined('classCode') and classCode=vocab::RoleClassRoot::AGNT)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wPGQ8ookEeSkH97cUQxLGA" name="AdvanceDirectiveObservationCustodianCustodianRoleTelecom" constrainedElement="_2KlEwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wPGQ84okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->select(typeCode=vocab::ParticipationType::CST).participantRole->excluding(null)->reject((telecom->isEmpty() or telecom->exists(element | element.isNullFlavorUndefined())) implies (not telecom->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wPG4AIokEeSkH97cUQxLGA" name="AdvanceDirectiveObservationCustodianCustodianRolePlayingEntity" constrainedElement="_2KlEwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wPG4AYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->select(typeCode=vocab::ParticipationType::CST).participantRole->excluding(null)->reject(playingEntity->one(playingEntity : cda::PlayingEntity | not playingEntity.oclIsUndefined() and playingEntity.oclIsKindOf(cda::PlayingEntity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wPHfEIokEeSkH97cUQxLGA" name="AdvanceDirectiveObservationCustodianTypeCode" constrainedElement="_2KlEwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wPHfEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->select(typeCode=vocab::ParticipationType::CST)->select(typeCode=vocab::ParticipationType::CST)->reject(typeCode=vocab::ParticipationType::CST)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wPHfEookEeSkH97cUQxLGA" name="AdvanceDirectiveObservationCustodianRole" constrainedElement="_2KlEwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wPHfE4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->select(typeCode=vocab::ParticipationType::CST)->select(typeCode=vocab::ParticipationType::CST)->reject(participantRole->one(participantRole : cda::ParticipantRole | not participantRole.oclIsUndefined() and participantRole.oclIsKindOf(cda::ParticipantRole)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wPItMIokEeSkH97cUQxLGA" name="AdvanceDirectiveObservationReferenceExternalDocumentTextMediaType" constrainedElement="_2KlEwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wPItMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.reference->excluding(null).externalDocument->excluding(null)->reject(not text.mediaType.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wPJUQIokEeSkH97cUQxLGA" name="AdvanceDirectiveObservationReferenceExternalDocumentTextReference" constrainedElement="_2KlEwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wPJUQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.reference->excluding(null).externalDocument->excluding(null)->reject(not text.oclIsUndefined() implies not text.reference.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wPJUQookEeSkH97cUQxLGA" name="AdvanceDirectiveObservationReferenceExternalDocumentId" constrainedElement="_2KlEwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wPJUQ4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.reference->excluding(null).externalDocument->excluding(null)->reject((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wPJ7UIokEeSkH97cUQxLGA" name="AdvanceDirectiveObservationReferenceExternalDocumentText" constrainedElement="_2KlEwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wPJ7UYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.reference->excluding(null).externalDocument->excluding(null)->reject((text.oclIsUndefined() or text.isNullFlavorUndefined()) implies (not text.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wPKiYIokEeSkH97cUQxLGA" name="AdvanceDirectiveObservationReferenceTypeCode" constrainedElement="_2KlEwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wPKiYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.reference->excluding(null)->reject(not typeCode.oclIsUndefined() and typeCode.oclIsKindOf(vocab::x_ActRelationshipExternalReference) and &#xD;
let value : vocab::x_ActRelationshipExternalReference = typeCode.oclAsType(vocab::x_ActRelationshipExternalReference) in &#xD;
value = vocab::x_ActRelationshipExternalReference::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wPKiYookEeSkH97cUQxLGA" name="AdvanceDirectiveObservationReferenceExternalDocument" constrainedElement="_2KlEwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wPKiY4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.reference->excluding(null)->reject(externalDocument->one(externalDocument : cda::ExternalDocument | not externalDocument.oclIsUndefined() and externalDocument.oclIsKindOf(cda::ExternalDocument)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2LGpMRSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2LMIwBSVEeGGzu7fmW9pXw" name="AllergiesSection">
      <ownedComment xmi:id="_2LRBQRSVEeGGzu7fmW9pXw" annotatedElement="_2LMIwBSVEeGGzu7fmW9pXw">
        <body>This section lists and describes any medication allergies, adverse reactions, idiosyncratic reactions, anaphylaxis/anaphylactoid reactions to food items, and metabolic variations or adverse reactions/allergies to other substances (such as latex, iodine, tape adhesives) used to assure the safety of health care delivery. At a minimum, it should list currently active and any relevant historical allergies and adverse reactions.</body>
      </ownedComment>
      <ownedRule xmi:id="_uzRMIYokEeSkH97cUQxLGA" name="AllergiesSectionEntriesOptionalTemplateId" constrainedElement="_2LMIwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uzRMIookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uzXSwIokEeSkH97cUQxLGA" name="AllergiesSectionCodeP" constrainedElement="_2LMIwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uzXSwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uzTBUIokEeSkH97cUQxLGA" name="AllergiesSectionCode" constrainedElement="_2LMIwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uzTBUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '48765-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uza9IIokEeSkH97cUQxLGA" name="AllergiesSectionTitle" constrainedElement="_2LMIwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uza9IYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uzcLQIokEeSkH97cUQxLGA" name="AllergiesSectionText" constrainedElement="_2LMIwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uzcLQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uzeAcIokEeSkH97cUQxLGA" name="AllergiesSectionAllergyProblemAct" constrainedElement="_2LMIwBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uzeAcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::AllergyProblemAct))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_EEbhsBVgEeGQCvUGzi1kDQ" general="_bGzYgBVdEeGQCvUGzi1kDQ">
        <ownedComment xmi:id="_l-8SQHauEeGK39q3kclbsA">
          <body>couple</body>
        </ownedComment>
      </generalization>
      <ownedOperation xmi:id="_uzengIokEeSkH97cUQxLGA" name="getConsolAllergyProblemActs" bodyCondition="_uzeng4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_uzeng4okEeSkH97cUQxLGA" name="body" constrainedElement="_uzengIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_uzenhIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::AllergyProblemAct)).oclAsType(consol::AllergyProblemAct)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_uzengYokEeSkH97cUQxLGA" type="_2EAisBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uzengookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2LSPYBSVEeGGzu7fmW9pXw" name="ProblemSection">
      <ownedComment xmi:id="_hb8PkCAnEeGetMjKLkqR8g">
        <body>This section lists and describes all relevant clinical problems at the time the document is generated. At a minimum, all pertinent current and historical problems should be listed.</body>
      </ownedComment>
      <ownedRule xmi:id="_uzfOkYokEeSkH97cUQxLGA" name="ProblemSectionEntriesOptionalTemplateId" constrainedElement="_2LSPYBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uzf1oIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.5.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uzkHEIokEeSkH97cUQxLGA" name="ProblemSectionEntriesOptionalCodeP" constrainedElement="_2LSPYBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uzkHEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uzhq0IokEeSkH97cUQxLGA" name="ProblemSectionEntriesOptionalCode" constrainedElement="_2LSPYBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uzhq0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '11450-4' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uzl8QIokEeSkH97cUQxLGA" name="ProblemSectionEntriesOptionalText" constrainedElement="_2LSPYBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uzl8QYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uznxcIokEeSkH97cUQxLGA" name="ProblemSectionEntriesOptionalTitle" constrainedElement="_2LSPYBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uznxcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u-F8EIokEeSkH97cUQxLGA" name="ProblemSectionEntriesOptionalProblemConcern" constrainedElement="_2LSPYBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u-F8EYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::ProblemConcernAct))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_blmF8BVgEeGQCvUGzi1kDQ" general="_naxrkBVdEeGQCvUGzi1kDQ">
        <ownedComment xmi:id="_CN40QHavEeGK39q3kclbsA">
          <body>couple</body>
        </ownedComment>
      </generalization>
      <ownedOperation xmi:id="_u-GjIIokEeSkH97cUQxLGA" name="getConsolProblemConcerns" bodyCondition="_u-GjI4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_u-GjI4okEeSkH97cUQxLGA" name="body" constrainedElement="_u-GjIIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_u-GjJIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::ProblemConcernAct)).oclAsType(consol::ProblemConcernAct)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_u-GjIYokEeSkH97cUQxLGA" type="_2H6yUBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_u-GjIookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2LWg0BSVEeGGzu7fmW9pXw" name="EncountersSection">
      <ownedComment xmi:id="_2L7IkBSVEeGGzu7fmW9pXw" annotatedElement="_2LWg0BSVEeGGzu7fmW9pXw">
        <body>This section lists and describes any healthcare encounters pertinent to the patient's current health status or historical health history. An Encounter is an interaction, regardless of the setting, between a patient and a practitioner who is vested with primary responsibility for diagnosing, evaluating, or treating the patient's condition. It may include visits, appointments, as well as non face-to-face interactions. It is also a contact between a patient and a practitioner who has primary responsibility for assessing and treating the patient at a given contact, exercising independent judgment. This section may contain all encounters for the time period being summarized, but should include notable encounters.</body>
      </ownedComment>
      <ownedRule xmi:id="_uzpmoYokEeSkH97cUQxLGA" name="EncountersSectionEntriesOptionalTemplateId" constrainedElement="_2LWg0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uzpmoookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.22.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uzufIIokEeSkH97cUQxLGA" name="EncountersSectionEntriesOptionalCodeP" constrainedElement="_2LWg0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uzufIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uzsC4IokEeSkH97cUQxLGA" name="EncountersSectionEntriesOptionalCode" constrainedElement="_2LWg0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uzsC4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '46240-8' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uzwUUIokEeSkH97cUQxLGA" name="EncountersSectionEntriesOptionalText" constrainedElement="_2LWg0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uzwUUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uzyJgIokEeSkH97cUQxLGA" name="EncountersSectionEntriesOptionalTitle" constrainedElement="_2LWg0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uzyJgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vE02MIokEeSkH97cUQxLGA" name="EncountersSectionEncounterActivities" constrainedElement="_2LWg0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vE02MYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.encounter.oclIsUndefined() and entry.encounter.oclIsKindOf(consol::EncounterActivities))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_KVkvoBVgEeGQCvUGzi1kDQ" general="_4yj2wBVdEeGQCvUGzi1kDQ">
        <ownedComment xmi:id="_pkUdgHauEeGK39q3kclbsA">
          <body>couple</body>
        </ownedComment>
      </generalization>
      <ownedOperation xmi:id="_vE1dQIokEeSkH97cUQxLGA" name="getConsolEncounterActivitiess" bodyCondition="_vE2EUYokEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vE2EUYokEeSkH97cUQxLGA" name="body" constrainedElement="_vE1dQIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vE2EUookEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getEncounters()->select(encounter : cda::Encounter | not encounter.oclIsUndefined() and encounter.oclIsKindOf(consol::EncounterActivities)).oclAsType(consol::EncounterActivities)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vE1dQYokEeSkH97cUQxLGA" type="_2LayQBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vE2EUIokEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2LayQBSVEeGGzu7fmW9pXw" name="EncounterActivities">
      <ownedComment xmi:id="_PZy1MCwOEeGKLc4ckmfDag">
        <body>This clinical statement describes the interactions between the patient and clinicians. Interactions include in-person encounters, telephone conversations, and email exchanges.</body>
      </ownedComment>
      <ownedRule xmi:id="_a_2b4CwaEeGKLc4ckmfDag" name="EncounterActivitiesCodeOriginalText" constrainedElement="_2LayQBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_dbyS0CwaEeGKLc4ckmfDag">
          <language>OCL</language>
          <body>not code.oclIsUndefined() implies not code.originalText.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_fTZ7wCwaEeGKLc4ckmfDag" name="EncounterActivitiesCodeOriginalTextReference" constrainedElement="_a_2b4CwaEeGKLc4ckmfDag">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_h1T30CwaEeGKLc4ckmfDag">
          <language>OCL</language>
          <body>not self.code.originalText.oclIsUndefined() implies not self.code.originalText.reference.value.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_7xneQOM0EeGfv4R-kzpM0g" name="EncounterActivitiesReferenceValue" constrainedElement="_ktatYCwaEeGKLc4ckmfDag">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_9wOgAOM0EeGfv4R-kzpM0g">
          <language>OCL</language>
          <body>not self.code.originalText.reference.oclIsUndefined() implies not self.code.originalText.reference.value.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ktatYCwaEeGKLc4ckmfDag" name="EncounterActivitiesCodeOriginalTextReferenceValue" constrainedElement="_fTZ7wCwaEeGKLc4ckmfDag">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_m7qtoCwaEeGKLc4ckmfDag">
          <language>OCL</language>
          <body>not self.code.originalText.reference.value.oclIsUndefined() implies not self.getSection().text.getText(self.code.originalText.reference.value.substring(2, self.code.originalText.reference.value.size())).oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_EywuoCwaEeGKLc4ckmfDag" name="EncounterActivitiesServiceDeliveryTypeCode" constrainedElement="_2LayQBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_JwPVQCwaEeGKLc4ckmfDag">
          <language>OCL</language>
          <body>self.participant->select(par : cda::Participant2 | par.participantRole.oclIsKindOf(consol::ServiceDeliveryLocation))->forAll(p : cda::Participant2 | p.typeCode=vocab::ParticipationType::LOC)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_soEP8EglEeSfpbeq3Ftc1g" name="EncounterActivitiesSdtcDDCFromNUBCOrDD">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_soEP8UglEeSfpbeq3Ftc1g">
          <language>OCL</language>
          <body>(self.sDTCDischargeDispositionCode->isEmpty() or self.sDTCDischargeDispositionCode->exists(element | element.isNullFlavorUndefined())) implies (self.sDTCDischargeDispositionCode->forAll( element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CE) and let value : datatypes::CE = element.oclAsType(datatypes::CE) in (value.codeSystem = '2.16.840.1.113883.6.301.5' or value.codeSystem = '2.16.840.1.113883.12.112') and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uzzXoIokEeSkH97cUQxLGA" name="EncounterActivitiesTemplateId" constrainedElement="_2LayQBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uzz-sIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.49')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uz4QIIokEeSkH97cUQxLGA" name="EncounterActivitiesClassCode" constrainedElement="_2LayQBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uz43MIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClass::ENC</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uz6FUIokEeSkH97cUQxLGA" name="EncounterActivitiesMoodCode" constrainedElement="_2LayQBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uz6FUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentEncounterMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uz6sYIokEeSkH97cUQxLGA" name="EncounterActivitiesId" constrainedElement="_2LayQBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uz6sYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uz9IoIokEeSkH97cUQxLGA" name="EncounterActivitiesCode" constrainedElement="_2LayQBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uz9IoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.12' and not value.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uz-90IokEeSkH97cUQxLGA" name="EncounterActivitiesEffectiveTime" constrainedElement="_2LayQBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uz-90YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u0AL8IokEeSkH97cUQxLGA" name="EncounterActivitiesSDTCDischargeDispositionCode" constrainedElement="_2LayQBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u0AL8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.sDTCDischargeDispositionCode->isEmpty() or self.sDTCDischargeDispositionCode->exists(element | element.isNullFlavorUndefined())) implies (not self.sDTCDischargeDispositionCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u0DPQIokEeSkH97cUQxLGA" name="EncounterActivitiesServiceDeliveryLocation" constrainedElement="_2LayQBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u0DPQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->exists(participant : cda::Participant2 | not participant.participantRole.oclIsUndefined() and participant.participantRole.oclIsKindOf(consol::ServiceDeliveryLocation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u-aFIIokEeSkH97cUQxLGA" name="EncounterActivitiesIndication" constrainedElement="_2LayQBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u-aFIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::Indication) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::RSON)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vRW2UIokEeSkH97cUQxLGA" name="EncounterActivitiesEncounterPerformer" constrainedElement="_2LayQBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vRW2UYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->exists(performer : cda::Performer2 | not performer.oclIsUndefined() and performer.oclIsKindOf(cda::Performer2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vR7eEIokEeSkH97cUQxLGA" name="EncounterActivitiesEncounterDiagnosis" constrainedElement="_2LayQBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vR8FIIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(consol::EncounterDiagnosis))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wPMXkIokEeSkH97cUQxLGA" name="EncounterActivitiesEncounterPerformerEncounterPerformerAssignedEntityCode" constrainedElement="_2LayQBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wPMXkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null).assignedEntity->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wPM-oIokEeSkH97cUQxLGA" name="EncounterActivitiesEncounterPerformerEncounterPerformerAssignedEntity" constrainedElement="_2LayQBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wPM-oYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null)->reject(assignedEntity->one(assignedEntity : cda::AssignedEntity | not assignedEntity.oclIsUndefined() and assignedEntity.oclIsKindOf(cda::AssignedEntity)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2LttMBSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_AAXtEEbvEd6besF9iFIJkQ"/>
      </generalization>
      <ownedOperation xmi:id="_u0D2UIokEeSkH97cUQxLGA" name="getServiceDeliveryLocations" bodyCondition="_u0D2U4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_u0D2U4okEeSkH97cUQxLGA" name="body" constrainedElement="_u0D2UIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_u0D2VIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getParticipantRoles()->select(participantRole : cda::ParticipantRole | not participantRole.oclIsUndefined() and participantRole.oclIsKindOf(consol::ServiceDeliveryLocation)).oclAsType(consol::ServiceDeliveryLocation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_u0D2UYokEeSkH97cUQxLGA" type="_2LiHABSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_u0D2UookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_u-asMIokEeSkH97cUQxLGA" name="getIndications" bodyCondition="_u-asM4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_u-asM4okEeSkH97cUQxLGA" name="body" constrainedElement="_u-asMIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_u-asNIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::Indication)).oclAsType(consol::Indication)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_u-asMYokEeSkH97cUQxLGA" type="_sHrUoBUSEeG6PvUxSTZnaw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_u-asMookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vR8sMIokEeSkH97cUQxLGA" name="getEncounterDiagnosiss" bodyCondition="_vR9TQookEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vR9TQookEeSkH97cUQxLGA" name="body" constrainedElement="_vR8sMIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vR9TQ4okEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::EncounterDiagnosis)).oclAsType(consol::EncounterDiagnosis)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vR9TQIokEeSkH97cUQxLGA" type="_Ker6MOM2EeGfv4R-kzpM0g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vR9TQYokEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2LiHABSVEeGGzu7fmW9pXw" name="ServiceDeliveryLocation">
      <ownedRule xmi:id="_U1PlUB-ZEeGtfPlBCjHWkw" name="ServiceDeliveryLocationHasPlayingEntity" constrainedElement="_2LiHABSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_aYMQgB-ZEeGtfPlBCjHWkw">
          <language>OCL</language>
          <body>self.playingEntity->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_W3fw8B-ZEeGtfPlBCjHWkw" name="ServiceDeliveryLocationHasPlayingEntityClassCode" constrainedElement="_U1PlUB-ZEeGtfPlBCjHWkw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_digQYB-ZEeGtfPlBCjHWkw">
          <language>OCL</language>
          <body>self.playingEntity->size()>0 implies self.playingEntity.classCode=vocab::EntityClassRoot::PLC</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X2UwsB-ZEeGtfPlBCjHWkw" name="ServiceDeliveryLocationHasPlayingEntityName" constrainedElement="_W3fw8B-ZEeGtfPlBCjHWkw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_gzccsB-ZEeGtfPlBCjHWkw">
          <language>OCL</language>
          <body>self.playingEntity->size()>0 implies self.playingEntity.name->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u0D2VYokEeSkH97cUQxLGA" name="ServiceDeliveryLocationTemplateId" constrainedElement="_2LiHABSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u0EdYIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.32')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u0HgsIokEeSkH97cUQxLGA" name="ServiceDeliveryLocationClassCode" constrainedElement="_2LiHABSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u0HgsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>isDefined('classCode') and self.classCode=vocab::RoleClassRoot::SDLOC</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u0JV4IokEeSkH97cUQxLGA" name="ServiceDeliveryLocationCode" constrainedElement="_2LiHABSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u0JV4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.259' and not value.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u0LLEIokEeSkH97cUQxLGA" name="ServiceDeliveryLocationAddr" constrainedElement="_2LiHABSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u0LLEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.addr->isEmpty() or self.addr->exists(element | element.isNullFlavorUndefined())) implies (not self.addr->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u0MZMIokEeSkH97cUQxLGA" name="ServiceDeliveryLocationTelecom" constrainedElement="_2LiHABSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u0MZMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.telecom->isEmpty() or self.telecom->exists(element | element.isNullFlavorUndefined())) implies (not self.telecom->isEmpty())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_c7QfoB-YEeGtfPlBCjHWkw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#__QZaIEcZEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2L7voBSVEeGGzu7fmW9pXw" name="ImmunizationsSection">
      <ownedRule xmi:id="_u0OOYIokEeSkH97cUQxLGA" name="ImmunizationsSectionEntriesOptionalTemplateId" constrainedElement="_2L7voBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u0OOYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.2.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u0Sf0IokEeSkH97cUQxLGA" name="ImmunizationsSectionCodeP" constrainedElement="_2L7voBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u0Sf0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u0QDkIokEeSkH97cUQxLGA" name="ImmunizationsSectionCode" constrainedElement="_2L7voBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u0QDkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '11369-6' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u0U8EIokEeSkH97cUQxLGA" name="ImmunizationsSectionTitle" constrainedElement="_2L7voBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u0U8EYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u0WKMIokEeSkH97cUQxLGA" name="ImmunizationsSectionText" constrainedElement="_2L7voBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u0WKMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u0X_YIokEeSkH97cUQxLGA" name="ImmunizationsSectionImmunization" constrainedElement="_2L7voBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u0X_YYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.substanceAdministration.oclIsUndefined() and entry.substanceAdministration.oclIsKindOf(consol::ImmunizationActivity))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_QPw2IBVgEeGQCvUGzi1kDQ" general="_EuPloBVeEeGQCvUGzi1kDQ">
        <ownedComment xmi:id="_1T-tIHavEeGK39q3kclbsA">
          <body>couple</body>
        </ownedComment>
      </generalization>
      <ownedOperation xmi:id="_u0YmcIokEeSkH97cUQxLGA" name="getImmunizations" bodyCondition="_u0Ymc4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_u0Ymc4okEeSkH97cUQxLGA" name="body" constrainedElement="_u0YmcIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_u0YmdIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(consol::ImmunizationActivity)).oclAsType(consol::ImmunizationActivity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_u0YmcYokEeSkH97cUQxLGA" type="_2MAoIBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_u0YmcookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2MAoIBSVEeGGzu7fmW9pXw" name="ImmunizationActivity">
      <ownedComment xmi:id="_2MQfwhSVEeGGzu7fmW9pXw" annotatedElement="_2MAoIBSVEeGGzu7fmW9pXw">
        <body>&lt;p>An Immunization Activity describes immunization substance administrations that have actually occurred or are intended to occur. Immunization Activities in &quot;INT&quot; mood are reflections of immunizations a clinician intends a patient to receive. Immunization Activities in &quot;EVN&quot; mood reflect immunizations actually received.&lt;/p>

&lt;p>An Immunization Activity is very similar to a Medication Activity with some key differentiators. The drug code system is constrained to CVX codes. Administration timing is less complex. Patient refusal reasons should be captured. All vaccines administered should be fully documented in the patient's permanent medical record. Healthcare providers who administer vaccines covered by the National Childhood Vaccine Injury Act are required to ensure that the permanent medical record of the recipient indicates: &lt;/p>

&lt;ol>
&lt;li>Date of administration &lt;/li>
&lt;li>Vaccine manufacturer &lt;/li>
&lt;li>Vaccine lot number &lt;/li>
&lt;li>Name and title of the person who administered the vaccine and the address of the clinic or facility where the permanent record will reside &lt;/li>
&lt;li>Vaccine information statement (VIS) 
&lt;ol>
&lt;li>date printed on the VIS&lt;/li>
&lt;li>date VIS given to patient or parent/guardian.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol></body>
      </ownedComment>
      <ownedRule xmi:id="_2MP4sxSVEeGGzu7fmW9pXw" name="ImmunizationActivityTextReference">
        <ownedComment xmi:id="_2MP4tBSVEeGGzu7fmW9pXw">
          <body>In a CDA document, the URI given in the value attribute of the 'reference' element points to an element in the narrative content that contains the complete text describing the immunization activity. In an HL7 message, the content of the text element shall contain the complete text describing the immunization activity.</body>
        </ownedComment>
        <ownedComment xmi:id="_2MP4tRSVEeGGzu7fmW9pXw">
          <body>UNIMPLEMENTABLE</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2MP4thSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined() implies self.text->forAll(reference->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_I32q0OMsEeGfv4R-kzpM0g" name="ImmunizationActivityReferenceValue" constrainedElement="_4_lrIEX6EeG6e5lG0YsSyQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_MZZe8OMsEeGfv4R-kzpM0g">
          <language>OCL</language>
          <body>self.text->forAll(reference->size() = 1) implies self.text->forAll(reference->one(value->size() = 1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_4_lrIEX6EeG6e5lG0YsSyQ" name="ImmunizationActivityTextReferenceValue" constrainedElement="_aXWsMCQ9EeG4DdjGPr5_Vg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_92QfIEX6EeG6e5lG0YsSyQ">
          <language>OCL</language>
          <body>not self.text.reference.value.oclIsUndefined() implies not self.getSection().text.getText(self.text.reference.value.substring(2, self.text.reference.value.size())).oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_COIeUEX7EeG6e5lG0YsSyQ" name="ImmunizationActivityDoseQuantityUnit" constrainedElement="_aXWsMCQ9EeG4DdjGPr5_Vg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_FOScoEX7EeG6e5lG0YsSyQ">
          <language>OCL</language>
          <body>not self.doseQuantity.oclIsUndefined() implies not self.doseQuantity.unit.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_aXWsMCQ9EeG4DdjGPr5_Vg" name="ImmunizationActivityInstructionInversion" constrainedElement="_2MAoIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i2pMsCQ9EeG4DdjGPr5_Vg">
          <language>OCL</language>
          <body>self.entryRelationship->select(er : cda::EntryRelationship | er.act.oclIsTypeOf(consol::Instructions))->forAll(ent : cda::EntryRelationship | ent.inversionInd=true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_bnbB0EX7EeG6e5lG0YsSyQ" name="ImmunizationActivityDrugVehicleTypeCode" constrainedElement="_aXWsMCQ9EeG4DdjGPr5_Vg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hB9-8EX7EeG6e5lG0YsSyQ">
          <language>OCL</language>
          <body>self.participant->select(par : cda::Participant2 | par.participantRole.oclIsKindOf(consol::DrugVehicle))->forAll(p : cda::Participant2 | p.typeCode=vocab::ParticipationType::CSM)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u0ZNgIokEeSkH97cUQxLGA" name="ImmunizationActivityTemplateId" constrainedElement="_2MAoIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u0ZNgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.52')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u0eGAIokEeSkH97cUQxLGA" name="ImmunizationActivityClassCode" constrainedElement="_2MAoIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u0eGAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClass::SBADM</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u0f7MIokEeSkH97cUQxLGA" name="ImmunizationActivityMoodCode" constrainedElement="_2MAoIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u0f7MYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.moodCode.oclIsUndefined() and self.moodCode.oclIsKindOf(vocab::x_DocumentSubstanceMood) and &#xD;
let value : vocab::x_DocumentSubstanceMood = self.moodCode.oclAsType(vocab::x_DocumentSubstanceMood) in &#xD;
value = vocab::x_DocumentSubstanceMood::EVN or value = vocab::x_DocumentSubstanceMood::INT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u0hwYIokEeSkH97cUQxLGA" name="ImmunizationActivityId" constrainedElement="_2MAoIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u0hwYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u0i-gIokEeSkH97cUQxLGA" name="ImmunizationActivityCode" constrainedElement="_2MAoIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u0i-gYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u0kMoIokEeSkH97cUQxLGA" name="ImmunizationActivityStatusCode" constrainedElement="_2MAoIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u0kMoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u0mB0IokEeSkH97cUQxLGA" name="ImmunizationActivityEffectiveTime" constrainedElement="_2MAoIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u0mB0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.effectiveTime->isEmpty() or self.effectiveTime->exists(element | element.isNullFlavorUndefined())) implies (self.effectiveTime->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u0sIcIokEeSkH97cUQxLGA" name="ImmunizationActivityRouteCodeP" constrainedElement="_2MAoIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u0sIcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.routeCode.oclIsUndefined() or self.routeCode.isNullFlavorUndefined()) implies (not self.routeCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u0oeEIokEeSkH97cUQxLGA" name="ImmunizationActivityRouteCode" constrainedElement="_2MAoIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u0pFIIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.routeCode.oclIsUndefined() or self.routeCode.isNullFlavorUndefined()) implies (not self.routeCode.oclIsUndefined() and self.routeCode.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.routeCode.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and (value.code = 'C38192' or value.code = 'C38193' or value.code = 'C38194' or value.code = 'C38675' or value.code = 'C38197' or value.code = 'C38633' or value.code = 'C38205' or value.code = 'C38206' or value.code = 'C38208' or value.code = 'C38209' or value.code = 'C38210' or value.code = 'C38211' or value.code = 'C38212' or value.code = 'C38200' or value.code = 'C38215' or value.code = 'C38219' or value.code = 'C38220' or value.code = 'C38221' or value.code = 'C38222' or value.code = 'C38223' or value.code = 'C38224' or value.code = 'C38225' or value.code = 'C38226' or value.code = 'C38227' or value.code = 'C38228' or value.code = 'C38229' or value.code = 'C38230' or value.code = 'C38231' or value.code = 'C38232' or value.code = 'C38233' or value.code = 'C38234' or value.code = 'C38217' or value.code = 'C38218' or value.code = 'C38235' or value.code = 'C38238' or value.code = 'C38239' or value.code = 'C38240' or value.code = 'C38241' or value.code = 'C38242' or value.code = 'C38243' or value.code = 'C38245' or value.code = 'C38246' or value.code = 'C38247' or value.code = 'C38249' or value.code = 'C38250' or value.code = 'C38251' or value.code = 'C38252' or value.code = 'C38253' or value.code = 'C38254' or value.code = 'C28161' or value.code = 'C38255' or value.code = 'C38256' or value.code = 'C38257' or value.code = 'C38258' or value.code = 'C38259' or value.code = 'C38260' or value.code = 'C38261' or value.code = 'C38262' or value.code = 'C38263' or value.code = 'C38264' or value.code = 'C38265' or value.code = 'C38266' or value.code = 'C38267' or value.code = 'C38207' or value.code = 'C38268' or value.code = 'C38269' or value.code = 'C38270' or value.code = 'C38272' or value.code = 'C38273' or value.code = 'C38276' or value.code = 'C38277' or value.code = 'C38278' or value.code = 'C38280' or value.code = 'C38203' or value.code = 'C38281' or value.code = 'C38282' or value.code = 'C38284' or value.code = 'C38285' or value.code = 'C48623' or value.code = 'C38286' or value.code = 'C38287' or value.code = 'C38288' or value.code = 'C38289' or value.code = 'C38291' or value.code = 'C38676' or value.code = 'C38292' or value.code = 'C38677' or value.code = 'C38293' or value.code = 'C38294' or value.code = 'C38295' or value.code = 'C38216' or value.code = 'C38296' or value.code = 'C38198' or value.code = 'C38297' or value.code = 'C38298' or value.code = 'C38299' or value.code = 'C38300' or value.code = 'C38301' or value.code = 'C38304' or value.code = 'C38305' or value.code = 'C38283' or value.code = 'C38307' or value.code = 'C38308' or value.code = 'C38309' or value.code = 'C38312' or value.code = 'C38271'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u0zdMIokEeSkH97cUQxLGA" name="ImmunizationActivityApproachSiteCodeP" constrainedElement="_2MAoIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u0zdMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.approachSiteCode->isEmpty() or self.approachSiteCode->exists(element | element.isNullFlavorUndefined())) implies (not self.approachSiteCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u0wZ4IokEeSkH97cUQxLGA" name="ImmunizationActivityApproachSiteCode" constrainedElement="_2MAoIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u0wZ4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.approachSiteCode->isEmpty() or self.approachSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.approachSiteCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.96' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u02ggIokEeSkH97cUQxLGA" name="ImmunizationActivityDoseQuantity" constrainedElement="_2MAoIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u02ggYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.doseQuantity.oclIsUndefined() or self.doseQuantity.isNullFlavorUndefined()) implies (not self.doseQuantity.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u048wIokEeSkH97cUQxLGA" name="ImmunizationActivityNegationInd" constrainedElement="_2MAoIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u048wYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.negationInd.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u06K4IokEeSkH97cUQxLGA" name="ImmunizationActivityText" constrainedElement="_2MAoIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u06K4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.text.oclIsUndefined() or self.text.isNullFlavorUndefined()) implies (not self.text.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u08nIIokEeSkH97cUQxLGA" name="ImmunizationActivityRepeatNumber" constrainedElement="_2MAoIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u08nIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.repeatNumber.oclIsUndefined() or self.repeatNumber.isNullFlavorUndefined()) implies (not self.repeatNumber.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u1BfoIokEeSkH97cUQxLGA" name="ImmunizationActivityAdministrationUnitCodeP" constrainedElement="_2MAoIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u1BfoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.administrationUnitCode.oclIsUndefined() or self.administrationUnitCode.isNullFlavorUndefined()) implies (not self.administrationUnitCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u0_DYIokEeSkH97cUQxLGA" name="ImmunizationActivityAdministrationUnitCode" constrainedElement="_2MAoIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u0_DYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.administrationUnitCode.oclIsUndefined() or self.administrationUnitCode.isNullFlavorUndefined()) implies (not self.administrationUnitCode.oclIsUndefined() and self.administrationUnitCode.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.administrationUnitCode.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and (value.code = 'C42887' or value.code = 'C42888' or value.code = 'C42960' or value.code = 'C42971' or value.code = 'C42889' or value.code = 'C42892' or value.code = 'C42890' or value.code = 'C43451' or value.code = 'C42891' or value.code = 'C25158' or value.code = 'C42895' or value.code = 'C42896' or value.code = 'C42917' or value.code = 'C42902' or value.code = 'C42904' or value.code = 'C42916' or value.code = 'C42928' or value.code = 'C42936' or value.code = 'C42954' or value.code = 'C45414' or value.code = 'C42678' or value.code = 'C60884' or value.code = 'C60891' or value.code = 'C42900' or value.code = 'C42919' or value.code = 'C28944' or value.code = 'C60897' or value.code = 'C42901' or value.code = 'C45415' or value.code = 'C47890' or value.code = 'C43525' or value.code = 'C42679' or value.code = 'C42763' or value.code = 'C17423' or value.code = 'C42912' or value.code = 'C42913' or value.code = 'C42915' or value.code = 'C42929' or value.code = 'C60926' or value.code = 'C42932' or value.code = 'C42920' or value.code = 'C42984' or value.code = 'C60927' or value.code = 'C60928' or value.code = 'C60929' or value.code = 'C42933' or value.code = 'C42934' or value.code = 'C42906' or value.code = 'C60930' or value.code = 'C48193' or value.code = 'C42937' or value.code = 'C45416' or value.code = 'C42938' or value.code = 'C42903' or value.code = 'C42909' or value.code = 'C42939' or value.code = 'C42940' or value.code = 'C42921' or value.code = 'C42941' or value.code = 'C42894' or value.code = 'C42978' or value.code = 'C42942' or value.code = 'C42944' or value.code = 'C60931' or value.code = 'C42946' or value.code = 'C42914' or value.code = 'C42950' or value.code = 'C42974' or value.code = 'C42976' or value.code = 'C42977' or value.code = 'C42959' or value.code = 'C42957' or value.code = 'C42958' or value.code = 'C42956' or value.code = 'C42945' or value.code = 'C42899' or value.code = 'C42995' or value.code = 'C42926' or value.code = 'C42951' or value.code = 'C42988' or value.code = 'C60933' or value.code = 'C42922' or value.code = 'C47915' or value.code = 'C42947' or value.code = 'C42948' or value.code = 'C47916' or value.code = 'C45413' or value.code = 'C42949' or value.code = 'C42952' or value.code = 'C42953' or value.code = 'C60934' or value.code = 'C29167' or value.code = 'C60957' or value.code = 'C60958' or value.code = 'C42955' or value.code = 'C29269' or value.code = 'C42965' or value.code = 'C42966' or value.code = 'C60984' or value.code = 'C47887' or value.code = 'C42967' or value.code = 'C42907' or value.code = 'C60985' or value.code = 'C42968' or value.code = 'C42923' or value.code = 'C42911' or value.code = 'C42969' or value.code = 'C42943' or value.code = 'C42918' or value.code = 'C25394' or value.code = 'C42970' or value.code = 'C47913' or value.code = 'C42972' or value.code = 'C42908' or value.code = 'C42973' or value.code = 'C42975' or value.code = 'C42961' or value.code = 'C60988' or value.code = 'C42979' or value.code = 'C42980' or value.code = 'C42981' or value.code = 'C42982' or value.code = 'C42983' or value.code = 'C42986' or value.code = 'C42898' or value.code = 'C42987' or value.code = 'C60994' or value.code = 'C42935' or value.code = 'C60992' or value.code = 'C47912' or value.code = 'C42989' or value.code = 'C42962' or value.code = 'C42990' or value.code = 'C42991' or value.code = 'C47914' or value.code = 'C42993' or value.code = 'C42924' or value.code = 'C42994' or value.code = 'C42925' or value.code = 'C60995' or value.code = 'C47889' or value.code = 'C47898' or value.code = 'C42996' or value.code = 'C42998' or value.code = 'C42893' or value.code = 'C42897' or value.code = 'C60997' or value.code = 'C42905' or value.code = 'C42997' or value.code = 'C42910' or value.code = 'C42927' or value.code = 'C42931' or value.code = 'C42930' or value.code = 'C61004' or value.code = 'C61005' or value.code = 'C42964' or value.code = 'C42963' or value.code = 'C42999' or value.code = 'C61006' or value.code = 'C42985' or value.code = 'C42992' or value.code = 'C47892' or value.code = 'C47897' or value.code = 'C43000' or value.code = 'C43001' or value.code = 'C43002' or value.code = 'C43003'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u-chYIokEeSkH97cUQxLGA" name="ImmunizationActivityDrugVehicle" constrainedElement="_2MAoIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u-chYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->one(participant : cda::Participant2 | not participant.participantRole.oclIsUndefined() and participant.participantRole.oclIsKindOf(consol::DrugVehicle))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u-dvgIokEeSkH97cUQxLGA" name="ImmunizationActivityIndication" constrainedElement="_2MAoIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u-dvgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::Indication) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::RSON)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u-e9oIokEeSkH97cUQxLGA" name="ImmunizationActivityInstructions" constrainedElement="_2MAoIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u-e9oYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(consol::Instructions) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u-gLwIokEeSkH97cUQxLGA" name="ImmunizationActivityMedicationDispense" constrainedElement="_2MAoIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u-gLwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.supply.oclIsUndefined() and entryRelationship.supply.oclIsKindOf(consol::MedicationDispense) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u-hZ4IokEeSkH97cUQxLGA" name="ImmunizationActivityReactionObservation" constrainedElement="_2MAoIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u-hZ4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::ReactionObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::CAUS)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u-tAEIokEeSkH97cUQxLGA" name="ImmunizationActivityImmunizationRefusalReason" constrainedElement="_2MAoIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u-tAEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::ImmunizationRefusalReason) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::RSON)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u-50YIokEeSkH97cUQxLGA" name="ImmunizationActivityConsumable" constrainedElement="_2MAoIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u-50YYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.consumable->one(consumable : cda::Consumable | not consumable.oclIsUndefined() and consumable.oclIsKindOf(cda::Consumable))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vBsCoIokEeSkH97cUQxLGA" name="ImmunizationActivityPerformer" constrainedElement="_2MAoIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vBsCoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->one(performer : cda::Performer2 | not performer.oclIsUndefined() and performer.oclIsKindOf(rim::Participation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vCCn8IokEeSkH97cUQxLGA" name="ImmunizationActivityMedicationSupplyOrder" constrainedElement="_2MAoIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vCCn8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.supply.oclIsUndefined() and entryRelationship.supply.oclIsKindOf(consol::MedicationSupplyOrder) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wGMzoIokEeSkH97cUQxLGA" name="ImmunizationActivityPrecondition" constrainedElement="_2MAoIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wGMzoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.precondition->exists(precondition : cda::Precondition | not precondition.oclIsUndefined() and precondition.oclIsKindOf(cda::Precondition))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wPOMwIokEeSkH97cUQxLGA" name="ImmunizationActivityConsumableImmunizationMedicationInformation" constrainedElement="_2MAoIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wPOMwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.consumable->excluding(null)->reject(manufacturedProduct->one(manufacturedProduct : cda::ManufacturedProduct | not manufacturedProduct.oclIsUndefined() and manufacturedProduct.oclIsKindOf(consol::ImmunizationMedicationInformation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wPOz0IokEeSkH97cUQxLGA" name="ImmunizationActivityPreconditionTypeCode" constrainedElement="_2MAoIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wPOz0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.precondition->excluding(null)->reject(isDefined('typeCode') and typeCode=vocab::ActRelationshipType::PRCN)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wPPa4IokEeSkH97cUQxLGA" name="ImmunizationActivityPreconditionPreconditionForSubstanceAdministration" constrainedElement="_2MAoIBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wPPa4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.precondition->excluding(null)->reject(criterion->one(criterion : cda::Criterion | not criterion.oclIsUndefined() and criterion.oclIsKindOf(consol::PreconditionForSubstanceAdministration)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2MQfwxSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_nazskEbuEd6besF9iFIJkQ"/>
      </generalization>
      <ownedOperation xmi:id="_u-dIcIokEeSkH97cUQxLGA" name="getDrugVehicle" bodyCondition="_u-dIc4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_u-dIc4okEeSkH97cUQxLGA" name="body" constrainedElement="_u-dIcIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_u-dIdIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getParticipantRoles()->select(participantRole : cda::ParticipantRole | not participantRole.oclIsUndefined() and participantRole.oclIsKindOf(consol::DrugVehicle))->asSequence()->any(true).oclAsType(consol::DrugVehicle)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_u-dIcYokEeSkH97cUQxLGA" type="_VBXq8BUTEeG6PvUxSTZnaw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_u-dIcookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_u-eWkIokEeSkH97cUQxLGA" name="getIndication" bodyCondition="_u-eWk4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_u-eWk4okEeSkH97cUQxLGA" name="body" constrainedElement="_u-eWkIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_u-eWlIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::Indication))->asSequence()->any(true).oclAsType(consol::Indication)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_u-eWkYokEeSkH97cUQxLGA" type="_sHrUoBUSEeG6PvUxSTZnaw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_u-eWkookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_u-fksIokEeSkH97cUQxLGA" name="getInstructions" bodyCondition="_u-fks4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_u-fks4okEeSkH97cUQxLGA" name="body" constrainedElement="_u-fksIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_u-fktIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::Instructions))->asSequence()->any(true).oclAsType(consol::Instructions)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_u-fksYokEeSkH97cUQxLGA" type="_2G8h9RSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_u-fksookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_u-gy0IokEeSkH97cUQxLGA" name="getMedicationDispense" bodyCondition="_u-gy04okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_u-gy04okEeSkH97cUQxLGA" name="body" constrainedElement="_u-gy0IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_u-gy1IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getSupplies()->select(supply : cda::Supply | not supply.oclIsUndefined() and supply.oclIsKindOf(consol::MedicationDispense))->asSequence()->any(true).oclAsType(consol::MedicationDispense)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_u-gy0YokEeSkH97cUQxLGA" type="_DpoGkBUUEeG6PvUxSTZnaw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_u-gy0ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_u-iA8IokEeSkH97cUQxLGA" name="getReactionObservation" bodyCondition="_u-iA84okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_u-iA84okEeSkH97cUQxLGA" name="body" constrainedElement="_u-iA8IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_u-iA9IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ReactionObservation))->asSequence()->any(true).oclAsType(consol::ReactionObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_u-iA8YokEeSkH97cUQxLGA" type="_2E_aIRSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_u-iA8ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_u-tnIIokEeSkH97cUQxLGA" name="getImmunizationRefusalReason" bodyCondition="_u-tnI4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_u-tnI4okEeSkH97cUQxLGA" name="body" constrainedElement="_u-tnIIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_u-tnJIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ImmunizationRefusalReason))->asSequence()->any(true).oclAsType(consol::ImmunizationRefusalReason)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_u-tnIYokEeSkH97cUQxLGA" type="__qYdcBVNEeGbmN_W114JUw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_u-tnIookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vCD2EIokEeSkH97cUQxLGA" name="getMedicationSupplyOrder" bodyCondition="_vCD2E4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vCD2E4okEeSkH97cUQxLGA" name="body" constrainedElement="_vCD2EIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vCEdIIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getSupplies()->select(supply : cda::Supply | not supply.oclIsUndefined() and supply.oclIsKindOf(consol::MedicationSupplyOrder))->asSequence()->any(true).oclAsType(consol::MedicationSupplyOrder)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vCD2EYokEeSkH97cUQxLGA" type="_j3aTQBrTEeGo461UQq-B1g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vCD2EookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2MV_UBSVEeGGzu7fmW9pXw" name="PayersSection">
      <ownedComment xmi:id="_2NICcBSVEeGGzu7fmW9pXw" annotatedElement="_2MV_UBSVEeGGzu7fmW9pXw">
        <body>&lt;p>&#xD;
The Payers section contains data on the patient s payers, whether a  third party  insurance, self-pay, &#xD;
other payer or guarantor, or some combination of payers, and is used to define which entity is the&#xD;
 responsible fiduciary for the financial aspects of a patient s care.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
Each unique instance of a payer and all the pertinent data needed to contact, bill to, and collect from&#xD;
 that payer should be included. Authorization information that can be used to define pertinent referral, &#xD;
authorization tracking number, procedure, therapy, intervention, device, or similar authorizations for &#xD;
the patient or provider, or both should be included. At a minimum, the patient s pertinent current &#xD;
payment sources should be listed.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
The sources of payment are represented as a Coverage Activity, which identifies all of the insurance &#xD;
policies or government or other programs that cover some or all of the patient s healthcare expenses. &#xD;
The policies or programs are sequenced by preference. The Coverage Activity has a sequence number &#xD;
that represents the preference order. Each policy or program identifies the covered party &#xD;
with respect to the payer, so that the identifiers can be recorded.&#xD;
&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="_u1FKAIokEeSkH97cUQxLGA" name="PayersSectionTemplateId" constrainedElement="_2MV_UBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u1FKAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.18')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u1HmQIokEeSkH97cUQxLGA" name="PayersSectionCode" constrainedElement="_2MV_UBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u1HmQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '48768-6' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u1KCgIokEeSkH97cUQxLGA" name="PayersSectionCodeP" constrainedElement="_2MV_UBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u1KCgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u1MewIokEeSkH97cUQxLGA" name="PayersSectionTitle" constrainedElement="_2MV_UBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u1MewYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u1Ns4IokEeSkH97cUQxLGA" name="PayersSectionText" constrainedElement="_2MV_UBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u1Ns4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u9mM1YokEeSkH97cUQxLGA" name="PayersSectionCoverageActivity" constrainedElement="_2MV_UBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u9mM1ookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::CoverageActivity))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2NICchSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_u9na8IokEeSkH97cUQxLGA" name="getCoverageActivities" bodyCondition="_u9na84okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_u9na84okEeSkH97cUQxLGA" name="body" constrainedElement="_u9na8IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_u9na9IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::CoverageActivity)).oclAsType(consol::CoverageActivity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_u9na8YokEeSkH97cUQxLGA" type="_Cg3pkBUmEeGvPruliC3crg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_u9na8ookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2NIpgBSVEeGGzu7fmW9pXw" name="MedicationsSection">
      <ownedRule xmi:id="_u1QJIIokEeSkH97cUQxLGA" name="MedicationsSectionEntriesOptionalTemplateId" constrainedElement="_2NIpgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u1QJIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.1.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u1TMcIokEeSkH97cUQxLGA" name="MedicationsSectionCode" constrainedElement="_2NIpgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u1TMcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '10160-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u1VosIokEeSkH97cUQxLGA" name="MedicationsSectionTitle" constrainedElement="_2NIpgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u1VosYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u1Xd4IokEeSkH97cUQxLGA" name="MedicationsSectionText" constrainedElement="_2NIpgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u1YE8IokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u1ZTEIokEeSkH97cUQxLGA" name="MedicationsSectionMedication" constrainedElement="_2NIpgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u1ZTEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.substanceAdministration.oclIsUndefined() and entry.substanceAdministration.oclIsKindOf(consol::MedicationActivity))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_UeEpoBVgEeGQCvUGzi1kDQ" general="_iAoXEBVdEeGQCvUGzi1kDQ">
        <ownedComment xmi:id="_4MdWIHavEeGK39q3kclbsA">
          <body>couple</body>
        </ownedComment>
      </generalization>
      <ownedOperation xmi:id="_u1ahMIokEeSkH97cUQxLGA" name="getMedications" bodyCondition="_u1ahM4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_u1ahM4okEeSkH97cUQxLGA" name="body" constrainedElement="_u1ahMIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_u1ahNIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(consol::MedicationActivity)).oclAsType(consol::MedicationActivity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_u1ahMYokEeSkH97cUQxLGA" type="_2GHbgBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_u1ahMookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2NP-QxSVEeGGzu7fmW9pXw" name="PlanOfCareSection">
      <ownedComment xmi:id="_2N0mCRSVEeGGzu7fmW9pXw" annotatedElement="_2NP-QxSVEeGGzu7fmW9pXw">
        <body>The Plan of Care section contains data that defines pending orders, interventions, encounters, services, and procedures for the patient. It is limited to prospective, unfulfilled, or incomplete orders and requests only, which are indicated by the @moodCode of the entries within this section. All active, incomplete, or pending orders, appointments, referrals, procedures, services, or any other pending event of clinical significance to the current care of the patient should be listed unless constrained due to privacy issues. The plan may also contain information about ongoing care of the patient and information regarding goals and clinical reminders. Clinical reminders are placed here to provide prompts for disease prevention and management, patient safety, and health-care quality improvements, including widely accepted performance measures. The plan may also indicate that patient education was given or will be provided.</body>
      </ownedComment>
      <ownedRule xmi:id="_u1bIQIokEeSkH97cUQxLGA" name="PlanOfCareSectionTemplateId" constrainedElement="_2NP-QxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u1bIQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.10')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u1c9cIokEeSkH97cUQxLGA" name="PlanOfCareSectionCode" constrainedElement="_2NP-QxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u1dkgIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '18776-5' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u1fZsIokEeSkH97cUQxLGA" name="PlanOfCareSectionCodeP" constrainedElement="_2NP-QxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u1fZsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u1h18IokEeSkH97cUQxLGA" name="PlanOfCareSectionTitle" constrainedElement="_2NP-QxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u1h18YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u1jEEIokEeSkH97cUQxLGA" name="PlanOfCareSectionText" constrainedElement="_2NP-QxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u1jEEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u1rm8IokEeSkH97cUQxLGA" name="PlanOfCareSectionPlanOfCareActivityAct" constrainedElement="_2NP-QxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u1rm8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::PlanOfCareActivityAct))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u10J0IokEeSkH97cUQxLGA" name="PlanOfCareSectionPlanOfCareActivityEncounter" constrainedElement="_2NP-QxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u10J0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.encounter.oclIsUndefined() and entry.encounter.oclIsKindOf(consol::PlanOfCareActivityEncounter))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u19TwIokEeSkH97cUQxLGA" name="PlanOfCareSectionPlanOfCareActivityObservation" constrainedElement="_2NP-QxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u19TwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::PlanOfCareActivityObservation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u2GdsIokEeSkH97cUQxLGA" name="PlanOfCareSectionPlanOfCareActivityProcedure" constrainedElement="_2NP-QxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u2GdsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.procedure.oclIsUndefined() and entry.procedure.oclIsKindOf(consol::PlanOfCareActivityProcedure))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u2PAkIokEeSkH97cUQxLGA" name="PlanOfCareSectionPlanOfCareActivitySubstanceAdministration" constrainedElement="_2NP-QxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u2PAkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.substanceAdministration.oclIsUndefined() and entry.substanceAdministration.oclIsKindOf(consol::PlanOfCareActivitySubstanceAdministration))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u2XjcIokEeSkH97cUQxLGA" name="PlanOfCareSectionPlanOfCareActivitySupply" constrainedElement="_2NP-QxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u2XjcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.supply.oclIsUndefined() and entry.supply.oclIsKindOf(consol::PlanOfCareActivitySupply))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vRq_YIokEeSkH97cUQxLGA" name="PlanOfCareSectionInstructions" constrainedElement="_2NP-QxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vRq_YYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::Instructions))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_h0yLgBnTEeGs5a462vYX5Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_u1s1EIokEeSkH97cUQxLGA" name="getPlanOfCareActivityActs" bodyCondition="_u1s1E4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_u1s1E4okEeSkH97cUQxLGA" name="body" constrainedElement="_u1s1EIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_u1s1FIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::PlanOfCareActivityAct)).oclAsType(consol::PlanOfCareActivityAct)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_u1s1EYokEeSkH97cUQxLGA" type="_2NWE5xSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_u1s1EookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_u11X8IokEeSkH97cUQxLGA" name="getPlanOfCareActivityEncounters" bodyCondition="_u11X84okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_u11X84okEeSkH97cUQxLGA" name="body" constrainedElement="_u11X8IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_u11X9IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getEncounters()->select(encounter : cda::Encounter | not encounter.oclIsUndefined() and encounter.oclIsKindOf(consol::PlanOfCareActivityEncounter)).oclAsType(consol::PlanOfCareActivityEncounter)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_u11X8YokEeSkH97cUQxLGA" type="_2NWFBBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_u11X8ookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_u1960IokEeSkH97cUQxLGA" name="getPlanOfCareActivityObservations" bodyCondition="_u19604okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_u19604okEeSkH97cUQxLGA" name="body" constrainedElement="_u1960IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_u1961IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::PlanOfCareActivityObservation)).oclAsType(consol::PlanOfCareActivityObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_u1960YokEeSkH97cUQxLGA" type="_2NcLjhSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_u1960ookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_u2HEwIokEeSkH97cUQxLGA" name="getPlanOfCareActivityProcedures" bodyCondition="_u2Hr0YokEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_u2Hr0YokEeSkH97cUQxLGA" name="body" constrainedElement="_u2HEwIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_u2Hr0ookEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getProcedures()->select(procedure : cda::Procedure | not procedure.oclIsUndefined() and procedure.oclIsKindOf(consol::PlanOfCareActivityProcedure)).oclAsType(consol::PlanOfCareActivityProcedure)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_u2HEwYokEeSkH97cUQxLGA" type="_2NiSKhSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_u2Hr0IokEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_u2PnoIokEeSkH97cUQxLGA" name="getPlanOfCareActivitySubstanceAdministrations" bodyCondition="_u2Pno4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_u2Pno4okEeSkH97cUQxLGA" name="body" constrainedElement="_u2PnoIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_u2PnpIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(consol::PlanOfCareActivitySubstanceAdministration)).oclAsType(consol::PlanOfCareActivitySubstanceAdministration)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_u2PnoYokEeSkH97cUQxLGA" type="_2NoYwxSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_u2PnoookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_u2YxkIokEeSkH97cUQxLGA" name="getPlanOfCareActivitySupplies" bodyCondition="_u2ZYoYokEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_u2ZYoYokEeSkH97cUQxLGA" name="body" constrainedElement="_u2YxkIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_u2ZYoookEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getSupplies()->select(supply : cda::Supply | not supply.oclIsUndefined() and supply.oclIsKindOf(consol::PlanOfCareActivitySupply)).oclAsType(consol::PlanOfCareActivitySupply)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_u2YxkYokEeSkH97cUQxLGA" type="_2NoY5BSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_u2ZYoIokEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vRsNgIokEeSkH97cUQxLGA" name="getInstructionss" bodyCondition="_vRs0kIokEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vRs0kIokEeSkH97cUQxLGA" name="body" constrainedElement="_vRsNgIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vRs0kYokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::Instructions)).oclAsType(consol::Instructions)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vRsNgYokEeSkH97cUQxLGA" type="_2G8h9RSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vRsNgookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2NWE5xSVEeGGzu7fmW9pXw" name="PlanOfCareActivityAct">
      <ownedRule xmi:id="_u1kSMIokEeSkH97cUQxLGA" name="PlanOfCareActivityActTemplateId" constrainedElement="_2NWE5xSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u1k5QIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.39')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u1mHYIokEeSkH97cUQxLGA" name="PlanOfCareActivityActClassCode" constrainedElement="_2NWE5xSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u1mHYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryAct::ACT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u1n8kIokEeSkH97cUQxLGA" name="PlanOfCareActivityActMoodCode" constrainedElement="_2NWE5xSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u1n8kYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.moodCode.oclIsUndefined() and self.moodCode.oclIsKindOf(vocab::x_DocumentActMood) and &#xD;
let value : vocab::x_DocumentActMood = self.moodCode.oclAsType(vocab::x_DocumentActMood) in &#xD;
value = vocab::x_DocumentActMood::INT or value = vocab::x_DocumentActMood::ARQ or value = vocab::x_DocumentActMood::PRMS or value = vocab::x_DocumentActMood::PRP or value = vocab::x_DocumentActMood::RQO</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u1qY0IokEeSkH97cUQxLGA" name="PlanOfCareActivityActId" constrainedElement="_2NWE5xSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u1qY0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2NWE_RSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2NWFBBSVEeGGzu7fmW9pXw" name="PlanOfCareActivityEncounter">
      <ownedRule xmi:id="_u1s1FYokEeSkH97cUQxLGA" name="PlanOfCareActivityEncounterTemplateId" constrainedElement="_2NWFBBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u1s1FookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.40')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u1uqQIokEeSkH97cUQxLGA" name="PlanOfCareActivityEncounterClassCode" constrainedElement="_2NWFBBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u1uqQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClass::ENC</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u1wfcIokEeSkH97cUQxLGA" name="PlanOfCareActivityEncounterMoodCode" constrainedElement="_2NWFBBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u1wfcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.moodCode.oclIsUndefined() and self.moodCode.oclIsKindOf(vocab::x_DocumentEncounterMood) and &#xD;
let value : vocab::x_DocumentEncounterMood = self.moodCode.oclAsType(vocab::x_DocumentEncounterMood) in &#xD;
value = vocab::x_DocumentEncounterMood::INT or value = vocab::x_DocumentEncounterMood::ARQ or value = vocab::x_DocumentEncounterMood::PRMS or value = vocab::x_DocumentEncounterMood::PRP or value = vocab::x_DocumentEncounterMood::RQO</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u1yUoIokEeSkH97cUQxLGA" name="PlanOfCareActivityEncounterId" constrainedElement="_2NWFBBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u1yUoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2NcLhxSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_AAXtEEbvEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2NcLjhSVEeGGzu7fmW9pXw" name="PlanOfCareActivityObservation">
      <ownedRule xmi:id="_u11X9YokEeSkH97cUQxLGA" name="PlanOfCareActivityObservationTemplateId" constrainedElement="_2NcLjhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u11_AIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.44')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u13NIIokEeSkH97cUQxLGA" name="PlanOfCareActivityObservationClassCode" constrainedElement="_2NcLjhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u13NIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u15pYIokEeSkH97cUQxLGA" name="PlanOfCareActivityObservationMoodCode" constrainedElement="_2NcLjhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u15pYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.moodCode.oclIsUndefined() and self.moodCode.oclIsKindOf(vocab::x_ActMoodDocumentObservation) and &#xD;
let value : vocab::x_ActMoodDocumentObservation = self.moodCode.oclAsType(vocab::x_ActMoodDocumentObservation) in &#xD;
value = vocab::x_ActMoodDocumentObservation::INT or value = vocab::x_ActMoodDocumentObservation::GOL or value = vocab::x_ActMoodDocumentObservation::PRMS or value = vocab::x_ActMoodDocumentObservation::PRP or value = vocab::x_ActMoodDocumentObservation::RQO</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u18FoIokEeSkH97cUQxLGA" name="PlanOfCareActivityObservationId" constrainedElement="_2NcLjhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u18FoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2NiSIxSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2NiSKhSVEeGGzu7fmW9pXw" name="PlanOfCareActivityProcedure">
      <ownedRule xmi:id="_u1-h4IokEeSkH97cUQxLGA" name="PlanOfCareActivityProcedureTemplateId" constrainedElement="_2NiSKhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u1-h4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.41')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u1_wAIokEeSkH97cUQxLGA" name="PlanOfCareActivityProcedureClassCode" constrainedElement="_2NiSKhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u1_wAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClass::PROC</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u2CMQIokEeSkH97cUQxLGA" name="PlanOfCareActivityProcedureMoodCode" constrainedElement="_2NiSKhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u2CMQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.moodCode.oclIsUndefined() and self.moodCode.oclIsKindOf(vocab::x_DocumentProcedureMood) and &#xD;
let value : vocab::x_DocumentProcedureMood = self.moodCode.oclAsType(vocab::x_DocumentProcedureMood) in &#xD;
value = vocab::x_DocumentProcedureMood::INT or value = vocab::x_DocumentProcedureMood::ARQ or value = vocab::x_DocumentProcedureMood::PRMS or value = vocab::x_DocumentProcedureMood::PRP or value = vocab::x_DocumentProcedureMood::RQO</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u2EogIokEeSkH97cUQxLGA" name="PlanOfCareActivityProcedureId" constrainedElement="_2NiSKhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u2EogYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2NiSPhSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_-jiisEbuEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2NoYwxSVEeGGzu7fmW9pXw" name="PlanOfCareActivitySubstanceAdministration">
      <ownedRule xmi:id="_u2Hr04okEeSkH97cUQxLGA" name="PlanOfCareActivitySubstanceAdministrationTemplateId" constrainedElement="_2NoYwxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u2Hr1IokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.42')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u2JhAIokEeSkH97cUQxLGA" name="PlanOfCareActivitySubstanceAdministrationClassCode" constrainedElement="_2NoYwxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u2JhAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClass::SBADM</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u2LWMIokEeSkH97cUQxLGA" name="PlanOfCareActivitySubstanceAdministrationMoodCode" constrainedElement="_2NoYwxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u2LWMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.moodCode.oclIsUndefined() and self.moodCode.oclIsKindOf(vocab::x_DocumentSubstanceMood) and &#xD;
let value : vocab::x_DocumentSubstanceMood = self.moodCode.oclAsType(vocab::x_DocumentSubstanceMood) in &#xD;
value = vocab::x_DocumentSubstanceMood::INT or value = vocab::x_DocumentSubstanceMood::PRMS or value = vocab::x_DocumentSubstanceMood::PRP or value = vocab::x_DocumentSubstanceMood::RQO</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u2NycIokEeSkH97cUQxLGA" name="PlanOfCareActivitySubstanceAdministrationId" constrainedElement="_2NoYwxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u2NycYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2NoY3RSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_nazskEbuEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2NoY5BSVEeGGzu7fmW9pXw" name="PlanOfCareActivitySupply">
      <ownedRule xmi:id="_u2QOsIokEeSkH97cUQxLGA" name="PlanOfCareActivitySupplyTemplateId" constrainedElement="_2NoY5BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u2QOsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.43')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u2Rc0IokEeSkH97cUQxLGA" name="PlanOfCareActivitySupplyClassCode" constrainedElement="_2NoY5BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u2Rc0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassSupply::SPLY</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u2TSAIokEeSkH97cUQxLGA" name="PlanOfCareActivitySupplyMoodCode" constrainedElement="_2NoY5BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u2TSAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.moodCode.oclIsUndefined() and self.moodCode.oclIsKindOf(vocab::x_DocumentSubstanceMood) and &#xD;
let value : vocab::x_DocumentSubstanceMood = self.moodCode.oclAsType(vocab::x_DocumentSubstanceMood) in &#xD;
value = vocab::x_DocumentSubstanceMood::INT or value = vocab::x_DocumentSubstanceMood::PRMS or value = vocab::x_DocumentSubstanceMood::PRP or value = vocab::x_DocumentSubstanceMood::RQO</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u2VuQIokEeSkH97cUQxLGA" name="PlanOfCareActivitySupplyId" constrainedElement="_2NoY5BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u2VuQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2NufZhSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_3gL0sEbuEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2N6soBSVEeGGzu7fmW9pXw" name="PregnancyObservation">
      <ownedComment xmi:id="_9RKMYDyWEeGOm9opnDhYAQ">
        <body>This clinical statement represents current and/or prior pregnancy dates enabling investigators to determine if the subject of the case report was pregnant during the course of a condition.</body>
      </ownedComment>
      <ownedRule xmi:id="_u2ZYo4okEeSkH97cUQxLGA" name="PregnancyObservationTemplateId" constrainedElement="_2N6soBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u2ZYpIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.15.3.8')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u2bN0IokEeSkH97cUQxLGA" name="PregnancyObservationClassCode" constrainedElement="_2N6soBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u2bN0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u2cb8IokEeSkH97cUQxLGA" name="PregnancyObservationMoodCode" constrainedElement="_2N6soBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u2cb8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u2hUcIokEeSkH97cUQxLGA" name="PregnancyObservationCodeP" constrainedElement="_2N6soBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u2hUcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u2e4MIokEeSkH97cUQxLGA" name="PregnancyObservationCode" constrainedElement="_2N6soBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u2e4MYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = 'ASSERTION' and value.codeSystem = '2.16.840.1.113883.5.4')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u2jwsIokEeSkH97cUQxLGA" name="PregnancyObservationStatusCode" constrainedElement="_2N6soBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u2jwsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u2mM8IokEeSkH97cUQxLGA" name="PregnancyObservationValue" constrainedElement="_2N6soBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u2mM8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.code = '77386006' and value.codeSystem = '2.16.840.1.113883.6.96'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u2opMIokEeSkH97cUQxLGA" name="PregnancyObservationValueP" constrainedElement="_2N6soBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u2opMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u2qeYIokEeSkH97cUQxLGA" name="PregnancyObservationEffectiveTime" constrainedElement="_2N6soBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u2rFcIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vCjlUIokEeSkH97cUQxLGA" name="PregnancyObservationEstimatedDateOfDelivery" constrainedElement="_2N6soBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vCjlUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::EstimatedDateOfDelivery) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2N6sxxSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_vCkMYIokEeSkH97cUQxLGA" name="getEstimatedDateOfDelivery" bodyCondition="_vCkzcYokEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vCkzcYokEeSkH97cUQxLGA" name="body" constrainedElement="_vCkMYIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vCkzcookEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::EstimatedDateOfDelivery))->asSequence()->any(true).oclAsType(consol::EstimatedDateOfDelivery)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vCkMYYokEeSkH97cUQxLGA" type="_vBswQBtpEeGT89b80j3MTg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vCkzcIokEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2OAzQRSVEeGGzu7fmW9pXw" name="ProceduresSection">
      <ownedComment xmi:id="_2OfUahSVEeGGzu7fmW9pXw" annotatedElement="_2OAzQRSVEeGGzu7fmW9pXw">
        <body>This section defines all interventional, surgical, diagnostic, or therapeutic procedures or treatments pertinent to the patient historically at the time the document is generated. The section is intended to include notable procedures, but can contain all procedures for the period of time being summarized. The common notion of &quot;procedure&quot; is broader than that specified by the HL7 Version 3 Reference Information Model (RIM). Therefore this section contains procedure templates represented with three RIM classes: Act. Observation, and Procedure. Procedure act is for procedures the alter that physical condition of a patient (Splenectomy). Observation act is for procedures that result in new information about a patient but do not cause physical alteration (EEG). Act is for all other types of procedures (dressing change).&#xD;
The length of an encounter is documented in the documentationOf/encompassingEncounter/effectiveTime and length of service in documentationOf/ServiceEvent/effectiveTime.</body>
      </ownedComment>
      <ownedRule xmi:id="_2OfUZxSVEeGGzu7fmW9pXw" name="ProceduresSectionHasProcedureActivity">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2OfUaBSVEeGGzu7fmW9pXw">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies self.getActs()->exists(a : cda::Act | a.oclIsKindOf(consol::ProcedureActivityAct)) or self.getObservations()->exists(o : cda::Observation | o.oclIsKindOf(consol::ProcedureActivityObservation)) or self.getProcedures()->exists(p : cda::Procedure | p.oclIsKindOf(consol::ProcedureActivityProcedure))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u2sTkYokEeSkH97cUQxLGA" name="ProceduresSectionEntriesOptionalTemplateId" constrainedElement="_2OAzQRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u2sTkookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.7.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u2uv0IokEeSkH97cUQxLGA" name="ProceduresSectionTitle" constrainedElement="_2OAzQRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u2uv0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u2zoUIokEeSkH97cUQxLGA" name="ProceduresSectionEntriesOptionalCodeP" constrainedElement="_2OAzQRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u2zoUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u2xMEIokEeSkH97cUQxLGA" name="ProceduresSectionEntriesOptionalCode" constrainedElement="_2OAzQRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u2xMEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '47519-4' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u22EkIokEeSkH97cUQxLGA" name="ProceduresSectionEntriesOptionalText" constrainedElement="_2OAzQRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u22EkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vR96UIokEeSkH97cUQxLGA" name="ProceduresSectionProcedureActivityProcedure" constrainedElement="_2OAzQRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vR96UYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.procedure.oclIsUndefined() and entry.procedure.oclIsKindOf(consol::ProcedureActivityProcedure))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vR_IdYokEeSkH97cUQxLGA" name="ProceduresSectionProcedureActivityObservation" constrainedElement="_2OAzQRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vR_vgIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::ProcedureActivityObservation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vSA9oIokEeSkH97cUQxLGA" name="ProceduresSectionProcedureActivityAct" constrainedElement="_2OAzQRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vSA9oYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::ProcedureActivityAct))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_gNO_cBVgEeGQCvUGzi1kDQ" general="_s9Ig4BVdEeGQCvUGzi1kDQ">
        <ownedComment xmi:id="_G90uIHavEeGK39q3kclbsA">
          <body>couple</body>
        </ownedComment>
      </generalization>
      <ownedOperation xmi:id="_vR_IcIokEeSkH97cUQxLGA" name="getConsolProcedureActivityProcedures" bodyCondition="_vR_Ic4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vR_Ic4okEeSkH97cUQxLGA" name="body" constrainedElement="_vR_IcIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vR_IdIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getProcedures()->select(procedure : cda::Procedure | not procedure.oclIsUndefined() and procedure.oclIsKindOf(consol::ProcedureActivityProcedure)).oclAsType(consol::ProcedureActivityProcedure)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vR_IcYokEeSkH97cUQxLGA" type="_2OG58RSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vR_IcookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vSAWkIokEeSkH97cUQxLGA" name="getConsolProcedureActivityObservations" bodyCondition="_vSAWk4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vSAWk4okEeSkH97cUQxLGA" name="body" constrainedElement="_vSAWkIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vSAWlIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProcedureActivityObservation)).oclAsType(consol::ProcedureActivityObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vSAWkYokEeSkH97cUQxLGA" type="_Aj7JkBg4EeGs5a462vYX5Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vSAWkookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vSBksIokEeSkH97cUQxLGA" name="getConsolProcedureActivityActs" bodyCondition="_vSBks4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vSBks4okEeSkH97cUQxLGA" name="body" constrainedElement="_vSBksIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vSBktIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::ProcedureActivityAct)).oclAsType(consol::ProcedureActivityAct)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vSBksYokEeSkH97cUQxLGA" type="_awdH4Bg4EeGs5a462vYX5Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vSBksookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2OG58RSVEeGGzu7fmW9pXw" name="ProcedureActivityProcedure">
      <ownedComment xmi:id="_w6NZEBxxEeGXP8PxDYviDg">
        <body>The common notion of &quot;procedure&quot; is broader than that specified by the HL7 Version 3 Reference Information Model (RIM). Therefore procedure templates can be represented with various RIM classes: act (e.g., dressing change), observation (e.g., EEG), procedure (e.g. splenectomy). &#xD;
This clinical statement represents procedures whose immediate and primary outcome (post-condition) is the alteration of the physical condition of the patient. Examples of these procedures are an appendectomy, hip replacement and a creation of a gastrostomy.</body>
      </ownedComment>
      <ownedRule xmi:id="_qGzKgBrPEeGxIZCGAXKxsQ" name="ProcedureActivityProcedureCodeCodeSystems" constrainedElement="_2OG58RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_8J3uYBrPEeGxIZCGAXKxsQ">
          <language>OCL</language>
          <body>self.code.isNullFlavorDefined() or self.code.codeSystem = '2.16.840.1.113883.6.1' xor self.code.codeSystem = '2.16.840.1.113883.6.96' xor self.code.codeSystem = '2.16.840.1.113883.6.12' xor self.code.codeSystem = '2.16.840.1.113883.6.4'</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_N4ba0BrQEeGxIZCGAXKxsQ" name="ProcedureActivityProcedureCodeOriginalText" constrainedElement="_qGzKgBrPEeGxIZCGAXKxsQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_VYc2sBrQEeGxIZCGAXKxsQ">
          <language>OCL</language>
          <body>not code.oclIsUndefined() implies not code.originalText.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_WEQMwBrQEeGxIZCGAXKxsQ" name="ProcedureActivityProcedureOriginalTextReference" constrainedElement="_N4ba0BrQEeGxIZCGAXKxsQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Pp6KEBrREeGxIZCGAXKxsQ">
          <language>OCL</language>
          <body>not self.code.originalText.oclIsUndefined() implies self.code.originalText->one(reference->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oeKDoOVwEeGpoIKFyl7L7w" name="ProcedureActivityProcedureOriginalTextReferenceValue" constrainedElement="_WEQMwBrQEeGxIZCGAXKxsQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uftWYOVwEeGpoIKFyl7L7w">
          <language>OCL</language>
          <body>self.code.originalText.reference->size() = 1 implies self.code.originalText.reference.value->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_SSUWwBrREeGxIZCGAXKxsQ" name="ProcedureActivityProcedureReferenceValue" constrainedElement="_WEQMwBrQEeGxIZCGAXKxsQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_VD9X8BrREeGxIZCGAXKxsQ">
          <language>OCL</language>
          <body>not self.code.originalText.reference.value.oclIsUndefined() implies not self.getSection().text.getText(self.code.originalText.reference.value.substring(2, self.code.originalText.reference.value.size())).oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t6LqgBxZEeGXP8PxDYviDg" name="ProcedureActivityProcedureEncounterInversion">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_7DYVYBxZEeGXP8PxDYviDg">
          <language>OCL</language>
          <body>self.entryRelationship->select(er : cda::EntryRelationship | er.encounter->size() > 0)->forAll(ent : cda::EntryRelationship | ent.inversionInd=true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_9s2SABxZEeGXP8PxDYviDg" name="ProcedureActivityProcedureProductInstanceTypeCode" constrainedElement="_t6LqgBxZEeGXP8PxDYviDg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_FdoGsBxaEeGXP8PxDYviDg">
          <language>OCL</language>
          <body>self.participant->select(par : cda::Participant2 | par.participantRole.oclIsKindOf(consol::ProductInstance))->forAll(p : cda::Participant2 | p.typeCode=vocab::ParticipationType::DEV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_JHSVABxaEeGXP8PxDYviDg" name="ProcedureActivityProcedureServiceDeliveryLocationTypeCode" constrainedElement="_9s2SABxZEeGXP8PxDYviDg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Pf0kYBxaEeGXP8PxDYviDg">
          <language>OCL</language>
          <body>self.participant->select(par : cda::Participant2 | par.participantRole.oclIsKindOf(consol::ServiceDeliveryLocation))->forAll(p : cda::Participant2 | p.typeCode=vocab::ParticipationType::LOC)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_5r5qcBxsEeGXP8PxDYviDg" name="ProcedureActivityProcedureInstructionsInversion">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_5r5qcRxsEeGXP8PxDYviDg">
          <language>OCL</language>
          <body>self.entryRelationship->select(er : cda::EntryRelationship | er.act.oclIsTypeOf(consol::Instructions))->forAll(ent : cda::EntryRelationship | ent.inversionInd=true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u23SsIokEeSkH97cUQxLGA" name="ProcedureActivityProcedureTemplateId" constrainedElement="_2OG58RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u23SsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.14')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u2-AYIokEeSkH97cUQxLGA" name="ProcedureActivityProcedureClassCode" constrainedElement="_2OG58RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u2-ncIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClass::PROC</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u2_1kIokEeSkH97cUQxLGA" name="ProcedureActivityProcedureMoodCode" constrainedElement="_2OG58RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u2_1kYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.moodCode.oclIsUndefined() and self.moodCode.oclIsKindOf(vocab::x_DocumentProcedureMood) and &#xD;
let value : vocab::x_DocumentProcedureMood = self.moodCode.oclAsType(vocab::x_DocumentProcedureMood) in &#xD;
value = vocab::x_DocumentProcedureMood::EVN or value = vocab::x_DocumentProcedureMood::INT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u3CR0IokEeSkH97cUQxLGA" name="ProcedureActivityProcedureId" constrainedElement="_2OG58RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u3CR0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u3Df8IokEeSkH97cUQxLGA" name="ProcedureActivityProcedureCode" constrainedElement="_2OG58RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u3Df8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u3FVIIokEeSkH97cUQxLGA" name="ProcedureActivityProcedureStatusCode" constrainedElement="_2OG58RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u3FVIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'completed' or value.code = 'active' or value.code = 'aborted' or value.code = 'cancelled')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u3I_gIokEeSkH97cUQxLGA" name="ProcedureActivityProcedureEffectiveTime" constrainedElement="_2OG58RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u3I_gYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u3PGIIokEeSkH97cUQxLGA" name="ProcedureActivityProcedurePriorityCodeP" constrainedElement="_2OG58RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u3PtMIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.priorityCode.oclIsUndefined() or self.priorityCode.isNullFlavorUndefined()) implies (not self.priorityCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u3Mp4IokEeSkH97cUQxLGA" name="ProcedureActivityProcedurePriorityCode" constrainedElement="_2OG58RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u3Mp4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.priorityCode.oclIsUndefined() or self.priorityCode.isNullFlavorUndefined()) implies (not self.priorityCode.oclIsUndefined() and self.priorityCode.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.priorityCode.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.5.7' and (value.code = 'A' or value.code = 'CR' or value.code = 'CS' or value.code = 'CSP' or value.code = 'CSR' or value.code = 'EL' or value.code = 'EM' or value.code = 'P' or value.code = 'PRN' or value.code = 'R' or value.code = 'RR' or value.code = 'S' or value.code = 'T' or value.code = 'UD' or value.code = 'UR'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u3SJcIokEeSkH97cUQxLGA" name="ProcedureActivityProcedureMethodCode" constrainedElement="_2OG58RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u3SJcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.methodCode->isEmpty() or self.methodCode->exists(element | element.isNullFlavorUndefined())) implies (not self.methodCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u3Wa4IokEeSkH97cUQxLGA" name="ProcedureActivityProcedureTargetSiteCodeP" constrainedElement="_2OG58RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u3Wa4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (not self.targetSiteCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u3T-oIokEeSkH97cUQxLGA" name="ProcedureActivityProcedureTargetSiteCode" constrainedElement="_2OG58RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u3T-oYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.targetSiteCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.96' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u3ouwIokEeSkH97cUQxLGA" name="ProcedureActivityProcedureIndication" constrainedElement="_2OG58RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u3ouwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::Indication) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::RSON)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u3p85YokEeSkH97cUQxLGA" name="ProcedureActivityProcedureSpecimen" constrainedElement="_2OG58RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u3p85ookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.specimen->exists(specimen : cda::Specimen | not specimen.oclIsUndefined() and specimen.oclIsKindOf(cda::Specimen))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u3rLAIokEeSkH97cUQxLGA" name="ProcedureActivityProcedureServiceDeliveryLocation" constrainedElement="_2OG58RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u3rLAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->exists(participant : cda::Participant2 | not participant.participantRole.oclIsUndefined() and participant.participantRole.oclIsKindOf(consol::ServiceDeliveryLocation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u3sZIIokEeSkH97cUQxLGA" name="ProcedureActivityProcedurePerformer" constrainedElement="_2OG58RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u3sZIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->exists(performer : cda::Performer2 | not performer.oclIsUndefined() and performer.oclIsKindOf(cda::Performer2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u3tAMIokEeSkH97cUQxLGA" name="ProcedureActivityProcedureMedicationActivity" constrainedElement="_2OG58RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u3tAMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.substanceAdministration.oclIsUndefined() and entryRelationship.substanceAdministration.oclIsKindOf(consol::MedicationActivity) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u3uOUIokEeSkH97cUQxLGA" name="ProcedureActivityProcedurePatientInstruction" constrainedElement="_2OG58RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u3uOUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(consol::Instructions) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vCLx5IokEeSkH97cUQxLGA" name="ProcedureActivityProcedureProductInstance" constrainedElement="_2OG58RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vCLx5YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->exists(participant : cda::Participant2 | not participant.participantRole.oclIsUndefined() and participant.participantRole.oclIsKindOf(consol::ProductInstance))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vRn8EIokEeSkH97cUQxLGA" name="ProcedureActivityProcedureEntryRelationship" constrainedElement="_2OG58RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vRn8EYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->select(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))->select(typeCode=vocab::x_ActRelationshipEntryRelationship::COMP and not encounter.oclIsUndefined() and encounter.oclIsKindOf(cda::Encounter))->notEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wPRQEIokEeSkH97cUQxLGA" name="ProcedureActivityProcedureProcedureSpecimenSpecimenRole" constrainedElement="_2OG58RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wPRQEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.specimen->excluding(null)->reject(specimenRole->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wPR3IIokEeSkH97cUQxLGA" name="ProcedureActivityProcedureProcedureSpecimenSpecimentRoleId" constrainedElement="_2OG58RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wPR3IYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.specimen->excluding(null)->reject(specimenRole.id->size() > 0)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wPUTYIokEeSkH97cUQxLGA" name="ProcedureActivityProcedureProcedureActivityPerformerProcedureActivityAssignedEntityProcedureActivityRepresentedOrganizationId" constrainedElement="_2OG58RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wPUTYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null).assignedEntity->excluding(null).representedOrganization->excluding(null)->reject((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wPUTYookEeSkH97cUQxLGA" name="ProcedureActivityProcedureProcedureActivityPerformerProcedureActivityAssignedEntityProcedureActivityRepresentedOrganizationName" constrainedElement="_2OG58RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wPUTY4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null).assignedEntity->excluding(null).representedOrganization->excluding(null)->reject((name->isEmpty() or name->exists(element | element.isNullFlavorUndefined())) implies (not name->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wPU6cIokEeSkH97cUQxLGA" name="ProcedureActivityProcedureProcedureActivityPerformerProcedureActivityAssignedEntityProcedureActivityRepresentedOrganizationTelecom" constrainedElement="_2OG58RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wPU6cYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null).assignedEntity->excluding(null).representedOrganization->excluding(null)->reject((telecom->isEmpty() or telecom->exists(element | element.isNullFlavorUndefined())) implies (telecom->size() = 1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wPVhgIokEeSkH97cUQxLGA" name="ProcedureActivityProcedureProcedureActivityPerformerProcedureActivityAssignedEntityProcedureActivityRepresentedOrganizationAddr" constrainedElement="_2OG58RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wPVhgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null).assignedEntity->excluding(null).representedOrganization->excluding(null)->reject((addr->isEmpty() or addr->exists(element | element.isNullFlavorUndefined())) implies (addr->size() = 1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wPWIkIokEeSkH97cUQxLGA" name="ProcedureActivityProcedureProcedureActivityPerformerProcedureActivityAssignedEntityId" constrainedElement="_2OG58RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wPWIkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null).assignedEntity->excluding(null)->reject((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wPWvoIokEeSkH97cUQxLGA" name="ProcedureActivityProcedureProcedureActivityPerformerProcedureActivityAssignedEntityAddr" constrainedElement="_2OG58RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wPWvoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null).assignedEntity->excluding(null)->reject((addr->isEmpty() or addr->exists(element | element.isNullFlavorUndefined())) implies (addr->size() = 1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wPXWsIokEeSkH97cUQxLGA" name="ProcedureActivityProcedureProcedureActivityPerformerProcedureActivityAssignedEntityTelecom" constrainedElement="_2OG58RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wPXWsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null).assignedEntity->excluding(null)->reject((telecom->isEmpty() or telecom->exists(element | element.isNullFlavorUndefined())) implies (telecom->size() = 1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wPXWsookEeSkH97cUQxLGA" name="ProcedureActivityProcedureProcedureActivityPerformerProcedureActivityAssignedEntityRepresentedOrganization" constrainedElement="_2OG58RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wPXWs4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null).assignedEntity->excluding(null)->reject(representedOrganization->one(representedOrganization : cda::Organization | not representedOrganization.oclIsUndefined() and representedOrganization.oclIsKindOf(cda::Organization)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wPX9wIokEeSkH97cUQxLGA" name="ProcedureActivityProcedureProcedureActivityPerformerAssignedEntity" constrainedElement="_2OG58RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wPX9wYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null)->reject(assignedEntity->one(assignedEntity : cda::AssignedEntity | not assignedEntity.oclIsUndefined() and assignedEntity.oclIsKindOf(cda::AssignedEntity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wPZy8IokEeSkH97cUQxLGA" name="ProcedureActivityProcedureEntryRelationshipProcedureActivityEncounterClassCode" constrainedElement="_2OG58RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wPZy8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->select(typeCode=vocab::x_ActRelationshipEntryRelationship::COMP and not encounter.oclIsUndefined() and encounter.oclIsKindOf(cda::Encounter)).encounter->excluding(null)->reject(classCode=vocab::ActClass::ENC)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wPaaAIokEeSkH97cUQxLGA" name="ProcedureActivityProcedureEntryRelationshipProcedureActivityEncounterMoodCode" constrainedElement="_2OG58RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wPaaAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->select(typeCode=vocab::x_ActRelationshipEntryRelationship::COMP and not encounter.oclIsUndefined() and encounter.oclIsKindOf(cda::Encounter)).encounter->excluding(null)->reject(moodCode=vocab::x_DocumentEncounterMood::EVN)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wPbBEIokEeSkH97cUQxLGA" name="ProcedureActivityProcedureEntryRelationshipProcedureActivityEncounterId" constrainedElement="_2OG58RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wPbBEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->select(typeCode=vocab::x_ActRelationshipEntryRelationship::COMP and not encounter.oclIsUndefined() and encounter.oclIsKindOf(cda::Encounter)).encounter->excluding(null)->reject((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (id->size() = 1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wPbBEookEeSkH97cUQxLGA" name="ProcedureActivityProcedureEntryRelationshipInversionInd" constrainedElement="_2OG58RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wPbBE4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->select(typeCode=vocab::x_ActRelationshipEntryRelationship::COMP and not encounter.oclIsUndefined() and encounter.oclIsKindOf(cda::Encounter))->select(typeCode=vocab::x_ActRelationshipEntryRelationship::COMP and not encounter.oclIsUndefined() and encounter.oclIsKindOf(cda::Encounter))->reject(not inversionInd.oclIsUndefined() and inversionInd=true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wPboIIokEeSkH97cUQxLGA" name="ProcedureActivityProcedureEntryRelationshipTypeCode" constrainedElement="_2OG58RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wPboIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->select(typeCode=vocab::x_ActRelationshipEntryRelationship::COMP and not encounter.oclIsUndefined() and encounter.oclIsKindOf(cda::Encounter))->select(typeCode=vocab::x_ActRelationshipEntryRelationship::COMP and not encounter.oclIsUndefined() and encounter.oclIsKindOf(cda::Encounter))->reject(typeCode=vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wPcPMIokEeSkH97cUQxLGA" name="ProcedureActivityProcedureEntryRelationshipProcedureActivityEncounter" constrainedElement="_2OG58RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wPcPMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->select(typeCode=vocab::x_ActRelationshipEntryRelationship::COMP and not encounter.oclIsUndefined() and encounter.oclIsKindOf(cda::Encounter))->select(typeCode=vocab::x_ActRelationshipEntryRelationship::COMP and not encounter.oclIsUndefined() and encounter.oclIsKindOf(cda::Encounter))->reject(encounter->one(encounter : cda::Encounter | not encounter.oclIsUndefined() and encounter.oclIsKindOf(cda::Encounter)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2OZN6RSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_-jiisEbuEd6besF9iFIJkQ"/>
      </generalization>
      <ownedOperation xmi:id="_u3p84IokEeSkH97cUQxLGA" name="getIndications" bodyCondition="_u3p844okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_u3p844okEeSkH97cUQxLGA" name="body" constrainedElement="_u3p84IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_u3p85IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::Indication)).oclAsType(consol::Indication)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_u3p84YokEeSkH97cUQxLGA" type="_sHrUoBUSEeG6PvUxSTZnaw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_u3p84ookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_u3ryEIokEeSkH97cUQxLGA" name="getServiceDeliveryLocations" bodyCondition="_u3ryE4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_u3ryE4okEeSkH97cUQxLGA" name="body" constrainedElement="_u3ryEIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_u3ryFIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getParticipantRoles()->select(participantRole : cda::ParticipantRole | not participantRole.oclIsUndefined() and participantRole.oclIsKindOf(consol::ServiceDeliveryLocation)).oclAsType(consol::ServiceDeliveryLocation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_u3ryEYokEeSkH97cUQxLGA" type="_2LiHABSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_u3ryEookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_u3tnQIokEeSkH97cUQxLGA" name="getMedicationActivities" bodyCondition="_u3tnQ4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_u3tnQ4okEeSkH97cUQxLGA" name="body" constrainedElement="_u3tnQIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_u3tnRIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(consol::MedicationActivity)).oclAsType(consol::MedicationActivity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_u3tnQYokEeSkH97cUQxLGA" type="_2GHbgBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_u3tnQookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_u3u1YIokEeSkH97cUQxLGA" name="getPatientInstruction" bodyCondition="_u3u1Y4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_u3u1Y4okEeSkH97cUQxLGA" name="body" constrainedElement="_u3u1YIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_u3u1ZIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::Instructions))->asSequence()->any(true).oclAsType(consol::Instructions)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_u3u1YYokEeSkH97cUQxLGA" type="_2G8h9RSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_u3u1YookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vCNAAIokEeSkH97cUQxLGA" name="getProductInstances" bodyCondition="_vCNAA4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vCNAA4okEeSkH97cUQxLGA" name="body" constrainedElement="_vCNAAIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vCNABIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getParticipantRoles()->select(participantRole : cda::ParticipantRole | not participantRole.oclIsUndefined() and participantRole.oclIsKindOf(consol::ProductInstance)).oclAsType(consol::ProductInstance)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vCNAAYokEeSkH97cUQxLGA" type="_2G2bUxSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vCNAAookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2OfUcxSVEeGGzu7fmW9pXw" name="VitalSignsSection">
      <ownedRule xmi:id="_u3vccYokEeSkH97cUQxLGA" name="VitalSignsSectionEntriesOptionalTemplateId" constrainedElement="_2OfUcxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u3wDgIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.4.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u30U8IokEeSkH97cUQxLGA" name="VitalSignsSectionCodeP" constrainedElement="_2OfUcxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u30U8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u3x4sIokEeSkH97cUQxLGA" name="VitalSignsSectionCode" constrainedElement="_2OfUcxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u3x4sYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '8716-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u32KIIokEeSkH97cUQxLGA" name="VitalSignsSectionText" constrainedElement="_2OfUcxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u32xMIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u33_UIokEeSkH97cUQxLGA" name="VitalSignsSectionEntriesOptionalTitle" constrainedElement="_2OfUcxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u33_UYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u4ecQIokEeSkH97cUQxLGA" name="VitalSignsSectionVitalSignsOrganizer" constrainedElement="_2OfUcxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u4ecQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(consol::VitalSignsOrganizer))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_px07IBVgEeGQCvUGzi1kDQ" general="_bRH8sBVeEeGQCvUGzi1kDQ">
        <ownedComment xmi:id="_GRGhIBxREeG8X6LmnKJ43Q">
          <body>couple</body>
        </ownedComment>
      </generalization>
      <ownedOperation xmi:id="_u4fDUIokEeSkH97cUQxLGA" name="getConsolVitalSignsOrganizers" bodyCondition="_u4fqYIokEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_u4fqYIokEeSkH97cUQxLGA" name="body" constrainedElement="_u4fDUIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_u4fqYYokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getOrganizers()->select(organizer : cda::Organizer | not organizer.oclIsUndefined() and organizer.oclIsKindOf(consol::VitalSignsOrganizer)).oclAsType(consol::VitalSignsOrganizer)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_u4fDUYokEeSkH97cUQxLGA" type="_2OlbCRSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_u4fDUookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2OlbCRSVEeGGzu7fmW9pXw" name="VitalSignsOrganizer">
      <ownedComment xmi:id="_YFDPQBwiEeG_RY8fzJjtMw">
        <body>&lt;p>The Vital Signs Organizer groups vital signs, which is similar to the Result Organizer, but with further constraints. &lt;/p>&#xD;
&#xD;
&lt;p>An appropriate nullFlavor can be used when organizer/code or organizer/id is unknown.&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="_u350gIokEeSkH97cUQxLGA" name="VitalSignsOrganizerTemplateId" constrainedElement="_2OlbCRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u350gYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.26')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u37CoIokEeSkH97cUQxLGA" name="VitalSignsOrganizerClassCode" constrainedElement="_2OlbCRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u37CoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryOrganizer::CLUSTER</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u38QwIokEeSkH97cUQxLGA" name="VitalSignsOrganizerMoodCode" constrainedElement="_2OlbCRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u38QwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::ActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u3-F8IokEeSkH97cUQxLGA" name="VitalSignsOrganizerId" constrainedElement="_2OlbCRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u3-F8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u3_7IIokEeSkH97cUQxLGA" name="VitalSignsOrganizerCode" constrainedElement="_2OlbCRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u3_7IYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '46680005' and value.codeSystem = '2.16.840.1.113883.6.96')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u4CXYIokEeSkH97cUQxLGA" name="VitalSignsOrganizerStatusCode" constrainedElement="_2OlbCRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u4CXYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u4EzoIokEeSkH97cUQxLGA" name="VitalSignsOrganizerEffectiveTime" constrainedElement="_2OlbCRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u4EzoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u4Go0IokEeSkH97cUQxLGA" name="VitalSignsOrganizerVitalSignObservation" constrainedElement="_2OlbCRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u4Go0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.component->exists(component : cda::Component4 | not component.observation.oclIsUndefined() and component.observation.oclIsKindOf(consol::VitalSignObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2O91oRSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_B6aX4EbvEd6besF9iFIJkQ"/>
      </generalization>
      <ownedOperation xmi:id="_u4HP4IokEeSkH97cUQxLGA" name="getVitalSignObservations" bodyCondition="_u4HP44okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_u4HP44okEeSkH97cUQxLGA" name="body" constrainedElement="_u4HP4IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_u4HP5IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::VitalSignObservation)).oclAsType(consol::VitalSignObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_u4HP4YokEeSkH97cUQxLGA" type="_2OrhsRSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_u4HP4ookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2OrhsRSVEeGGzu7fmW9pXw" name="VitalSignObservation">
      <ownedComment xmi:id="_y1fL4BwiEeG_RY8fzJjtMw">
        <body>Vital signs are represented as are other results, with additional vocabulary constraints.</body>
      </ownedComment>
      <ownedRule xmi:id="_X1YV8OJvEeG3cO7ebC3QuA" name="VitalSignObservationTextReference" constrainedElement="_2OrhsRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_gOTIsOJvEeG3cO7ebC3QuA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined() implies self.text->forAll(reference->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_acAZ8OJvEeG3cO7ebC3QuA" name="VitalSignObservationReferenceValue" constrainedElement="_X1YV8OJvEeG3cO7ebC3QuA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kVC7oOJvEeG3cO7ebC3QuA">
          <language>OCL</language>
          <body>self.text->forAll(reference->size() = 1) implies self.text->forAll(reference->one(value->size() = 1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cfXY0OJvEeG3cO7ebC3QuA" name="VitalSignObservationTextReferenceValue" constrainedElement="_acAZ8OJvEeG3cO7ebC3QuA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lumvkOJvEeG3cO7ebC3QuA">
          <language>OCL</language>
          <body>not self.text.reference.value.oclIsUndefined() implies not self.getSection().text.getText(self.text.reference.value.substring(2, self.text.reference.value.size())).oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u4H28IokEeSkH97cUQxLGA" name="VitalSignObservationTemplateId" constrainedElement="_2OrhsRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u4H28YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.27')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u4K6QIokEeSkH97cUQxLGA" name="VitalSignObservationClassCode" constrainedElement="_2OrhsRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u4K6QYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u4MIYIokEeSkH97cUQxLGA" name="VitalSignObservationMoodCode" constrainedElement="_2OrhsRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u4MIYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u4NWgIokEeSkH97cUQxLGA" name="VitalSignObservationId" constrainedElement="_2OrhsRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u4NWgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u4RA4IokEeSkH97cUQxLGA" name="VitalSignObservationCodeP" constrainedElement="_2OrhsRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u4RA4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u4PLsIokEeSkH97cUQxLGA" name="VitalSignObservationCode" constrainedElement="_2OrhsRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u4PLsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = '9279-1' or value.code = '8867-4' or value.code = '2710-2' or value.code = '8480-6' or value.code = '8462-4' or value.code = '8310-5' or value.code = '8302-2' or value.code = '8306-3' or value.code = '8287-5' or value.code = '3141-9' or value.code = '39156-5' or value.code = '3140-1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u4UEMIokEeSkH97cUQxLGA" name="VitalSignObservationStatusCode" constrainedElement="_2OrhsRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u4UEMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u4WgcIokEeSkH97cUQxLGA" name="VitalSignObservationEffectiveTime" constrainedElement="_2OrhsRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u4WgcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u4XukIokEeSkH97cUQxLGA" name="VitalSignObservationValue" constrainedElement="_2OrhsRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u4XukYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::PQ)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u4Y8sIokEeSkH97cUQxLGA" name="VitalSignObservationInterpretationCode" constrainedElement="_2OrhsRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u4Y8sYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.interpretationCode->isEmpty() or self.interpretationCode->exists(element | element.isNullFlavorUndefined())) implies (not self.interpretationCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u4aK0IokEeSkH97cUQxLGA" name="VitalSignObservationMethodCode" constrainedElement="_2OrhsRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u4aK0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.methodCode->isEmpty() or self.methodCode->exists(element | element.isNullFlavorUndefined())) implies (not self.methodCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u4bY8IokEeSkH97cUQxLGA" name="VitalSignObservationTargetSiteCode" constrainedElement="_2OrhsRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u4bY8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (not self.targetSiteCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u4cnEIokEeSkH97cUQxLGA" name="VitalSignObservationText" constrainedElement="_2OrhsRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u4cnEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.text.oclIsUndefined() or self.text.isNullFlavorUndefined()) implies (not self.text.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vRpKMIokEeSkH97cUQxLGA" name="VitalSignObservationAuthor" constrainedElement="_2OrhsRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vRpKMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->one(author : cda::Author | not author.oclIsUndefined() and author.oclIsKindOf(rim::Participation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2O3u6BSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2PQJcxSVEeGGzu7fmW9pXw" name="HistoryOfPastIllnessSection">
      <ownedComment xmi:id="_2PWQBRSVEeGGzu7fmW9pXw" annotatedElement="_2PQJcxSVEeGGzu7fmW9pXw">
        <body>This section describes the history related to the patient's past complaints, problems, or diagnoses. It records these details up until and possibly pertinent to the patient's current complaint or reason for seeking medical care.</body>
      </ownedComment>
      <ownedRule xmi:id="_u4fqYookEeSkH97cUQxLGA" name="HistoryOfPastIllnessSectionTemplateId" constrainedElement="_2PQJcxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u4fqY4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.20')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u4hfkIokEeSkH97cUQxLGA" name="HistoryOfPastIllnessSectionCode" constrainedElement="_2PQJcxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u4hfkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '11348-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u4j70IokEeSkH97cUQxLGA" name="HistoryOfPastIllnessSectionCodeP" constrainedElement="_2PQJcxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u4j70YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u4mYEIokEeSkH97cUQxLGA" name="HistoryOfPastIllnessSectionTitle" constrainedElement="_2PQJcxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u4mYEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u4nmMIokEeSkH97cUQxLGA" name="HistoryOfPastIllnessSectionText" constrainedElement="_2PQJcxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u4nmMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vEzBAIokEeSkH97cUQxLGA" name="HistoryOfPastIllnessSectionProblemObservation" constrainedElement="_2PQJcxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vEzBAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::ProblemObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2PWQBxSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_vEzoEIokEeSkH97cUQxLGA" name="getProblemObservations" bodyCondition="_vEzoE4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vEzoE4okEeSkH97cUQxLGA" name="body" constrainedElement="_vEzoEIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vEzoFIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProblemObservation)).oclAsType(consol::ProblemObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vEzoEYokEeSkH97cUQxLGA" type="_5Ha7ABUyEeGbmN_W114JUw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vEzoEookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2PWQCBSVEeGGzu7fmW9pXw" name="ChiefComplaintSection">
      <ownedComment xmi:id="_2PWQFRSVEeGGzu7fmW9pXw" annotatedElement="_2PWQCBSVEeGGzu7fmW9pXw">
        <body>This section records the patient's chief complaint (the patient's own description).</body>
      </ownedComment>
      <ownedRule xmi:id="_u4o0UIokEeSkH97cUQxLGA" name="ChiefComplaintSectionTemplateId" constrainedElement="_2PWQCBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u4o0UYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '1.3.6.1.4.1.19376.1.5.3.1.1.13.2.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u4qpgIokEeSkH97cUQxLGA" name="ChiefComplaintSectionCode" constrainedElement="_2PWQCBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u4qpgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '10154-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u4tFwIokEeSkH97cUQxLGA" name="ChiefComplaintSectionCodeP" constrainedElement="_2PWQCBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u4tFwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u4u68IokEeSkH97cUQxLGA" name="ChiefComplaintSectionText" constrainedElement="_2PWQCBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u4u68YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u4wJEIokEeSkH97cUQxLGA" name="ChiefComplaintSectionTitle" constrainedElement="_2PWQCBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u4wJEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2PWQFhSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2PWQFxSVEeGGzu7fmW9pXw" name="ReasonForReferralSection">
      <ownedComment xmi:id="_2PcWrxSVEeGGzu7fmW9pXw" annotatedElement="_2PWQFxSVEeGGzu7fmW9pXw">
        <body>A Reason for Referral section records the reason the patient is being referred for a consultation by a provider. An optional Chief Complaint section may capture the patient's description of the reason for the consultation.</body>
      </ownedComment>
      <ownedRule xmi:id="_u4x-QIokEeSkH97cUQxLGA" name="ReasonForReferralSectionTemplateId" constrainedElement="_2PWQFxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u4x-QYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '1.3.6.1.4.1.19376.1.5.3.1.3.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u4zzcIokEeSkH97cUQxLGA" name="ReasonForReferralSectionCode" constrainedElement="_2PWQFxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u4zzcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '42349-1' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u41ooIokEeSkH97cUQxLGA" name="ReasonForReferralSectionCodeP" constrainedElement="_2PWQFxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u41ooYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u44E4IokEeSkH97cUQxLGA" name="ReasonForReferralSectionTitle" constrainedElement="_2PWQFxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u44E4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u456EIokEeSkH97cUQxLGA" name="ReasonForReferralSectionText" constrainedElement="_2PWQFxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u456EYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2PcWsBSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2PcWsRSVEeGGzu7fmW9pXw" name="HistoryOfPresentIllnessSection">
      <ownedComment xmi:id="_2PidQBSVEeGGzu7fmW9pXw" annotatedElement="_2PcWsRSVEeGGzu7fmW9pXw">
        <body>The History of Present Illness section describes the history related to the reason for the encounter.  It contains the historical details leading up to and pertaining to the patient's current complaint or reason for seeking medical care.</body>
      </ownedComment>
      <ownedRule xmi:id="_u46hIIokEeSkH97cUQxLGA" name="HistoryOfPresentIllnessSectionTemplateId" constrainedElement="_2PcWsRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u47IMIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '1.3.6.1.4.1.19376.1.5.3.1.3.4')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u489YIokEeSkH97cUQxLGA" name="HistoryOfPresentIllnessSectionCode" constrainedElement="_2PcWsRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u489YYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '10164-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u4-ykIokEeSkH97cUQxLGA" name="HistoryOfPresentIllnessSectionCodeP" constrainedElement="_2PcWsRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u4_ZoIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u5BO0IokEeSkH97cUQxLGA" name="HistoryOfPresentIllnessSectionTitle" constrainedElement="_2PcWsRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u5BO0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u5DEAIokEeSkH97cUQxLGA" name="HistoryOfPresentIllnessSectionText" constrainedElement="_2PcWsRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u5DEAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2PidQRSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2PidQhSVEeGGzu7fmW9pXw" name="HospitalAdmissionDiagnosisSection">
      <ownedComment xmi:id="_2PidTxSVEeGGzu7fmW9pXw" annotatedElement="_2PidQhSVEeGGzu7fmW9pXw">
        <body>The Hospital Admitting Diagnosis section contains a narrative description of the primary reason for admission to a hospital facility. The section includes an optional entry to record patient conditions.</body>
      </ownedComment>
      <ownedRule xmi:id="_u5ESIIokEeSkH97cUQxLGA" name="HospitalAdmissionDiagnosisSectionTemplateId" constrainedElement="_2PidQhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u5ESIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.43')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u5KYwIokEeSkH97cUQxLGA" name="HospitalAdmissionDiagnosisSectionCode" constrainedElement="_2PidQhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u5KYwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '46241-6' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u5M1AIokEeSkH97cUQxLGA" name="HospitalAdmissionDiagnosisSectionCodeP" constrainedElement="_2PidQhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u5M1AYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u5P4UIokEeSkH97cUQxLGA" name="HospitalAdmissionDiagnosisSectionTitle" constrainedElement="_2PidQhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u5P4UYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u5RGcIokEeSkH97cUQxLGA" name="HospitalAdmissionDiagnosisSectionText" constrainedElement="_2PidQhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u5RGcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vRL3MIokEeSkH97cUQxLGA" name="HospitalAdmissionDiagnosisSectionHospitalAdmissionDiagnosis" constrainedElement="_2PidQhSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vRL3MYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::HospitalAdmissionDiagnosis))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2PidUBSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_vRMeQIokEeSkH97cUQxLGA" name="getHospitalAdmissionDiagnosis" bodyCondition="_vRMeQ4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vRMeQ4okEeSkH97cUQxLGA" name="body" constrainedElement="_vRMeQIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vRMeRIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::HospitalAdmissionDiagnosis))->asSequence()->any(true).oclAsType(consol::HospitalAdmissionDiagnosis)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vRMeQYokEeSkH97cUQxLGA" type="_5K6mAEFHEeGorO80f-Cppg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vRMeQookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2Poj5BSVEeGGzu7fmW9pXw" name="HospitalAdmissionMedicationsSectionEntriesOptional">
      <ownedComment xmi:id="_2Poj6xSVEeGGzu7fmW9pXw" annotatedElement="_2Poj5BSVEeGGzu7fmW9pXw">
        <body>The Hospital Admission Medications section defines the relevant medications administered prior to admission to the facility. The currently active medications must be listed.</body>
      </ownedComment>
      <ownedRule xmi:id="_u5SUkIokEeSkH97cUQxLGA" name="HospitalAdmissionMedicationsSectionEntriesOptionalTemplateId" constrainedElement="_2Poj5BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u5SUkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.44')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u5UJwIokEeSkH97cUQxLGA" name="HospitalAdmissionMedicationsSectionEntriesOptionalCode" constrainedElement="_2Poj5BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u5UJwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '42346-7' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u5WmAIokEeSkH97cUQxLGA" name="HospitalAdmissionMedicationsSectionEntriesOptionalCodeP" constrainedElement="_2Poj5BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u5WmAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u5YbMIokEeSkH97cUQxLGA" name="HospitalAdmissionMedicationsSectionEntriesOptionalText" constrainedElement="_2Poj5BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u5YbMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u5ZpUIokEeSkH97cUQxLGA" name="HospitalAdmissionMedicationsSectionEntriesOptionalTitle" constrainedElement="_2Poj5BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u5ZpUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vNeb4IokEeSkH97cUQxLGA" name="HospitalAdmissionMedicationsSectionEntriesOptionalAdmissionMedication" constrainedElement="_2Poj5BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vNeb4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::AdmissionMedication))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2Poj7BSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_vNfC8IokEeSkH97cUQxLGA" name="getAdmissionMedications" bodyCondition="_vNfC84okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vNfC84okEeSkH97cUQxLGA" name="body" constrainedElement="_vNfC8IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vNfC9IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::AdmissionMedication)).oclAsType(consol::AdmissionMedication)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vNfC8YokEeSkH97cUQxLGA" type="_LNP08EFGEeGorO80f-Cppg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vNfC8ookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2Poj_BSVEeGGzu7fmW9pXw" name="MedicationsAdministeredSection">
      <ownedComment xmi:id="_2Pxt0BSVEeGGzu7fmW9pXw" annotatedElement="_2Poj_BSVEeGGzu7fmW9pXw">
        <body>The Medications Administered section defines medications and fluids administered during the procedure, encounter, or other activity excluding anesthetic medications. This guide recommends anesthesia medications be documented as described in the section on Anesthesia.</body>
      </ownedComment>
      <ownedRule xmi:id="_u5begIokEeSkH97cUQxLGA" name="MedicationsAdministeredSectionTemplateId" constrainedElement="_2Poj_BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u5begYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.38')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u5dTsIokEeSkH97cUQxLGA" name="MedicationsAdministeredSectionCode" constrainedElement="_2Poj_BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u5dTsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '29549-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u5fv8IokEeSkH97cUQxLGA" name="MedicationsAdministeredSectionCodeP" constrainedElement="_2Poj_BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u5fv8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u5hlIIokEeSkH97cUQxLGA" name="MedicationsAdministeredSectionText" constrainedElement="_2Poj_BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u5hlIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u5izQIokEeSkH97cUQxLGA" name="MedicationsAdministeredSectionTitle" constrainedElement="_2Poj_BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u5izQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vRNFUIokEeSkH97cUQxLGA" name="MedicationsAdministeredSectionMedicationActivity" constrainedElement="_2Poj_BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vRNFUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.substanceAdministration.oclIsUndefined() and entry.substanceAdministration.oclIsKindOf(consol::MedicationActivity))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2Pxt0RSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_vRNsYIokEeSkH97cUQxLGA" name="getMedicationActivities" bodyCondition="_vRNsY4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vRNsY4okEeSkH97cUQxLGA" name="body" constrainedElement="_vRNsYIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vRNsZIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(consol::MedicationActivity)).oclAsType(consol::MedicationActivity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vRNsYYokEeSkH97cUQxLGA" type="_2GHbgBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vRNsYookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2Pxt0hSVEeGGzu7fmW9pXw" name="PhysicalExamSection">
      <ownedComment xmi:id="_2RkdqBSVEeGGzu7fmW9pXw" annotatedElement="_2Pxt0hSVEeGGzu7fmW9pXw">
        <body>The Physical Exam section includes direct observations made by the clinician. The examination may include the use of simple instruments and may also describe simple maneuvers performed directly on the patient's body. This section includes only observations made by the examining clinician using inspection, palpation, auscultation, and percussion; it does not include laboratory or imaging findings. The exam may be limited to pertinent body systems based on the patient's chief complaint or it may include a comprehensive examination. The examination may be reported as a collection of random clinical statements or it may be reported categorically. &#xD;
The Physical Exam section may contain multiple nested subsections: Vital Signs, General Status, and those listed in the Additional Physical Examination Subsections appendix.</body>
      </ownedComment>
      <ownedRule xmi:id="_u5kocIokEeSkH97cUQxLGA" name="PhysicalExamSectionTemplateId" constrainedElement="_2Pxt0hSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u5kocYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.2.10')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u5mdoIokEeSkH97cUQxLGA" name="PhysicalExamSectionCode" constrainedElement="_2Pxt0hSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u5mdoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '29545-1' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u5oS0IokEeSkH97cUQxLGA" name="PhysicalExamSectionCodeP" constrainedElement="_2Pxt0hSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u5o54IokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u5qvEIokEeSkH97cUQxLGA" name="PhysicalExamSectionTitle" constrainedElement="_2Pxt0hSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u5qvEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u5skQIokEeSkH97cUQxLGA" name="PhysicalExamSectionText" constrainedElement="_2Pxt0hSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u5skQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vYuCkIokEeSkH97cUQxLGA" name="PhysicalExamSectionPressureUlcerObservation" constrainedElement="_2Pxt0hSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vYuCkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::PressureUlcerObservation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vYvQtYokEeSkH97cUQxLGA" name="PhysicalExamSectionNumberOfPressureUlcersObservation" constrainedElement="_2Pxt0hSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vYvQtookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::NumberOfPressureUlcersObservation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vYwe1IokEeSkH97cUQxLGA" name="PhysicalExamSectionHighestPressureUlcerStage" constrainedElement="_2Pxt0hSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vYwe1YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::HighestPressureUlcerStage))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2RkdqxSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_vYvQsIokEeSkH97cUQxLGA" name="getPressureUlcerObservations" bodyCondition="_vYvQs4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vYvQs4okEeSkH97cUQxLGA" name="body" constrainedElement="_vYvQsIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vYvQtIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::PressureUlcerObservation)).oclAsType(consol::PressureUlcerObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vYvQsYokEeSkH97cUQxLGA" type="_9rQowOZbEeGINOJ_SD9_dA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vYvQsookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vYv3wIokEeSkH97cUQxLGA" name="getNumberOfPressureUlcersObservations" bodyCondition="_vYwe0ookEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vYwe0ookEeSkH97cUQxLGA" name="body" constrainedElement="_vYv3wIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vYwe04okEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::NumberOfPressureUlcersObservation)).oclAsType(consol::NumberOfPressureUlcersObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vYwe0IokEeSkH97cUQxLGA" type="_7c4ssOZbEeGINOJ_SD9_dA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vYwe0YokEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vYxF4IokEeSkH97cUQxLGA" name="getHighestPressureUlcerStages" bodyCondition="_vYxs8IokEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vYxs8IokEeSkH97cUQxLGA" name="body" constrainedElement="_vYxF4IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vYxs8YokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::HighestPressureUlcerStage)).oclAsType(consol::HighestPressureUlcerStage)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vYxF4YokEeSkH97cUQxLGA" type="_4YgVsOZbEeGINOJ_SD9_dA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vYxF4ookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2Pxt6xSVEeGGzu7fmW9pXw" name="GeneralStatusSection">
      <ownedComment xmi:id="_2Pxt7BSVEeGGzu7fmW9pXw" annotatedElement="_2Pxt6xSVEeGGzu7fmW9pXw">
        <body>The General Status section describes general observations and readily observable attributes of the patient, including affect and demeanor, apparent age compared to actual age, gender, ethnicity, nutritional status based on appearance, body build and habitus (e.g., muscular, cachectic, obese), developmental or other deformities, gait and mobility, personal hygiene, evidence of distress, and voice quality and speech.</body>
      </ownedComment>
      <ownedRule xmi:id="_u5tyYIokEeSkH97cUQxLGA" name="GeneralStatusSectionTemplateId" constrainedElement="_2Pxt6xSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u5tyYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.2.5')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u5vnkIokEeSkH97cUQxLGA" name="GeneralStatusSectionCode" constrainedElement="_2Pxt6xSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u5vnkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '10210-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u5zR8IokEeSkH97cUQxLGA" name="GeneralStatusSectionCodeP" constrainedElement="_2Pxt6xSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u5zR8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u528UIokEeSkH97cUQxLGA" name="GeneralStatusSectionTitle" constrainedElement="_2Pxt6xSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u528UYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u54xgIokEeSkH97cUQxLGA" name="GeneralStatusSectionText" constrainedElement="_2Pxt6xSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u54xgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2P7e0BSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2RqkMBSVEeGGzu7fmW9pXw" name="ReviewOfSystemsSection">
      <ownedComment xmi:id="_2RqkOBSVEeGGzu7fmW9pXw" annotatedElement="_2RqkMBSVEeGGzu7fmW9pXw">
        <body>The Review of Systems section contains a relevant collection of symptoms and functions systematically gathered by a clinician. It includes symptoms the patient is currently experiencing, some of which were not elicited during the history of present illness, as well as a potentially large number of pertinent negatives, for example, symptoms that the patient denied experiencing.</body>
      </ownedComment>
      <ownedRule xmi:id="_u55_oIokEeSkH97cUQxLGA" name="ReviewOfSystemsSectionTemplateId" constrainedElement="_2RqkMBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u55_oYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '1.3.6.1.4.1.19376.1.5.3.1.3.18')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u5700IokEeSkH97cUQxLGA" name="ReviewOfSystemsSectionCode" constrainedElement="_2RqkMBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u5700YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '10187-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u5-REIokEeSkH97cUQxLGA" name="ReviewOfSystemsSectionCodeP" constrainedElement="_2RqkMBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u5-REYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u6AtUIokEeSkH97cUQxLGA" name="ReviewOfSystemsSectionTitle" constrainedElement="_2RqkMBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u6AtUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u6B7cIokEeSkH97cUQxLGA" name="ReviewOfSystemsSectionText" constrainedElement="_2RqkMBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u6CigIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2RqkOhSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2Rwq0BSVEeGGzu7fmW9pXw" name="AssessmentAndPlanSection">
      <ownedComment xmi:id="_2Rwq8BSVEeGGzu7fmW9pXw" annotatedElement="_2Rwq0BSVEeGGzu7fmW9pXw">
        <body>The Assessment and Plan sections may be combined or separated to meet local policy requirements.&#xD;
The Assessment and Plan section represents both the clinician's conclusions and working assumptions that will guide treatment of the patient (see Assessment Section above) and pending orders, interventions, encounters, services, and procedures for the patient (see Plan of Care Section below).</body>
      </ownedComment>
      <ownedRule xmi:id="_u6DwoIokEeSkH97cUQxLGA" name="AssessmentAndPlanSectionTemplateId" constrainedElement="_2Rwq0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u6DwoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.9')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u6GM4IokEeSkH97cUQxLGA" name="AssessmentAndPlanSectionCode" constrainedElement="_2Rwq0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u6GM4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '51847-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u6IpIIokEeSkH97cUQxLGA" name="AssessmentAndPlanSectionCodeP" constrainedElement="_2Rwq0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u6IpIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u6LFYIokEeSkH97cUQxLGA" name="AssessmentAndPlanSectionText" constrainedElement="_2Rwq0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u6LFYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vExy4IokEeSkH97cUQxLGA" name="AssessmentAndPlanSectionPlanOfCareActivityAct" constrainedElement="_2Rwq0BSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vExy4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::PlanOfCareActivityAct))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2Rwq8hSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_vEyZ8IokEeSkH97cUQxLGA" name="getPlanOfCareActivityActs" bodyCondition="_vEyZ84okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vEyZ84okEeSkH97cUQxLGA" name="body" constrainedElement="_vEyZ8IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vEyZ9IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::PlanOfCareActivityAct)).oclAsType(consol::PlanOfCareActivityAct)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vEyZ8YokEeSkH97cUQxLGA" type="_2NWE5xSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vEyZ8ookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2SC-sBSVEeGGzu7fmW9pXw" name="FamilyHistoryDeathObservation">
      <ownedComment xmi:id="_fqbbcCHkEeGFLIX-2_sWzA">
        <body>This clinical statement records whether the family member is deceased</body>
      </ownedComment>
      <ownedRule xmi:id="_u6MTgIokEeSkH97cUQxLGA" name="FamilyHistoryDeathObservationTemplateId" constrainedElement="_2SC-sBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u6MTgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.47')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u6NhoIokEeSkH97cUQxLGA" name="FamilyHistoryDeathObservationClassCode" constrainedElement="_2SC-sBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u6NhoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u6OvwIokEeSkH97cUQxLGA" name="FamilyHistoryDeathObservationMoodCode" constrainedElement="_2SC-sBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u6PW0IokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u6Qk8IokEeSkH97cUQxLGA" name="FamilyHistoryDeathObservationCode" constrainedElement="_2SC-sBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u6Qk8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = 'ASSERTION' and value.codeSystem = '2.16.840.1.113883.5.4')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u6TBMIokEeSkH97cUQxLGA" name="FamilyHistoryDeathObservationStatusCode" constrainedElement="_2SC-sBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u6ToQIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u6WEgIokEeSkH97cUQxLGA" name="FamilyHistoryDeathObservationValue" constrainedElement="_2SC-sBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u6WEgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.code = '419099009' and value.codeSystem = '2.16.840.1.113883.6.96'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u6YgwIokEeSkH97cUQxLGA" name="FamilyHistoryDeathObservationValueP" constrainedElement="_2SC-sBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u6YgwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2SPMABSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_luQh8DVzEeGaW4kr-GbV8Q" name="SurgicalDrainsSection">
      <ownedComment xmi:id="_SOgPAEE3EeGdmoWy_aLP0Q">
        <body>The Surgical Drains section may be used to record drains placed during the surgical procedure. Optionally, surgical drain placement may be represented with a text element in the Procedure Description Section.</body>
      </ownedComment>
      <ownedRule xmi:id="_u6aV8IokEeSkH97cUQxLGA" name="SurgicalDrainsSectionTemplateId" constrainedElement="_luQh8DVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u6aV8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.7.13')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u6cLIIokEeSkH97cUQxLGA" name="SurgicalDrainsSectionCode" constrainedElement="_luQh8DVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u6cLIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '11537-8' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u6enYIokEeSkH97cUQxLGA" name="SurgicalDrainsSectionCodeP" constrainedElement="_luQh8DVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u6enYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u6hDoIokEeSkH97cUQxLGA" name="SurgicalDrainsSectionText" constrainedElement="_luQh8DVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u6hDoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u6iRwIokEeSkH97cUQxLGA" name="SurgicalDrainsSectionTitle" constrainedElement="_luQh8DVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u6iRwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_luQh8TVzEeGaW4kr-GbV8Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2TeiIRSVEeGGzu7fmW9pXw" name="UnstructuredDocument">
      <ownedComment xmi:id="_2T9DPhSVEeGGzu7fmW9pXw" annotatedElement="_2TeiIRSVEeGGzu7fmW9pXw">
        <body>An unstructured document is a document which is used when the patient record is captured in an unstructured format that is encapsulated within an image file or as unstructured text in an electronic file such as a word processing or Portable Document Format (PDF) document. &#xD;
There is a need to raise the level of interoperability for these documents to provide full access to the longitudinal patient record across a continuum of care. Until this gap is addressed, image and multi-media files will continue to be a portion of the patient record that remains difficult to access and share with all participants in a patient's care. The Unstructured Document type addresses this gap by providing consistent guidance on the use of CDA for such documents.&#xD;
An Unstructured Document (UD) document type can (1) include unstructured content, such as a graphic, directly in a text element with a mediaType attribute, or (2) reference a single document file, such as a word-processing document, using a text/reference element.&#xD;
For guidance on how to handle multiple files, on the selection of media types for this IG, and on the identification of external files, see the subsections which follow the constraints below.&#xD;
IHE's XDS-SD (Cross-Transaction Specifications and Content Specifications, Scanned Documents Module) profile addresses a similar, more restricted use case, specifically for scanned documents or documents electronically created from existing text sources, and limits content to PDF-A or text. This Unstructured Documents implementation guide is applicable not only for scanned documents in non-PDF formats, but also for clinical documents produced through word processing applications, etc. &#xD;
For conformance with both specifications, please review the appendix on XDS-SD and US Realm Clinical Document Header Comparison and ensure that your documents at a minimum conform to all the SHALL constraints from either specification .</body>
      </ownedComment>
      <ownedRule xmi:id="_u6kG8IokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsTemplateId" constrainedElement="_2TeiIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u6kG8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.1.10')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vMuN8IokEeSkH97cUQxLGA" name="UnstructuredDocumentRecordTarget" constrainedElement="_2TeiIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vMuN8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->one(recordTarget : cda::RecordTarget | not recordTarget.oclIsUndefined() and recordTarget.oclIsKindOf(cda::RecordTarget))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vMu1AIokEeSkH97cUQxLGA" name="UnstructuredDocumentAuthor" constrainedElement="_2TeiIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vMu1AYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->one(author : cda::Author | not author.oclIsUndefined() and author.oclIsKindOf(cda::Author))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vMwqMYokEeSkH97cUQxLGA" name="UnstructuredDocumentComponent" constrainedElement="_2TeiIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vMwqMookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component2 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vMyfYIokEeSkH97cUQxLGA" name="UnstructuredDocumentCustodian" constrainedElement="_2TeiIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vMyfYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.custodian->one(custodian : cda::Custodian | not custodian.oclIsUndefined() and custodian.oclIsKindOf(cda::Custodian))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wPercIokEeSkH97cUQxLGA" name="UnstructuredDocumentRecordTargetPatientRole2Id" constrainedElement="_2TeiIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wPercYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null)->reject((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (id->size() = 1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wPercookEeSkH97cUQxLGA" name="UnstructuredDocumentRecordTargetPatientRole2" constrainedElement="_2TeiIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wPerc4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null)->reject(patientRole->one(patientRole : cda::PatientRole | not patientRole.oclIsUndefined() and patientRole.oclIsKindOf(cda::PatientRole)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wPf5kIokEeSkH97cUQxLGA" name="UnstructuredDocumentAuthorAssignedAuthor2Addr" constrainedElement="_2TeiIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wPf5kYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->excluding(null).assignedAuthor->excluding(null)->reject((addr->isEmpty() or addr->exists(element | element.isNullFlavorUndefined())) implies (addr->size() = 1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wPggoIokEeSkH97cUQxLGA" name="UnstructuredDocumentAuthorAssignedAuthor2Telecom" constrainedElement="_2TeiIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wPggoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->excluding(null).assignedAuthor->excluding(null)->reject((telecom->isEmpty() or telecom->exists(element | element.isNullFlavorUndefined())) implies (telecom->size() = 1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wPhHsIokEeSkH97cUQxLGA" name="UnstructuredDocumentAuthorAssignedAuthor2" constrainedElement="_2TeiIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wPhHsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->excluding(null)->reject(assignedAuthor->one(assignedAuthor : cda::AssignedAuthor | not assignedAuthor.oclIsUndefined() and assignedAuthor.oclIsKindOf(cda::AssignedAuthor)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wPi84IokEeSkH97cUQxLGA" name="UnstructuredDocumentCustodianAssignedCustodian3CustodianOrganizationAddr" constrainedElement="_2TeiIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wPi84YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.custodian->excluding(null).assignedCustodian->excluding(null).representedCustodianOrganization->excluding(null)->reject((addr.oclIsUndefined() or addr.isNullFlavorUndefined()) implies (not addr.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wPjj8IokEeSkH97cUQxLGA" name="UnstructuredDocumentCustodianAssignedCustodian3CustodianOrganizationId" constrainedElement="_2TeiIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wPjj8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.custodian->excluding(null).assignedCustodian->excluding(null).representedCustodianOrganization->excluding(null)->reject((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (id->size() = 1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wPjj8ookEeSkH97cUQxLGA" name="UnstructuredDocumentCustodianAssignedCustodian3CustodianOrganizationName" constrainedElement="_2TeiIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wPjj84okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.custodian->excluding(null).assignedCustodian->excluding(null).representedCustodianOrganization->excluding(null)->reject((name.oclIsUndefined() or name.isNullFlavorUndefined()) implies (not name.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wPkLAIokEeSkH97cUQxLGA" name="UnstructuredDocumentCustodianAssignedCustodian3CustodianOrganizationTelecom" constrainedElement="_2TeiIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wPkLAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.custodian->excluding(null).assignedCustodian->excluding(null).representedCustodianOrganization->excluding(null)->reject((telecom.oclIsUndefined() or telecom.isNullFlavorUndefined()) implies (not telecom.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wPkLAookEeSkH97cUQxLGA" name="UnstructuredDocumentCustodianAssignedCustodian3CustodianOrganization" constrainedElement="_2TeiIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wPkyEIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.custodian->excluding(null).assignedCustodian->excluding(null)->reject(representedCustodianOrganization->one(representedCustodianOrganization : cda::CustodianOrganization | not representedCustodianOrganization.oclIsUndefined() and representedCustodianOrganization.oclIsKindOf(cda::CustodianOrganization)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wPkyEYokEeSkH97cUQxLGA" name="UnstructuredDocumentCustodianAssignedCustodian2" constrainedElement="_2TeiIRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wPkyEookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.custodian->excluding(null)->reject(assignedCustodian->one(assignedCustodian : cda::AssignedCustodian | not assignedCustodian.oclIsUndefined() and assignedCustodian.oclIsKindOf(cda::AssignedCustodian)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2T9DPxSVEeGGzu7fmW9pXw" general="_2DNRcBSVEeGGzu7fmW9pXw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2T9DQBSVEeGGzu7fmW9pXw" name="MedicationInformation">
      <ownedComment xmi:id="_RzpgUCAMEeGKirKJsFylGA">
        <body>The medication can be recorded as a precoordinated product strength, product form, or product concentration (e.g. &quot;metoprolol 25mg tablet&quot;, &quot;amoxicillin 400mg/5mL suspension&quot;); or not pre-coordinated (e.g. &quot;metoprolol product&quot;).</body>
      </ownedComment>
      <ownedRule xmi:id="_u6wUMIokEeSkH97cUQxLGA" name="MedicationInformationTemplateId" constrainedElement="_2T9DQBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u6wUMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.23')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u6xiUIokEeSkH97cUQxLGA" name="MedicationInformationId" constrainedElement="_2T9DQBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u6xiUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u6zXgIokEeSkH97cUQxLGA" name="MedicationInformationClassCode" constrainedElement="_2T9DQBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u6zXgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>isDefined('classCode') and self.classCode=vocab::RoleClassManufacturedProduct::MANU</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vCnPtYokEeSkH97cUQxLGA" name="MedicationInformationManufacturerOrganization" constrainedElement="_2T9DQBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vCnPtookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.manufacturerOrganization->one(manufacturerOrganization : cda::Organization | not manufacturerOrganization.oclIsUndefined() and manufacturerOrganization.oclIsKindOf(rim::Entity))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vOGuAIokEeSkH97cUQxLGA" name="MedicationInformationManufacturedMaterial" constrainedElement="_2T9DQBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vOGuAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.manufacturedMaterial->one(manufacturedMaterial : cda::Material | not manufacturedMaterial.oclIsUndefined() and manufacturedMaterial.oclIsKindOf(cda::Material))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wPmAMIokEeSkH97cUQxLGA" name="MedicationInformationMedicationInformationManufacturedMaterialCodeOriginalText" constrainedElement="_2T9DQBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wPmAMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.manufacturedMaterial->excluding(null)->reject(code.originalText->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wPmAMookEeSkH97cUQxLGA" name="MedicationInformationMedicationInformationManufacturedMaterialReference" constrainedElement="_2T9DQBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wPmAM4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.manufacturedMaterial->excluding(null)->reject(code.originalText->size() = 1 implies code.originalText->one(reference->size() = 1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wPmnQIokEeSkH97cUQxLGA" name="MedicationInformationMedicationInformationManufacturedMaterialOriginalTextReferenceValue" constrainedElement="_2T9DQBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wPmnQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.manufacturedMaterial->excluding(null)->reject(code.originalText.reference->size() = 1 implies code.originalText.reference.value->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wPnOUIokEeSkH97cUQxLGA" name="MedicationInformationMedicationInformationManufacturedMaterialCodeTranslation" constrainedElement="_2T9DQBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wPnOUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.manufacturedMaterial->excluding(null)->reject(code->size() = 1 implies code.translation->size() > 0)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wPnOUookEeSkH97cUQxLGA" name="MedicationInformationMedicationInformationManufacturedMaterialCode" constrainedElement="_2T9DQBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wPnOU4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.manufacturedMaterial->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined() and code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = code.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.88' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2UJQdxSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_p6Zs8EcZEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2UnxkRSVEeGGzu7fmW9pXw" name="DischargeSummary">
      <ownedRule xmi:id="_43rsEGjHEeGNoZ3kEkcY2A" name="DischargeSummaryDoesNotHaveChiefComplaintAndReasonForVisitWithChiefComplaintSectionOrReasonSection" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_43rsEWjHEeGNoZ3kEkcY2A">
          <language>OCL</language>
          <body>(self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection)) or  self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))) xor self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u65eIIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsTemplateId" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u65eIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.1.8')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u6-WoIokEeSkH97cUQxLGA" name="DischargeSummaryCodeP" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u6-WoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u676YIokEeSkH97cUQxLGA" name="DischargeSummaryCode" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u676YYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = '18842-5' or value.code = '11490-0' or value.code = '28655-9' or value.code = '29761-4' or value.code = '34745-0' or value.code = '34105-7' or value.code = '34106-5'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u7HgkIokEeSkH97cUQxLGA" name="DischargeSummaryHospitalAdmissionMedicationsSectionEntriesOptional" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u7HgkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalAdmissionMedicationsSectionEntriesOptional))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u7IusIokEeSkH97cUQxLGA" name="DischargeSummaryHospitalAdmissionDiagnosisSection" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u7IusYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalAdmissionDiagnosisSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u7J80IokEeSkH97cUQxLGA" name="DischargeSummaryHospitalDischargeDiagnosisSection" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u7J80YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeDiagnosisSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u7LK84okEeSkH97cUQxLGA" name="DischargeSummaryDischargeDietSection" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u7LK9IokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::DischargeDietSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u7MZE4okEeSkH97cUQxLGA" name="DischargeSummaryHospitalDischargeMedicationsSectionEntriesOptional" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u7MZFIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeMedicationsSectionEntriesOptional))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u7NnNYokEeSkH97cUQxLGA" name="DischargeSummaryFunctionalStatusSection" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u7NnNookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::FunctionalStatusSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u7O1VYokEeSkH97cUQxLGA" name="DischargeSummaryHistoryOfPresentIllnessSection" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u7O1VookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HistoryOfPresentIllnessSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u7QDdYokEeSkH97cUQxLGA" name="DischargeSummaryHospitalCourseSection" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u7QDdookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalCourseSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u7RRlYokEeSkH97cUQxLGA" name="DischargeSummaryPlanOfCareSection" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u7RRlookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfCareSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u7SftYokEeSkH97cUQxLGA" name="DischargeSummaryHistoryOfPastIllnessSection" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u7SftookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HistoryOfPastIllnessSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vJO1EIokEeSkH97cUQxLGA" name="DischargeSummaryComponentOf" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vJO1EYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->one(componentOf : cda::Component1 | not componentOf.oclIsUndefined() and componentOf.oclIsKindOf(cda::Component1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vJRRUIokEeSkH97cUQxLGA" name="DischargeSummaryChiefComplaintAndReasonForVisitSection" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vJRRUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vJTGgIokEeSkH97cUQxLGA" name="DischargeSummaryChiefComplaintSection" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vJTGgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vJUUoIokEeSkH97cUQxLGA" name="DischargeSummaryFamilyHistorySection" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vJUUoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::FamilyHistorySection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vJU7tYokEeSkH97cUQxLGA" name="DischargeSummaryHospitalConsultationsSection" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vJViwIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalConsultationsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vJWJ1YokEeSkH97cUQxLGA" name="DischargeSummaryHospitalDischargeInstructionsSection" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vJWw4IokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeInstructionsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vJX_AIokEeSkH97cUQxLGA" name="DischargeSummaryHospitalDischargePhysicalSection" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vJX_AYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargePhysicalSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vJZNIIokEeSkH97cUQxLGA" name="DischargeSummaryHospitalDischargeStudiesSummarySection" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vJZNIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeStudiesSummarySection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vJabQIokEeSkH97cUQxLGA" name="DischargeSummaryImmunizationsSectionEntriesOptional" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vJabQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ImmunizationsSectionEntriesOptional))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vJbpYIokEeSkH97cUQxLGA" name="DischargeSummaryProblemSectionEntriesOptional" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vJbpYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSectionEntriesOptional))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vJc3gIokEeSkH97cUQxLGA" name="DischargeSummaryProceduresSectionEntriesOptional" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vJc3gYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSectionEntriesOptional))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vJeFoIokEeSkH97cUQxLGA" name="DischargeSummaryReasonForVisitSection" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vJeFoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vJfTwIokEeSkH97cUQxLGA" name="DischargeSummaryReviewOfSystemsSection" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vJfTwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReviewOfSystemsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vJgh4IokEeSkH97cUQxLGA" name="DischargeSummarySocialHistorySection" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vJgh4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::SocialHistorySection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vZb0QIokEeSkH97cUQxLGA" name="DischargeSummaryAllergiesSectionEntriesOptional" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vZb0QYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSectionEntriesOptional))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vZdCYIokEeSkH97cUQxLGA" name="DischargeSummaryVitalSignsSectionEntriesOptional" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vZdCYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSectionEntriesOptional))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wPpqkIokEeSkH97cUQxLGA" name="DischargeSummaryComponentOfEncompassingEncounter3ResponsiblePartyAssignedEntityHasPersonOrOrganization" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wPpqkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null).responsibleParty->excluding(null)->reject(not assignedEntity.assignedPerson.oclIsUndefined() or not assignedEntity.representedOrganization->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wPqRoIokEeSkH97cUQxLGA" name="DischargeSummaryComponentOfEncompassingEncounter3ResponsiblePartyAssignedEntity" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wPqRoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null).responsibleParty->excluding(null)->reject(assignedEntity->exists(assignedEntity : cda::AssignedEntity | not assignedEntity.oclIsUndefined() and assignedEntity.oclIsKindOf(rim::Role)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wPrfwIokEeSkH97cUQxLGA" name="DischargeSummaryComponentOfEncompassingEncounter3EncounterParticipantAssignedEntityHasPersonOrOrganization" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wPrfwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null).encounterParticipant->excluding(null)->reject(not assignedEntity.assignedPerson.oclIsUndefined() or not assignedEntity.representedOrganization->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wPsG0IokEeSkH97cUQxLGA" name="DischargeSummaryComponentOfEncompassingEncounter3EncounterParticipantAssignedEntity" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wPsG0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null).encounterParticipant->excluding(null)->reject(assignedEntity->exists(assignedEntity : cda::AssignedEntity | not assignedEntity.oclIsUndefined() and assignedEntity.oclIsKindOf(rim::Role)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wPsG0ookEeSkH97cUQxLGA" name="DischargeSummaryComponentOfEncompassingEncounter3EncompassingEncounterHasEffectiveTimeLow" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wPsG04okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(not effectiveTime.low.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wPst4IokEeSkH97cUQxLGA" name="DischargeSummaryComponentOfEncompassingEncounter3EncompassingEncounterHasEffectiveTimeHigh" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wPst4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(not effectiveTime.high.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wPtU8IokEeSkH97cUQxLGA" name="DischargeSummaryComponentOfEncompassingEncounter3DischargeDispositionCodeValueSet" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wPtU8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(dischargeDispositionCode.oclIsUndefined() or dischargeDispositionCode.isNullFlavorUndefined() implies let value : datatypes::CE = dischargeDispositionCode.oclAsType(datatypes::CE) in value.codeSystem &lt;> '2.16.840.1.113883.12.112' implies value.codeSystem = '2.16.840.1.113883.6.301.5' and not value.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wPt8AIokEeSkH97cUQxLGA" name="DischargeSummaryComponentOfEncompassingEncounter3DischargeDispositionCodeCodeSystem" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wPt8AYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(dischargeDispositionCode.oclIsUndefined() or dischargeDispositionCode.isNullFlavorUndefined() implies let value : datatypes::CE = dischargeDispositionCode.oclAsType(datatypes::CE) in value.codeSystem &lt;> '2.16.840.1.113883.6.301.5' implies value.codeSystem = '2.16.840.1.113883.12.112' and not value.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wPujEIokEeSkH97cUQxLGA" name="DischargeSummaryComponentOfEncompassingEncounter3DischargeDispositionCode" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wPujEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject((dischargeDispositionCode.oclIsUndefined() or dischargeDispositionCode.isNullFlavorUndefined()) implies (not dischargeDispositionCode.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wPvKIIokEeSkH97cUQxLGA" name="DischargeSummaryComponentOfEncompassingEncounter3EffectiveTime" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wPvKIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject((effectiveTime.oclIsUndefined() or effectiveTime.isNullFlavorUndefined()) implies (not effectiveTime.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wPvxMIokEeSkH97cUQxLGA" name="DischargeSummaryComponentOfEncompassingEncounter3ResponsibleParty" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wPvxMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(responsibleParty->one(responsibleParty : cda::ResponsibleParty | not responsibleParty.oclIsUndefined() and responsibleParty.oclIsKindOf(cda::ResponsibleParty)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wPwYQIokEeSkH97cUQxLGA" name="DischargeSummaryComponentOfEncompassingEncounter3EncounterParticipant" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wPwYQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(encounterParticipant->one(encounterParticipant : cda::EncounterParticipant | not encounterParticipant.oclIsUndefined() and encounterParticipant.oclIsKindOf(cda::EncounterParticipant)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wPw_UIokEeSkH97cUQxLGA" name="DischargeSummaryComponentOfEncompassingEncounter" constrainedElement="_2UnxkRSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wPw_UYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null)->reject(encompassingEncounter->one(encompassingEncounter : cda::EncompassingEncounter | not encompassingEncounter.oclIsUndefined() and encompassingEncounter.oclIsKindOf(cda::EncompassingEncounter)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2U6FfBSVEeGGzu7fmW9pXw" general="_2DNRcBSVEeGGzu7fmW9pXw"/>
      <ownedOperation xmi:id="_u7IHoIokEeSkH97cUQxLGA" name="getHospitalAdmissionMedicationsSectionEntriesOptional" bodyCondition="_u7IHo4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_u7IHo4okEeSkH97cUQxLGA" name="body" constrainedElement="_u7IHoIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_u7IHpIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalAdmissionMedicationsSectionEntriesOptional))->asSequence()->any(true).oclAsType(consol::HospitalAdmissionMedicationsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_u7IHoYokEeSkH97cUQxLGA" type="_2Poj5BSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_u7IHoookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_u7JVwIokEeSkH97cUQxLGA" name="getHospitalAdmissionDiagnosisSection" bodyCondition="_u7JVw4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_u7JVw4okEeSkH97cUQxLGA" name="body" constrainedElement="_u7JVwIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_u7JVxIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalAdmissionDiagnosisSection))->asSequence()->any(true).oclAsType(consol::HospitalAdmissionDiagnosisSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_u7JVwYokEeSkH97cUQxLGA" type="_2PidQhSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_u7JVwookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_u7Kj4IokEeSkH97cUQxLGA" name="getHospitalDischargeDiagnosisSection" bodyCondition="_u7LK8YokEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_u7LK8YokEeSkH97cUQxLGA" name="body" constrainedElement="_u7Kj4IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_u7LK8ookEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeDiagnosisSection))->asSequence()->any(true).oclAsType(consol::HospitalDischargeDiagnosisSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_u7Kj4YokEeSkH97cUQxLGA" type="_2PidURSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_u7LK8IokEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_u7LyAIokEeSkH97cUQxLGA" name="getDischargeDietSection" bodyCondition="_u7MZEYokEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_u7MZEYokEeSkH97cUQxLGA" name="body" constrainedElement="_u7LyAIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_u7MZEookEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::DischargeDietSection))->asSequence()->any(true).oclAsType(consol::DischargeDietSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_u7LyAYokEeSkH97cUQxLGA" type="_2Uz-4xSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_u7MZEIokEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_u7NnMIokEeSkH97cUQxLGA" name="getHospitalDischargeMedicationsSectionEntriesOptional" bodyCondition="_u7NnM4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_u7NnM4okEeSkH97cUQxLGA" name="body" constrainedElement="_u7NnMIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_u7NnNIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeMedicationsSectionEntriesOptional))->asSequence()->any(true).oclAsType(consol::HospitalDischargeMedicationsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_u7NnMYokEeSkH97cUQxLGA" type="_2Poj7RSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_u7NnMookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_u7O1UIokEeSkH97cUQxLGA" name="getFunctionalStatusSection" bodyCondition="_u7O1U4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_u7O1U4okEeSkH97cUQxLGA" name="body" constrainedElement="_u7O1UIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_u7O1VIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::FunctionalStatusSection))->asSequence()->any(true).oclAsType(consol::FunctionalStatusSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_u7O1UYokEeSkH97cUQxLGA" type="_2KKOBhSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_u7O1UookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_u7QDcIokEeSkH97cUQxLGA" name="getHistoryOfPresentIllnessSection" bodyCondition="_u7QDc4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_u7QDc4okEeSkH97cUQxLGA" name="body" constrainedElement="_u7QDcIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_u7QDdIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HistoryOfPresentIllnessSection))->asSequence()->any(true).oclAsType(consol::HistoryOfPresentIllnessSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_u7QDcYokEeSkH97cUQxLGA" type="_2PcWsRSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_u7QDcookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_u7RRkIokEeSkH97cUQxLGA" name="getHospitalCourseSection" bodyCondition="_u7RRk4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_u7RRk4okEeSkH97cUQxLGA" name="body" constrainedElement="_u7RRkIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_u7RRlIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalCourseSection))->asSequence()->any(true).oclAsType(consol::HospitalCourseSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_u7RRkYokEeSkH97cUQxLGA" type="_2RqkOxSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_u7RRkookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_u7SfsIokEeSkH97cUQxLGA" name="getPlanOfCareSection" bodyCondition="_u7Sfs4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_u7Sfs4okEeSkH97cUQxLGA" name="body" constrainedElement="_u7SfsIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_u7SftIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfCareSection))->asSequence()->any(true).oclAsType(consol::PlanOfCareSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_u7SfsYokEeSkH97cUQxLGA" type="_2NP-QxSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_u7SfsookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_u7Tt0IokEeSkH97cUQxLGA" name="getHistoryOfPastIllnessSection" bodyCondition="_u7Tt04okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_u7Tt04okEeSkH97cUQxLGA" name="body" constrainedElement="_u7Tt0IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_u7Tt1IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HistoryOfPastIllnessSection))->asSequence()->any(true).oclAsType(consol::HistoryOfPastIllnessSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_u7Tt0YokEeSkH97cUQxLGA" type="_2PQJcxSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_u7Tt0ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vJSfcIokEeSkH97cUQxLGA" name="getChiefComplaintAndReasonForVisitSection" bodyCondition="_vJSfc4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vJSfc4okEeSkH97cUQxLGA" name="body" constrainedElement="_vJSfcIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vJSfdIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))->asSequence()->any(true).oclAsType(consol::ChiefComplaintAndReasonForVisitSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vJSfcYokEeSkH97cUQxLGA" type="_oI7CQCsaEeGHF88-qhhUMA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vJSfcookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vJTtkIokEeSkH97cUQxLGA" name="getChiefComplaintSection" bodyCondition="_vJTtk4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vJTtk4okEeSkH97cUQxLGA" name="body" constrainedElement="_vJTtkIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vJTtlIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection))->asSequence()->any(true).oclAsType(consol::ChiefComplaintSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vJTtkYokEeSkH97cUQxLGA" type="_2PWQCBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vJTtkookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vJU7sIokEeSkH97cUQxLGA" name="getFamilyHistorySection" bodyCondition="_vJU7s4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vJU7s4okEeSkH97cUQxLGA" name="body" constrainedElement="_vJU7sIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vJU7tIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::FamilyHistorySection))->asSequence()->any(true).oclAsType(consol::FamilyHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vJU7sYokEeSkH97cUQxLGA" type="_2IWQIxSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vJU7sookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vJWJ0IokEeSkH97cUQxLGA" name="getHospitalConsultationsSection" bodyCondition="_vJWJ04okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vJWJ04okEeSkH97cUQxLGA" name="body" constrainedElement="_vJWJ0IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vJWJ1IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalConsultationsSection))->asSequence()->any(true).oclAsType(consol::HospitalConsultationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vJWJ0YokEeSkH97cUQxLGA" type="_eKFbUDVyEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vJWJ0ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vJXX8IokEeSkH97cUQxLGA" name="getHospitalDischargeInstructionsSection" bodyCondition="_vJXX84okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vJXX84okEeSkH97cUQxLGA" name="body" constrainedElement="_vJXX8IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vJXX9IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeInstructionsSection))->asSequence()->any(true).oclAsType(consol::HospitalDischargeInstructionsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vJXX8YokEeSkH97cUQxLGA" type="_lBergCUMEeGiOPpZVnfEJA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vJXX8ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vJYmEIokEeSkH97cUQxLGA" name="getHospitalDischargePhysicalSection" bodyCondition="_vJYmE4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vJYmE4okEeSkH97cUQxLGA" name="body" constrainedElement="_vJYmEIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vJYmFIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargePhysicalSection))->asSequence()->any(true).oclAsType(consol::HospitalDischargePhysicalSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vJYmEYokEeSkH97cUQxLGA" type="_WikGsCUTEeGiOPpZVnfEJA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vJYmEookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vJZ0MIokEeSkH97cUQxLGA" name="getHospitalDischargeStudiesSummarySection" bodyCondition="_vJZ0M4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vJZ0M4okEeSkH97cUQxLGA" name="body" constrainedElement="_vJZ0MIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vJZ0NIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeStudiesSummarySection))->asSequence()->any(true).oclAsType(consol::HospitalDischargeStudiesSummarySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vJZ0MYokEeSkH97cUQxLGA" type="_38AXoCUTEeGiOPpZVnfEJA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vJZ0MookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vJbCUIokEeSkH97cUQxLGA" name="getImmunizationsSectionEntriesOptional" bodyCondition="_vJbCU4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vJbCU4okEeSkH97cUQxLGA" name="body" constrainedElement="_vJbCUIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vJbCVIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ImmunizationsSectionEntriesOptional))->asSequence()->any(true).oclAsType(consol::ImmunizationsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vJbCUYokEeSkH97cUQxLGA" type="_EuPloBVeEeGQCvUGzi1kDQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vJbCUookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vJcQcIokEeSkH97cUQxLGA" name="getProblemSectionEntriesOptional" bodyCondition="_vJcQc4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vJcQc4okEeSkH97cUQxLGA" name="body" constrainedElement="_vJcQcIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vJcQdIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSectionEntriesOptional))->asSequence()->any(true).oclAsType(consol::ProblemSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vJcQcYokEeSkH97cUQxLGA" type="_naxrkBVdEeGQCvUGzi1kDQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vJcQcookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vJdekIokEeSkH97cUQxLGA" name="getProceduresSectionEntriesOptional" bodyCondition="_vJdek4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vJdek4okEeSkH97cUQxLGA" name="body" constrainedElement="_vJdekIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vJdelIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSectionEntriesOptional))->asSequence()->any(true).oclAsType(consol::ProceduresSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vJdekYokEeSkH97cUQxLGA" type="_s9Ig4BVdEeGQCvUGzi1kDQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vJdekookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vJessIokEeSkH97cUQxLGA" name="getReasonForVisitSection" bodyCondition="_vJess4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vJess4okEeSkH97cUQxLGA" name="body" constrainedElement="_vJessIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vJestIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))->asSequence()->any(true).oclAsType(consol::ReasonForVisitSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vJessYokEeSkH97cUQxLGA" type="_Nm64UCscEeGHF88-qhhUMA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vJessookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vJf60IokEeSkH97cUQxLGA" name="getReviewOfSystemsSection" bodyCondition="_vJf604okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vJf604okEeSkH97cUQxLGA" name="body" constrainedElement="_vJf60IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vJf61IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReviewOfSystemsSection))->asSequence()->any(true).oclAsType(consol::ReviewOfSystemsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vJf60YokEeSkH97cUQxLGA" type="_2RqkMBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vJf60ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vJhI8IokEeSkH97cUQxLGA" name="getSocialHistorySection" bodyCondition="_vJhI84okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vJhI84okEeSkH97cUQxLGA" name="body" constrainedElement="_vJhI8IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vJhI9IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::SocialHistorySection))->asSequence()->any(true).oclAsType(consol::SocialHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vJhI8YokEeSkH97cUQxLGA" type="_2JKvgBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vJhI8ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vZcbUIokEeSkH97cUQxLGA" name="getAllergiesSectionEntriesOptional" bodyCondition="_vZcbU4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vZcbU4okEeSkH97cUQxLGA" name="body" constrainedElement="_vZcbUIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vZcbVIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSectionEntriesOptional))->asSequence()->any(true).oclAsType(consol::AllergiesSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vZcbUYokEeSkH97cUQxLGA" type="_bGzYgBVdEeGQCvUGzi1kDQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vZcbUookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vZdpcIokEeSkH97cUQxLGA" name="getVitalSignsSectionEntriesOptional" bodyCondition="_vZdpc4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vZdpc4okEeSkH97cUQxLGA" name="body" constrainedElement="_vZdpcIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vZdpdIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSectionEntriesOptional))->asSequence()->any(true).oclAsType(consol::VitalSignsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vZdpcYokEeSkH97cUQxLGA" type="_bRH8sBVeEeGQCvUGzi1kDQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vZdpcookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_sHrUoBUSEeG6PvUxSTZnaw" name="Indication">
      <ownedComment xmi:id="_CjRfQB-YEeGtfPlBCjHWkw">
        <body>The Indication Observation documents the rationale for an activity. It can do this with the id element to reference a problem recorded elsewhere in the document or with a code and value to record the problem type and problem within the Indication. For example, the indication for a prescription of a painkiller might be a headache that is documented in the Problems Section</body>
      </ownedComment>
      <ownedRule xmi:id="_MtdoIB7kEeGEaLkc3UAsAg" name="IndicationCodeNullFlavor" constrainedElement="_sHrUoBUSEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_RK-VQB7kEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.value.nullFlavor->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u7Tt1YokEeSkH97cUQxLGA" name="IndicationTemplateId" constrainedElement="_sHrUoBUSEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u7Tt1ookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.19')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u7WxIIokEeSkH97cUQxLGA" name="IndicationClassCode" constrainedElement="_sHrUoBUSEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u7WxIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u7X_QIokEeSkH97cUQxLGA" name="IndicationMoodCode" constrainedElement="_sHrUoBUSEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u7X_QYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u7ZNYIokEeSkH97cUQxLGA" name="IndicationId" constrainedElement="_sHrUoBUSEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u7ZNYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (self.id->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u7de0IokEeSkH97cUQxLGA" name="IndicationCodeP" constrainedElement="_sHrUoBUSEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u7de0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u7bCkIokEeSkH97cUQxLGA" name="IndicationCode" constrainedElement="_sHrUoBUSEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u7bCkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.96' and (value.code = '404684003' or value.code = '409586006' or value.code = '282291009' or value.code = '64572001' or value.code = '248536006' or value.code = '418799008' or value.code = '55607006' or value.code = '373930000'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u7f7EIokEeSkH97cUQxLGA" name="IndicationStatusCode" constrainedElement="_sHrUoBUSEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u7f7EYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u7iXUIokEeSkH97cUQxLGA" name="IndicationEffectiveTime" constrainedElement="_sHrUoBUSEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u7i-YIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u7kzkIokEeSkH97cUQxLGA" name="IndicationValue" constrainedElement="_sHrUoBUSEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u7kzkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.96' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u7mowIokEeSkH97cUQxLGA" name="IndicationValueP" constrainedElement="_sHrUoBUSEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u7mowYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_sHrUoRUSEeG6PvUxSTZnaw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_VBXq8BUTEeG6PvUxSTZnaw" name="DrugVehicle">
      <ownedRule xmi:id="_G1AaMBq2EeGo461UQq-B1g" name="DrugVehiclePlayingEntityCode" constrainedElement="_VBXq8BUTEeG6PvUxSTZnaw">
        <ownedComment xmi:id="_rjDdYOMSEeGfv4R-kzpM0g">
          <body>This playingEntity/code is used to supply a coded term for the drug vehicle.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_IGiTgBq2EeGo461UQq-B1g">
          <language>OCL</language>
          <body>not self.playingEntity.oclIsUndefined() implies (self.playingEntity.code.isNullFlavorDefined() or self.playingEntity.code->size() =1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_WgMgsBq2EeGo461UQq-B1g" name="DrugVehiclePlayingEntityName" constrainedElement="_VBXq8BUTEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Y9oMcBq2EeGo461UQq-B1g">
          <language>OCL</language>
          <body>not self.playingEntity.oclIsUndefined() implies self.playingEntity.name->size() =1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u7psFYokEeSkH97cUQxLGA" name="DrugVehicleTemplateId" constrainedElement="_VBXq8BUTEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u7qTIIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.24')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u7svYIokEeSkH97cUQxLGA" name="DrugVehicleClassCode" constrainedElement="_VBXq8BUTEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u7svYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>isDefined('classCode') and self.classCode=vocab::RoleClassRoot::MANU</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u7t9gIokEeSkH97cUQxLGA" name="DrugVehicleCode" constrainedElement="_VBXq8BUTEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u7ukkIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '412307009' and value.codeSystem = '2.16.840.1.113883.6.96')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vBtQwIokEeSkH97cUQxLGA" name="DrugVehiclePlayingEntity" constrainedElement="_VBXq8BUTEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vBtQwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.playingEntity->one(playingEntity : cda::PlayingEntity | not playingEntity.oclIsUndefined() and playingEntity.oclIsKindOf(rim::Entity))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_VBXq8RUTEeG6PvUxSTZnaw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#__QZaIEcZEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_DpoGkBUUEeG6PvUxSTZnaw" name="MedicationDispense">
      <ownedRule xmi:id="_M6fUoDsiEeKK96MV1iYPgQ" name="MedicationDispenseContainsMedicationOrImmunization" constrainedElement="_iZPioB7lEeGEaLkc3UAsAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_M6fUoTsiEeKK96MV1iYPgQ">
          <language>OCL</language>
          <body>self.product.manufacturedProduct.oclIsTypeOf(consol::MedicationInformation) xor self.product.manufacturedProduct.oclIsTypeOf(consol::ImmunizationMedicationInformation)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u7wZwIokEeSkH97cUQxLGA" name="MedicationDispenseTemplateId" constrainedElement="_DpoGkBUUEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u7wZwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.18')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u7yO8IokEeSkH97cUQxLGA" name="MedicationDispenseClassCode" constrainedElement="_DpoGkBUUEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u7yO8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassSupply::SPLY</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u7zdEIokEeSkH97cUQxLGA" name="MedicationDispenseEffectiveTime" constrainedElement="_DpoGkBUUEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u7zdEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.effectiveTime->isEmpty() or self.effectiveTime->exists(element | element.isNullFlavorUndefined())) implies (not self.effectiveTime->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u70rMIokEeSkH97cUQxLGA" name="MedicationDispenseId" constrainedElement="_DpoGkBUUEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u70rMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u72gYIokEeSkH97cUQxLGA" name="MedicationDispenseMoodCode" constrainedElement="_DpoGkBUUEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u72gYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentSubstanceMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u73HcIokEeSkH97cUQxLGA" name="MedicationDispenseRepeatNumber" constrainedElement="_DpoGkBUUEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u73HcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.repeatNumber.oclIsUndefined() or self.repeatNumber.isNullFlavorUndefined()) implies (not self.repeatNumber.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u748oIokEeSkH97cUQxLGA" name="MedicationDispenseStatusCode" constrainedElement="_DpoGkBUUEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u748oYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'aborted' or value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u77Y4IokEeSkH97cUQxLGA" name="MedicationDispenseQuantity" constrainedElement="_DpoGkBUUEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u77Y4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.quantity.oclIsUndefined() or self.quantity.isNullFlavorUndefined()) implies (not self.quantity.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vB-WgIokEeSkH97cUQxLGA" name="MedicationDispenseMedicationSupplyOrder" constrainedElement="_DpoGkBUUEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vB-WgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.supply.oclIsUndefined() and entryRelationship.supply.oclIsKindOf(consol::MedicationSupplyOrder) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vRgnUIokEeSkH97cUQxLGA" name="MedicationDispensePerformer" constrainedElement="_DpoGkBUUEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vRgnUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->one(performer : cda::Performer2 | not performer.oclIsUndefined() and performer.oclIsKindOf(cda::Performer2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wP7XYIokEeSkH97cUQxLGA" name="MedicationDispensePerformerMedicationDispenseAssignedEntityGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet" constrainedElement="_DpoGkBUUEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wP7XYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null).assignedEntity->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject(isNullFlavorUndefined() implies ( streetAddressLine->size() >=1 and streetAddressLine->size() &lt;=4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wP7-cIokEeSkH97cUQxLGA" name="MedicationDispensePerformerMedicationDispenseAssignedEntityGeneralHeaderConstraintsUSRealmAddressCity" constrainedElement="_DpoGkBUUEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wP7-cYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null).assignedEntity->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((city->isEmpty() or city->exists(element | element.isNullFlavorUndefined())) implies (city->size() = 1) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wP8lgIokEeSkH97cUQxLGA" name="MedicationDispensePerformerMedicationDispenseAssignedEntityGeneralHeaderConstraintsUSRealmAddressCountry" constrainedElement="_DpoGkBUUEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wP8lgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null).assignedEntity->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((country->isEmpty() or country->exists(element | element.isNullFlavorUndefined())) implies (not country->isEmpty()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wP8lgookEeSkH97cUQxLGA" name="MedicationDispensePerformerMedicationDispenseAssignedEntityGeneralHeaderConstraintsUSRealmAddressPostalCode" constrainedElement="_DpoGkBUUEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wP8lg4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null).assignedEntity->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((postalCode->isEmpty() or postalCode->exists(element | element.isNullFlavorUndefined())) implies (not postalCode->isEmpty()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wP9MkIokEeSkH97cUQxLGA" name="MedicationDispensePerformerMedicationDispenseAssignedEntityGeneralHeaderConstraintsUSRealmAddressState" constrainedElement="_DpoGkBUUEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wP9MkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null).assignedEntity->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((state->isEmpty() or state->exists(element | element.isNullFlavorUndefined())) implies (not state->isEmpty()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wP9zoIokEeSkH97cUQxLGA" name="MedicationDispensePerformerMedicationDispenseAssignedEntityGeneralHeaderConstraintsUSRealmAddressStreetAddressLine" constrainedElement="_DpoGkBUUEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wP9zoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null).assignedEntity->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((streetAddressLine->isEmpty() or streetAddressLine->exists(element | element.isNullFlavorUndefined())) implies (not streetAddressLine->isEmpty()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wP-asIokEeSkH97cUQxLGA" name="MedicationDispensePerformerMedicationDispenseAssignedEntityGeneralHeaderConstraintsUSRealmAddressUseP" constrainedElement="_DpoGkBUUEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wP-asYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null).assignedEntity->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies (not use->isEmpty() )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wP_BwIokEeSkH97cUQxLGA" name="MedicationDispensePerformerMedicationDispenseAssignedEntityGeneralHeaderConstraintsUSRealmAddressUse" constrainedElement="_DpoGkBUUEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wP_BwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null).assignedEntity->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies (use->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(vocab::PostalAddressUse) and &#xD;
let value : vocab::PostalAddressUse = element.oclAsType(vocab::PostalAddressUse) in &#xD;
value = vocab::PostalAddressUse::BAD or value = vocab::PostalAddressUse::DIR or value = vocab::PostalAddressUse::H or value = vocab::PostalAddressUse::HP or value = vocab::PostalAddressUse::HV or value = vocab::PostalAddressUse::PHYS or value = vocab::PostalAddressUse::PST or value = vocab::PostalAddressUse::PUB or value = vocab::PostalAddressUse::TMP or value = vocab::PostalAddressUse::WP) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wP_BwookEeSkH97cUQxLGA" name="MedicationDispensePerformerMedicationDispenseAssignedEntityAddr" constrainedElement="_DpoGkBUUEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wP_Bw4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null).assignedEntity->excluding(null)->reject((addr->isEmpty() or addr->exists(element | element.isNullFlavorUndefined())) implies (not addr->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wP_o0IokEeSkH97cUQxLGA" name="MedicationDispensePerformerMedicationDispenseAssignedEntity" constrainedElement="_DpoGkBUUEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wP_o0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null)->reject(assignedEntity->one(assignedEntity : cda::AssignedEntity | not assignedEntity.oclIsUndefined() and assignedEntity.oclIsKindOf(cda::AssignedEntity)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_DpoGkRUUEeG6PvUxSTZnaw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_3gL0sEbuEd6besF9iFIJkQ"/>
      </generalization>
      <ownedOperation xmi:id="_vB-9kIokEeSkH97cUQxLGA" name="getMedicationSupplyOrder" bodyCondition="_vB-9k4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vB-9k4okEeSkH97cUQxLGA" name="body" constrainedElement="_vB-9kIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vB-9lIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getSupplies()->select(supply : cda::Supply | not supply.oclIsUndefined() and supply.oclIsKindOf(consol::MedicationSupplyOrder))->asSequence()->any(true).oclAsType(consol::MedicationSupplyOrder)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vB-9kYokEeSkH97cUQxLGA" type="_j3aTQBrTEeGo461UQq-B1g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vB-9kookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_chEhQBUUEeG6PvUxSTZnaw" name="PreconditionForSubstanceAdministration">
      <ownedRule xmi:id="_u8D7wIokEeSkH97cUQxLGA" name="PreconditionForSubstanceAdministrationTemplateId" constrainedElement="_chEhQBUUEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u8D7wYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.25')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u8FJ4IokEeSkH97cUQxLGA" name="PreconditionForSubstanceAdministrationCode" constrainedElement="_chEhQBUUEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u8FJ4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u8GYAIokEeSkH97cUQxLGA" name="PreconditionForSubstanceAdministrationText" constrainedElement="_chEhQBUUEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u8GYAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.text.oclIsUndefined() or self.text.isNullFlavorUndefined()) implies (not self.text.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u8HmIIokEeSkH97cUQxLGA" name="PreconditionForSubstanceAdministrationValue" constrainedElement="_chEhQBUUEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u8HmIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value.oclIsUndefined() or self.value.isNullFlavorUndefined()) implies (self.value.oclIsTypeOf(datatypes::CD))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_chEhQRUUEeG6PvUxSTZnaw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_hKgxMEcEEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_PZBdMBUlEeGvPruliC3crg" name="PolicyActivity">
      <ownedComment xmi:id="_p8E5gFzAEeGt2doqSDULjA">
        <body>A policy activity represents the policy or program providing the coverage.</body>
      </ownedComment>
      <ownedRule xmi:id="_u8KCYIokEeSkH97cUQxLGA" name="PolicyActivityTemplateId" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u8KCYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.61')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u8LQgIokEeSkH97cUQxLGA" name="PolicyActivityClassCode" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u8LQgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryAct::ACT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u8Ph8IokEeSkH97cUQxLGA" name="PolicyActivityCodeP" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u8Ph8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u8NFsIokEeSkH97cUQxLGA" name="PolicyActivityCode" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u8NswIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '12' or value.code = '13' or value.code = '14' or value.code = '15' or value.code = '16' or value.code = '41' or value.code = '42' or value.code = '43' or value.code = '47' or value.code = 'AP' or value.code = 'C1' or value.code = 'CO' or value.code = 'CP' or value.code = 'D' or value.code = 'DB' or value.code = 'EP' or value.code = 'FF' or value.code = 'GP' or value.code = 'HM' or value.code = 'HN' or value.code = 'HS' or value.code = 'IN' or value.code = 'IP' or value.code = 'LC' or value.code = 'LD' or value.code = 'LI' or value.code = 'LT' or value.code = 'MA' or value.code = 'MB' or value.code = 'MC' or value.code = 'MH' or value.code = 'MI' or value.code = 'MP' or value.code = 'OT' or value.code = 'PE' or value.code = 'PL' or value.code = 'PP' or value.code = 'PR' or value.code = 'PS' or value.code = 'QM' or value.code = 'RP' or value.code = 'SP' or value.code = 'TF' or value.code = 'WC' or value.code = 'WU')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u8RXIIokEeSkH97cUQxLGA" name="PolicyActivityId" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u8RXIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u8TMUIokEeSkH97cUQxLGA" name="PolicyActivityMoodCode" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u8TMUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u8UacIokEeSkH97cUQxLGA" name="PolicyActivityStatusCode" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u8UacYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vRGXoIokEeSkH97cUQxLGA" name="PolicyActivityPayer" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vRGXoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->select(performer : cda::Performer2 | not performer.oclIsUndefined() and performer.oclIsKindOf(cda::Performer2))->select(templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.87'))->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vRIM0IokEeSkH97cUQxLGA" name="PolicyActivityGuarantor" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vRIM0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->select(performer : cda::Performer2 | not performer.oclIsUndefined() and performer.oclIsKindOf(cda::Performer2))->select(templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.88'))->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vRPhkIokEeSkH97cUQxLGA" name="PolicyActivityCoverage" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vRPhkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->select(participant : cda::Participant2 | not participant.oclIsUndefined() and participant.oclIsKindOf(cda::Participant2))->select(typeCode=vocab::ParticipationType::COV)->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vRTL8IokEeSkH97cUQxLGA" name="PolicyActivityHolder" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vRTL8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->select(participant : cda::Participant2 | not participant.oclIsUndefined() and participant.oclIsKindOf(cda::Participant2))->select(typeCode=vocab::ParticipationType::HLD)->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vSyZsYokEeSkH97cUQxLGA" name="PolicyActivityEntryRelationship" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vSyZsookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->select(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))->select(typeCode=vocab::x_ActRelationshipEntryRelationship::REFR)->notEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wQVnEIokEeSkH97cUQxLGA" name="PolicyActivityPayerPayerAssignedEntityGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wQVnEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null)->select(templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.87')).assignedEntity->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject(isNullFlavorUndefined() implies ( streetAddressLine->size() >=1 and streetAddressLine->size() &lt;=4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wQVnEookEeSkH97cUQxLGA" name="PolicyActivityPayerPayerAssignedEntityGeneralHeaderConstraintsUSRealmAddressCity" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wQVnE4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null)->select(templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.87')).assignedEntity->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((city->isEmpty() or city->exists(element | element.isNullFlavorUndefined())) implies (city->size() = 1) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wQWOIIokEeSkH97cUQxLGA" name="PolicyActivityPayerPayerAssignedEntityGeneralHeaderConstraintsUSRealmAddressCountry" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wQWOIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null)->select(templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.87')).assignedEntity->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((country->isEmpty() or country->exists(element | element.isNullFlavorUndefined())) implies (not country->isEmpty()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wQW1MIokEeSkH97cUQxLGA" name="PolicyActivityPayerPayerAssignedEntityGeneralHeaderConstraintsUSRealmAddressPostalCode" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wQW1MYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null)->select(templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.87')).assignedEntity->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((postalCode->isEmpty() or postalCode->exists(element | element.isNullFlavorUndefined())) implies (not postalCode->isEmpty()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wQW1MookEeSkH97cUQxLGA" name="PolicyActivityPayerPayerAssignedEntityGeneralHeaderConstraintsUSRealmAddressState" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wQW1M4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null)->select(templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.87')).assignedEntity->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((state->isEmpty() or state->exists(element | element.isNullFlavorUndefined())) implies (not state->isEmpty()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wQXcQIokEeSkH97cUQxLGA" name="PolicyActivityPayerPayerAssignedEntityGeneralHeaderConstraintsUSRealmAddressStreetAddressLine" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wQXcQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null)->select(templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.87')).assignedEntity->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((streetAddressLine->isEmpty() or streetAddressLine->exists(element | element.isNullFlavorUndefined())) implies (not streetAddressLine->isEmpty()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wQXcQookEeSkH97cUQxLGA" name="PolicyActivityPayerPayerAssignedEntityGeneralHeaderConstraintsUSRealmAddressUseP" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wQYDUIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null)->select(templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.87')).assignedEntity->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies (not use->isEmpty() )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wQYDUYokEeSkH97cUQxLGA" name="PolicyActivityPayerPayerAssignedEntityGeneralHeaderConstraintsUSRealmAddressUse" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wQYDUookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null)->select(templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.87')).assignedEntity->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies (use->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(vocab::PostalAddressUse) and &#xD;
let value : vocab::PostalAddressUse = element.oclAsType(vocab::PostalAddressUse) in &#xD;
value = vocab::PostalAddressUse::BAD or value = vocab::PostalAddressUse::DIR or value = vocab::PostalAddressUse::H or value = vocab::PostalAddressUse::HP or value = vocab::PostalAddressUse::HV or value = vocab::PostalAddressUse::PHYS or value = vocab::PostalAddressUse::PST or value = vocab::PostalAddressUse::PUB or value = vocab::PostalAddressUse::TMP or value = vocab::PostalAddressUse::WP) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wQZRcIokEeSkH97cUQxLGA" name="PolicyActivityPayerPayerAssignedEntityPayerOrganizationName" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wQZRcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null)->select(templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.87')).assignedEntity->excluding(null).representedOrganization->excluding(null)->reject((name->isEmpty() or name->exists(element | element.isNullFlavorUndefined())) implies (not name->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wQZRcookEeSkH97cUQxLGA" name="PolicyActivityPayerPayerAssignedEntityId" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wQZRc4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null)->select(templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.87')).assignedEntity->excluding(null)->reject((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wQZ4gIokEeSkH97cUQxLGA" name="PolicyActivityPayerPayerAssignedEntityCodeP" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wQZ4gYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null)->select(templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.87')).assignedEntity->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wQafkIokEeSkH97cUQxLGA" name="PolicyActivityPayerPayerAssignedEntityCode" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wQafkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null)->select(templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.87')).assignedEntity->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined() and code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = code.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.5.110' and (value.code = 'AFFL' or value.code = 'AGNT' or value.code = 'CIT' or value.code = 'CRINV' or value.code = 'CRSPNSR' or value.code = 'SPNSR' or value.code = 'COVPTY' or value.code = 'EMP' or value.code = 'GUAR' or value.code = 'INVSBJ' or value.code = 'PAYOR' or value.code = 'LIC' or value.code = 'PAT' or value.code = 'PAYEE' or value.code = 'POLHOLD' or value.code = 'QUAL' or value.code = 'STD' or value.code = 'UNDWRT')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wQafkookEeSkH97cUQxLGA" name="PolicyActivityPayerPayerAssignedEntityAddr" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wQafk4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null)->select(templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.87')).assignedEntity->excluding(null)->reject((addr->isEmpty() or addr->exists(element | element.isNullFlavorUndefined())) implies (not addr->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wQbGoIokEeSkH97cUQxLGA" name="PolicyActivityPayerPayerAssignedEntityTelecom" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wQbGoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null)->select(templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.87')).assignedEntity->excluding(null)->reject((telecom->isEmpty() or telecom->exists(element | element.isNullFlavorUndefined())) implies (not telecom->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wQbtsIokEeSkH97cUQxLGA" name="PolicyActivityPayerPayerAssignedEntityPayerOrganization" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wQbtsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null)->select(templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.87')).assignedEntity->excluding(null)->reject(representedOrganization->one(representedOrganization : cda::Organization | not representedOrganization.oclIsUndefined() and representedOrganization.oclIsKindOf(cda::Organization)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wQbtsookEeSkH97cUQxLGA" name="PolicyActivityPayerTemplateId" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wQbts4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null)->select(templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.87'))->select(templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.87'))->reject(templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.87'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wQcUwIokEeSkH97cUQxLGA" name="PolicyActivityPayerTypeCode" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wQcUwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null)->select(templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.87'))->select(templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.87'))->reject(isDefined('typeCode') and typeCode=vocab::ParticipationPhysicalPerformer::PRF)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wQc70IokEeSkH97cUQxLGA" name="PolicyActivityPayerPayerAssignedEntity" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wQc70YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null)->select(templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.87'))->select(templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.87'))->reject(assignedEntity->one(assignedEntity : cda::AssignedEntity | not assignedEntity.oclIsUndefined() and assignedEntity.oclIsKindOf(cda::AssignedEntity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wQjpgIokEeSkH97cUQxLGA" name="PolicyActivityGuarantorGuarantorAssignedEntityGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wQjpgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null)->select(templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.88')).assignedEntity->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject(isNullFlavorUndefined() implies ( streetAddressLine->size() >=1 and streetAddressLine->size() &lt;=4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wQjpgookEeSkH97cUQxLGA" name="PolicyActivityGuarantorGuarantorAssignedEntityGeneralHeaderConstraintsUSRealmAddressCity" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wQjpg4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null)->select(templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.88')).assignedEntity->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((city->isEmpty() or city->exists(element | element.isNullFlavorUndefined())) implies (city->size() = 1) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wQkQkIokEeSkH97cUQxLGA" name="PolicyActivityGuarantorGuarantorAssignedEntityGeneralHeaderConstraintsUSRealmAddressCountry" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wQkQkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null)->select(templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.88')).assignedEntity->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((country->isEmpty() or country->exists(element | element.isNullFlavorUndefined())) implies (not country->isEmpty()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wQk3oIokEeSkH97cUQxLGA" name="PolicyActivityGuarantorGuarantorAssignedEntityGeneralHeaderConstraintsUSRealmAddressPostalCode" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wQk3oYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null)->select(templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.88')).assignedEntity->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((postalCode->isEmpty() or postalCode->exists(element | element.isNullFlavorUndefined())) implies (not postalCode->isEmpty()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wQk3oookEeSkH97cUQxLGA" name="PolicyActivityGuarantorGuarantorAssignedEntityGeneralHeaderConstraintsUSRealmAddressState" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wQk3o4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null)->select(templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.88')).assignedEntity->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((state->isEmpty() or state->exists(element | element.isNullFlavorUndefined())) implies (not state->isEmpty()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wQlesIokEeSkH97cUQxLGA" name="PolicyActivityGuarantorGuarantorAssignedEntityGeneralHeaderConstraintsUSRealmAddressStreetAddressLine" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wQlesYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null)->select(templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.88')).assignedEntity->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((streetAddressLine->isEmpty() or streetAddressLine->exists(element | element.isNullFlavorUndefined())) implies (not streetAddressLine->isEmpty()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wQlesookEeSkH97cUQxLGA" name="PolicyActivityGuarantorGuarantorAssignedEntityGeneralHeaderConstraintsUSRealmAddressUseP" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wQles4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null)->select(templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.88')).assignedEntity->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies (not use->isEmpty() )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wQmFwIokEeSkH97cUQxLGA" name="PolicyActivityGuarantorGuarantorAssignedEntityGeneralHeaderConstraintsUSRealmAddressUse" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wQmFwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null)->select(templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.88')).assignedEntity->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies (use->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(vocab::PostalAddressUse) and &#xD;
let value : vocab::PostalAddressUse = element.oclAsType(vocab::PostalAddressUse) in &#xD;
value = vocab::PostalAddressUse::BAD or value = vocab::PostalAddressUse::DIR or value = vocab::PostalAddressUse::H or value = vocab::PostalAddressUse::HP or value = vocab::PostalAddressUse::HV or value = vocab::PostalAddressUse::PHYS or value = vocab::PostalAddressUse::PST or value = vocab::PostalAddressUse::PUB or value = vocab::PostalAddressUse::TMP or value = vocab::PostalAddressUse::WP) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wQms0IokEeSkH97cUQxLGA" name="PolicyActivityGuarantorGuarantorAssignedEntityPersonNameAndOrOrgName" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wQms0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null)->select(templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.88')).assignedEntity->excluding(null)->reject((performer.assignedEntity.assignedPerson->exists(not oclIsUndefined()) and performer.assignedEntity.assignedPerson.name->size() >0) or (performer.assignedEntity.representedOrganization->exists(not oclIsUndefined()) and performer.assignedEntity.representedOrganization.name->size() >0 ))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wQnT4IokEeSkH97cUQxLGA" name="PolicyActivityGuarantorGuarantorAssignedEntityCode" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wQnT4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null)->select(templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.88')).assignedEntity->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined() and code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = code.oclAsType(datatypes::CE) in &#xD;
value.code = 'GUAR' and value.codeSystem = '2.16.840.1.113883.5.110'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wQn68IokEeSkH97cUQxLGA" name="PolicyActivityGuarantorGuarantorAssignedEntityCodeP" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wQn68YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null)->select(templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.88')).assignedEntity->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wQn68ookEeSkH97cUQxLGA" name="PolicyActivityGuarantorGuarantorAssignedEntityAddr" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wQn684okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null)->select(templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.88')).assignedEntity->excluding(null)->reject((addr->isEmpty() or addr->exists(element | element.isNullFlavorUndefined())) implies (not addr->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wQoiAIokEeSkH97cUQxLGA" name="PolicyActivityGuarantorGuarantorAssignedEntityTelecom" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wQoiAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null)->select(templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.88')).assignedEntity->excluding(null)->reject((telecom->isEmpty() or telecom->exists(element | element.isNullFlavorUndefined())) implies (not telecom->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wQpJEIokEeSkH97cUQxLGA" name="PolicyActivityGuarantorTemplateId" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wQpJEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null)->select(templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.88'))->select(templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.88'))->reject(templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.88'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wQpJEookEeSkH97cUQxLGA" name="PolicyActivityGuarantorTime" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wQpJE4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null)->select(templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.88'))->select(templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.88'))->reject((time.oclIsUndefined() or time.isNullFlavorUndefined()) implies (not time.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wQpwIIokEeSkH97cUQxLGA" name="PolicyActivityGuarantorTypeCode" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wQpwIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null)->select(templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.88'))->select(templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.88'))->reject(typeCode=vocab::ParticipationPhysicalPerformer::PRF)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wQqXMIokEeSkH97cUQxLGA" name="PolicyActivityGuarantorGuarantorAssignedEntity" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wQqXMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null)->select(templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.88'))->select(templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.88'))->reject(assignedEntity->one(assignedEntity : cda::AssignedEntity | not assignedEntity.oclIsUndefined() and assignedEntity.oclIsKindOf(cda::AssignedEntity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wQwd0IokEeSkH97cUQxLGA" name="PolicyActivityCoverageCoverageRoleGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wQwd0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->select(typeCode=vocab::ParticipationType::COV).participantRole->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject(isNullFlavorUndefined() implies ( streetAddressLine->size() >=1 and streetAddressLine->size() &lt;=4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wQxE4IokEeSkH97cUQxLGA" name="PolicyActivityCoverageCoverageRoleGeneralHeaderConstraintsUSRealmAddressCity" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wQxE4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->select(typeCode=vocab::ParticipationType::COV).participantRole->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((city->isEmpty() or city->exists(element | element.isNullFlavorUndefined())) implies (city->size() = 1) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wQxr8IokEeSkH97cUQxLGA" name="PolicyActivityCoverageCoverageRoleGeneralHeaderConstraintsUSRealmAddressCountry" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wQxr8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->select(typeCode=vocab::ParticipationType::COV).participantRole->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((country->isEmpty() or country->exists(element | element.isNullFlavorUndefined())) implies (not country->isEmpty()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wQyTAIokEeSkH97cUQxLGA" name="PolicyActivityCoverageCoverageRoleGeneralHeaderConstraintsUSRealmAddressPostalCode" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wQyTAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->select(typeCode=vocab::ParticipationType::COV).participantRole->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((postalCode->isEmpty() or postalCode->exists(element | element.isNullFlavorUndefined())) implies (not postalCode->isEmpty()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wQyTAookEeSkH97cUQxLGA" name="PolicyActivityCoverageCoverageRoleGeneralHeaderConstraintsUSRealmAddressState" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wQyTA4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->select(typeCode=vocab::ParticipationType::COV).participantRole->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((state->isEmpty() or state->exists(element | element.isNullFlavorUndefined())) implies (not state->isEmpty()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wQy6EIokEeSkH97cUQxLGA" name="PolicyActivityCoverageCoverageRoleGeneralHeaderConstraintsUSRealmAddressStreetAddressLine" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wQy6EYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->select(typeCode=vocab::ParticipationType::COV).participantRole->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((streetAddressLine->isEmpty() or streetAddressLine->exists(element | element.isNullFlavorUndefined())) implies (not streetAddressLine->isEmpty()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wQzhIIokEeSkH97cUQxLGA" name="PolicyActivityCoverageCoverageRoleGeneralHeaderConstraintsUSRealmAddressUseP" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wQzhIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->select(typeCode=vocab::ParticipationType::COV).participantRole->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies (not use->isEmpty() )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wQ0IMIokEeSkH97cUQxLGA" name="PolicyActivityCoverageCoverageRoleGeneralHeaderConstraintsUSRealmAddressUse" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wQ0IMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->select(typeCode=vocab::ParticipationType::COV).participantRole->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies (use->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(vocab::PostalAddressUse) and &#xD;
let value : vocab::PostalAddressUse = element.oclAsType(vocab::PostalAddressUse) in &#xD;
value = vocab::PostalAddressUse::BAD or value = vocab::PostalAddressUse::DIR or value = vocab::PostalAddressUse::H or value = vocab::PostalAddressUse::HP or value = vocab::PostalAddressUse::HV or value = vocab::PostalAddressUse::PHYS or value = vocab::PostalAddressUse::PST or value = vocab::PostalAddressUse::PUB or value = vocab::PostalAddressUse::TMP or value = vocab::PostalAddressUse::WP) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wQ1WUIokEeSkH97cUQxLGA" name="PolicyActivityCoverageCoverageRoleCoveragePlayingEntityName" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wQ1WUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->select(typeCode=vocab::ParticipationType::COV).participantRole->excluding(null).playingEntity->excluding(null)->reject((name->isEmpty() or name->exists(element | element.isNullFlavorUndefined())) implies (name->size() = 1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wQ2kcIokEeSkH97cUQxLGA" name="PolicyActivityCoverageCoverageRoleId" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wQ2kcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->select(typeCode=vocab::ParticipationType::COV).participantRole->excluding(null)->reject((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wQ3LgIokEeSkH97cUQxLGA" name="PolicyActivityCoverageCoverageRoleCode" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wQ3LgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->select(typeCode=vocab::ParticipationType::COV).participantRole->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined() and code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = code.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.5.111' and (value.code = 'FAMDEP' or value.code = 'FSTUD' or value.code = 'HANDIC' or value.code = 'INJ' or value.code = 'PSTUD' or value.code = 'SELF' or value.code = 'SPON' or value.code = 'STUD')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wQ3ykIokEeSkH97cUQxLGA" name="PolicyActivityCoverageCoverageRoleCodeP" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wQ3ykYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->select(typeCode=vocab::ParticipationType::COV).participantRole->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wQ3ykookEeSkH97cUQxLGA" name="PolicyActivityCoverageCoverageRoleAddr" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wQ4ZoIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->select(typeCode=vocab::ParticipationType::COV).participantRole->excluding(null)->reject((addr->isEmpty() or addr->exists(element | element.isNullFlavorUndefined())) implies (not addr->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wQ4ZoYokEeSkH97cUQxLGA" name="PolicyActivityCoverageCoverageRoleCoveragePlayingEntity" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wQ4ZoookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->select(typeCode=vocab::ParticipationType::COV).participantRole->excluding(null)->reject(playingEntity->one(playingEntity : cda::PlayingEntity | not playingEntity.oclIsUndefined() and playingEntity.oclIsKindOf(cda::PlayingEntity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wQ5AsIokEeSkH97cUQxLGA" name="PolicyActivityCoverageLowTime" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wQ5AsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->select(typeCode=vocab::ParticipationType::COV)->select(typeCode=vocab::ParticipationType::COV)->reject(not time.oclIsUndefined() implies not time.low.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wQ5nwIokEeSkH97cUQxLGA" name="PolicyActivityCoverageHighTime" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wQ5nwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->select(typeCode=vocab::ParticipationType::COV)->select(typeCode=vocab::ParticipationType::COV)->reject(not time.oclIsUndefined() implies not time.high.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wQ5nwookEeSkH97cUQxLGA" name="PolicyActivityCoverageTemplateId" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wQ5nw4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->select(typeCode=vocab::ParticipationType::COV)->select(typeCode=vocab::ParticipationType::COV)->reject(templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.89'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wQ6O0IokEeSkH97cUQxLGA" name="PolicyActivityCoverageTypeCode" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wQ6O0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->select(typeCode=vocab::ParticipationType::COV)->select(typeCode=vocab::ParticipationType::COV)->reject(typeCode=vocab::ParticipationType::COV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wQ614IokEeSkH97cUQxLGA" name="PolicyActivityCoverageTime" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wQ614YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->select(typeCode=vocab::ParticipationType::COV)->select(typeCode=vocab::ParticipationType::COV)->reject((time.oclIsUndefined() or time.isNullFlavorUndefined()) implies (not time.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wQ7c8IokEeSkH97cUQxLGA" name="PolicyActivityCoverageCoverageRole" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wQ7c8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->select(typeCode=vocab::ParticipationType::COV)->select(typeCode=vocab::ParticipationType::COV)->reject(participantRole->one(participantRole : cda::ParticipantRole | not participantRole.oclIsUndefined() and participantRole.oclIsKindOf(cda::ParticipantRole)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wRCKoIokEeSkH97cUQxLGA" name="PolicyActivityHolderHolderRoleGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wRCKoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->select(typeCode=vocab::ParticipationType::HLD).participantRole->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject(isNullFlavorUndefined() implies ( streetAddressLine->size() >=1 and streetAddressLine->size() &lt;=4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wRCKoookEeSkH97cUQxLGA" name="PolicyActivityHolderHolderRoleGeneralHeaderConstraintsUSRealmAddressCity" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wRCKo4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->select(typeCode=vocab::ParticipationType::HLD).participantRole->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((city->isEmpty() or city->exists(element | element.isNullFlavorUndefined())) implies (city->size() = 1) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wRCxsIokEeSkH97cUQxLGA" name="PolicyActivityHolderHolderRoleGeneralHeaderConstraintsUSRealmAddressCountry" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wRCxsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->select(typeCode=vocab::ParticipationType::HLD).participantRole->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((country->isEmpty() or country->exists(element | element.isNullFlavorUndefined())) implies (not country->isEmpty()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wRDYwIokEeSkH97cUQxLGA" name="PolicyActivityHolderHolderRoleGeneralHeaderConstraintsUSRealmAddressPostalCode" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wRDYwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->select(typeCode=vocab::ParticipationType::HLD).participantRole->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((postalCode->isEmpty() or postalCode->exists(element | element.isNullFlavorUndefined())) implies (not postalCode->isEmpty()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wRD_0IokEeSkH97cUQxLGA" name="PolicyActivityHolderHolderRoleGeneralHeaderConstraintsUSRealmAddressState" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wRD_0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->select(typeCode=vocab::ParticipationType::HLD).participantRole->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((state->isEmpty() or state->exists(element | element.isNullFlavorUndefined())) implies (not state->isEmpty()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wRD_0ookEeSkH97cUQxLGA" name="PolicyActivityHolderHolderRoleGeneralHeaderConstraintsUSRealmAddressStreetAddressLine" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wRD_04okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->select(typeCode=vocab::ParticipationType::HLD).participantRole->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((streetAddressLine->isEmpty() or streetAddressLine->exists(element | element.isNullFlavorUndefined())) implies (not streetAddressLine->isEmpty()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wREm4IokEeSkH97cUQxLGA" name="PolicyActivityHolderHolderRoleGeneralHeaderConstraintsUSRealmAddressUseP" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wREm4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->select(typeCode=vocab::ParticipationType::HLD).participantRole->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies (not use->isEmpty() )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wRFN8IokEeSkH97cUQxLGA" name="PolicyActivityHolderHolderRoleGeneralHeaderConstraintsUSRealmAddressUse" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wRFN8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->select(typeCode=vocab::ParticipationType::HLD).participantRole->excluding(null).addr->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies (use->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(vocab::PostalAddressUse) and &#xD;
let value : vocab::PostalAddressUse = element.oclAsType(vocab::PostalAddressUse) in &#xD;
value = vocab::PostalAddressUse::BAD or value = vocab::PostalAddressUse::DIR or value = vocab::PostalAddressUse::H or value = vocab::PostalAddressUse::HP or value = vocab::PostalAddressUse::HV or value = vocab::PostalAddressUse::PHYS or value = vocab::PostalAddressUse::PST or value = vocab::PostalAddressUse::PUB or value = vocab::PostalAddressUse::TMP or value = vocab::PostalAddressUse::WP) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wRFN8ookEeSkH97cUQxLGA" name="PolicyActivityHolderHolderRoleId" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wRFN84okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->select(typeCode=vocab::ParticipationType::HLD).participantRole->excluding(null)->reject((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wRF1AIokEeSkH97cUQxLGA" name="PolicyActivityHolderHolderRoleAddr" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wRF1AYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->select(typeCode=vocab::ParticipationType::HLD).participantRole->excluding(null)->reject((addr->isEmpty() or addr->exists(element | element.isNullFlavorUndefined())) implies (not addr->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wRGcEIokEeSkH97cUQxLGA" name="PolicyActivityHolderTemplateId" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wRGcEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->select(typeCode=vocab::ParticipationType::HLD)->select(typeCode=vocab::ParticipationType::HLD)->reject(templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.90'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wRHDIIokEeSkH97cUQxLGA" name="PolicyActivityHolderTypeCode" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wRHDIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->select(typeCode=vocab::ParticipationType::HLD)->select(typeCode=vocab::ParticipationType::HLD)->reject(typeCode=vocab::ParticipationType::HLD)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wRHDIookEeSkH97cUQxLGA" name="PolicyActivityHolderTime" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wRHDI4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->select(typeCode=vocab::ParticipationType::HLD)->select(typeCode=vocab::ParticipationType::HLD)->reject((time.oclIsUndefined() or time.isNullFlavorUndefined()) implies (not time.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wRHqMIokEeSkH97cUQxLGA" name="PolicyActivityHolderHolderRole" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wRHqMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->select(typeCode=vocab::ParticipationType::HLD)->select(typeCode=vocab::ParticipationType::HLD)->reject(participantRole->one(participantRole : cda::ParticipantRole | not participantRole.oclIsUndefined() and participantRole.oclIsKindOf(cda::ParticipantRole)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wRI4UIokEeSkH97cUQxLGA" name="PolicyActivityEntryRelationshipTargetActActivity" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wRI4UYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->select(typeCode=vocab::x_ActRelationshipEntryRelationship::REFR)->select(typeCode=vocab::x_ActRelationshipEntryRelationship::REFR)->reject(act->one(a : cda::Act | a.oclIsTypeOf(consol::AuthorizationActivity) or (a.classCode=vocab::x_ActClassDocumentEntryAct::ACT and a.moodCode=vocab::x_DocumentActMood::DEF)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wRI4UookEeSkH97cUQxLGA" name="PolicyActivityEntryRelationshipDescriptionCoveragePlan" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wRI4U4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->select(typeCode=vocab::x_ActRelationshipEntryRelationship::REFR)->select(typeCode=vocab::x_ActRelationshipEntryRelationship::REFR)->reject(act->select(a : cda::Act | a.classCode=vocab::x_ActClassDocumentEntryAct::ACT and (a.moodCode=vocab::x_DocumentActMood::DEF))->forAll(id->size() > 0 and text->size() = 1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wRJfYIokEeSkH97cUQxLGA" name="PolicyActivityEntryRelationshipTypeCode" constrainedElement="_PZBdMBUlEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wRJfYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->select(typeCode=vocab::x_ActRelationshipEntryRelationship::REFR)->select(typeCode=vocab::x_ActRelationshipEntryRelationship::REFR)->reject(typeCode=vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_PZBdMRUlEeGvPruliC3crg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Cg3pkBUmEeGvPruliC3crg" name="CoverageActivity">
      <ownedRule xmi:id="_xtqFkDZXEeGUovy31cP2ng" name="CoverageActivityRelationshipSequenceNumber" constrainedElement="_Cg3pkBUmEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-gLV0DZXEeGUovy31cP2ng">
          <language>OCL</language>
          <body>self.entryRelationship->forAll(er : cda::EntryRelationship | not er.sequenceNumber.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u9Z_kIokEeSkH97cUQxLGA" name="CoverageActivityTemplateId" constrainedElement="_Cg3pkBUmEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u9Z_kYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.60')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u9b0wIokEeSkH97cUQxLGA" name="CoverageActivityClassCode" constrainedElement="_Cg3pkBUmEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u9cb0IokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryAct::ACT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u9dp8IokEeSkH97cUQxLGA" name="CoverageActivityCode" constrainedElement="_Cg3pkBUmEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u9dp8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '48768-6' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u9gGMIokEeSkH97cUQxLGA" name="CoverageActivityId" constrainedElement="_Cg3pkBUmEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u9gGMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u9hUUIokEeSkH97cUQxLGA" name="CoverageActivityMoodCode" constrainedElement="_Cg3pkBUmEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u9hUUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u9iicIokEeSkH97cUQxLGA" name="CoverageActivityStatusCode" constrainedElement="_Cg3pkBUmEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u9iicYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u9k-sIokEeSkH97cUQxLGA" name="CoverageActivityPolicyActivity" constrainedElement="_Cg3pkBUmEeGvPruliC3crg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u9k-sYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(consol::PolicyActivity) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Cg3pkRUmEeGvPruliC3crg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_u9mM0IokEeSkH97cUQxLGA" name="getPolicyActivities" bodyCondition="_u9mM04okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_u9mM04okEeSkH97cUQxLGA" name="body" constrainedElement="_u9mM0IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_u9mM1IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::PolicyActivity)).oclAsType(consol::PolicyActivity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_u9mM0YokEeSkH97cUQxLGA" type="_PZBdMBUlEeGvPruliC3crg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_u9mM0ookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_5Ha7ABUyEeGbmN_W114JUw" name="ProblemObservation">
      <ownedComment xmi:id="_-wq7oCAsEeGetMjKLkqR8g">
        <body>&lt;p>A problem is a clinical statement that a clinician has noted. In health care it is a condition that requires monitoring or diagnostic, therapeutic, or educational action. It also refers to any unmet or partially met basic human need.&lt;/p>&#xD;
&lt;p>A Problem Observation is required to be wrapped in an act wrapper in locations such as the Problem Section, Allergies Section, and Hospital Discharge Diagnosis Section, where the type of problem needs to be identified or the condition tracked. A Problem Observation can be a valid &quot;standalone&quot; template instance in cases where a simple problem observation is to be sent.&lt;/p>&#xD;
&lt;p>The negationInd attribute, if true, specifies that the problem indicated was observed to not have occurred (which is subtly but importantly different from having not been observed). NegationInd='true' is an acceptable way to make a clinical assertion that something did not occur, for example, &quot;no diabetes&quot;.&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="_vaH7gCBEEeG938evaWkvcA" name="ProblemObservationHasTextReference">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vaH7gSBEEeG938evaWkvcA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined() implies self.text->forAll(reference->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_IO0RwOJkEeG3cO7ebC3QuA" name="ProblemObservationTextReferenceValue" constrainedElement="_vaH7gCBEEeG938evaWkvcA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_WnbWEOJkEeG3cO7ebC3QuA">
          <language>OCL</language>
          <body>self.text->forAll(reference->size() = 1) implies self.text->forAll(reference->one(value->size() = 1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_TFQWECf3EeGO5_JBy9h6BA" name="ProblemObservationHasTextReferenceValue" constrainedElement="_vaH7gCBEEeG938evaWkvcA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_VepPUCf3EeGO5_JBy9h6BA">
          <language>OCL</language>
          <body>not self.text.reference.value.oclIsUndefined() implies not self.getSection().text.getText(self.text.reference.value.substring(2, self.text.reference.value.size())).oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_5_4wYCAwEeGetMjKLkqR8g" name="ProblemObservationHasOnsetDate">
        <ownedComment xmi:id="_C2lzYOJlEeG3cO7ebC3QuA">
          <body>This field represents the onset date (CONF:16882)</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_5_4wYSAwEeGetMjKLkqR8g">
          <language>OCL</language>
          <body>not self.effectiveTime.oclIsUndefined() implies not self.effectiveTime.low.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_6nx20CAwEeGetMjKLkqR8g" name="ProblemObservationHasResolutionDate">
        <ownedComment xmi:id="_J5q0kOJlEeG3cO7ebC3QuA">
          <body>If the problem is resolved, record the resolution date in effectiveTime/high. If the problem is known to be resolved but the resolution date is not known, use @nullFlavor=&quot;UNK&quot; (CONF:16883)</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_6nx20SAwEeGetMjKLkqR8g">
          <language>OCL</language>
          <body>not self.effectiveTime.oclIsUndefined() implies not self.effectiveTime.high.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jlZuoCf3EeGO5_JBy9h6BA" name="ProblemObservationValueNullFlavor" constrainedElement="_5Ha7ABUyEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_r1sJ0Cf3EeGO5_JBy9h6BA">
          <language>OCL</language>
          <body>self.value->forAll(val | not val.isNullFlavorUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_1fQFECf3EeGO5_JBy9h6BA" name="ProblemObservationAgeObservationInversion">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_48XFICf3EeGO5_JBy9h6BA">
          <language>OCL</language>
          <body>self.entryRelationship->select(er : cda::EntryRelationship | not er.observation.oclIsUndefined() and er.observation.oclIsKindOf(consol::AgeObservation))->forAll(ent : cda::EntryRelationship | ent.inversionInd=true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nck40OJlEeG3cO7ebC3QuA" name="ProblemObservationValueTranslation" constrainedElement="_5Ha7ABUyEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_qYoaQOJlEeG3cO7ebC3QuA">
          <language>OCL</language>
          <body>self.value.oclAsType(datatypes::CD).translation->size()>0</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uQVroOJlEeG3cO7ebC3QuA" name="ProblemObservationValueTranslationCode" constrainedElement="_nck40OJlEeG3cO7ebC3QuA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v91IMOJlEeG3cO7ebC3QuA">
          <language>OCL</language>
          <body>self.value.oclAsType(datatypes::CD).translation->size()>0 implies self.value.oclAsType(datatypes::CD).translation->forAll(code->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u9pQIIokEeSkH97cUQxLGA" name="ProblemObservationTemplateId" constrainedElement="_5Ha7ABUyEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u9pQIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.4')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u9v90IokEeSkH97cUQxLGA" name="ProblemObservationClassCode" constrainedElement="_5Ha7ABUyEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u9v90YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u9xL8IokEeSkH97cUQxLGA" name="ProblemObservationMoodCode" constrainedElement="_5Ha7ABUyEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u9xL8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u9yaEIokEeSkH97cUQxLGA" name="ProblemObservationNegationInd" constrainedElement="_5Ha7ABUyEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u9yaEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.negationInd.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u9zBIIokEeSkH97cUQxLGA" name="ProblemObservationId" constrainedElement="_5Ha7ABUyEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u9zBIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u935oIokEeSkH97cUQxLGA" name="ProblemObservationCodeP" constrainedElement="_5Ha7ABUyEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u935oYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u91dYIokEeSkH97cUQxLGA" name="ProblemObservationCode" constrainedElement="_5Ha7ABUyEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u91dYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.96' and (value.code = '404684003' or value.code = '409586006' or value.code = '282291009' or value.code = '64572001' or value.code = '248536006' or value.code = '418799008' or value.code = '55607006' or value.code = '373930000'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u96V4IokEeSkH97cUQxLGA" name="ProblemObservationText" constrainedElement="_5Ha7ABUyEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u96V4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.text.oclIsUndefined() or self.text.isNullFlavorUndefined()) implies (not self.text.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u98LEIokEeSkH97cUQxLGA" name="ProblemObservationStatusCode" constrainedElement="_5Ha7ABUyEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u98LEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u9-AQIokEeSkH97cUQxLGA" name="ProblemObservationEffectiveTime" constrainedElement="_5Ha7ABUyEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u9-nUIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u-AcgIokEeSkH97cUQxLGA" name="ProblemObservationValue" constrainedElement="_5Ha7ABUyEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u-AcgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.96' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u-CRsIokEeSkH97cUQxLGA" name="ProblemObservationValueP" constrainedElement="_5Ha7ABUyEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u-CRsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u-Et8IokEeSkH97cUQxLGA" name="ProblemObservationAgeObservation" constrainedElement="_5Ha7ABUyEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u-Et8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::AgeObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u-HKMIokEeSkH97cUQxLGA" name="ProblemObservationHealthStatusObservation" constrainedElement="_5Ha7ABUyEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u-HKMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::HealthStatusObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u-Xo4IokEeSkH97cUQxLGA" name="ProblemObservationProblemStatus" constrainedElement="_5Ha7ABUyEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u-Xo4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::ProblemStatus) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_5Ha7ARUyEeGbmN_W114JUw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_u-FVAIokEeSkH97cUQxLGA" name="getAgeObservation" bodyCondition="_u-FVA4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_u-FVA4okEeSkH97cUQxLGA" name="body" constrainedElement="_u-FVAIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_u-FVBIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::AgeObservation))->asSequence()->any(true).oclAsType(consol::AgeObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_u-FVAYokEeSkH97cUQxLGA" type="_2EqqABSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_u-FVAookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_u-HxQIokEeSkH97cUQxLGA" name="getHealthStatusObservation" bodyCondition="_u-HxQ4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_u-HxQ4okEeSkH97cUQxLGA" name="body" constrainedElement="_u-HxQIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_u-IYUIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::HealthStatusObservation))->asSequence()->any(true).oclAsType(consol::HealthStatusObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_u-HxQYokEeSkH97cUQxLGA" type="_2ExXsBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_u-HxQookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_u-YP8IokEeSkH97cUQxLGA" name="getProblemStatus" bodyCondition="_u-YP84okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_u-YP84okEeSkH97cUQxLGA" name="body" constrainedElement="_u-YP8IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_u-YP9IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProblemStatus))->asSequence()->any(true).oclAsType(consol::ProblemStatus)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_u-YP8YokEeSkH97cUQxLGA" type="_SjN_8BUzEeGbmN_W114JUw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_u-YP8ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_SjN_8BUzEeGbmN_W114JUw" name="ProblemStatus">
      <ownedComment xmi:id="_DRGcECA8EeG9GZYpu7WBOQ">
        <body>The Problem Status records whether the indicated problem is active, inactive, or resolved.</body>
      </ownedComment>
      <ownedRule xmi:id="_NGUbACp_EeGiFpKeZIy4Pg" name="ProblemStatusTextReference" constrainedElement="_SjN_8BUzEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_QDaeQCp_EeGiFpKeZIy4Pg">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined() implies self.text->forAll(reference->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_z76qMOJsEeG3cO7ebC3QuA" name="ProblemStatusReferenceValue" constrainedElement="_NGUbACp_EeGiFpKeZIy4Pg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_4LlIkOJsEeG3cO7ebC3QuA">
          <language>OCL</language>
          <body>self.text->forAll(reference->size() = 1) implies self.text->forAll(reference->one(value->size() = 1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_S6G-kCp_EeGiFpKeZIy4Pg" name="ProblemStatusTextReferenceValue" constrainedElement="_NGUbACp_EeGiFpKeZIy4Pg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_UfbWkCp_EeGiFpKeZIy4Pg">
          <language>OCL</language>
          <body>not self.text.reference.value.oclIsUndefined() implies not self.getSection().text.getText(self.text.reference.value.substring(2, self.text.reference.value.size())).oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u-IYUYokEeSkH97cUQxLGA" name="ProblemStatusTemplateId" constrainedElement="_SjN_8BUzEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u-IYUookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.6')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u-LboIokEeSkH97cUQxLGA" name="ProblemStatusClassCode" constrainedElement="_SjN_8BUzEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u-LboYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u-MpwIokEeSkH97cUQxLGA" name="ProblemStatusMoodCode" constrainedElement="_SjN_8BUzEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u-MpwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u-Oe8IokEeSkH97cUQxLGA" name="ProblemStatusCode" constrainedElement="_SjN_8BUzEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u-Oe8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '33999-4' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u-QUIIokEeSkH97cUQxLGA" name="ProblemStatusText" constrainedElement="_SjN_8BUzEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u-QUIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.text.oclIsUndefined() or self.text.isNullFlavorUndefined()) implies (not self.text.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u-SwYIokEeSkH97cUQxLGA" name="ProblemStatusStatusCode" constrainedElement="_SjN_8BUzEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u-SwYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u-VMoIokEeSkH97cUQxLGA" name="ProblemStatusValue" constrainedElement="_SjN_8BUzEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u-VMoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.96' and (value.code = '55561003' or value.code = '73425007' or value.code = '413322009')))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_SjN_8RUzEeGbmN_W114JUw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="__qYdcBVNEeGbmN_W114JUw" name="ImmunizationRefusalReason">
      <ownedRule xmi:id="_u-ioAIokEeSkH97cUQxLGA" name="ImmunizationRefusalReasonTemplateId" constrainedElement="__qYdcBVNEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u-ioAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.53')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u-j2IIokEeSkH97cUQxLGA" name="ImmunizationRefusalReasonClassCode" constrainedElement="__qYdcBVNEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u-j2IYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u-lrUIokEeSkH97cUQxLGA" name="ImmunizationRefusalReasonCode" constrainedElement="__qYdcBVNEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u-lrUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.5.8' and (value.code = 'IMMUNE' or value.code = 'MEDPREC' or value.code = 'OSTOCK' or value.code = 'PATOBJ' or value.code = 'PHILISOP' or value.code = 'RELIG' or value.code = 'VACEFF' or value.code = 'VACSAF'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u-oHkIokEeSkH97cUQxLGA" name="ImmunizationRefusalReasonId" constrainedElement="__qYdcBVNEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u-oHkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u-pVsIokEeSkH97cUQxLGA" name="ImmunizationRefusalReasonMoodCode" constrainedElement="__qYdcBVNEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u-pVsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u-qj0IokEeSkH97cUQxLGA" name="ImmunizationRefusalReasonStatusCode" constrainedElement="__qYdcBVNEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u-qj0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="__qr_cBVNEeGbmN_W114JUw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_daTqABVOEeGbmN_W114JUw" name="ImmunizationMedicationInformation">
      <ownedComment xmi:id="_JOE1QBq0EeGo461UQq-B1g">
        <body>The Immunization Medication Information represents product information about the immunization substance. The vaccine manufacturer and vaccine lot number are typically recorded in the medical record and should be included if known.</body>
      </ownedComment>
      <ownedRule xmi:id="_u-uOMIokEeSkH97cUQxLGA" name="ImmunizationMedicationInformationTemplateId" constrainedElement="_daTqABVOEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u-uOMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.54')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u-vcUIokEeSkH97cUQxLGA" name="ImmunizationMedicationInformationClassCode" constrainedElement="_daTqABVOEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u-vcUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>isDefined('classCode') and self.classCode=vocab::RoleClassManufacturedProduct::MANU</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u-wqcIokEeSkH97cUQxLGA" name="ImmunizationMedicationInformationId" constrainedElement="_daTqABVOEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u-wqcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vCEdIYokEeSkH97cUQxLGA" name="ImmunizationMedicationInformationManufacturerOrganization" constrainedElement="_daTqABVOEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vCEdIookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.manufacturerOrganization->one(manufacturerOrganization : cda::Organization | not manufacturerOrganization.oclIsUndefined() and manufacturerOrganization.oclIsKindOf(rim::Entity))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vOJKQIokEeSkH97cUQxLGA" name="ImmunizationMedicationInformationManufacturedMaterial" constrainedElement="_daTqABVOEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vOJKQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.manufacturedMaterial->one(manufacturedMaterial : cda::Material | not manufacturedMaterial.oclIsUndefined() and manufacturedMaterial.oclIsKindOf(cda::Material))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wSSu4IokEeSkH97cUQxLGA" name="ImmunizationMedicationInformationImmunizationMedicationInformationManufacturedMaterialCodeOriginalText" constrainedElement="_daTqABVOEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wSSu4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.manufacturedMaterial->excluding(null)->reject(code.originalText->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wSSu4ookEeSkH97cUQxLGA" name="ImmunizationMedicationInformationImmunizationMedicationInformationManufacturedMaterialOriginalTextReference" constrainedElement="_daTqABVOEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wSSu44okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.manufacturedMaterial->excluding(null)->reject(code.originalText->size() = 1 implies code.originalText->one(reference->size() = 1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wSTV8IokEeSkH97cUQxLGA" name="ImmunizationMedicationInformationImmunizationMedicationInformationManufacturedMaterialTextReferenceValue" constrainedElement="_daTqABVOEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wSTV8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.manufacturedMaterial->excluding(null)->reject(code.originalText.reference->size() = 1 implies code.originalText.reference.value->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wSTV8ookEeSkH97cUQxLGA" name="ImmunizationMedicationInformationImmunizationMedicationInformationManufacturedMaterialCodeTranslation" constrainedElement="_daTqABVOEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wSTV84okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.manufacturedMaterial->excluding(null)->reject(code->size() = 1 implies code.translation->size() > 0)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wST9AIokEeSkH97cUQxLGA" name="ImmunizationMedicationInformationImmunizationMedicationInformationManufacturedMaterialCode" constrainedElement="_daTqABVOEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wST9AYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.manufacturedMaterial->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined() and code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = code.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.12.292' and (value.code = '143' or value.code = '54' or value.code = '55' or value.code = '82' or value.code = '24' or value.code = '19' or value.code = '27' or value.code = '26' or value.code = '29' or value.code = '56' or value.code = '12' or value.code = '28' or value.code = '20' or value.code = '106' or value.code = '107' or value.code = '146' or value.code = '110' or value.code = '50' or value.code = '120' or value.code = '130' or value.code = '132' or value.code = '01' or value.code = '22' or value.code = '102' or value.code = '57' or value.code = '30' or value.code = '52' or value.code = '83' or value.code = '84' or value.code = '31' or value.code = '85' or value.code = '104' or value.code = '08' or value.code = '42' or value.code = '43' or value.code = '44' or value.code = '45' or value.code = '58' or value.code = '59' or value.code = '60' or value.code = '47' or value.code = '46' or value.code = '49' or value.code = '48' or value.code = '17' or value.code = '51' or value.code = '61' or value.code = '118' or value.code = '62' or value.code = '137' or value.code = '86' or value.code = '14' or value.code = '87' or value.code = '123' or value.code = '135' or value.code = '111' or value.code = '149' or value.code = '141' or value.code = '140' or value.code = '144' or value.code = '15' or value.code = '88' or value.code = '16' or value.code = '10' or value.code = '134' or value.code = '39' or value.code = '129' or value.code = '63' or value.code = '64' or value.code = '65' or value.code = '66' or value.code = '04' or value.code = '67' or value.code = '05' or value.code = '68' or value.code = '103' or value.code = '148' or value.code = '147' or value.code = '136' or value.code = '114' or value.code = '32' or value.code = '108' or value.code = '03' or value.code = '94' or value.code = '07' or value.code = '998' or value.code = '127' or value.code = '128' or value.code = '125' or value.code = '126' or value.code = '02' or value.code = '69' or value.code = '11' or value.code = '23' or value.code = '133' or value.code = '100' or value.code = '33' or value.code = '109' or value.code = '89' or value.code = '70' or value.code = '40' or value.code = '18' or value.code = '90' or value.code = '99' or value.code = '72' or value.code = '73' or value.code = '34' or value.code = '119' or value.code = '116' or value.code = '74' or value.code = '122' or value.code = '71' or value.code = '93' or value.code = '145' or value.code = '06' or value.code = '38' or value.code = '76' or value.code = '138' or value.code = '113' or value.code = '09' or value.code = '139' or value.code = '115' or value.code = '35' or value.code = '142' or value.code = '112' or value.code = '77' or value.code = '13' or value.code = '98' or value.code = '95' or value.code = '96' or value.code = '97' or value.code = '78' or value.code = '25' or value.code = '41' or value.code = '53' or value.code = '91' or value.code = '101' or value.code = '131' or value.code = '999' or value.code = '75' or value.code = '105' or value.code = '79' or value.code = '21' or value.code = '81' or value.code = '80' or value.code = '92' or value.code = '36' or value.code = '117' or value.code = '37' or value.code = '121' or value.code = '155')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wSUkEIokEeSkH97cUQxLGA" name="ImmunizationMedicationInformationImmunizationMedicationInformationManufacturedMaterialLotNumberText" constrainedElement="_daTqABVOEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wSUkEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.manufacturedMaterial->excluding(null)->reject((lotNumberText.oclIsUndefined() or lotNumberText.isNullFlavorUndefined()) implies (not lotNumberText.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_daTqARVOEeGbmN_W114JUw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_p6Zs8EcZEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_bGzYgBVdEeGQCvUGzi1kDQ" name="AllergiesSectionEntriesOptional">
      <ownedComment xmi:id="_bGzYgRVdEeGQCvUGzi1kDQ" annotatedElement="_bGzYgBVdEeGQCvUGzi1kDQ">
        <body>This section lists and describes any medication allergies, adverse reactions, idiosyncratic reactions, anaphylaxis/anaphylactoid reactions to food items, and metabolic variations or adverse reactions/allergies to other substances (such as latex, iodine, tape adhesives) used to assure the safety of health care delivery. At a minimum, it should list currently active and any relevant historical allergies and adverse reactions.</body>
      </ownedComment>
      <ownedRule xmi:id="_u-7pk4okEeSkH97cUQxLGA" name="AllergiesSectionEntriesOptionalTemplateId" constrainedElement="_bGzYgBVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u-7plIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.6')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u-9ewIokEeSkH97cUQxLGA" name="AllergiesSectionEntriesOptionalCode" constrainedElement="_bGzYgBVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u-9ewYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '48765-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u-_7AIokEeSkH97cUQxLGA" name="AllergiesSectionEntriesOptionalCodeP" constrainedElement="_bGzYgBVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u-_7AYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u_CXQIokEeSkH97cUQxLGA" name="AllergiesSectionEntriesOptionalTitle" constrainedElement="_bGzYgBVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u_CXQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u_EzgIokEeSkH97cUQxLGA" name="AllergiesSectionEntriesOptionalText" constrainedElement="_bGzYgBVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u_EzgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vCkzc4okEeSkH97cUQxLGA" name="AllergiesSectionEntriesOptionalAllergyProblemAct" constrainedElement="_bGzYgBVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vCkzdIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::AllergyProblemAct))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_FHCOMBVgEeGQCvUGzi1kDQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_vCmBkIokEeSkH97cUQxLGA" name="getAllergyProblemActs" bodyCondition="_vCmBk4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vCmBk4okEeSkH97cUQxLGA" name="body" constrainedElement="_vCmBkIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vCmBlIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::AllergyProblemAct)).oclAsType(consol::AllergyProblemAct)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vCmBkYokEeSkH97cUQxLGA" type="_2EAisBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vCmBkookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_iAoXEBVdEeGQCvUGzi1kDQ" name="MedicationsSectionEntriesOptional">
      <ownedComment xmi:id="_S0qoIB-uEeGKirKJsFylGA">
        <body>The Medications section defines a patient's current medications and pertinent medication history. At a minimum, the currently active medications are to be listed, with an entire medication history as an option. The section may also include a patient's prescription and dispense history.&#xD;
This section requires that there be either an entry indicating the subject is not known to be on any medications, or that there be entries summarizing the subject's medications.</body>
      </ownedComment>
      <ownedRule xmi:id="_u_GBoIokEeSkH97cUQxLGA" name="MedicationsSectionEntriesOptionalTemplateId" constrainedElement="_iAoXEBVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u_GBoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u_Id4IokEeSkH97cUQxLGA" name="MedicationsSectionEntriesOptionalCode" constrainedElement="_iAoXEBVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u_Id4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '10160-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u_K6IIokEeSkH97cUQxLGA" name="MedicationsSectionEntriesOptionalTitle" constrainedElement="_iAoXEBVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u_LhMIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u_MvUIokEeSkH97cUQxLGA" name="MedicationsSectionEntriesOptionalText" constrainedElement="_iAoXEBVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u_MvUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vCmooIokEeSkH97cUQxLGA" name="MedicationsSectionEntriesOptionalMedicationActivity" constrainedElement="_iAoXEBVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vCmooYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.substanceAdministration.oclIsUndefined() and entry.substanceAdministration.oclIsKindOf(consol::MedicationActivity))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_iAoXIhVdEeGQCvUGzi1kDQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_vCnPsIokEeSkH97cUQxLGA" name="getMedicationActivities" bodyCondition="_vCnPs4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vCnPs4okEeSkH97cUQxLGA" name="body" constrainedElement="_vCnPsIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vCnPtIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(consol::MedicationActivity)).oclAsType(consol::MedicationActivity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vCnPsYokEeSkH97cUQxLGA" type="_2GHbgBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vCnPsookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_naxrkBVdEeGQCvUGzi1kDQ" name="ProblemSectionEntriesOptional">
      <ownedComment xmi:id="_meK94CAoEeGetMjKLkqR8g">
        <body>This section lists and describes all relevant clinical problems at the time the document is generated. At a minimum, all pertinent current and historical problems should be listed.</body>
      </ownedComment>
      <ownedRule xmi:id="_u_N9cIokEeSkH97cUQxLGA" name="ProblemSectionEntriesOptionalTemplateId" constrainedElement="_naxrkBVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u_N9cYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.5')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u_PyoIokEeSkH97cUQxLGA" name="ProblemSectionEntriesOptionalCode" constrainedElement="_naxrkBVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u_PyoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '11450-4' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u_SO4IokEeSkH97cUQxLGA" name="ProblemSectionEntriesOptionalCodeP" constrainedElement="_naxrkBVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u_SO4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u_UEEIokEeSkH97cUQxLGA" name="ProblemSectionEntriesOptionalTitle" constrainedElement="_naxrkBVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u_UEEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u_V5QIokEeSkH97cUQxLGA" name="ProblemSectionEntriesOptionalText" constrainedElement="_naxrkBVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u_V5QYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vCsIMYokEeSkH97cUQxLGA" name="ProblemSectionEntriesOptionalProblemConcern" constrainedElement="_naxrkBVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vCsIMookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::ProblemConcernAct))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_naxrlxVdEeGQCvUGzi1kDQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_vCtWUIokEeSkH97cUQxLGA" name="getProblemConcerns" bodyCondition="_vCtWU4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vCtWU4okEeSkH97cUQxLGA" name="body" constrainedElement="_vCtWUIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vCtWVIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::ProblemConcernAct)).oclAsType(consol::ProblemConcernAct)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vCtWUYokEeSkH97cUQxLGA" type="_2H6yUBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vCtWUookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_s9Ig4BVdEeGQCvUGzi1kDQ" name="ProceduresSectionEntriesOptional">
      <ownedComment xmi:id="_s9Ig4RVdEeGQCvUGzi1kDQ" annotatedElement="_s9Ig4BVdEeGQCvUGzi1kDQ">
        <body>This section defines all interventional, surgical, diagnostic, or therapeutic procedures or treatments pertinent to the patient historically at the time the document is generated. The section is intended to include notable procedures, but can contain all procedures for the period of time being summarized. The common notion of &quot;procedure&quot; is broader than that specified by the HL7 Version 3 Reference Information Model (RIM). Therefore this section contains procedure templates represented with three RIM classes: Act. Observation, and Procedure. Procedure act is for procedures the alter that physical condition of a patient (Splenectomy). Observation act is for procedures that result in new information about a patient but do not cause physical alteration (EEG). Act is for all other types of procedures (dressing change).&#xD;
The length of an encounter is documented in the documentationOf/encompassingEncounter/effectiveTime and length of service in documentationOf/ServiceEvent/effectiveTime.</body>
      </ownedComment>
      <ownedRule xmi:id="_u_XHYIokEeSkH97cUQxLGA" name="ProceduresSectionEntriesOptionalTemplateId" constrainedElement="_s9Ig4BVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u_XHYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.7')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u_Y8kIokEeSkH97cUQxLGA" name="ProceduresSectionEntriesOptionalCode" constrainedElement="_s9Ig4BVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u_Y8kYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '47519-4' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u_bY0IokEeSkH97cUQxLGA" name="ProceduresSectionEntriesOptionalCodeP" constrainedElement="_s9Ig4BVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u_bY0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u_dOAIokEeSkH97cUQxLGA" name="ProceduresSectionEntriesOptionalTitle" constrainedElement="_s9Ig4BVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u_dOAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u_ecIIokEeSkH97cUQxLGA" name="ProceduresSectionEntriesOptionalText" constrainedElement="_s9Ig4BVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u_ecIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vCFrQIokEeSkH97cUQxLGA" name="ProceduresSectionEntriesOptionalProcedureActivityProcedure" constrainedElement="_s9Ig4BVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vCFrQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.procedure.oclIsUndefined() and entry.procedure.oclIsKindOf(consol::ProcedureActivityProcedure))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vCHgcIokEeSkH97cUQxLGA" name="ProceduresSectionEntriesOptionalProcedureActivityObservation" constrainedElement="_s9Ig4BVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vCHgcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::ProcedureActivityObservation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vCJVoIokEeSkH97cUQxLGA" name="ProceduresSectionEntriesOptionalProcedureActivityAct" constrainedElement="_s9Ig4BVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vCJVoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::ProcedureActivityAct))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_s9Ig6RVdEeGQCvUGzi1kDQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_vCG5YIokEeSkH97cUQxLGA" name="getProcedureActivityProcedures" bodyCondition="_vCG5Y4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vCG5Y4okEeSkH97cUQxLGA" name="body" constrainedElement="_vCG5YIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vCG5ZIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getProcedures()->select(procedure : cda::Procedure | not procedure.oclIsUndefined() and procedure.oclIsKindOf(consol::ProcedureActivityProcedure)).oclAsType(consol::ProcedureActivityProcedure)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vCG5YYokEeSkH97cUQxLGA" type="_2OG58RSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vCG5YookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vCIukIokEeSkH97cUQxLGA" name="getProcedureActivityObservations" bodyCondition="_vCIuk4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vCIuk4okEeSkH97cUQxLGA" name="body" constrainedElement="_vCIukIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vCIulIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProcedureActivityObservation)).oclAsType(consol::ProcedureActivityObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vCIukYokEeSkH97cUQxLGA" type="_Aj7JkBg4EeGs5a462vYX5Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vCIukookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vCJ8sIokEeSkH97cUQxLGA" name="getProcedureActivityActs" bodyCondition="_vCJ8s4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vCJ8s4okEeSkH97cUQxLGA" name="body" constrainedElement="_vCJ8sIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vCJ8tIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::ProcedureActivityAct)).oclAsType(consol::ProcedureActivityAct)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vCJ8sYokEeSkH97cUQxLGA" type="_awdH4Bg4EeGs5a462vYX5Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vCJ8sookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_xGqiEBVdEeGQCvUGzi1kDQ" name="ResultsSectionEntriesOptional">
      <ownedComment xmi:id="_xGqiERVdEeGQCvUGzi1kDQ" annotatedElement="_xGqiEBVdEeGQCvUGzi1kDQ">
        <body>&lt;p>
The Results section contains the results of observations generated by laboratories, imaging procedures, and other procedures. The scope includes observations such as hematology, chemistry, serology, virology, toxicology, microbiology, plain x-ray, ultrasound, CT, MRI, angiography, echocardiography, nuclear medicine, pathology, and procedure observations. The section often includes notable results such as abnormal values or relevant trends, and could contain all results for the period of time being documented.
&lt;/p>
&lt;p>
Laboratory results are typically generated by laboratories providing analytic services in areas such as chemistry, hematology, serology, histology, cytology, anatomic pathology, microbiology, and/or virology. These observations are based on analysis of specimens obtained from the patient and submitted to the laboratory.
&lt;/p>
&lt;p>
Imaging results are typically generated by a clinician reviewing the output of an imaging procedure, such as where a cardiologist reports the left ventricular ejection fraction based on the review of a cardiac echocardiogram.
Procedure results are typically generated by a clinician to provide more granular information about component observations made during  a procedure, such as where a gastroenterologist reports the size of a polyp observed during a colonoscopy.
&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="_u_fqQIokEeSkH97cUQxLGA" name="ResultsSectionEntriesOptionalTemplateId" constrainedElement="_xGqiEBVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u_fqQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.3')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u_hfcIokEeSkH97cUQxLGA" name="ResultsSectionEntriesOptionalCode" constrainedElement="_xGqiEBVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u_hfcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '30954-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u_j7sIokEeSkH97cUQxLGA" name="ResultsSectionEntriesOptionalCodeP" constrainedElement="_xGqiEBVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u_j7sYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u_mX8IokEeSkH97cUQxLGA" name="ResultsSectionEntriesOptionalTitle" constrainedElement="_xGqiEBVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u_mX8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u_nmEIokEeSkH97cUQxLGA" name="ResultsSectionEntriesOptionalText" constrainedElement="_xGqiEBVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u_nmEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vCod0IokEeSkH97cUQxLGA" name="ResultsSectionEntriesOptionalResultOrganizer" constrainedElement="_xGqiEBVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vCod0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(consol::ResultOrganizer))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_xGqiFRVdEeGQCvUGzi1kDQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_vCpE4IokEeSkH97cUQxLGA" name="getResultOrganizers" bodyCondition="_vCpE44okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vCpE44okEeSkH97cUQxLGA" name="body" constrainedElement="_vCpE4IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vCpE5IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getOrganizers()->select(organizer : cda::Organizer | not organizer.oclIsUndefined() and organizer.oclIsKindOf(consol::ResultOrganizer)).oclAsType(consol::ResultOrganizer)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vCpE4YokEeSkH97cUQxLGA" type="_2JxzgBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vCpE4ookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_1RZdIBVdEeGQCvUGzi1kDQ" name="AdvanceDirectivesSectionEntriesOptional">
      <ownedComment xmi:id="_1RZdIRVdEeGQCvUGzi1kDQ" annotatedElement="_1RZdIBVdEeGQCvUGzi1kDQ">
        <body>&lt;p>
This section contains data defining the patient's advance directives and any reference to supporting documentation. The most recent and up-to-date directives are required, if known, and should be listed in as much detail as possible. This section contains data such as the existence of living wills, healthcare proxies, and CPR and resuscitation status. If referenced documents are available, they can be included in the CCD exchange package. 
&lt;/p>
&lt;p>
NOTE: The descriptions in this section differentiate between &quot;advance directives&quot; and &quot;advance directive documents&quot;. The former are the directions whereas the latter are legal documents containing those directions. Thus, an advance directive might be &quot;no cardiopulmonary resuscitation&quot;, and this directive might be stated in a legal advance directive document.
&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="_u_o0MIokEeSkH97cUQxLGA" name="AdvanceDirectivesSectionEntriesOptionalTemplateId" constrainedElement="_1RZdIBVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u_pbQIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.21')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u_qpYIokEeSkH97cUQxLGA" name="AdvanceDirectivesSectionEntriesOptionalCode" constrainedElement="_1RZdIBVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u_rQcIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '42348-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u_tFoIokEeSkH97cUQxLGA" name="AdvanceDirectivesSectionEntriesOptionalCodeP" constrainedElement="_1RZdIBVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u_tFoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u_vh4IokEeSkH97cUQxLGA" name="AdvanceDirectivesSectionEntriesOptionalTitle" constrainedElement="_1RZdIBVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u_vh4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u_xXEIokEeSkH97cUQxLGA" name="AdvanceDirectivesSectionEntriesOptionalText" constrainedElement="_1RZdIBVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u_xXEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vEAW0IokEeSkH97cUQxLGA" name="AdvanceDirectivesSectionEntriesOptionalAdvanceDirectiveObservation" constrainedElement="_1RZdIBVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vEAW0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::AdvanceDirectiveObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_1RZdJhVdEeGQCvUGzi1kDQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_vEA94IokEeSkH97cUQxLGA" name="getAdvanceDirectiveObservations" bodyCondition="_vEA944okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vEA944okEeSkH97cUQxLGA" name="body" constrainedElement="_vEA94IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vEA95IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::AdvanceDirectiveObservation)).oclAsType(consol::AdvanceDirectiveObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vEA94YokEeSkH97cUQxLGA" type="_2KlEwBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vEA94ookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_4yj2wBVdEeGQCvUGzi1kDQ" name="EncountersSectionEntriesOptional">
      <ownedComment xmi:id="_4yj2wRVdEeGQCvUGzi1kDQ" annotatedElement="_4yj2wBVdEeGQCvUGzi1kDQ">
        <body>This section lists and describes any healthcare encounters pertinent to the patient's current health status or historical health history. An Encounter is an interaction, regardless of the setting, between a patient and a practitioner who is vested with primary responsibility for diagnosing, evaluating, or treating the patient's condition. It may include visits, appointments, as well as non face-to-face interactions. It is also a contact between a patient and a practitioner who has primary responsibility for assessing and treating the patient at a given contact, exercising independent judgment. This section may contain all encounters for the time period being summarized, but should include notable encounters.</body>
      </ownedComment>
      <ownedRule xmi:id="_u_ylMIokEeSkH97cUQxLGA" name="EncountersSectionEntriesOptionalTemplateId" constrainedElement="_4yj2wBVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u_ylMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.22')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u_0aYIokEeSkH97cUQxLGA" name="EncountersSectionEntriesOptionalCode" constrainedElement="_4yj2wBVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u_0aYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '46240-8' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u_22oIokEeSkH97cUQxLGA" name="EncountersSectionEntriesOptionalCodeP" constrainedElement="_4yj2wBVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u_22oYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u_4r0IokEeSkH97cUQxLGA" name="EncountersSectionEntriesOptionalTitle" constrainedElement="_4yj2wBVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u_4r0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u_6hAIokEeSkH97cUQxLGA" name="EncountersSectionEntriesOptionalText" constrainedElement="_4yj2wBVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u_6hAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vE2EU4okEeSkH97cUQxLGA" name="EncountersSectionEntriesOptionalEncounterActivities" constrainedElement="_4yj2wBVdEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vE2EVIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.encounter.oclIsUndefined() and entry.encounter.oclIsKindOf(consol::EncounterActivities))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_4yj2xxVdEeGQCvUGzi1kDQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_vE2rYIokEeSkH97cUQxLGA" name="getEncounterActivitiess" bodyCondition="_vE3ScYokEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vE3ScYokEeSkH97cUQxLGA" name="body" constrainedElement="_vE2rYIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vE3ScookEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getEncounters()->select(encounter : cda::Encounter | not encounter.oclIsUndefined() and encounter.oclIsKindOf(consol::EncounterActivities)).oclAsType(consol::EncounterActivities)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vE2rYYokEeSkH97cUQxLGA" type="_2LayQBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vE3ScIokEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_EuPloBVeEeGQCvUGzi1kDQ" name="ImmunizationsSectionEntriesOptional">
      <ownedComment xmi:id="_eb3_0BqgEeGo461UQq-B1g">
        <body>The Immunizations section defines a patient's current immunization status and pertinent immunization history. The primary use case for the Immunization section is to enable communication of a patient's immunization status. The section should include current immunization status, and may contain the entire immunization history that is relevant to the period of time being summarized.</body>
      </ownedComment>
      <ownedRule xmi:id="_u_7IEIokEeSkH97cUQxLGA" name="ImmunizationsSectionEntriesOptionalTemplateId" constrainedElement="_EuPloBVeEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_u_7vIIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.2')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vADq8IokEeSkH97cUQxLGA" name="ImmunizationsSectionEntriesOptionalCode" constrainedElement="_EuPloBVeEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vADq8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '11369-6' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vAGHMIokEeSkH97cUQxLGA" name="ImmunizationsSectionEntriesOptionalCodeP" constrainedElement="_EuPloBVeEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vAGHMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vAH8YIokEeSkH97cUQxLGA" name="ImmunizationsSectionEntriesOptionalTitle" constrainedElement="_EuPloBVeEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vAH8YYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vAJxkIokEeSkH97cUQxLGA" name="ImmunizationsSectionEntriesOptionalText" constrainedElement="_EuPloBVeEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vAJxkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vCq6EIokEeSkH97cUQxLGA" name="ImmunizationsSectionEntriesOptionalImmunizationActivity" constrainedElement="_EuPloBVeEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vCq6EYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.substanceAdministration.oclIsUndefined() and entry.substanceAdministration.oclIsKindOf(consol::ImmunizationActivity))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_EuPlsBVeEeGQCvUGzi1kDQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_vCrhIIokEeSkH97cUQxLGA" name="getImmunizationActivities" bodyCondition="_vCrhI4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vCrhI4okEeSkH97cUQxLGA" name="body" constrainedElement="_vCrhIIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vCsIMIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(consol::ImmunizationActivity)).oclAsType(consol::ImmunizationActivity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vCrhIYokEeSkH97cUQxLGA" type="_2MAoIBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vCrhIookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_bRH8sBVeEeGQCvUGzi1kDQ" name="VitalSignsSectionEntriesOptional">
      <ownedComment xmi:id="_LjYecBwiEeG_RY8fzJjtMw">
        <body>&lt;p>The Vital Signs section contains relevant vital signs for the context and use case of the document type, such as blood pressure, heart rate, respiratory rate, height, weight, body mass index, head circumference, and pulse oximetry. The section should include notable vital signs such as the most recent, maximum and/or minimum, baseline, or relevant trends.&lt;/p>

&lt;p>Vital signs are represented in the same way as other results, but are aggregated into their own section to follow clinical conventions.&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="_vAK_sIokEeSkH97cUQxLGA" name="VitalSignsSectionEntriesOptionalTemplateId" constrainedElement="_bRH8sBVeEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vAK_sYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.4')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vAM04IokEeSkH97cUQxLGA" name="VitalSignsSectionEntriesOptionalCode" constrainedElement="_bRH8sBVeEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vAM04YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '8716-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vAPRIIokEeSkH97cUQxLGA" name="VitalSignsSectionEntriesOptionalCodeP" constrainedElement="_bRH8sBVeEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vAPRIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vARGUIokEeSkH97cUQxLGA" name="VitalSignsSectionEntriesOptionalText" constrainedElement="_bRH8sBVeEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vARGUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vASUcIokEeSkH97cUQxLGA" name="VitalSignsSectionEntriesOptionalTitle" constrainedElement="_bRH8sBVeEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vASUcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vCKjwIokEeSkH97cUQxLGA" name="VitalSignsSectionEntriesOptionalVitalSignsOrganizer" constrainedElement="_bRH8sBVeEeGQCvUGzi1kDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vCKjwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(consol::VitalSignsOrganizer))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_bRH8uhVeEeGQCvUGzi1kDQ">
        <ownedComment xmi:id="_sTsugBxREeG8X6LmnKJ43Q">
          <body>skip</body>
        </ownedComment>
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_vCLK0IokEeSkH97cUQxLGA" name="getVitalSignsOrganizers" bodyCondition="_vCLx4ookEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vCLx4ookEeSkH97cUQxLGA" name="body" constrainedElement="_vCLK0IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vCLx44okEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getOrganizers()->select(organizer : cda::Organizer | not organizer.oclIsUndefined() and organizer.oclIsKindOf(consol::VitalSignsOrganizer)).oclAsType(consol::VitalSignsOrganizer)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vCLx4IokEeSkH97cUQxLGA" type="_2OlbCRSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vCLx4YokEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Aj7JkBg4EeGs5a462vYX5Q" name="ProcedureActivityObservation">
      <ownedComment xmi:id="_RlVIQBxuEeGXP8PxDYviDg">
        <body>The common notion of &quot;procedure&quot; is broader than that specified by the HL7 Version 3 Reference Information Model (RIM). Therefore procedure templates can be represented with various RIM classes: act (e.g., dressing change), observation (e.g., EEG), procedure (e.g. splenectomy). &#xD;
This clinical statement represents procedures that result in new information about the patient that cannot be classified as a procedure according to the HL7 RIM. Examples of these procedures are diagnostic imaging procedures, EEGs and EKGs.</body>
      </ownedComment>
      <ownedRule xmi:id="_-WpQYBxuEeGXP8PxDYviDg" name="ProcedureActivityObservationCodeCodeSystems" constrainedElement="_2OG58RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-WpQYRxuEeGXP8PxDYviDg">
          <language>OCL</language>
          <body>self.code.isNullFlavorDefined() or self.code.codeSystem = '2.16.840.1.113883.6.1' xor self.code.codeSystem = '2.16.840.1.113883.6.96' xor self.code.codeSystem = '2.16.840.1.113883.6.12' xor self.code.codeSystem = '2.16.840.1.113883.6.4'</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_gpDwsBxvEeGXP8PxDYviDg" name="ProcedureActivityObservationCodeOriginalText" constrainedElement="_qGzKgBrPEeGxIZCGAXKxsQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_gpDwsRxvEeGXP8PxDYviDg">
          <language>OCL</language>
          <body>not code.oclIsUndefined() implies not code.originalText.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_iKsikBxvEeGXP8PxDYviDg" name="ProcedureActivityObservationOriginalTextReference" constrainedElement="_N4ba0BrQEeGxIZCGAXKxsQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iKsikRxvEeGXP8PxDYviDg">
          <language>OCL</language>
          <body>not self.code.originalText.oclIsUndefined() implies self.code.originalText->one(reference->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Q_qfQOV4EeGpoIKFyl7L7w" name="ProcedureActivityObservationOriginalTextReferenceValue" constrainedElement="_iKsikBxvEeGXP8PxDYviDg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_VVR0oOV4EeGpoIKFyl7L7w">
          <language>OCL</language>
          <body>self.code.originalText.reference->size() = 1 implies self.code.originalText.reference.value->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jzsgsBxvEeGXP8PxDYviDg" name="ProcedureActivityObservationReferenceValue" constrainedElement="_WEQMwBrQEeGxIZCGAXKxsQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jzsgsRxvEeGXP8PxDYviDg">
          <language>OCL</language>
          <body>not self.code.originalText.reference.value.oclIsUndefined() implies not self.getSection().text.getText(self.code.originalText.reference.value.substring(2, self.code.originalText.reference.value.size())).oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oJm7kBxwEeGXP8PxDYviDg" name="ProcedureActivityObservationEncounterInversion">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oJm7kRxwEeGXP8PxDYviDg">
          <language>OCL</language>
          <body>self.entryRelationship->select(er : cda::EntryRelationship | er.encounter->size() > 0)->forAll(ent : cda::EntryRelationship | ent.inversionInd=true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_p26x8BxwEeGXP8PxDYviDg" name="ProcedureActivityObservationServiceDeliveryLocationTypeCode" constrainedElement="_9s2SABxZEeGXP8PxDYviDg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_p26x8RxwEeGXP8PxDYviDg">
          <language>OCL</language>
          <body>self.participant->select(par : cda::Participant2 | par.participantRole.oclIsKindOf(consol::ServiceDeliveryLocation))->forAll(p : cda::Participant2 | p.typeCode=vocab::ParticipationType::LOC)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_rOfo4BxwEeGXP8PxDYviDg" name="ProcedureActivityObservationInstructionsInversion">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_rOfo4RxwEeGXP8PxDYviDg">
          <language>OCL</language>
          <body>self.entryRelationship->select(er : cda::EntryRelationship | er.act.oclIsTypeOf(consol::Instructions))->forAll(ent : cda::EntryRelationship | ent.inversionInd=true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vAUJoIokEeSkH97cUQxLGA" name="ProcedureActivityObservationTemplateId" constrainedElement="_Aj7JkBg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vAUJoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.13')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vAaQQIokEeSkH97cUQxLGA" name="ProcedureActivityObservationClassCode" constrainedElement="_Aj7JkBg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vAaQQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vAbeYIokEeSkH97cUQxLGA" name="ProcedureActivityObservationMoodCode" constrainedElement="_Aj7JkBg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vAbeYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.moodCode.oclIsUndefined() and self.moodCode.oclIsKindOf(vocab::x_ActMoodDocumentObservation) and &#xD;
let value : vocab::x_ActMoodDocumentObservation = self.moodCode.oclAsType(vocab::x_ActMoodDocumentObservation) in &#xD;
value = vocab::x_ActMoodDocumentObservation::EVN or value = vocab::x_ActMoodDocumentObservation::INT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vAd6oIokEeSkH97cUQxLGA" name="ProcedureActivityObservationId" constrainedElement="_Aj7JkBg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vAd6oYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vAfIwIokEeSkH97cUQxLGA" name="ProcedureActivityObservationCode" constrainedElement="_Aj7JkBg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vAfIwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vAg98IokEeSkH97cUQxLGA" name="ProcedureActivityObservationStatusCode" constrainedElement="_Aj7JkBg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vAg98YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'completed' or value.code = 'active' or value.code = 'aborted' or value.code = 'cancelled')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vAizIIokEeSkH97cUQxLGA" name="ProcedureActivityObservationValue" constrainedElement="_Aj7JkBg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vAizIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vAkBQIokEeSkH97cUQxLGA" name="ProcedureActivityObservationEffectiveTime" constrainedElement="_Aj7JkBg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vAkBQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vAoSsIokEeSkH97cUQxLGA" name="ProcedureActivityObservationPriorityCodeP" constrainedElement="_Aj7JkBg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vAoSsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.priorityCode.oclIsUndefined() or self.priorityCode.isNullFlavorUndefined()) implies (not self.priorityCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vAmdgIokEeSkH97cUQxLGA" name="ProcedureActivityObservationPriorityCode" constrainedElement="_Aj7JkBg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vAmdgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.priorityCode.oclIsUndefined() or self.priorityCode.isNullFlavorUndefined()) implies (not self.priorityCode.oclIsUndefined() and self.priorityCode.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.priorityCode.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.5.7' and (value.code = 'A' or value.code = 'CR' or value.code = 'CS' or value.code = 'CSP' or value.code = 'CSR' or value.code = 'EL' or value.code = 'EM' or value.code = 'P' or value.code = 'PRN' or value.code = 'R' or value.code = 'RR' or value.code = 'S' or value.code = 'T' or value.code = 'UD' or value.code = 'UR'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vAqH4IokEeSkH97cUQxLGA" name="ProcedureActivityObservationMethodCode" constrainedElement="_Aj7JkBg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vAqu8IokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.methodCode->isEmpty() or self.methodCode->exists(element | element.isNullFlavorUndefined())) implies (not self.methodCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vAvAYIokEeSkH97cUQxLGA" name="ProcedureActivityObservationTargetSiteCodeP" constrainedElement="_Aj7JkBg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vAvAYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (not self.targetSiteCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vAskIIokEeSkH97cUQxLGA" name="ProcedureActivityObservationTargetSiteCode" constrainedElement="_Aj7JkBg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vAskIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.targetSiteCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.96' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vCTtsIokEeSkH97cUQxLGA" name="ProcedureActivityObservationPerformer" constrainedElement="_Aj7JkBg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vCTtsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->exists(performer : cda::Performer2 | not performer.oclIsUndefined() and performer.oclIsKindOf(cda::Performer2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vCUUwIokEeSkH97cUQxLGA" name="ProcedureActivityObservationServiceDeliveryLocation" constrainedElement="_Aj7JkBg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vCUUwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->exists(participant : cda::Participant2 | not participant.participantRole.oclIsUndefined() and participant.participantRole.oclIsKindOf(consol::ServiceDeliveryLocation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vCVi5YokEeSkH97cUQxLGA" name="ProcedureActivityObservationInstructions" constrainedElement="_Aj7JkBg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vCVi5ookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(consol::Instructions) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vCWxBYokEeSkH97cUQxLGA" name="ProcedureActivityObservationIndication" constrainedElement="_Aj7JkBg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vCWxBookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::Indication) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::RSON)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vCX_IookEeSkH97cUQxLGA" name="ProcedureActivityObservationMedicationActivity" constrainedElement="_Aj7JkBg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vCX_I4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.substanceAdministration.oclIsUndefined() and entryRelationship.substanceAdministration.oclIsKindOf(consol::MedicationActivity) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vRlf0IokEeSkH97cUQxLGA" name="ProcedureActivityObservationEntryRelationship" constrainedElement="_Aj7JkBg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vRlf0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->select(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))->select(typeCode=vocab::x_ActRelationshipEntryRelationship::COMP and not encounter.oclIsUndefined() and encounter.oclIsKindOf(cda::Encounter))->notEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wSXAUIokEeSkH97cUQxLGA" name="ProcedureActivityObservationProcedureObservationPerformerProcedureObservationAssignedEntityProcedureObservationRepresentedOrganizationId" constrainedElement="_Aj7JkBg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wSXnYIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null).assignedEntity->excluding(null).representedOrganization->excluding(null)->reject((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wSYOcIokEeSkH97cUQxLGA" name="ProcedureActivityObservationProcedureObservationPerformerProcedureObservationAssignedEntityProcedureObservationRepresentedOrganizationName" constrainedElement="_Aj7JkBg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wSYOcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null).assignedEntity->excluding(null).representedOrganization->excluding(null)->reject((name->isEmpty() or name->exists(element | element.isNullFlavorUndefined())) implies (not name->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wSY1gIokEeSkH97cUQxLGA" name="ProcedureActivityObservationProcedureObservationPerformerProcedureObservationAssignedEntityProcedureObservationRepresentedOrganizationTelecom" constrainedElement="_Aj7JkBg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wSY1gYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null).assignedEntity->excluding(null).representedOrganization->excluding(null)->reject((telecom->isEmpty() or telecom->exists(element | element.isNullFlavorUndefined())) implies (telecom->size() = 1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wSY1gookEeSkH97cUQxLGA" name="ProcedureActivityObservationProcedureObservationPerformerProcedureObservationAssignedEntityProcedureObservationRepresentedOrganizationAddr" constrainedElement="_Aj7JkBg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wSY1g4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null).assignedEntity->excluding(null).representedOrganization->excluding(null)->reject((addr->isEmpty() or addr->exists(element | element.isNullFlavorUndefined())) implies (addr->size() = 1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wSZckIokEeSkH97cUQxLGA" name="ProcedureActivityObservationProcedureObservationPerformerProcedureObservationAssignedEntityId" constrainedElement="_Aj7JkBg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wSZckYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null).assignedEntity->excluding(null)->reject((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wSaDoIokEeSkH97cUQxLGA" name="ProcedureActivityObservationProcedureObservationPerformerProcedureObservationAssignedEntityAddr" constrainedElement="_Aj7JkBg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wSaDoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null).assignedEntity->excluding(null)->reject((addr->isEmpty() or addr->exists(element | element.isNullFlavorUndefined())) implies (addr->size() = 1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wSaDoookEeSkH97cUQxLGA" name="ProcedureActivityObservationProcedureObservationPerformerProcedureObservationAssignedEntityTelecom" constrainedElement="_Aj7JkBg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wSaDo4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null).assignedEntity->excluding(null)->reject((telecom->isEmpty() or telecom->exists(element | element.isNullFlavorUndefined())) implies (telecom->size() = 1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wSaqsIokEeSkH97cUQxLGA" name="ProcedureActivityObservationProcedureObservationPerformerProcedureObservationAssignedEntityRepresentedOrganization" constrainedElement="_Aj7JkBg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wSaqsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null).assignedEntity->excluding(null)->reject(representedOrganization->one(representedOrganization : cda::Organization | not representedOrganization.oclIsUndefined() and representedOrganization.oclIsKindOf(cda::Organization)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wSbRwIokEeSkH97cUQxLGA" name="ProcedureActivityObservationProcedureObservationPerformerAssignedEntity" constrainedElement="_Aj7JkBg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wSbRwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null)->reject(assignedEntity->one(assignedEntity : cda::AssignedEntity | not assignedEntity.oclIsUndefined() and assignedEntity.oclIsKindOf(cda::AssignedEntity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wScf4IokEeSkH97cUQxLGA" name="ProcedureActivityObservationEntryRelationshipProcedureObservationEncounterClassCode" constrainedElement="_Aj7JkBg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wScf4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->select(typeCode=vocab::x_ActRelationshipEntryRelationship::COMP and not encounter.oclIsUndefined() and encounter.oclIsKindOf(cda::Encounter)).encounter->excluding(null)->reject(classCode=vocab::ActClass::ENC)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wSdG8IokEeSkH97cUQxLGA" name="ProcedureActivityObservationEntryRelationshipProcedureObservationEncounterMoodCode" constrainedElement="_Aj7JkBg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wSdG8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->select(typeCode=vocab::x_ActRelationshipEntryRelationship::COMP and not encounter.oclIsUndefined() and encounter.oclIsKindOf(cda::Encounter)).encounter->excluding(null)->reject(moodCode=vocab::x_DocumentEncounterMood::EVN)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wSdG8ookEeSkH97cUQxLGA" name="ProcedureActivityObservationEntryRelationshipProcedureObservationEncounterId" constrainedElement="_Aj7JkBg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wSdG84okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->select(typeCode=vocab::x_ActRelationshipEntryRelationship::COMP and not encounter.oclIsUndefined() and encounter.oclIsKindOf(cda::Encounter)).encounter->excluding(null)->reject((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (id->size() = 1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wSduAIokEeSkH97cUQxLGA" name="ProcedureActivityObservationEntryRelationshipInversionInd" constrainedElement="_Aj7JkBg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wSduAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->select(typeCode=vocab::x_ActRelationshipEntryRelationship::COMP and not encounter.oclIsUndefined() and encounter.oclIsKindOf(cda::Encounter))->select(typeCode=vocab::x_ActRelationshipEntryRelationship::COMP and not encounter.oclIsUndefined() and encounter.oclIsKindOf(cda::Encounter))->reject(not inversionInd.oclIsUndefined() and inversionInd=true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wSeVEIokEeSkH97cUQxLGA" name="ProcedureActivityObservationEntryRelationshipTypeCode" constrainedElement="_Aj7JkBg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wSeVEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->select(typeCode=vocab::x_ActRelationshipEntryRelationship::COMP and not encounter.oclIsUndefined() and encounter.oclIsKindOf(cda::Encounter))->select(typeCode=vocab::x_ActRelationshipEntryRelationship::COMP and not encounter.oclIsUndefined() and encounter.oclIsKindOf(cda::Encounter))->reject(typeCode=vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wSeVEookEeSkH97cUQxLGA" name="ProcedureActivityObservationEntryRelationshipProcedureObservationEncounter" constrainedElement="_Aj7JkBg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wSeVE4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->select(typeCode=vocab::x_ActRelationshipEntryRelationship::COMP and not encounter.oclIsUndefined() and encounter.oclIsKindOf(cda::Encounter))->select(typeCode=vocab::x_ActRelationshipEntryRelationship::COMP and not encounter.oclIsUndefined() and encounter.oclIsKindOf(cda::Encounter))->reject(encounter->one(encounter : cda::Encounter | not encounter.oclIsUndefined() and encounter.oclIsKindOf(cda::Encounter)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Aj7JkRg4EeGs5a462vYX5Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_vCVi4IokEeSkH97cUQxLGA" name="getServiceDeliveryLocations" bodyCondition="_vCVi44okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vCVi44okEeSkH97cUQxLGA" name="body" constrainedElement="_vCVi4IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vCVi5IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getParticipantRoles()->select(participantRole : cda::ParticipantRole | not participantRole.oclIsUndefined() and participantRole.oclIsKindOf(consol::ServiceDeliveryLocation)).oclAsType(consol::ServiceDeliveryLocation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vCVi4YokEeSkH97cUQxLGA" type="_2LiHABSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vCVi4ookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vCWxAIokEeSkH97cUQxLGA" name="getInstructions" bodyCondition="_vCWxA4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vCWxA4okEeSkH97cUQxLGA" name="body" constrainedElement="_vCWxAIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vCWxBIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::Instructions))->asSequence()->any(true).oclAsType(consol::Instructions)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vCWxAYokEeSkH97cUQxLGA" type="_2G8h9RSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vCWxAookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vCXYEIokEeSkH97cUQxLGA" name="getIndications" bodyCondition="_vCX_IIokEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vCX_IIokEeSkH97cUQxLGA" name="body" constrainedElement="_vCXYEIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vCX_IYokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::Indication)).oclAsType(consol::Indication)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vCXYEYokEeSkH97cUQxLGA" type="_sHrUoBUSEeG6PvUxSTZnaw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vCXYEookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vCYmMIokEeSkH97cUQxLGA" name="getMedicationActivities" bodyCondition="_vCYmM4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vCYmM4okEeSkH97cUQxLGA" name="body" constrainedElement="_vCYmMIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vCYmNIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(consol::MedicationActivity)).oclAsType(consol::MedicationActivity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vCYmMYokEeSkH97cUQxLGA" type="_2GHbgBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vCYmMookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_awdH4Bg4EeGs5a462vYX5Q" name="ProcedureActivityAct">
      <ownedComment xmi:id="_95KuYBxnEeGXP8PxDYviDg">
        <body>The common notion of &quot;procedure&quot; is broader than that specified by the HL7 Version 3 Reference Information Model (RIM). Therefore procedure templates can be represented with various RIM classes: act (e.g., dressing change), observation (e.g., EEG), procedure (e.g. splenectomy). &#xD;
This clinical statement represents any procedure that cannot be classified as an observation or a procedure according to the HL7 RIM. Examples of these procedures are a dressing change, teaching or feeding a patient or providing comfort measures.</body>
      </ownedComment>
      <ownedRule xmi:id="_ilhFEBxpEeGXP8PxDYviDg" name="ProcedureActivityActCodeCodeSystems" constrainedElement="_2OG58RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ilhFERxpEeGXP8PxDYviDg">
          <language>OCL</language>
          <body>self.code.isNullFlavorDefined() or self.code.codeSystem = '2.16.840.1.113883.6.1' xor self.code.codeSystem = '2.16.840.1.113883.6.96'</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oGW3cBxpEeGXP8PxDYviDg" name="ProcedureActivityActCodeOriginalText" constrainedElement="_qGzKgBrPEeGxIZCGAXKxsQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oGW3cRxpEeGXP8PxDYviDg">
          <language>OCL</language>
          <body>not code.oclIsUndefined() implies not code.originalText.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_rX9yIBxpEeGXP8PxDYviDg" name="ProcedureActivityActOriginalTextReference" constrainedElement="_N4ba0BrQEeGxIZCGAXKxsQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_rX9yIRxpEeGXP8PxDYviDg">
          <language>OCL</language>
          <body>not self.code.originalText.oclIsUndefined() implies self.code.originalText->one(reference->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_XONdcOV-EeGpoIKFyl7L7w" name="ProcedureActivityActOriginalTextReferenceValue" constrainedElement="_rX9yIBxpEeGXP8PxDYviDg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_e9F0sOV-EeGpoIKFyl7L7w">
          <language>OCL</language>
          <body>self.code.originalText.reference->size() = 1 implies self.code.originalText.reference.value->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_0i4pkBxpEeGXP8PxDYviDg" name="ProcedureActivityActReferenceValue" constrainedElement="_WEQMwBrQEeGxIZCGAXKxsQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_0i4pkRxpEeGXP8PxDYviDg">
          <language>OCL</language>
          <body>not self.code.originalText.reference.value.oclIsUndefined() implies not self.getSection().text.getText(self.code.originalText.reference.value.substring(2, self.code.originalText.reference.value.size())).oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ATZYUBxsEeGXP8PxDYviDg" name="ProcedureActivityActEncounterInversion">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ATZYURxsEeGXP8PxDYviDg">
          <language>OCL</language>
          <body>self.entryRelationship->select(er : cda::EntryRelationship | er.encounter->size() > 0)->forAll(ent : cda::EntryRelationship | ent.inversionInd=true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_C9KP4BxsEeGXP8PxDYviDg" name="ProcedureActivityActServiceDeliveryLocationTypeCode" constrainedElement="_9s2SABxZEeGXP8PxDYviDg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_C9KP4RxsEeGXP8PxDYviDg">
          <language>OCL</language>
          <body>self.participant->select(par : cda::Participant2 | par.participantRole.oclIsKindOf(consol::ServiceDeliveryLocation))->forAll(p : cda::Participant2 | p.typeCode=vocab::ParticipationType::LOC)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_zFL1IBxsEeGXP8PxDYviDg" name="ProcedureActivityActInstructionsInversion">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_zFL1IRxsEeGXP8PxDYviDg">
          <language>OCL</language>
          <body>self.entryRelationship->select(er : cda::EntryRelationship | er.act.oclIsTypeOf(consol::Instructions))->forAll(ent : cda::EntryRelationship | ent.inversionInd=true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vA_fEIokEeSkH97cUQxLGA" name="ProcedureActivityActTemplateId" constrainedElement="_awdH4Bg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vA_fEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.12')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vBFlsIokEeSkH97cUQxLGA" name="ProcedureActivityActClassCode" constrainedElement="_awdH4Bg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vBFlsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryAct::ACT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vBGz0IokEeSkH97cUQxLGA" name="ProcedureActivityActMoodCode" constrainedElement="_awdH4Bg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vBGz0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.moodCode.oclIsUndefined() and self.moodCode.oclIsKindOf(vocab::x_DocumentActMood) and &#xD;
let value : vocab::x_DocumentActMood = self.moodCode.oclAsType(vocab::x_DocumentActMood) in &#xD;
value = vocab::x_DocumentActMood::EVN or value = vocab::x_DocumentActMood::INT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vBJQEIokEeSkH97cUQxLGA" name="ProcedureActivityActId" constrainedElement="_awdH4Bg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vBJQEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vBKeMIokEeSkH97cUQxLGA" name="ProcedureActivityActCode" constrainedElement="_awdH4Bg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vBKeMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vBMTYIokEeSkH97cUQxLGA" name="ProcedureActivityActStatusCode" constrainedElement="_awdH4Bg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vBMTYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'completed' or value.code = 'active' or value.code = 'aborted' or value.code = 'cancelled')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vBOIkIokEeSkH97cUQxLGA" name="ProcedureActivityActEffectiveTime" constrainedElement="_awdH4Bg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vBOIkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vBSaAIokEeSkH97cUQxLGA" name="ProcedureActivityActPriorityCodeP" constrainedElement="_awdH4Bg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vBSaAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.priorityCode.oclIsUndefined() or self.priorityCode.isNullFlavorUndefined()) implies (not self.priorityCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vBP9wIokEeSkH97cUQxLGA" name="ProcedureActivityActPriorityCode" constrainedElement="_awdH4Bg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vBP9wYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.priorityCode.oclIsUndefined() or self.priorityCode.isNullFlavorUndefined()) implies (not self.priorityCode.oclIsUndefined() and self.priorityCode.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.priorityCode.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.5.7' and (value.code = 'A' or value.code = 'CR' or value.code = 'CS' or value.code = 'CSP' or value.code = 'CSR' or value.code = 'EL' or value.code = 'EM' or value.code = 'P' or value.code = 'PRN' or value.code = 'R' or value.code = 'RR' or value.code = 'S' or value.code = 'T' or value.code = 'UD' or value.code = 'UR'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vCNnEIokEeSkH97cUQxLGA" name="ProcedureActivityActPerformer" constrainedElement="_awdH4Bg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vCNnEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->exists(performer : cda::Performer2 | not performer.oclIsUndefined() and performer.oclIsKindOf(cda::Performer2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vCO1MIokEeSkH97cUQxLGA" name="ProcedureActivityActServiceDeliveryLocation" constrainedElement="_awdH4Bg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vCO1MYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->exists(participant : cda::Participant2 | not participant.participantRole.oclIsUndefined() and participant.participantRole.oclIsKindOf(consol::ServiceDeliveryLocation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vCQDUIokEeSkH97cUQxLGA" name="ProcedureActivityActInstructions" constrainedElement="_awdH4Bg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vCQDUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(consol::Instructions) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vCRRcIokEeSkH97cUQxLGA" name="ProcedureActivityActIndication" constrainedElement="_awdH4Bg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vCRRcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::Indication) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::RSON)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vCSfkYokEeSkH97cUQxLGA" name="ProcedureActivityActMedicationActivity" constrainedElement="_awdH4Bg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vCSfkookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.substanceAdministration.oclIsUndefined() and entryRelationship.substanceAdministration.oclIsKindOf(consol::MedicationActivity) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vRkRsIokEeSkH97cUQxLGA" name="ProcedureActivityActEntryRelationship" constrainedElement="_awdH4Bg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vRkRsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->select(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))->select(typeCode=vocab::x_ActRelationshipEntryRelationship::COMP and not encounter.oclIsUndefined() and encounter.oclIsKindOf(cda::Encounter))->notEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wSgxUIokEeSkH97cUQxLGA" name="ProcedureActivityActProcedureActPerformerProcedureActAssignedEntityProcedureActRepresentedOrganizationId" constrainedElement="_awdH4Bg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wSgxUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null).assignedEntity->excluding(null).representedOrganization->excluding(null)->reject((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wSgxUookEeSkH97cUQxLGA" name="ProcedureActivityActProcedureActPerformerProcedureActAssignedEntityProcedureActRepresentedOrganizationName" constrainedElement="_awdH4Bg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wSgxU4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null).assignedEntity->excluding(null).representedOrganization->excluding(null)->reject((name->isEmpty() or name->exists(element | element.isNullFlavorUndefined())) implies (not name->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wShYYIokEeSkH97cUQxLGA" name="ProcedureActivityActProcedureActPerformerProcedureActAssignedEntityProcedureActRepresentedOrganizationTelecom" constrainedElement="_awdH4Bg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wShYYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null).assignedEntity->excluding(null).representedOrganization->excluding(null)->reject((telecom->isEmpty() or telecom->exists(element | element.isNullFlavorUndefined())) implies (telecom->size() = 1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wShYYookEeSkH97cUQxLGA" name="ProcedureActivityActProcedureActPerformerProcedureActAssignedEntityProcedureActRepresentedOrganizationAddr" constrainedElement="_awdH4Bg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wShYY4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null).assignedEntity->excluding(null).representedOrganization->excluding(null)->reject((addr->isEmpty() or addr->exists(element | element.isNullFlavorUndefined())) implies (addr->size() = 1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wSh_cIokEeSkH97cUQxLGA" name="ProcedureActivityActProcedureActPerformerProcedureActAssignedEntityId" constrainedElement="_awdH4Bg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wSh_cYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null).assignedEntity->excluding(null)->reject((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wSimgIokEeSkH97cUQxLGA" name="ProcedureActivityActProcedureActPerformerProcedureActAssignedEntityAddr" constrainedElement="_awdH4Bg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wSimgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null).assignedEntity->excluding(null)->reject((addr->isEmpty() or addr->exists(element | element.isNullFlavorUndefined())) implies (addr->size() = 1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wSimgookEeSkH97cUQxLGA" name="ProcedureActivityActProcedureActPerformerProcedureActAssignedEntityTelecom" constrainedElement="_awdH4Bg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wSimg4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null).assignedEntity->excluding(null)->reject((telecom->isEmpty() or telecom->exists(element | element.isNullFlavorUndefined())) implies (telecom->size() = 1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wSjNkIokEeSkH97cUQxLGA" name="ProcedureActivityActProcedureActPerformerProcedureActAssignedEntityRepresentedOrganization" constrainedElement="_awdH4Bg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wSjNkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null).assignedEntity->excluding(null)->reject(representedOrganization->one(representedOrganization : cda::Organization | not representedOrganization.oclIsUndefined() and representedOrganization.oclIsKindOf(cda::Organization)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wSj0oIokEeSkH97cUQxLGA" name="ProcedureActivityActProcedureActPerformerAssignedEntity" constrainedElement="_awdH4Bg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wSj0oYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null)->reject(assignedEntity->one(assignedEntity : cda::AssignedEntity | not assignedEntity.oclIsUndefined() and assignedEntity.oclIsKindOf(cda::AssignedEntity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wSlCwIokEeSkH97cUQxLGA" name="ProcedureActivityActEntryRelationshipProcedureActEncounterClassCode" constrainedElement="_awdH4Bg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wSlCwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->select(typeCode=vocab::x_ActRelationshipEntryRelationship::COMP and not encounter.oclIsUndefined() and encounter.oclIsKindOf(cda::Encounter)).encounter->excluding(null)->reject(classCode=vocab::ActClass::ENC)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wSlp0IokEeSkH97cUQxLGA" name="ProcedureActivityActEntryRelationshipProcedureActEncounterMoodCode" constrainedElement="_awdH4Bg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wSlp0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->select(typeCode=vocab::x_ActRelationshipEntryRelationship::COMP and not encounter.oclIsUndefined() and encounter.oclIsKindOf(cda::Encounter)).encounter->excluding(null)->reject(moodCode=vocab::x_DocumentEncounterMood::EVN)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wSlp0ookEeSkH97cUQxLGA" name="ProcedureActivityActEntryRelationshipProcedureActEncounterId" constrainedElement="_awdH4Bg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wSlp04okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->select(typeCode=vocab::x_ActRelationshipEntryRelationship::COMP and not encounter.oclIsUndefined() and encounter.oclIsKindOf(cda::Encounter)).encounter->excluding(null)->reject((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (id->size() = 1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wSmQ4IokEeSkH97cUQxLGA" name="ProcedureActivityActEntryRelationshipInversionInd" constrainedElement="_awdH4Bg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wSmQ4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->select(typeCode=vocab::x_ActRelationshipEntryRelationship::COMP and not encounter.oclIsUndefined() and encounter.oclIsKindOf(cda::Encounter))->select(typeCode=vocab::x_ActRelationshipEntryRelationship::COMP and not encounter.oclIsUndefined() and encounter.oclIsKindOf(cda::Encounter))->reject(not inversionInd.oclIsUndefined() and inversionInd=true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wSm38IokEeSkH97cUQxLGA" name="ProcedureActivityActEntryRelationshipTypeCode" constrainedElement="_awdH4Bg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wSm38YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->select(typeCode=vocab::x_ActRelationshipEntryRelationship::COMP and not encounter.oclIsUndefined() and encounter.oclIsKindOf(cda::Encounter))->select(typeCode=vocab::x_ActRelationshipEntryRelationship::COMP and not encounter.oclIsUndefined() and encounter.oclIsKindOf(cda::Encounter))->reject(typeCode=vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wSm38ookEeSkH97cUQxLGA" name="ProcedureActivityActEntryRelationshipProcedureActEncounter" constrainedElement="_awdH4Bg4EeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wSm384okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->select(typeCode=vocab::x_ActRelationshipEntryRelationship::COMP and not encounter.oclIsUndefined() and encounter.oclIsKindOf(cda::Encounter))->select(typeCode=vocab::x_ActRelationshipEntryRelationship::COMP and not encounter.oclIsUndefined() and encounter.oclIsKindOf(cda::Encounter))->reject(encounter->one(encounter : cda::Encounter | not encounter.oclIsUndefined() and encounter.oclIsKindOf(cda::Encounter)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_awdH4Rg4EeGs5a462vYX5Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_vCPcQIokEeSkH97cUQxLGA" name="getServiceDeliveryLocations" bodyCondition="_vCPcQ4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vCPcQ4okEeSkH97cUQxLGA" name="body" constrainedElement="_vCPcQIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vCPcRIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getParticipantRoles()->select(participantRole : cda::ParticipantRole | not participantRole.oclIsUndefined() and participantRole.oclIsKindOf(consol::ServiceDeliveryLocation)).oclAsType(consol::ServiceDeliveryLocation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vCPcQYokEeSkH97cUQxLGA" type="_2LiHABSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vCPcQookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vCQqYIokEeSkH97cUQxLGA" name="getInstructions" bodyCondition="_vCQqY4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vCQqY4okEeSkH97cUQxLGA" name="body" constrainedElement="_vCQqYIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vCQqZIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::Instructions))->asSequence()->any(true).oclAsType(consol::Instructions)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vCQqYYokEeSkH97cUQxLGA" type="_2G8h9RSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vCQqYookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vCR4gIokEeSkH97cUQxLGA" name="getIndications" bodyCondition="_vCR4g4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vCR4g4okEeSkH97cUQxLGA" name="body" constrainedElement="_vCR4gIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vCSfkIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::Indication)).oclAsType(consol::Indication)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vCR4gYokEeSkH97cUQxLGA" type="_sHrUoBUSEeG6PvUxSTZnaw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vCR4gookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vCTGoIokEeSkH97cUQxLGA" name="getMedicationActivities" bodyCondition="_vCTGo4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vCTGo4okEeSkH97cUQxLGA" name="body" constrainedElement="_vCTGoIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vCTGpIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(consol::MedicationActivity)).oclAsType(consol::MedicationActivity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vCTGoYokEeSkH97cUQxLGA" type="_2GHbgBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vCTGoookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_XUoXwBnZEeGs5a462vYX5Q" name="AuthorizationActivity">
      <ownedComment xmi:id="_1yE5QHhuEeGJtvg2iiStYg">
        <body>An Authorization Activity represents authorizations or pre-authorizations currently active for the patient for the particular payer. &#xD;
Authorizations are represented using an act subordinate to the policy or program that provided it.  The authorization refers to the policy or program. Authorized treatments can be grouped into an organizer class, where common properties, such as the reason for the authorization, can be expressed. Subordinate acts represent what was authorized.</body>
      </ownedComment>
      <ownedRule xmi:id="_vBi4sIokEeSkH97cUQxLGA" name="AuthorizationActivityTemplateId" constrainedElement="_XUoXwBnZEeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vBi4sYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.19')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vBkt4IokEeSkH97cUQxLGA" name="AuthorizationActivityClassCode" constrainedElement="_XUoXwBnZEeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vBkt4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryAct::ACT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vBlU8IokEeSkH97cUQxLGA" name="AuthorizationActivityId" constrainedElement="_XUoXwBnZEeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vBlU8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (self.id->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vBnxMIokEeSkH97cUQxLGA" name="AuthorizationActivityMoodCode" constrainedElement="_XUoXwBnZEeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vBnxMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vRbHwIokEeSkH97cUQxLGA" name="AuthorizationActivityEntryRelationship" constrainedElement="_XUoXwBnZEeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vRbHwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->select(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))->select(typeCode=vocab::x_ActRelationshipEntryRelationship::SUBJ)->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wSoGEIokEeSkH97cUQxLGA" name="AuthorizationActivityEntryRelationshipHasClinicalStatement" constrainedElement="_XUoXwBnZEeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wSoGEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->select(typeCode=vocab::x_ActRelationshipEntryRelationship::SUBJ)->select(typeCode=vocab::x_ActRelationshipEntryRelationship::SUBJ)->reject(act->exists(moodCode = vocab::x_DocumentActMood::PRMS) or  encounter->exists(moodCode = vocab::x_DocumentEncounterMood::PRMS) or observation->exists(moodCode = vocab::x_ActMoodDocumentObservation::PRMS) or  observationMedia->exists(moodCode = vocab::ActMood::PRMS) or organizer->exists(moodCode = vocab::ActMood::PRMS) or procedure->exists(moodCode = vocab::x_DocumentProcedureMood::PRMS) or  regionOfInterest->exists(moodCode = vocab::ActMood::PRMS) or substanceAdministration->exists(moodCode = vocab::x_DocumentSubstanceMood::PRMS) or  supply->exists(moodCode = vocab::x_DocumentSubstanceMood::PRMS))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wSotIIokEeSkH97cUQxLGA" name="AuthorizationActivityEntryRelationshipHasAuthorizedPerformers" constrainedElement="_XUoXwBnZEeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wSotIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->select(typeCode=vocab::x_ActRelationshipEntryRelationship::SUBJ)->select(typeCode=vocab::x_ActRelationshipEntryRelationship::SUBJ)->reject(act->forAll( (moodCode = vocab::x_DocumentActMood::PRMS and performer->size() > 0) or moodCode &lt;> vocab::x_DocumentActMood::PRMS ) and &#xD;
encounter->forAll((moodCode = vocab::x_DocumentEncounterMood::PRMS and performer->size() > 0) or moodCode &lt;>  vocab::x_DocumentEncounterMood::PRMS) and &#xD;
observation->forAll((moodCode = vocab::x_ActMoodDocumentObservation::PRMS and performer->size() > 0)  or moodCode &lt;>  vocab::x_ActMoodDocumentObservation::PRMS) and &#xD;
observationMedia->forAll((moodCode = vocab::ActMood::PRMS and performer->size() > 0) or moodCode &lt;>  vocab::ActMood::PRMS) and &#xD;
organizer->forAll((moodCode = vocab::ActMood::PRMS and performer->size() > 0)  or moodCode &lt;>  vocab::ActMood::PRMS) and &#xD;
procedure->forAll((moodCode = vocab::x_DocumentProcedureMood::PRMS and performer->size() > 0)  or moodCode &lt;>  vocab::x_DocumentProcedureMood::PRMS) and &#xD;
regionOfInterest->forAll((moodCode = vocab::ActMood::PRMS and performer->size() > 0) or moodCode &lt;>  vocab::ActMood::PRMS) and &#xD;
substanceAdministration->forAll((moodCode = vocab::x_DocumentSubstanceMood::PRMS and performer->size() > 0)  or moodCode &lt;>  vocab::x_DocumentSubstanceMood::PRMS) and &#xD;
supply->forAll((moodCode = vocab::x_DocumentSubstanceMood::PRMS and performer->size() > 0) or moodCode &lt;>  vocab::x_DocumentSubstanceMood::PRMS))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wSotIookEeSkH97cUQxLGA" name="AuthorizationActivityEntryRelationshipTypeCode" constrainedElement="_XUoXwBnZEeGs5a462vYX5Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wSotI4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->select(typeCode=vocab::x_ActRelationshipEntryRelationship::SUBJ)->select(typeCode=vocab::x_ActRelationshipEntryRelationship::SUBJ)->reject(typeCode=vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_XUoXwRnZEeGs5a462vYX5Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_j3aTQBrTEeGo461UQq-B1g" name="MedicationSupplyOrder">
      <ownedRule xmi:id="_iZPioB7lEeGEaLkc3UAsAg" name="MedicationSupplyOrderInstructionInversionInd" constrainedElement="_j3aTQBrTEeGo461UQq-B1g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_l6ZVMB7lEeGEaLkc3UAsAg">
          <language>OCL</language>
          <body>self.entryRelationship->select(er : cda::EntryRelationship | er.act.oclIsTypeOf(consol::Instructions))->forAll(ent : cda::EntryRelationship | ent.inversionInd=true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vah94OMVEeGfv4R-kzpM0g" name="MedicationSupplyOrderEffectiveTimeHigh" constrainedElement="_j3aTQBrTEeGo461UQq-B1g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ydkREOMVEeGfv4R-kzpM0g">
          <language>OCL</language>
          <body>self.effectiveTime->size() = 1 implies self.effectiveTime.oclAsType(datatypes::IVL_TS)->forAll(high->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tJNe4DsiEeKK96MV1iYPgQ" name="MedicationSupplyOrderContainsMedicationOrImmunization" constrainedElement="_iZPioB7lEeGEaLkc3UAsAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tJNe4TsiEeKK96MV1iYPgQ">
          <language>OCL</language>
          <body>self.product.manufacturedProduct.oclIsTypeOf(consol::MedicationInformation) xor self.product.manufacturedProduct.oclIsTypeOf(consol::ImmunizationMedicationInformation)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vBue4IokEeSkH97cUQxLGA" name="MedicationSupplyOrderTemplateId" constrainedElement="_j3aTQBrTEeGo461UQq-B1g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vBvF8IokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.17')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vBywUIokEeSkH97cUQxLGA" name="MedicationSupplyOrderClassCode" constrainedElement="_j3aTQBrTEeGo461UQq-B1g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vBywUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassSupply::SPLY</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vBzXYIokEeSkH97cUQxLGA" name="MedicationSupplyOrderEffectiveTime" constrainedElement="_j3aTQBrTEeGo461UQq-B1g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vBz-cIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.effectiveTime->isEmpty() or self.effectiveTime->exists(element | element.isNullFlavorUndefined())) implies (not self.effectiveTime->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vB1MkIokEeSkH97cUQxLGA" name="MedicationSupplyOrderMoodCode" constrainedElement="_j3aTQBrTEeGo461UQq-B1g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vB1MkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentSubstanceMood::INT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vB2asIokEeSkH97cUQxLGA" name="MedicationSupplyOrderQuantity" constrainedElement="_j3aTQBrTEeGo461UQq-B1g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vB2asYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.quantity.oclIsUndefined() or self.quantity.isNullFlavorUndefined()) implies (not self.quantity.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vB4P4IokEeSkH97cUQxLGA" name="MedicationSupplyOrderRepeatNumber" constrainedElement="_j3aTQBrTEeGo461UQq-B1g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vB4P4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.repeatNumber.oclIsUndefined() or self.repeatNumber.isNullFlavorUndefined()) implies (not self.repeatNumber.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vB5eAIokEeSkH97cUQxLGA" name="MedicationSupplyOrderStatusCode" constrainedElement="_j3aTQBrTEeGo461UQq-B1g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vB5eAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vB6sIIokEeSkH97cUQxLGA" name="MedicationSupplyOrderId" constrainedElement="_j3aTQBrTEeGo461UQq-B1g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vB6sIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vB76QIokEeSkH97cUQxLGA" name="MedicationSupplyOrderAuthor" constrainedElement="_j3aTQBrTEeGo461UQq-B1g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vB76QYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->one(author : cda::Author | not author.oclIsUndefined() and author.oclIsKindOf(rim::Participation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vB9IYIokEeSkH97cUQxLGA" name="MedicationSupplyOrderInstructions" constrainedElement="_j3aTQBrTEeGo461UQq-B1g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vB9IYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(consol::Instructions) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_j3aTQRrTEeGo461UQq-B1g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_3gL0sEbuEd6besF9iFIJkQ"/>
      </generalization>
      <ownedOperation xmi:id="_vB9vcIokEeSkH97cUQxLGA" name="getInstructions" bodyCondition="_vB9vc4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vB9vc4okEeSkH97cUQxLGA" name="body" constrainedElement="_vB9vcIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vB9vdIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::Instructions))->asSequence()->any(true).oclAsType(consol::Instructions)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vB9vcYokEeSkH97cUQxLGA" type="_2G8h9RSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vB9vcookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_vBswQBtpEeGT89b80j3MTg" name="EstimatedDateOfDelivery">
      <ownedComment xmi:id="_rEXPUDyXEeGOm9opnDhYAQ">
        <body>This clinical statement represents the anticipated date when a woman will give birth.</body>
      </ownedComment>
      <ownedRule xmi:id="_vCZNQIokEeSkH97cUQxLGA" name="EstimatedDateOfDeliveryTemplateId" constrainedElement="_vBswQBtpEeGT89b80j3MTg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vCZNQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.15.3.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vCabYIokEeSkH97cUQxLGA" name="EstimatedDateOfDeliveryClassCode" constrainedElement="_vBswQBtpEeGT89b80j3MTg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vCabYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vCcQkIokEeSkH97cUQxLGA" name="EstimatedDateOfDeliveryCode" constrainedElement="_vBswQBtpEeGT89b80j3MTg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vCcQkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '11778-8' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vCes0IokEeSkH97cUQxLGA" name="EstimatedDateOfDeliveryMoodCode" constrainedElement="_vBswQBtpEeGT89b80j3MTg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vCes0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vCf68IokEeSkH97cUQxLGA" name="EstimatedDateOfDeliveryStatusCode" constrainedElement="_vBswQBtpEeGT89b80j3MTg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vCf68YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vCiXMIokEeSkH97cUQxLGA" name="EstimatedDateOfDeliveryValue" constrainedElement="_vBswQBtpEeGT89b80j3MTg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vCiXMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::TS)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_vBvzkBtpEeGT89b80j3MTg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2PidURSVEeGGzu7fmW9pXw" name="HospitalDischargeDiagnosisSection">
      <ownedComment xmi:id="_2Poj4hSVEeGGzu7fmW9pXw" annotatedElement="_2PidURSVEeGGzu7fmW9pXw">
        <body>The Hospital Discharge Diagnosis section describes the relevant problems or diagnoses at the time of discharge that occurred during the hospitalization or that need to be followed after hospitalization. This section includes an optional entry to record patient conditions.</body>
      </ownedComment>
      <ownedRule xmi:id="_vCwZoIokEeSkH97cUQxLGA" name="HospitalDischargeDiagnosisSectionTemplateId" constrainedElement="_2PidURSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vCwZoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.24')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vCyO0IokEeSkH97cUQxLGA" name="HospitalDischargeDiagnosisSectionCode" constrainedElement="_2PidURSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vCyO0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '11535-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vC0rEIokEeSkH97cUQxLGA" name="HospitalDischargeDiagnosisSectionCodeP" constrainedElement="_2PidURSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vC0rEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vC2gQIokEeSkH97cUQxLGA" name="HospitalDischargeDiagnosisSectionTitle" constrainedElement="_2PidURSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vC2gQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vC3uYIokEeSkH97cUQxLGA" name="HospitalDischargeDiagnosisSectionText" constrainedElement="_2PidURSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vC3uYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vEPAUIokEeSkH97cUQxLGA" name="HospitalDischargeDiagnosisSectionHospitalDischargeDiagnosis" constrainedElement="_2PidURSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vEPAUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::HospitalDischargeDiagnosis))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2Poj4xSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_vEPnYIokEeSkH97cUQxLGA" name="getHospitalDischargeDiagnosis" bodyCondition="_vEPnY4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vEPnY4okEeSkH97cUQxLGA" name="body" constrainedElement="_vEPnYIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vEPnZIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::HospitalDischargeDiagnosis))->asSequence()->any(true).oclAsType(consol::HospitalDischargeDiagnosis)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vEPnYYokEeSkH97cUQxLGA" type="_KtwVgCULEeGiOPpZVnfEJA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vEPnYookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2Poj7RSVEeGGzu7fmW9pXw" name="HospitalDischargeMedicationsSectionEntriesOptional">
      <ownedComment xmi:id="_2Poj-hSVEeGGzu7fmW9pXw" annotatedElement="_2Poj7RSVEeGGzu7fmW9pXw">
        <body>The Hospital Discharge Medications section defines the medications that the patient is intended to take (or stop) after discharge. The currently active medications must be listed. The section may also include a patient's prescription history and indicate the source of the medication list, for example, from a pharmacy system versus from the patient.</body>
      </ownedComment>
      <ownedRule xmi:id="_vC48gIokEeSkH97cUQxLGA" name="HospitalDischargeMedicationsSectionEntriesOptionalTemplateId" constrainedElement="_2Poj7RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vC5jkIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.11')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vC6xsIokEeSkH97cUQxLGA" name="HospitalDischargeMedicationsSectionEntriesOptionalCode" constrainedElement="_2Poj7RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vC7YwIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '10183-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vC9N8IokEeSkH97cUQxLGA" name="HospitalDischargeMedicationsSectionEntriesOptionalCodeP" constrainedElement="_2Poj7RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vC9N8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vC_qMIokEeSkH97cUQxLGA" name="HospitalDischargeMedicationsSectionEntriesOptionalTitle" constrainedElement="_2Poj7RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vC_qMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vDA4UIokEeSkH97cUQxLGA" name="HospitalDischargeMedicationsSectionEntriesOptionalText" constrainedElement="_2Poj7RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vDA4UYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vEQOcIokEeSkH97cUQxLGA" name="HospitalDischargeMedicationsSectionEntriesOptionalDischargeMedication" constrainedElement="_2Poj7RSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vEQOcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::DischargeMedication))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2Poj-xSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_vEQ1gIokEeSkH97cUQxLGA" name="getDischargeMedications" bodyCondition="_vEQ1g4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vEQ1g4okEeSkH97cUQxLGA" name="body" constrainedElement="_vEQ1gIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vEQ1hIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::DischargeMedication)).oclAsType(consol::DischargeMedication)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vEQ1gYokEeSkH97cUQxLGA" type="_hD-z0CUPEeGiOPpZVnfEJA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vEQ1gookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2RqkOxSVEeGGzu7fmW9pXw" name="HospitalCourseSection">
      <ownedComment xmi:id="_2RqkPBSVEeGGzu7fmW9pXw" annotatedElement="_2RqkOxSVEeGGzu7fmW9pXw">
        <body>The Hospital Course section describes the sequence of events from admission to discharge in a hospital facility.</body>
      </ownedComment>
      <ownedRule xmi:id="_vDCGcIokEeSkH97cUQxLGA" name="HospitalCourseSectionTemplateId" constrainedElement="_2RqkOxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vDCGcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '1.3.6.1.4.1.19376.1.5.3.1.3.5')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vDD7oIokEeSkH97cUQxLGA" name="HospitalCourseSectionCode" constrainedElement="_2RqkOxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vDD7oYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '8648-8' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vDGX4IokEeSkH97cUQxLGA" name="HospitalCourseSectionCodeP" constrainedElement="_2RqkOxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vDGX4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vDINEIokEeSkH97cUQxLGA" name="HospitalCourseSectionTitle" constrainedElement="_2RqkOxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vDI0IIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vDKCQIokEeSkH97cUQxLGA" name="HospitalCourseSectionText" constrainedElement="_2RqkOxSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vDKCQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2RqkQxSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2Uz-4xSVEeGGzu7fmW9pXw" name="DischargeDietSection">
      <ownedComment xmi:id="_2Uz-5BSVEeGGzu7fmW9pXw" annotatedElement="_2Uz-4xSVEeGGzu7fmW9pXw">
        <body>This section records a narrative description of the expectations for diet, including proposals, goals, and order requests for monitoring, tracking, or improving the dietary control of the patient, used in a discharge from a facility such as an emergency department, hospital, or nursing home.</body>
      </ownedComment>
      <ownedRule xmi:id="_vDLQYIokEeSkH97cUQxLGA" name="DischargeDietSectionTemplateId" constrainedElement="_2Uz-4xSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vDLQYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '1.3.6.1.4.1.19376.1.5.3.1.3.33')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vDNFkIokEeSkH97cUQxLGA" name="DischargeDietSectionCode" constrainedElement="_2Uz-4xSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vDNFkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '42344-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vDO6wIokEeSkH97cUQxLGA" name="DischargeDietSectionCodeP" constrainedElement="_2Uz-4xSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vDPh0IokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vDRXAIokEeSkH97cUQxLGA" name="DischargeDietSectionTitle" constrainedElement="_2Uz-4xSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vDRXAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vDSlIIokEeSkH97cUQxLGA" name="DischargeDietSectionText" constrainedElement="_2Uz-4xSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vDSlIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2U6FchSVEeGGzu7fmW9pXw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_38AXoCUTEeGiOPpZVnfEJA" name="HospitalDischargeStudiesSummarySection">
      <ownedComment xmi:id="_IeLwgCUUEeGiOPpZVnfEJA">
        <body>This section records the results of observations generated by laboratories, imaging procedures, and other procedures. The scope includes hematology, chemistry, serology, virology, toxicology, microbiology, plain x-ray, ultrasound, CT, MRI, angiography, echocardiography, nuclear medicine, pathology, and procedure observations. This section often includes notable results such as abnormal values or relevant trends, and could record all results for the period of time being documented.&#xD;
Laboratory results are typically generated by laboratories providing analytic services in areas such as chemistry, hematology, serology, histology, cytology, anatomic pathology, microbiology, and/or virology. These observations are based on analysis of specimens obtained from the patient and submitted to the laboratory.&#xD;
Imaging results are typically generated by a clinician reviewing the output of an imaging procedure, such as where a cardiologist reports the left ventricular ejection fraction based on the review of an echocardiogram.&#xD;
Procedure results are typically generated by a clinician wanting to provide more granular information about component observations made during the performance of a procedure, such as when a gastroenterologist reports the size of a polyp observed during a colonoscopy.&#xD;
Note that there are discrepancies between CCD and the lab domain model, such as the effectiveTime in specimen collection.</body>
      </ownedComment>
      <ownedRule xmi:id="_vDTzQIokEeSkH97cUQxLGA" name="HospitalDischargeStudiesSummarySectionTemplateId" constrainedElement="_38AXoCUTEeGiOPpZVnfEJA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vDTzQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.16')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vDVocIokEeSkH97cUQxLGA" name="HospitalDischargeStudiesSummarySectionCode" constrainedElement="_38AXoCUTEeGiOPpZVnfEJA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vDVocYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '11493-4' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vDYEsIokEeSkH97cUQxLGA" name="HospitalDischargeStudiesSummarySectionCodeP" constrainedElement="_38AXoCUTEeGiOPpZVnfEJA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vDYEsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vDag8IokEeSkH97cUQxLGA" name="HospitalDischargeStudiesSummarySectionTitle" constrainedElement="_38AXoCUTEeGiOPpZVnfEJA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vDag8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vDbvEIokEeSkH97cUQxLGA" name="HospitalDischargeStudiesSummarySectionText" constrainedElement="_38AXoCUTEeGiOPpZVnfEJA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vDbvEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_38JhkCUTEeGiOPpZVnfEJA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_hD-z0CUPEeGiOPpZVnfEJA" name="DischargeMedication">
      <ownedComment xmi:id="_j_-q4CUPEeGiOPpZVnfEJA">
        <body>The Discharge Medications entry codes medications that the patient is intended to take (or stop) after discharge.</body>
      </ownedComment>
      <ownedRule xmi:id="_vCtWVYokEeSkH97cUQxLGA" name="DischargeMedicationMedicationActivity" constrainedElement="_hD-z0CUPEeGiOPpZVnfEJA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vCtWVookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.substanceAdministration.oclIsUndefined() and entryRelationship.substanceAdministration.oclIsKindOf(consol::MedicationActivity) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vDc9MIokEeSkH97cUQxLGA" name="DischargeMedicationTemplateId" constrainedElement="_hD-z0CUPEeGiOPpZVnfEJA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vDc9MYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.35')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vDeLUIokEeSkH97cUQxLGA" name="DischargeMedicationClassCode" constrainedElement="_hD-z0CUPEeGiOPpZVnfEJA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vDeLUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryAct::ACT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vDfZcIokEeSkH97cUQxLGA" name="DischargeMedicationMoodCode" constrainedElement="_hD-z0CUPEeGiOPpZVnfEJA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vDfZcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vDhOoIokEeSkH97cUQxLGA" name="DischargeMedicationCode" constrainedElement="_hD-z0CUPEeGiOPpZVnfEJA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vDhOoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '10183-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_hD_a4CUPEeGiOPpZVnfEJA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_vCukcYokEeSkH97cUQxLGA" name="getMedicationActivities" bodyCondition="_vCukdIokEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vCukdIokEeSkH97cUQxLGA" name="body" constrainedElement="_vCukcYokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vCukdYokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(consol::MedicationActivity)).oclAsType(consol::MedicationActivity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vCukcookEeSkH97cUQxLGA" type="_2GHbgBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vCukc4okEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_KtwVgCULEeGiOPpZVnfEJA" name="HospitalDischargeDiagnosis">
      <ownedComment xmi:id="_QGxBkCULEeGiOPpZVnfEJA">
        <body>The Hospital Discharge Diagnosis act wraps relevant problems or diagnoses at the time of discharge that occurred during the hospitalization or that need to be followed after hospitalization. This entry requires at least one Problem Observation entry.</body>
      </ownedComment>
      <ownedRule xmi:id="_vCvLgIokEeSkH97cUQxLGA" name="HospitalDischargeDiagnosisProblemObservation" constrainedElement="_KtwVgCULEeGiOPpZVnfEJA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vCvLgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::ProblemObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vDjq4IokEeSkH97cUQxLGA" name="HospitalDischargeDiagnosisTemplateId" constrainedElement="_KtwVgCULEeGiOPpZVnfEJA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vDkR8IokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.33')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vDlgEIokEeSkH97cUQxLGA" name="HospitalDischargeDiagnosisClassCode" constrainedElement="_KtwVgCULEeGiOPpZVnfEJA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vDlgEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryAct::ACT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vDn8UIokEeSkH97cUQxLGA" name="HospitalDischargeDiagnosisMoodCode" constrainedElement="_KtwVgCULEeGiOPpZVnfEJA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vDn8UYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vDpxgIokEeSkH97cUQxLGA" name="HospitalDischargeDiagnosisCode" constrainedElement="_KtwVgCULEeGiOPpZVnfEJA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vDpxgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '11535-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Ktw8kCULEeGiOPpZVnfEJA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_vCvykYokEeSkH97cUQxLGA" name="getProblemObservations" bodyCondition="_vCvylIokEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vCvylIokEeSkH97cUQxLGA" name="body" constrainedElement="_vCvykYokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vCvylYokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProblemObservation)).oclAsType(consol::ProblemObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vCvykookEeSkH97cUQxLGA" type="_5Ha7ABUyEeGbmN_W114JUw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vCvyk4okEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_lBergCUMEeGiOPpZVnfEJA" name="HospitalDischargeInstructionsSection">
      <ownedComment xmi:id="_YHIqECUOEeGiOPpZVnfEJA">
        <body>The Hospital Discharge Instructions section records instructions at discharge.</body>
      </ownedComment>
      <ownedRule xmi:id="_vDrmsIokEeSkH97cUQxLGA" name="HospitalDischargeInstructionsSectionTemplateId" constrainedElement="_lBergCUMEeGiOPpZVnfEJA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vDsNwIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.41')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vDuC8IokEeSkH97cUQxLGA" name="HospitalDischargeInstructionsSectionCode" constrainedElement="_lBergCUMEeGiOPpZVnfEJA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vDuC8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '8653-8' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vDwfMIokEeSkH97cUQxLGA" name="HospitalDischargeInstructionsSectionCodeP" constrainedElement="_lBergCUMEeGiOPpZVnfEJA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vDwfMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vDyUYIokEeSkH97cUQxLGA" name="HospitalDischargeInstructionsSectionTitle" constrainedElement="_lBergCUMEeGiOPpZVnfEJA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vDyUYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vDzigIokEeSkH97cUQxLGA" name="HospitalDischargeInstructionsSectionText" constrainedElement="_lBergCUMEeGiOPpZVnfEJA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vDzigYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_lBfSkCUMEeGiOPpZVnfEJA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_TytVkCUQEeGiOPpZVnfEJA" name="HospitalDischargeMedicationsSection">
      <ownedComment xmi:id="_jk0jcCUQEeGiOPpZVnfEJA">
        <body>The Hospital Discharge Medications section defines the medications that the patient is intended to take (or stop) after discharge. The currently active medications must be listed. The section may also include a patient's prescription history and indicate the source of the medication list, for example, from a pharmacy system versus from the patient.</body>
      </ownedComment>
      <ownedRule xmi:id="_vD1XsIokEeSkH97cUQxLGA" name="HospitalDischargeMedicationsSectionEntriesOptionalTemplateId" constrainedElement="_TytVkCUQEeGiOPpZVnfEJA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vD1XsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.11.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vD6QMIokEeSkH97cUQxLGA" name="HospitalDischargeMedicationsSectionEntriesOptionalCodeP" constrainedElement="_TytVkCUQEeGiOPpZVnfEJA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vD6QMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vD3z8IokEeSkH97cUQxLGA" name="HospitalDischargeMedicationsSectionEntriesOptionalCode" constrainedElement="_TytVkCUQEeGiOPpZVnfEJA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vD3z8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '10183-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vD8scIokEeSkH97cUQxLGA" name="HospitalDischargeMedicationsSectionEntriesOptionalText" constrainedElement="_TytVkCUQEeGiOPpZVnfEJA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vD8scYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vD-hoIokEeSkH97cUQxLGA" name="HospitalDischargeMedicationsSectionEntriesOptionalTitle" constrainedElement="_TytVkCUQEeGiOPpZVnfEJA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vD-hoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vERckIokEeSkH97cUQxLGA" name="HospitalDischargeMedicationsSectionEntriesOptionalDischargeMedication" constrainedElement="_TytVkCUQEeGiOPpZVnfEJA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vERckYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::DischargeMedication))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_TytVkSUQEeGiOPpZVnfEJA" general="_2Poj7RSVEeGGzu7fmW9pXw">
        <ownedComment xmi:id="_qXZq0HavEeGK39q3kclbsA">
          <body>couple</body>
        </ownedComment>
      </generalization>
      <ownedOperation xmi:id="_vESqsIokEeSkH97cUQxLGA" name="getConsolDischargeMedications" bodyCondition="_vESqs4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vESqs4okEeSkH97cUQxLGA" name="body" constrainedElement="_vESqsIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vESqtIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::DischargeMedication)).oclAsType(consol::DischargeMedication)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vESqsYokEeSkH97cUQxLGA" type="_hD-z0CUPEeGiOPpZVnfEJA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vESqsookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_WikGsCUTEeGiOPpZVnfEJA" name="HospitalDischargePhysicalSection">
      <ownedComment xmi:id="_YsVPkCUTEeGiOPpZVnfEJA">
        <body>The Hospital Discharge Physical section records a narrative description of the patient's physical findings.</body>
      </ownedComment>
      <ownedRule xmi:id="_vEF2YIokEeSkH97cUQxLGA" name="HospitalDischargePhysicalSectionTemplateId" constrainedElement="_WikGsCUTEeGiOPpZVnfEJA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vEF2YYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '1.3.6.1.4.1.19376.1.5.3.1.3.26')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vEHrkIokEeSkH97cUQxLGA" name="HospitalDischargePhysicalSectionCode" constrainedElement="_WikGsCUTEeGiOPpZVnfEJA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vEHrkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '10184-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vEKH0IokEeSkH97cUQxLGA" name="HospitalDischargePhysicalSectionCodeP" constrainedElement="_WikGsCUTEeGiOPpZVnfEJA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vEKH0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vEL9AIokEeSkH97cUQxLGA" name="HospitalDischargePhysicalSectionTitle" constrainedElement="_WikGsCUTEeGiOPpZVnfEJA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vEL9AYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vENyMIokEeSkH97cUQxLGA" name="HospitalDischargePhysicalSectionText" constrainedElement="_WikGsCUTEeGiOPpZVnfEJA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vENyMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_WikGsSUTEeGiOPpZVnfEJA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oI7CQCsaEeGHF88-qhhUMA" name="ChiefComplaintAndReasonForVisitSection">
      <ownedComment xmi:id="_sNrJwCsdEeGHF88-qhhUMA">
        <body>This section records the patient's chief complaint (the patient's own description) and/or the reason for the patient's visit (the provider's description of the reason for visit).  Local policy determines whether the information is divided into two sections or recorded in one section serving both purposes.</body>
      </ownedComment>
      <ownedRule xmi:id="_vESqtYokEeSkH97cUQxLGA" name="ChiefComplaintAndReasonForVisitSectionTemplateId" constrainedElement="_oI7CQCsaEeGHF88-qhhUMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vETRwIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.13')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vEVG8IokEeSkH97cUQxLGA" name="ChiefComplaintAndReasonForVisitSectionCode" constrainedElement="_oI7CQCsaEeGHF88-qhhUMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vEVG8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '46239-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vEW8IIokEeSkH97cUQxLGA" name="ChiefComplaintAndReasonForVisitSectionCodeP" constrainedElement="_oI7CQCsaEeGHF88-qhhUMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vEW8IYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vEZYYIokEeSkH97cUQxLGA" name="ChiefComplaintAndReasonForVisitSectionText" constrainedElement="_oI7CQCsaEeGHF88-qhhUMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vEZYYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vEamgIokEeSkH97cUQxLGA" name="ChiefComplaintAndReasonForVisitSectionTitle" constrainedElement="_oI7CQCsaEeGHF88-qhhUMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vEamgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oI7CQSsaEeGHF88-qhhUMA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Nm64UCscEeGHF88-qhhUMA" name="ReasonForVisitSection">
      <ownedComment xmi:id="_OPllYCsdEeGHF88-qhhUMA">
        <body>This section records the patient's reason for the patient's visit (as documented by the provider).  Local policy determines whether Reason for Visit and Chief Complaint are in separate or combined sections.</body>
      </ownedComment>
      <ownedRule xmi:id="_vEb0oIokEeSkH97cUQxLGA" name="ReasonForVisitSectionTemplateId" constrainedElement="_Nm64UCscEeGHF88-qhhUMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vEcbsIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.12')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vEeQ4IokEeSkH97cUQxLGA" name="ReasonForVisitSectionCode" constrainedElement="_Nm64UCscEeGHF88-qhhUMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vEeQ4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '29299-5' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vEgtIIokEeSkH97cUQxLGA" name="ReasonForVisitSectionCodeP" constrainedElement="_Nm64UCscEeGHF88-qhhUMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vEgtIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vEjJYIokEeSkH97cUQxLGA" name="ReasonForVisitSectionText" constrainedElement="_Nm64UCscEeGHF88-qhhUMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vEjJYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vEkXgIokEeSkH97cUQxLGA" name="ReasonForVisitSectionTitle" constrainedElement="_Nm64UCscEeGHF88-qhhUMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vEkXgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Nm7fYCscEeGHF88-qhhUMA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_OA_Q0DVyEeGaW4kr-GbV8Q" name="AnesthesiaSection">
      <ownedComment xmi:id="_dpvJsDWmEeG32vxjh5_fjg">
        <body>The Anesthesia section briefly records the type of anesthesia (e.g., general or local) and may state the actual agent used. This may or may not be a subsection of the Procedure Description section. The full details of anesthesia are usually found in a separate Anesthesia Note.</body>
      </ownedComment>
      <ownedRule xmi:id="_vE680IokEeSkH97cUQxLGA" name="AnesthesiaSectionTemplateId" constrainedElement="_OA_Q0DVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vE7j4IokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.25')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vE9ZEIokEeSkH97cUQxLGA" name="AnesthesiaSectionCode" constrainedElement="_OA_Q0DVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vE9ZEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '59774-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vE_OQIokEeSkH97cUQxLGA" name="AnesthesiaSectionCodeP" constrainedElement="_OA_Q0DVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vE_OQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vFBDcIokEeSkH97cUQxLGA" name="AnesthesiaSectionText" constrainedElement="_OA_Q0DVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vFBqgIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vFC4oIokEeSkH97cUQxLGA" name="AnesthesiaSectionTitle" constrainedElement="_OA_Q0DVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vFC4oYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vIBUIIokEeSkH97cUQxLGA" name="AnesthesiaSectionProcedureActivityProcedure" constrainedElement="_OA_Q0DVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vIB7MIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.procedure.oclIsUndefined() and entry.procedure.oclIsKindOf(consol::ProcedureActivityProcedure))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vIDwYIokEeSkH97cUQxLGA" name="AnesthesiaSectionMedicationActivity" constrainedElement="_OA_Q0DVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vIDwYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.substanceAdministration.oclIsUndefined() and entry.substanceAdministration.oclIsKindOf(consol::MedicationActivity))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_OA_Q0TVyEeGaW4kr-GbV8Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_vICiQIokEeSkH97cUQxLGA" name="getProcedureActivityProcedures" bodyCondition="_vIDJUYokEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vIDJUYokEeSkH97cUQxLGA" name="body" constrainedElement="_vICiQIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vIDJUookEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getProcedures()->select(procedure : cda::Procedure | not procedure.oclIsUndefined() and procedure.oclIsKindOf(consol::ProcedureActivityProcedure)).oclAsType(consol::ProcedureActivityProcedure)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vICiQYokEeSkH97cUQxLGA" type="_2OG58RSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vIDJUIokEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vIE-gIokEeSkH97cUQxLGA" name="getMedicationActivities" bodyCondition="_vIE-g4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vIE-g4okEeSkH97cUQxLGA" name="body" constrainedElement="_vIE-gIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vIE-hIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(consol::MedicationActivity)).oclAsType(consol::MedicationActivity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vIE-gYokEeSkH97cUQxLGA" type="_2GHbgBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vIE-gookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_R1OXcDVyEeGaW4kr-GbV8Q" name="ComplicationsSection">
      <ownedComment xmi:id="_zxyf4FjaEeGRqYkwoeymcA">
        <body>The Complications section records problems that occurred during the procedure or other activity. The complications may have been known risks or unanticipated problems.</body>
      </ownedComment>
      <ownedRule xmi:id="_vFEGwIokEeSkH97cUQxLGA" name="ComplicationsSectionTemplateId" constrainedElement="_R1OXcDVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vFEGwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.37')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vFGjAIokEeSkH97cUQxLGA" name="ComplicationsSectionCode" constrainedElement="_R1OXcDVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vFGjAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '55109-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vFIYMIokEeSkH97cUQxLGA" name="ComplicationsSectionCodeP" constrainedElement="_R1OXcDVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vFIYMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vFK0cIokEeSkH97cUQxLGA" name="ComplicationsSectionTitle" constrainedElement="_R1OXcDVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vFK0cYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vFMpoIokEeSkH97cUQxLGA" name="ComplicationsSectionText" constrainedElement="_R1OXcDVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vFMpoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vRKCAIokEeSkH97cUQxLGA" name="ComplicationsSectionProblemObservation" constrainedElement="_R1OXcDVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vRKCAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::ProblemObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_R1OXcTVyEeGaW4kr-GbV8Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_vRLQIIokEeSkH97cUQxLGA" name="getProblemObservations" bodyCondition="_vRLQI4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vRLQI4okEeSkH97cUQxLGA" name="body" constrainedElement="_vRLQIIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vRLQJIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProblemObservation)).oclAsType(consol::ProblemObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vRLQIYokEeSkH97cUQxLGA" type="_5Ha7ABUyEeGbmN_W114JUw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vRLQIookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_WPTWEDVyEeGaW4kr-GbV8Q" name="DICOMObjectCatalogSection">
      <ownedComment xmi:id="_K--R4Eb4EeGp67IkyTw1fg">
        <body>DICOM Object Catalog lists all referenced objects and their parent Series and Studies, plus other DICOM attributes required for retrieving the objects.&#xD;
DICOM Object Catalog sections are not intended for viewing and contain empty section text.</body>
      </ownedComment>
      <ownedRule xmi:id="_vFNQsIokEeSkH97cUQxLGA" name="DICOMObjectCatalogSectionTemplateId" constrainedElement="_WPTWEDVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vFN3wIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.6.1.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vFPs8IokEeSkH97cUQxLGA" name="DICOMObjectCatalogSectionCode" constrainedElement="_WPTWEDVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vFPs8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '121181' and value.codeSystem = '1.2.840.10008.2.16.4')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vFSJMIokEeSkH97cUQxLGA" name="DICOMObjectCatalogSectionCodeP" constrainedElement="_WPTWEDVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vFSJMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vQ6xcIokEeSkH97cUQxLGA" name="DICOMObjectCatalogSectionStudyAct" constrainedElement="_WPTWEDVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vQ6xcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::StudyAct))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_WPTWETVyEeGaW4kr-GbV8Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_vQ7_kIokEeSkH97cUQxLGA" name="getStudyActs" bodyCondition="_vQ8moIokEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vQ8moIokEeSkH97cUQxLGA" name="body" constrainedElement="_vQ7_kIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vQ8moYokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::StudyAct)).oclAsType(consol::StudyAct)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vQ7_kYokEeSkH97cUQxLGA" type="_vjf-wEb4EeGp67IkyTw1fg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vQ7_kookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_ZcC-4DVyEeGaW4kr-GbV8Q" name="FindingsSection">
      <ownedRule xmi:id="_vFT-YIokEeSkH97cUQxLGA" name="FindingsSectionTemplateId" constrainedElement="_ZcC-4DVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vFT-YYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.6.1.2')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_ZcC-4TVyEeGaW4kr-GbV8Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_eKFbUDVyEeGaW4kr-GbV8Q" name="HospitalConsultationsSection">
      <ownedComment xmi:id="_dFR2MEE1EeGdmoWy_aLP0Q">
        <body>The Hospital Consultations section records consultations that occurred during the admission.</body>
      </ownedComment>
      <ownedRule xmi:id="_vFVMgIokEeSkH97cUQxLGA" name="HospitalConsultationsSectionTemplateId" constrainedElement="_eKFbUDVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vFVzkIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.42')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vFYP0IokEeSkH97cUQxLGA" name="HospitalConsultationsSectionCode" constrainedElement="_eKFbUDVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vFYP0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '18841-7' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vFasEIokEeSkH97cUQxLGA" name="HospitalConsultationsSectionCodeP" constrainedElement="_eKFbUDVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vFasEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vFchQIokEeSkH97cUQxLGA" name="HospitalConsultationsSectionText" constrainedElement="_eKFbUDVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vFchQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vFeWcIokEeSkH97cUQxLGA" name="HospitalConsultationsSectionTitle" constrainedElement="_eKFbUDVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vFeWcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_eKFbUTVyEeGaW4kr-GbV8Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_hqzJADVyEeGaW4kr-GbV8Q" name="InterventionsSection">
      <ownedComment xmi:id="_qZ68EEE1EeGdmoWy_aLP0Q">
        <body>The Interventions section contains information about the specific interventions provided during the healthcare visit. Depending on the type of intervention(s) provided (procedural, education, application of assistive equipment, etc.), the details will vary but may include specification of frequency, intensity, and duration.</body>
      </ownedComment>
      <ownedRule xmi:id="_vFfkkIokEeSkH97cUQxLGA" name="InterventionsSectionTemplateId" constrainedElement="_hqzJADVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vFfkkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.21.2.3')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vFhZwIokEeSkH97cUQxLGA" name="InterventionsSectionCode" constrainedElement="_hqzJADVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vFhZwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '62387-6' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vFj2AIokEeSkH97cUQxLGA" name="InterventionsSectionCodeP" constrainedElement="_hqzJADVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vFj2AYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vFlrMIokEeSkH97cUQxLGA" name="InterventionsSectionText" constrainedElement="_hqzJADVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vFlrMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vFm5UIokEeSkH97cUQxLGA" name="InterventionsSectionTitle" constrainedElement="_hqzJADVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vFm5UYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_hqzJATVyEeGaW4kr-GbV8Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_mEIgwDVyEeGaW4kr-GbV8Q" name="MedicalHistorySection">
      <ownedComment xmi:id="_eDJXMEE2EeGdmoWy_aLP0Q">
        <body>The Medical History section describes all aspects of the medical history of the patient even if not pertinent to the current procedure, and may include chief complaint, past medical history, social history, family history, surgical or procedure history, medication history, and other history information. The history may be limited to information pertinent to the current procedure or may be more comprehensive. The history may be reported as a collection of random clinical statements or it may be reported categorically. Categorical report formats may be divided into multiple subsections including Past Medical History, Social History.</body>
      </ownedComment>
      <ownedRule xmi:id="_vFoHcIokEeSkH97cUQxLGA" name="MedicalHistorySectionTemplateId" constrainedElement="_mEIgwDVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vFougIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.39')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vFqjsIokEeSkH97cUQxLGA" name="MedicalHistorySectionCode" constrainedElement="_mEIgwDVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vFqjsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '11329-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vFsY4IokEeSkH97cUQxLGA" name="MedicalHistorySectionCodeP" constrainedElement="_mEIgwDVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vFsY4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vFuOEIokEeSkH97cUQxLGA" name="MedicalHistorySectionText" constrainedElement="_mEIgwDVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vFuOEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vFwDQIokEeSkH97cUQxLGA" name="MedicalHistorySectionTitle" constrainedElement="_mEIgwDVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vFwDQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_mEIgwTVyEeGaW4kr-GbV8Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_rNJpADVyEeGaW4kr-GbV8Q" name="ObjectiveSection">
      <ownedComment xmi:id="_mHeaAEE2EeGdmoWy_aLP0Q">
        <body>The Objective section contains data about the patient gathered through tests, measures, or observations that produce a quantified or categorized result. It includes important and relevant positive and negative test results, physical findings, review of systems, and other measurements and observations.</body>
      </ownedComment>
      <ownedRule xmi:id="_vFxRYIokEeSkH97cUQxLGA" name="ObjectiveSectionTemplateId" constrainedElement="_rNJpADVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vFxRYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.21.2.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vFzGkIokEeSkH97cUQxLGA" name="ObjectiveSectionCode" constrainedElement="_rNJpADVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vFzGkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '61149-1' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vF1i0IokEeSkH97cUQxLGA" name="ObjectiveSectionCodeP" constrainedElement="_rNJpADVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vF1i0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vF3YAIokEeSkH97cUQxLGA" name="ObjectiveSectionText" constrainedElement="_rNJpADVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vF3YAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vF4mIIokEeSkH97cUQxLGA" name="ObjectiveSectionTitle" constrainedElement="_rNJpADVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vF4mIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_rNJpATVyEeGaW4kr-GbV8Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_vHfXoDVyEeGaW4kr-GbV8Q" name="OperativeNoteFluidSection">
      <ownedComment xmi:id="_UgHj8FmvEeGRqYkwoeymcA">
        <body>The Operative Note Fluids section may be used to record fluids administered during the surgical procedure.</body>
      </ownedComment>
      <ownedRule xmi:id="_vF50QIokEeSkH97cUQxLGA" name="OperativeNoteFluidSectionTemplateId" constrainedElement="_vHfXoDVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vF6bUIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.7.12')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vF8QgIokEeSkH97cUQxLGA" name="OperativeNoteFluidSectionCode" constrainedElement="_vHfXoDVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vF8QgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '10216-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vF-swIokEeSkH97cUQxLGA" name="OperativeNoteFluidSectionCodeP" constrainedElement="_vHfXoDVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vF-swYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vGAh8IokEeSkH97cUQxLGA" name="OperativeNoteFluidSectionText" constrainedElement="_vHfXoDVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vGAh8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vGBwEIokEeSkH97cUQxLGA" name="OperativeNoteFluidSectionTitle" constrainedElement="_vHfXoDVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vGBwEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_vHfXoTVyEeGaW4kr-GbV8Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_zel6wDVyEeGaW4kr-GbV8Q" name="OperativeNoteSurgicalProcedureSection">
      <ownedComment xmi:id="_rxk2EEE2EeGdmoWy_aLP0Q">
        <body>The Operative Note Surgical Procedure section can be used to restate the procedures performed if appropriate for an enterprise workflow.  The procedure(s) performed associated with the Operative Note are formally modeled in the header using serviceEvent.</body>
      </ownedComment>
      <ownedRule xmi:id="_vGDlQIokEeSkH97cUQxLGA" name="OperativeNoteSurgicalProcedureSectionTemplateId" constrainedElement="_zel6wDVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vGDlQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.7.14')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vGFacIokEeSkH97cUQxLGA" name="OperativeNoteSurgicalProcedureSectionCode" constrainedElement="_zel6wDVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vGFacYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '10223-6' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vGH2sIokEeSkH97cUQxLGA" name="OperativeNoteSurgicalProcedureSectionCodeP" constrainedElement="_zel6wDVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vGH2sYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vGJr4IokEeSkH97cUQxLGA" name="OperativeNoteSurgicalProcedureSectionText" constrainedElement="_zel6wDVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vGJr4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vGLhEIokEeSkH97cUQxLGA" name="OperativeNoteSurgicalProcedureSectionTitle" constrainedElement="_zel6wDVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vGLhEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_zel6wTVyEeGaW4kr-GbV8Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_3b6E4DVyEeGaW4kr-GbV8Q" name="PlannedProcedureSection">
      <ownedComment xmi:id="_vw-q4EE2EeGdmoWy_aLP0Q">
        <body>The Planned Procedure section records the procedure(s) that a clinician thought would need to be done based on the preoperative assessment. It may be important to record the procedure(s) that were originally planned for, consented to, and perhaps pre-approved by the payor, particularly if different from the actual procedure(s) and procedure details, to provide evidence to various stakeholders that the providers are aware of the discrepancy and the justification can be found in the procedure details.</body>
      </ownedComment>
      <ownedRule xmi:id="_vGMvMIokEeSkH97cUQxLGA" name="PlannedProcedureSectionTemplateId" constrainedElement="_3b6E4DVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vGMvMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.30')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vGOkYIokEeSkH97cUQxLGA" name="PlannedProcedureSectionCode" constrainedElement="_3b6E4DVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vGOkYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '59772-4' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vGQZkIokEeSkH97cUQxLGA" name="PlannedProcedureSectionCodeP" constrainedElement="_3b6E4DVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vGQZkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vGS10IokEeSkH97cUQxLGA" name="PlannedProcedureSectionText" constrainedElement="_3b6E4DVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vGS10YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vGUD8IokEeSkH97cUQxLGA" name="PlannedProcedureSectionTitle" constrainedElement="_3b6E4DVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vGUD8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vMztgIokEeSkH97cUQxLGA" name="PlannedProcedureSectionPlanOfCareActivityProcedure" constrainedElement="_3b6E4DVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vMztgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.procedure.oclIsUndefined() and entry.procedure.oclIsKindOf(consol::PlanOfCareActivityProcedure))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_3b6E4TVyEeGaW4kr-GbV8Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_vM0UkIokEeSkH97cUQxLGA" name="getPlanOfCareActivityProcedures" bodyCondition="_vM07oYokEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vM07oYokEeSkH97cUQxLGA" name="body" constrainedElement="_vM0UkIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vM07oookEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getProcedures()->select(procedure : cda::Procedure | not procedure.oclIsUndefined() and procedure.oclIsKindOf(consol::PlanOfCareActivityProcedure)).oclAsType(consol::PlanOfCareActivityProcedure)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vM0UkYokEeSkH97cUQxLGA" type="_2NiSKhSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vM07oIokEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_7UA-4DVyEeGaW4kr-GbV8Q" name="PostoperativeDiagnosisSection">
      <ownedComment xmi:id="_0An7IEE2EeGdmoWy_aLP0Q">
        <body>The Postoperative Diagnosis section records the diagnosis or diagnoses discovered or confirmed during the surgery. Often it is the same as the preoperative diagnosis.</body>
      </ownedComment>
      <ownedRule xmi:id="_vGVSEIokEeSkH97cUQxLGA" name="PostoperativeDiagnosisSectionTemplateId" constrainedElement="_7UA-4DVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vGV5IIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.35')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vGXHQIokEeSkH97cUQxLGA" name="PostoperativeDiagnosisSectionCode" constrainedElement="_7UA-4DVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vGXHQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '10218-6' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vGZjgIokEeSkH97cUQxLGA" name="PostoperativeDiagnosisSectionCodeP" constrainedElement="_7UA-4DVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vGZjgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vGb_wIokEeSkH97cUQxLGA" name="PostoperativeDiagnosisSectionText" constrainedElement="_7UA-4DVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vGb_wYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vGdN4IokEeSkH97cUQxLGA" name="PostoperativeDiagnosisSectionTitle" constrainedElement="_7UA-4DVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vGdN4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_7UA-4TVyEeGaW4kr-GbV8Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_-jlSMDVyEeGaW4kr-GbV8Q" name="PostprocedureDiagnosisSection">
      <ownedComment xmi:id="_2BrM4EE2EeGdmoWy_aLP0Q">
        <body>The Postprocedure Diagnosis section records the diagnosis or diagnoses discovered or confirmed during the procedure. Often it is the same as the pre-procedure diagnosis or indication.</body>
      </ownedComment>
      <ownedRule xmi:id="_vGecAIokEeSkH97cUQxLGA" name="PostprocedureDiagnosisSectionTemplateId" constrainedElement="_-jlSMDVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vGecAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.36')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vGgRMIokEeSkH97cUQxLGA" name="PostprocedureDiagnosisSectionCode" constrainedElement="_-jlSMDVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vGgRMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '59769-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vGitcIokEeSkH97cUQxLGA" name="PostprocedureDiagnosisSectionCodeP" constrainedElement="_-jlSMDVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vGitcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vGkioIokEeSkH97cUQxLGA" name="PostprocedureDiagnosisSectionText" constrainedElement="_-jlSMDVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vGkioYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vGlwwIokEeSkH97cUQxLGA" name="PostprocedureDiagnosisSectionTitle" constrainedElement="_-jlSMDVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vGlwwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vM83c4okEeSkH97cUQxLGA" name="PostprocedureDiagnosisSectionPostprocedureDiagnosis" constrainedElement="_-jlSMDVyEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vM83dIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::PostprocedureDiagnosis))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_-jlSMTVyEeGaW4kr-GbV8Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_vM9egIokEeSkH97cUQxLGA" name="getPostprocedureDiagnosis" bodyCondition="_vM-FkYokEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vM-FkYokEeSkH97cUQxLGA" name="body" constrainedElement="_vM9egIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vM-FkookEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::PostprocedureDiagnosis))->asSequence()->any(true).oclAsType(consol::PostprocedureDiagnosis)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vM9egYokEeSkH97cUQxLGA" type="_0fjXAEEvEeGdmoWy_aLP0Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vM-FkIokEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Cu6qMDVzEeGaW4kr-GbV8Q" name="PreoperativeDiagnosisSection">
      <ownedComment xmi:id="_4B0fsEE2EeGdmoWy_aLP0Q">
        <body>The Preoperative Diagnosis section records the surgical diagnosis or diagnoses assigned to the patient before the surgical procedure and is the reason for the surgery. The preoperative diagnosis is, in the opinion of the surgeon, the diagnosis that will be confirmed during surgery.</body>
      </ownedComment>
      <ownedRule xmi:id="_vGnl8IokEeSkH97cUQxLGA" name="PreoperativeDiagnosisSectionTemplateId" constrainedElement="_Cu6qMDVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vGnl8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.34')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vGpbIIokEeSkH97cUQxLGA" name="PreoperativeDiagnosisSectionCode" constrainedElement="_Cu6qMDVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vGpbIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '10219-4' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vGr3YIokEeSkH97cUQxLGA" name="PreoperativeDiagnosisSectionCodeP" constrainedElement="_Cu6qMDVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vGr3YYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vGtskIokEeSkH97cUQxLGA" name="PreoperativeDiagnosisSectionText" constrainedElement="_Cu6qMDVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vGtskYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vGu6sIokEeSkH97cUQxLGA" name="PreoperativeDiagnosisSectionTitle" constrainedElement="_Cu6qMDVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vGu6sYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vROTcIokEeSkH97cUQxLGA" name="PreoperativeDiagnosisSectionPreoperativeDiagnosis" constrainedElement="_Cu6qMDVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vROTcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::PreoperativeDiagnosis))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Cu6qMTVzEeGaW4kr-GbV8Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_vRO6gIokEeSkH97cUQxLGA" name="getPreoperativeDiagnosis" bodyCondition="_vRO6g4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vRO6g4okEeSkH97cUQxLGA" name="body" constrainedElement="_vRO6gIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vRO6hIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::PreoperativeDiagnosis))->asSequence()->any(true).oclAsType(consol::PreoperativeDiagnosis)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vRO6gYokEeSkH97cUQxLGA" type="_0baBYEEwEeGdmoWy_aLP0Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vRO6gookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_HNUIIDVzEeGaW4kr-GbV8Q" name="ProcedureDescriptionSection">
      <ownedComment xmi:id="_Fyfh4ECVEeGELr7uj3LK_Q">
        <body>The Procedure Description section records the particulars of the procedure and may include procedure site preparation, surgical site preparation, pertinent details related to sedation/anesthesia, pertinent details related to measurements and markings, procedure times, medications administered, estimated blood loss, specimens removed, implants, instrumentation, sponge counts, tissue manipulation, wound closure, sutures used, vital signs and other monitoring data. Local practice often identifies the level and type of detail required based on the procedure or specialty.</body>
      </ownedComment>
      <ownedRule xmi:id="_vGwI0IokEeSkH97cUQxLGA" name="ProcedureDescriptionSectionTemplateId" constrainedElement="_HNUIIDVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vGwv4IokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.27')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vGx-AIokEeSkH97cUQxLGA" name="ProcedureDescriptionSectionCode" constrainedElement="_HNUIIDVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vGx-AYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '29554-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vG0aQIokEeSkH97cUQxLGA" name="ProcedureDescriptionSectionCodeP" constrainedElement="_HNUIIDVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vG0aQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vG2PcIokEeSkH97cUQxLGA" name="ProcedureDescriptionSectionText" constrainedElement="_HNUIIDVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vG2PcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vG4EoIokEeSkH97cUQxLGA" name="ProcedureDescriptionSectionTitle" constrainedElement="_HNUIIDVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vG4EoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_HNUIITVzEeGaW4kr-GbV8Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_QhXGYDVzEeGaW4kr-GbV8Q" name="ProcedureDispositionSection">
      <ownedComment xmi:id="_ZwQ34ECVEeGELr7uj3LK_Q">
        <body>The Procedure Disposition section records the status and condition of the patient at the completion of the procedure or surgery.  It often also states where the patent was transferred to for the next level of care.</body>
      </ownedComment>
      <ownedRule xmi:id="_vG5SwIokEeSkH97cUQxLGA" name="ProcedureDispositionSectionTemplateId" constrainedElement="_QhXGYDVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vG5SwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.18.2.12')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vG7H8IokEeSkH97cUQxLGA" name="ProcedureDispositionSectionCode" constrainedElement="_QhXGYDVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vG7H8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '59775-7' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vG9kMIokEeSkH97cUQxLGA" name="ProcedureDispositionSectionCodeP" constrainedElement="_QhXGYDVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vG9kMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vG_ZYIokEeSkH97cUQxLGA" name="ProcedureDispositionSectionText" constrainedElement="_QhXGYDVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vG_ZYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vHAngIokEeSkH97cUQxLGA" name="ProcedureDispositionSectionTitle" constrainedElement="_QhXGYDVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vHAngYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_QhXGYTVzEeGaW4kr-GbV8Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_TvcL8DVzEeGaW4kr-GbV8Q" name="ProcedureEstimatedBloodLossSection">
      <ownedComment xmi:id="_BuKCIEE3EeGdmoWy_aLP0Q">
        <body>The Estimated Blood Loss section may be a subsection of another section such as the Procedure Description section. The Estimated Blood Loss section records the approximate amount of blood that the patient lost during the procedure or surgery. It may be an accurate quantitative amount, e.g., 250 milliliters, or it may be descriptive, e.g., &quot;minimal&quot; or &quot;none&quot;.</body>
      </ownedComment>
      <ownedRule xmi:id="_vHB1oIokEeSkH97cUQxLGA" name="ProcedureEstimatedBloodLossSectionTemplateId" constrainedElement="_TvcL8DVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vHCcsIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.18.2.9')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vHER4IokEeSkH97cUQxLGA" name="ProcedureEstimatedBloodLossSectionCode" constrainedElement="_TvcL8DVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vHER4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '59770-8' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vHGuIIokEeSkH97cUQxLGA" name="ProcedureEstimatedBloodLossSectionCodeP" constrainedElement="_TvcL8DVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vHGuIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vHIjUIokEeSkH97cUQxLGA" name="ProcedureEstimatedBloodLossSectionText" constrainedElement="_TvcL8DVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vHIjUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vHJxcIokEeSkH97cUQxLGA" name="ProcedureEstimatedBloodLossSectionTitle" constrainedElement="_TvcL8DVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vHJxcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_TvcL8TVzEeGaW4kr-GbV8Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_W4UBYDVzEeGaW4kr-GbV8Q" name="ProcedureFindingsSection">
      <ownedComment xmi:id="_EXSAgEE3EeGdmoWy_aLP0Q">
        <body>The Procedure Findings section records clinically significant observations confirmed or discovered during the procedure or surgery.</body>
      </ownedComment>
      <ownedRule xmi:id="_vHK_kIokEeSkH97cUQxLGA" name="ProcedureFindingsSectionTemplateId" constrainedElement="_W4UBYDVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vHLmoIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.28')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vHNb0IokEeSkH97cUQxLGA" name="ProcedureFindingsSectionCode" constrainedElement="_W4UBYDVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vHNb0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '59776-5' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vHPRAIokEeSkH97cUQxLGA" name="ProcedureFindingsSectionCodeP" constrainedElement="_W4UBYDVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vHPRAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vHRGMIokEeSkH97cUQxLGA" name="ProcedureFindingsSectionText" constrainedElement="_W4UBYDVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vHRGMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vHS7YIokEeSkH97cUQxLGA" name="ProcedureFindingsSectionTitle" constrainedElement="_W4UBYDVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vHS7YYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vNGocIokEeSkH97cUQxLGA" name="ProcedureFindingsSectionProblemObservation" constrainedElement="_W4UBYDVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vNGocYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::ProblemObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_W4UBYTVzEeGaW4kr-GbV8Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_vNHPgIokEeSkH97cUQxLGA" name="getProblemObservations" bodyCondition="_vNHPg4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vNHPg4okEeSkH97cUQxLGA" name="body" constrainedElement="_vNHPgIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vNHPhIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProblemObservation)).oclAsType(consol::ProblemObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vNHPgYokEeSkH97cUQxLGA" type="_5Ha7ABUyEeGbmN_W114JUw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vNHPgookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Z662wDVzEeGaW4kr-GbV8Q" name="ProcedureImplantsSection">
      <ownedComment xmi:id="_F3ZIYEE3EeGdmoWy_aLP0Q">
        <body>The Procedure Implants section records any materials placed during the procedure including stents, tubes, and drains.</body>
      </ownedComment>
      <ownedRule xmi:id="_vHUJgIokEeSkH97cUQxLGA" name="ProcedureImplantsSectionTemplateId" constrainedElement="_Z662wDVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vHUJgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.40')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vHWlwIokEeSkH97cUQxLGA" name="ProcedureImplantsSectionCode" constrainedElement="_Z662wDVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vHWlwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '59771-6' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vHZCAIokEeSkH97cUQxLGA" name="ProcedureImplantsSectionCodeP" constrainedElement="_Z662wDVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vHZCAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vHa3MIokEeSkH97cUQxLGA" name="ProcedureImplantsSectionText" constrainedElement="_Z662wDVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vHa3MYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vHcFUIokEeSkH97cUQxLGA" name="ProcedureImplantsSectionTitle" constrainedElement="_Z662wDVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vHcFUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Z662wTVzEeGaW4kr-GbV8Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_cjmJMDVzEeGaW4kr-GbV8Q" name="ProcedureIndicationsSection">
      <ownedComment xmi:id="_ukS8sEEzEeGdmoWy_aLP0Q">
        <body>The Procedure Indications section records details about the reason for the procedure or surgery. This section may include the pre-procedure diagnosis or diagnoses as well as one or more symptoms that contribute to the reason the procedure is being performed.</body>
      </ownedComment>
      <ownedRule xmi:id="_vHdTcIokEeSkH97cUQxLGA" name="ProcedureIndicationsSectionTemplateId" constrainedElement="_cjmJMDVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vHd6gIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.29')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vHfvsIokEeSkH97cUQxLGA" name="ProcedureIndicationsSectionCode" constrainedElement="_cjmJMDVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vHfvsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '59768-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vHhk4IokEeSkH97cUQxLGA" name="ProcedureIndicationsSectionCodeP" constrainedElement="_cjmJMDVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vHhk4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vHkBIIokEeSkH97cUQxLGA" name="ProcedureIndicationsSectionText" constrainedElement="_cjmJMDVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vHkBIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vHlPQIokEeSkH97cUQxLGA" name="ProcedureIndicationsSectionTitle" constrainedElement="_cjmJMDVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vHlPQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vNH2kIokEeSkH97cUQxLGA" name="ProcedureIndicationsSectionIndication" constrainedElement="_cjmJMDVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vNH2kYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::Indication))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_cjv6MDVzEeGaW4kr-GbV8Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_vNIdoIokEeSkH97cUQxLGA" name="getIndications" bodyCondition="_vNJEsYokEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vNJEsYokEeSkH97cUQxLGA" name="body" constrainedElement="_vNIdoIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vNJEsookEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::Indication)).oclAsType(consol::Indication)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vNIdoYokEeSkH97cUQxLGA" type="_sHrUoBUSEeG6PvUxSTZnaw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vNJEsIokEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_gSUdsDVzEeGaW4kr-GbV8Q" name="ProcedureSpecimensTakenSection">
      <ownedComment xmi:id="_2NpTsEEzEeGdmoWy_aLP0Q">
        <body>The Procedure Specimens Taken section records the tissues, objects, or samples taken from the patient during the procedure including biopsies, aspiration fluid, or other samples sent for pathological analysis. The narrative may include a description of the specimens.</body>
      </ownedComment>
      <ownedRule xmi:id="_vHmdYIokEeSkH97cUQxLGA" name="ProcedureSpecimensTakenSectionTemplateId" constrainedElement="_gSUdsDVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vHmdYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.31')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vHqHwIokEeSkH97cUQxLGA" name="ProcedureSpecimensTakenSectionCode" constrainedElement="_gSUdsDVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vHqHwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '59773-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vHtyIIokEeSkH97cUQxLGA" name="ProcedureSpecimensTakenSectionCodeP" constrainedElement="_gSUdsDVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vHtyIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vHw1cIokEeSkH97cUQxLGA" name="ProcedureSpecimensTakenSectionText" constrainedElement="_gSUdsDVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vHw1cYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vHyqoIokEeSkH97cUQxLGA" name="ProcedureSpecimensTakenSectionTitle" constrainedElement="_gSUdsDVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vHyqoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_gSUdsTVzEeGaW4kr-GbV8Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_iy8nYDVzEeGaW4kr-GbV8Q" name="SubjectiveSection">
      <ownedComment xmi:id="_P7H3IEE3EeGdmoWy_aLP0Q">
        <body>The Subjective section describes in a narrative format the patient's current condition and/or interval changes as reported by the patient or by the patient's guardian or another informant.</body>
      </ownedComment>
      <ownedRule xmi:id="_vH1G4IokEeSkH97cUQxLGA" name="SubjectiveSectionTemplateId" constrainedElement="_iy8nYDVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vH1G4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.21.2.2')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vH3jIIokEeSkH97cUQxLGA" name="SubjectiveSectionCode" constrainedElement="_iy8nYDVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vH3jIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '61150-9' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vH7NgIokEeSkH97cUQxLGA" name="SubjectiveSectionCodeP" constrainedElement="_iy8nYDVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vH7NgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vH9pwIokEeSkH97cUQxLGA" name="SubjectiveSectionText" constrainedElement="_iy8nYDVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vH9pwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vH_e8IokEeSkH97cUQxLGA" name="SubjectiveSectionTitle" constrainedElement="_iy8nYDVzEeGaW4kr-GbV8Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vH_e8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_iy8nYTVzEeGaW4kr-GbV8Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_R-vIoDssEeGvzMYhXuqAEA" name="ConsultationNote">
      <ownedComment xmi:id="_OaB2UDstEeGvzMYhXuqAEA">
        <body>For the purpose of this Implementation Guide, a consultation visit is defined by the evaluation and management guidelines for a consultation established by the Centers for Medicare and Medicaid Services (CMS). According to those guidelines, a Consultation Note must be generated as a result of a physician or nonphysician practitioner's (NPP) request for an opinion or advice from another physician or NPP. Consultations must involve face-to-face time with the patient or fall under guidelines for telemedicine visits. &#xD;
A Consultation Note must be provided to the referring physician or NPP and must include the reason for the referral, history of present illness, physical examination, and decision-making component (Assessment and Plan). &#xD;
An NPP is defined as any licensed medical professional as recognized by the state in which the professional practices, including, but not limited to, physician assistants, nurse practitioners, clinical nurse specialists, social workers, registered dietitians, physical therapists, and speech therapists.&#xD;
Reports on visits requested by a patient, family member, or other third party are not covered by this specification. Second opinions, sometimes called &quot;confirmatory consultations,&quot; also are not covered here. Any question on use of the Consultation Note defined here should be resolved by reference to CMS or American Medical Association (AMA) guidelines.</body>
      </ownedComment>
      <ownedRule xmi:id="_8h6-oGjGEeGNoZ3kEkcY2A" name="ConsultationNoteHasAnAssementAndPlanSectionOrIndividualAssementAndPlanSections" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_8h6-oWjGEeGNoZ3kEkcY2A">
          <language>OCL</language>
          <body>(self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfCareSection)) and  self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentSection))) xor self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentAndPlanSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_90KpoGjGEeGNoZ3kEkcY2A" name="ConsultationNoteDoesNotHaveIndividualAssementAndPlanSectionsWhenAssementAndPlanSectionPresent" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_90KpoWjGEeGNoZ3kEkcY2A">
          <language>OCL</language>
          <body>(self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfCareSection)) or  self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentSection))) xor self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentAndPlanSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_AUOyoGjHEeGNoZ3kEkcY2A" name="ConsultationNoteDoesNotHaveChiefComplaintAndReasonForVisitWithChiefComplaintSectionOrReasonSection" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AUOyoWjHEeGNoZ3kEkcY2A">
          <language>OCL</language>
          <body>(self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection)) or  self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))) xor self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ZNLmgPKuEeGFUPBL8qS7yQ" name="ConsultationNoteHasReasonForReferralOrReasonForVisit" constrainedElement="_8h6-oGjGEeGNoZ3kEkcY2A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pqV8gPKuEeGFUPBL8qS7yQ">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForReferralSection)) xor self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vIGMoIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsTemplateId" constrainedElement="_R-vIoDssEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vIGMoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.1.4')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vIQksIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsCodeP" constrainedElement="_R-vIoDssEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vIQksYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vIM6UIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsCode" constrainedElement="_R-vIoDssEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vIM6UYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = '11488-4' or value.code = '34100-8' or value.code = '34104-0' or value.code = '51845-6' or value.code = '51853-0' or value.code = '51846-4' or value.code = '34101-6' or value.code = '34749-2' or value.code = '34102-4' or value.code = '34099-2' or value.code = '34756-7' or value.code = '34758-3' or value.code = '34760-9' or value.code = '34879-7' or value.code = '34761-7' or value.code = '34764-1' or value.code = '34771-6' or value.code = '34776-5' or value.code = '34777-3' or value.code = '34779-9' or value.code = '34781-5' or value.code = '34783-1' or value.code = '34785-6' or value.code = '34795-5' or value.code = '34797-1' or value.code = '34798-9' or value.code = '34800-3' or value.code = '34803-7' or value.code = '34855-7' or value.code = '34805-2' or value.code = '34807-8' or value.code = '34810-2' or value.code = '34812-8' or value.code = '34814-4' or value.code = '34816-9' or value.code = '34820-1' or value.code = '34822-7' or value.code = '34824-3' or value.code = '34826-8' or value.code = '34828-4' or value.code = '34788-0' or value.code = '34791-4' or value.code = '34103-2' or value.code = '34831-8' or value.code = '34833-4' or value.code = '34835-9' or value.code = '34837-5' or value.code = '34839-1' or value.code = '34841-7' or value.code = '34845-8' or value.code = '34847-4' or value.code = '34849-0' or value.code = '34851-6' or value.code = '34853-2'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vIi4kIokEeSkH97cUQxLGA" name="ConsultationNoteComponentOf" constrainedElement="_R-vIoDssEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vIi4kYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->one(componentOf : cda::Component1 | not componentOf.oclIsUndefined() and componentOf.oclIsKindOf(cda::Component1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vImi8IokEeSkH97cUQxLGA" name="ConsultationNoteAssessmentSection" constrainedElement="_R-vIoDssEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vImi8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vInxEIokEeSkH97cUQxLGA" name="ConsultationNoteAssessmentAndPlanSection" constrainedElement="_R-vIoDssEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vInxEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentAndPlanSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vIxiEIokEeSkH97cUQxLGA" name="ConsultationNotePlanOfCareSection" constrainedElement="_R-vIoDssEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vIxiEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfCareSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vIzXQIokEeSkH97cUQxLGA" name="ConsultationNoteHistoryOfPresentIllness" constrainedElement="_R-vIoDssEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vIzXQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HistoryOfPresentIllnessSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vI1zgIokEeSkH97cUQxLGA" name="ConsultationNotePhysicalExamSection" constrainedElement="_R-vIoDssEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vI1zgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PhysicalExamSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vI3osIokEeSkH97cUQxLGA" name="ConsultationNoteReasonForReferralSection" constrainedElement="_R-vIoDssEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vI3osYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForReferralSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vI6sAIokEeSkH97cUQxLGA" name="ConsultationNoteReasonForVisitSection" constrainedElement="_R-vIoDssEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vI6sAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vI8hMIokEeSkH97cUQxLGA" name="ConsultationNoteAllergiesSection" constrainedElement="_R-vIoDssEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vI8hMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSectionEntriesOptional))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vI9vVYokEeSkH97cUQxLGA" name="ConsultationNoteChiefComplaintSection" constrainedElement="_R-vIoDssEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vI9vVookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vI-9dYokEeSkH97cUQxLGA" name="ConsultationNoteChiefComplaintAndReasonForVisitSection" constrainedElement="_R-vIoDssEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vI-9dookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vJALlYokEeSkH97cUQxLGA" name="ConsultationNoteFamilyHistorySection" constrainedElement="_R-vIoDssEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vJALlookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::FamilyHistorySection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vJBZtYokEeSkH97cUQxLGA" name="ConsultationNoteGeneralStatusSection" constrainedElement="_R-vIoDssEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vJBZtookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::GeneralStatusSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vJCn1IokEeSkH97cUQxLGA" name="ConsultationNoteHistoryOfPastIllnessSection" constrainedElement="_R-vIoDssEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vJCn1YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HistoryOfPastIllnessSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vJEdAIokEeSkH97cUQxLGA" name="ConsultationNoteImmunizationsSection" constrainedElement="_R-vIoDssEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vJEdAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ImmunizationsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vJFrIIokEeSkH97cUQxLGA" name="ConsultationNoteMedicationsSectionEntriesOptional" constrainedElement="_R-vIoDssEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vJFrIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsSectionEntriesOptional))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vJG5QIokEeSkH97cUQxLGA" name="ConsultationNoteProblemSectionEntriesOptional" constrainedElement="_R-vIoDssEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vJG5QYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSectionEntriesOptional))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vJIHYIokEeSkH97cUQxLGA" name="ConsultationNoteProceduresSectionEntriesOptional" constrainedElement="_R-vIoDssEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vJIHYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSectionEntriesOptional))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vJJVgIokEeSkH97cUQxLGA" name="ConsultationNoteResultsSectionEntriesOptional" constrainedElement="_R-vIoDssEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vJJVgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ResultsSectionEntriesOptional))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vJKjoIokEeSkH97cUQxLGA" name="ConsultationNoteReviewOfSystemsSection" constrainedElement="_R-vIoDssEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vJKjoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReviewOfSystemsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vJLxwIokEeSkH97cUQxLGA" name="ConsultationNoteSocialHistorySection" constrainedElement="_R-vIoDssEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vJLxwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::SocialHistorySection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vJM_4IokEeSkH97cUQxLGA" name="ConsultationNoteVitalSignsSectionEntriesOptional" constrainedElement="_R-vIoDssEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vJM_4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSectionEntriesOptional))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vZamJYokEeSkH97cUQxLGA" name="ConsultationNoteInFulfillmentOf" constrainedElement="_R-vIoDssEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vZamJookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.inFulfillmentOf->exists(inFulfillmentOf : cda::InFulfillmentOf | not inFulfillmentOf.oclIsUndefined() and inFulfillmentOf.oclIsKindOf(cda::InFulfillmentOf))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wSs-kIokEeSkH97cUQxLGA" name="ConsultationNoteComponentOfEncompassingEncounter2ResponsiblePartyAssignedEntityHasPersonOrganizationOrBoth" constrainedElement="_R-vIoDssEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wSs-kYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null).responsibleParty->excluding(null)->reject(not assignedEntity.assignedPerson.oclIsUndefined() or not assignedEntity.representedOrganization->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wStloIokEeSkH97cUQxLGA" name="ConsultationNoteComponentOfEncompassingEncounter2ResponsiblePartyAssignedEntity" constrainedElement="_R-vIoDssEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wStloYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null).responsibleParty->excluding(null)->reject(assignedEntity->one(assignedEntity : cda::AssignedEntity | not assignedEntity.oclIsUndefined() and assignedEntity.oclIsKindOf(rim::Role)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wSuzwIokEeSkH97cUQxLGA" name="ConsultationNoteComponentOfEncompassingEncounter2EncounterParticipantAssignedEntityHasPersonOrganizationOrBoth" constrainedElement="_R-vIoDssEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wSuzwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null).encounterParticipant->excluding(null)->reject(not assignedEntity.assignedPerson.oclIsUndefined() or not assignedEntity.representedOrganization->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wSuzwookEeSkH97cUQxLGA" name="ConsultationNoteComponentOfEncompassingEncounter2EncounterParticipantAssignedEntity" constrainedElement="_R-vIoDssEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wSuzw4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null).encounterParticipant->excluding(null)->reject(assignedEntity->one(assignedEntity : cda::AssignedEntity | not assignedEntity.oclIsUndefined() and assignedEntity.oclIsKindOf(rim::Role)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wSva0IokEeSkH97cUQxLGA" name="ConsultationNoteComponentOfEncompassingEncounter2PreciseToTheDay" constrainedElement="_R-vIoDssEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wSva0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(not effectiveTime.value.oclIsUndefined() implies effectiveTime.value.size() >= 8)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wSva0ookEeSkH97cUQxLGA" name="ConsultationNoteComponentOfEncompassingEncounter2PreciseToTheMinute" constrainedElement="_R-vIoDssEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wSwB4IokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(not effectiveTime.value.oclIsUndefined() implies effectiveTime.value.size() >= 12)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wSwB4YokEeSkH97cUQxLGA" name="ConsultationNoteComponentOfEncompassingEncounter2PreciseToTheSecond" constrainedElement="_R-vIoDssEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wSwB4ookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(not effectiveTime.value.oclIsUndefined() implies effectiveTime.value.size() >= 14)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wSwo8IokEeSkH97cUQxLGA" name="ConsultationNoteComponentOfEncompassingEncounter2IfMorePreciseThanDayIncludeTimeZoneOffset" constrainedElement="_R-vIoDssEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wSwo8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(not effectiveTime.value.oclIsUndefined() and effectiveTime.value.size() > 8 implies effectiveTime.value.size() >= 15)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wSwo8ookEeSkH97cUQxLGA" name="ConsultationNoteComponentOfEncompassingEncounter2EffectiveTime" constrainedElement="_R-vIoDssEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wSwo84okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject((effectiveTime.oclIsUndefined() or effectiveTime.isNullFlavorUndefined()) implies (not effectiveTime.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wSxQAIokEeSkH97cUQxLGA" name="ConsultationNoteComponentOfEncompassingEncounter2Id" constrainedElement="_R-vIoDssEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wSxQAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (id->size() = 1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wSx3EIokEeSkH97cUQxLGA" name="ConsultationNoteComponentOfEncompassingEncounter2ResponsibleParty" constrainedElement="_R-vIoDssEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wSx3EYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(responsibleParty->one(responsibleParty : cda::ResponsibleParty | not responsibleParty.oclIsUndefined() and responsibleParty.oclIsKindOf(cda::ResponsibleParty)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wSx3EookEeSkH97cUQxLGA" name="ConsultationNoteComponentOfEncompassingEncounter2EncounterParticipant" constrainedElement="_R-vIoDssEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wSx3E4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(encounterParticipant->exists(encounterParticipant : cda::EncounterParticipant | not encounterParticipant.oclIsUndefined() and encounterParticipant.oclIsKindOf(cda::EncounterParticipant)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wSyeIIokEeSkH97cUQxLGA" name="ConsultationNoteComponentOfEncompassingEncounter" constrainedElement="_R-vIoDssEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wSyeIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null)->reject(encompassingEncounter->one(encompassingEncounter : cda::EncompassingEncounter | not encompassingEncounter.oclIsUndefined() and encompassingEncounter.oclIsKindOf(cda::EncompassingEncounter)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wS0TUIokEeSkH97cUQxLGA" name="ConsultationNoteInFulfillmentOfOrderId" constrainedElement="_R-vIoDssEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wS0TUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.inFulfillmentOf->excluding(null).order->excluding(null)->reject((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wS06YIokEeSkH97cUQxLGA" name="ConsultationNoteInFulfillmentOfOrder" constrainedElement="_R-vIoDssEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wS06YYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.inFulfillmentOf->excluding(null)->reject(order->one(order : cda::Order | not order.oclIsUndefined() and order.oclIsKindOf(cda::Order)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_R_oggDssEeGvzMYhXuqAEA" general="_2DNRcBSVEeGGzu7fmW9pXw"/>
      <ownedOperation xmi:id="_vInKAIokEeSkH97cUQxLGA" name="getAssessmentSection" bodyCondition="_vInKA4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vInKA4okEeSkH97cUQxLGA" name="body" constrainedElement="_vInKAIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vInKBIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentSection))->asSequence()->any(true).oclAsType(consol::AssessmentSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vInKAYokEeSkH97cUQxLGA" type="_W8pI4DszEeGvzMYhXuqAEA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vInKAookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vIoYIIokEeSkH97cUQxLGA" name="getAssessmentAndPlanSection" bodyCondition="_vIoYI4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vIoYI4okEeSkH97cUQxLGA" name="body" constrainedElement="_vIoYIIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vIoYJIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentAndPlanSection))->asSequence()->any(true).oclAsType(consol::AssessmentAndPlanSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vIoYIYokEeSkH97cUQxLGA" type="_2Rwq0BSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vIoYIookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vIywMIokEeSkH97cUQxLGA" name="getPlanOfCareSection" bodyCondition="_vIywM4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vIywM4okEeSkH97cUQxLGA" name="body" constrainedElement="_vIywMIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vIywNIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfCareSection))->asSequence()->any(true).oclAsType(consol::PlanOfCareSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vIywMYokEeSkH97cUQxLGA" type="_2NP-QxSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vIywMookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vI1McIokEeSkH97cUQxLGA" name="getHistoryOfPresentIllness" bodyCondition="_vI1Mc4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vI1Mc4okEeSkH97cUQxLGA" name="body" constrainedElement="_vI1McIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vI1MdIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HistoryOfPresentIllnessSection))->asSequence()->any(true).oclAsType(consol::HistoryOfPresentIllnessSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vI1McYokEeSkH97cUQxLGA" type="_2PcWsRSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vI1McookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vI3BoIokEeSkH97cUQxLGA" name="getPhysicalExamSection" bodyCondition="_vI3Bo4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vI3Bo4okEeSkH97cUQxLGA" name="body" constrainedElement="_vI3BoIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vI3BpIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PhysicalExamSection))->asSequence()->any(true).oclAsType(consol::PhysicalExamSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vI3BoYokEeSkH97cUQxLGA" type="_2Pxt0hSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vI3BoookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vI5d4IokEeSkH97cUQxLGA" name="getReasonForReferralSection" bodyCondition="_vI5d44okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vI5d44okEeSkH97cUQxLGA" name="body" constrainedElement="_vI5d4IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vI5d5IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForReferralSection))->asSequence()->any(true).oclAsType(consol::ReasonForReferralSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vI5d4YokEeSkH97cUQxLGA" type="_2PWQFxSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vI5d4ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vI76IIokEeSkH97cUQxLGA" name="getReasonForVisitSection" bodyCondition="_vI76I4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vI76I4okEeSkH97cUQxLGA" name="body" constrainedElement="_vI76IIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vI76JIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))->asSequence()->any(true).oclAsType(consol::ReasonForVisitSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vI76IYokEeSkH97cUQxLGA" type="_Nm64UCscEeGHF88-qhhUMA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vI76IookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vI9vUIokEeSkH97cUQxLGA" name="getAllergiesSection" bodyCondition="_vI9vU4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vI9vU4okEeSkH97cUQxLGA" name="body" constrainedElement="_vI9vUIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vI9vVIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSectionEntriesOptional))->asSequence()->any(true).oclAsType(consol::AllergiesSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vI9vUYokEeSkH97cUQxLGA" type="_bGzYgBVdEeGQCvUGzi1kDQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vI9vUookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vI-9cIokEeSkH97cUQxLGA" name="getChiefComplaintSection" bodyCondition="_vI-9c4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vI-9c4okEeSkH97cUQxLGA" name="body" constrainedElement="_vI-9cIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vI-9dIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection))->asSequence()->any(true).oclAsType(consol::ChiefComplaintSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vI-9cYokEeSkH97cUQxLGA" type="_2PWQCBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vI-9cookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vJALkIokEeSkH97cUQxLGA" name="getChiefComplaintAndReasonForVisitSection" bodyCondition="_vJALk4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vJALk4okEeSkH97cUQxLGA" name="body" constrainedElement="_vJALkIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vJALlIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))->asSequence()->any(true).oclAsType(consol::ChiefComplaintAndReasonForVisitSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vJALkYokEeSkH97cUQxLGA" type="_oI7CQCsaEeGHF88-qhhUMA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vJALkookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vJBZsIokEeSkH97cUQxLGA" name="getFamilyHistorySection" bodyCondition="_vJBZs4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vJBZs4okEeSkH97cUQxLGA" name="body" constrainedElement="_vJBZsIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vJBZtIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::FamilyHistorySection))->asSequence()->any(true).oclAsType(consol::FamilyHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vJBZsYokEeSkH97cUQxLGA" type="_2IWQIxSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vJBZsookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vJCAwIokEeSkH97cUQxLGA" name="getGeneralStatusSection" bodyCondition="_vJCn0ookEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vJCn0ookEeSkH97cUQxLGA" name="body" constrainedElement="_vJCAwIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vJCn04okEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::GeneralStatusSection))->asSequence()->any(true).oclAsType(consol::GeneralStatusSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vJCn0IokEeSkH97cUQxLGA" type="_2Pxt6xSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vJCn0YokEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vJD18IokEeSkH97cUQxLGA" name="getHistoryOfPastIllnessSection" bodyCondition="_vJD184okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vJD184okEeSkH97cUQxLGA" name="body" constrainedElement="_vJD18IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vJD19IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HistoryOfPastIllnessSection))->asSequence()->any(true).oclAsType(consol::HistoryOfPastIllnessSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vJD18YokEeSkH97cUQxLGA" type="_2PQJcxSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vJD18ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vJFEEIokEeSkH97cUQxLGA" name="getImmunizationsSection" bodyCondition="_vJFEE4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vJFEE4okEeSkH97cUQxLGA" name="body" constrainedElement="_vJFEEIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vJFEFIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ImmunizationsSection))->asSequence()->any(true).oclAsType(consol::ImmunizationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vJFEEYokEeSkH97cUQxLGA" type="_2L7voBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vJFEEookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vJGSMIokEeSkH97cUQxLGA" name="getMedicationsSectionEntriesOptional" bodyCondition="_vJGSM4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vJGSM4okEeSkH97cUQxLGA" name="body" constrainedElement="_vJGSMIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vJGSNIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsSectionEntriesOptional))->asSequence()->any(true).oclAsType(consol::MedicationsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vJGSMYokEeSkH97cUQxLGA" type="_iAoXEBVdEeGQCvUGzi1kDQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vJGSMookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vJHgUIokEeSkH97cUQxLGA" name="getProblemSectionEntriesOptional" bodyCondition="_vJHgU4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vJHgU4okEeSkH97cUQxLGA" name="body" constrainedElement="_vJHgUIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vJHgVIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSectionEntriesOptional))->asSequence()->any(true).oclAsType(consol::ProblemSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vJHgUYokEeSkH97cUQxLGA" type="_naxrkBVdEeGQCvUGzi1kDQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vJHgUookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vJIucIokEeSkH97cUQxLGA" name="getProceduresSectionEntriesOptional" bodyCondition="_vJIuc4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vJIuc4okEeSkH97cUQxLGA" name="body" constrainedElement="_vJIucIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vJIudIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSectionEntriesOptional))->asSequence()->any(true).oclAsType(consol::ProceduresSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vJIucYokEeSkH97cUQxLGA" type="_s9Ig4BVdEeGQCvUGzi1kDQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vJIucookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vJJ8kIokEeSkH97cUQxLGA" name="getResultsSectionEntriesOptional" bodyCondition="_vJJ8k4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vJJ8k4okEeSkH97cUQxLGA" name="body" constrainedElement="_vJJ8kIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vJJ8lIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ResultsSectionEntriesOptional))->asSequence()->any(true).oclAsType(consol::ResultsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vJJ8kYokEeSkH97cUQxLGA" type="_xGqiEBVdEeGQCvUGzi1kDQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vJJ8kookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vJLKsIokEeSkH97cUQxLGA" name="getReviewOfSystemsSection" bodyCondition="_vJLKs4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vJLKs4okEeSkH97cUQxLGA" name="body" constrainedElement="_vJLKsIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vJLKtIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReviewOfSystemsSection))->asSequence()->any(true).oclAsType(consol::ReviewOfSystemsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vJLKsYokEeSkH97cUQxLGA" type="_2RqkMBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vJLKsookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vJMY0IokEeSkH97cUQxLGA" name="getSocialHistorySection" bodyCondition="_vJMY04okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vJMY04okEeSkH97cUQxLGA" name="body" constrainedElement="_vJMY0IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vJMY1IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::SocialHistorySection))->asSequence()->any(true).oclAsType(consol::SocialHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vJMY0YokEeSkH97cUQxLGA" type="_2JKvgBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vJMY0ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vJNm8IokEeSkH97cUQxLGA" name="getVitalSignsSectionEntriesOptional" bodyCondition="_vJNm84okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vJNm84okEeSkH97cUQxLGA" name="body" constrainedElement="_vJNm8IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vJNm9IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSectionEntriesOptional))->asSequence()->any(true).oclAsType(consol::VitalSignsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vJNm8YokEeSkH97cUQxLGA" type="_bRH8sBVeEeGQCvUGzi1kDQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vJNm8ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_W8pI4DszEeGvzMYhXuqAEA" name="AssessmentSection">
      <ownedComment xmi:id="_SHlZkEE1EeGdmoWy_aLP0Q">
        <body>The Assessment section (also referred to as impression or diagnoses outside of the context of CDA) represents the clinician's conclusions and working assumptions that will guide treatment of the patient. The assessment may be a list of specific disease entities or a narrative block.</body>
      </ownedComment>
      <ownedRule xmi:id="_vIo_MIokEeSkH97cUQxLGA" name="AssessmentSectionTemplateId" constrainedElement="_W8pI4DszEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vIo_MYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.8')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vIq0YIokEeSkH97cUQxLGA" name="AssessmentSectionCode" constrainedElement="_W8pI4DszEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vIq0YYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '51848-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vItQoIokEeSkH97cUQxLGA" name="AssessmentSectionCodeP" constrainedElement="_W8pI4DszEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vItQoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vIvF0IokEeSkH97cUQxLGA" name="AssessmentSectionText" constrainedElement="_W8pI4DszEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vIvF0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vIwT8IokEeSkH97cUQxLGA" name="AssessmentSectionTitle" constrainedElement="_W8pI4DszEeGvzMYhXuqAEA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vIwT8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_W8pI4TszEeGvzMYhXuqAEA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_-Qa60D1jEeG3tde5scYNWA" name="HistoryAndPhysicalNote">
      <ownedComment xmi:id="_BkJVYD1kEeG3tde5scYNWA">
        <body>A History and Physical  Note is a medical report that documents the current and past conditions of the patient. It contains essential information that helps determine an individual's health status. &#xD;
The first portion of the report is a current collection of organized information unique to an individual, typically supplied by the patient or their caregiver, about the current medical problem or the reason for the patient encounter. This information is followed by a description of any past or ongoing medical issues, including current medications and allergies. Information is also obtained about the patient's lifestyle, habits, and diseases among family members.&#xD;
The next portion of the report contains information obtained by physically examining the patient and gathering diagnostic information in the form of laboratory tests, imaging, or other diagnostic procedures. &#xD;
The report ends with the clinician's assessment of the patient's situation and the intended plan to address those issues. &#xD;
A History and Physical Examination is required upon hospital admission as well as before operative procedures. An initial evaluation in an ambulatory setting is often documented in the form of an History and Physical Note.</body>
      </ownedComment>
      <ownedRule xmi:id="_OMdNYD3rEeGYzOhiGkMbTA" name="HistoryAndPhysicalNoteHasAnAssementAndPlanSectionOrIndividualAssementAndPlanSections" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Q_ShYD3rEeGYzOhiGkMbTA">
          <language>OCL</language>
          <body>(self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfCareSection)) and  self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentSection))) xor self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentAndPlanSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_sAyY0D3rEeGYzOhiGkMbTA" name="HistoryAndPhysicalNoteDoesNotHaveIndividualAssementAndPlanSectionsWhenAssementAndPlanSectionPresent" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t0LpED3rEeGYzOhiGkMbTA">
          <language>OCL</language>
          <body>(self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfCareSection)) or  self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentSection))) xor self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentAndPlanSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_6fCIkGjAEeGNoZ3kEkcY2A" name="HistoryAndPhysicalNoteHasChiefComplaintAndReasonForVisitChiefComplaintOrReasonForVisit" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_6fCIkWjAEeGNoZ3kEkcY2A">
          <language>OCL</language>
          <body>(self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection)) and  self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))) xor self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_96mQgGjAEeGNoZ3kEkcY2A" name="HistoryAndPhysicalNoteDoesNotHaveChiefComplaintAndReasonForVisitWithChiefComplaintSectionOrReasonSection" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_96mQgWjAEeGNoZ3kEkcY2A">
          <language>OCL</language>
          <body>(self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection)) or  self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))) xor self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vJi-IIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsTemplateId" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vJjlMIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.1.3')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vJq58IokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsCodeP" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vJq58YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vJodsIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsCode" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vJodsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = '34117-2' or value.code = '11492-6' or value.code = '28626-0' or value.code = '34774-0' or value.code = '34115-6' or value.code = '34116-4' or value.code = '34095-0' or value.code = '34096-8' or value.code = '51849-8' or value.code = '47039-3' or value.code = '34763-3' or value.code = '34094-3' or value.code = '34138-8'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vJzc0IokEeSkH97cUQxLGA" name="HistoryAndPhysicalNoteInFulfillmentOf" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vJzc0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.inFulfillmentOf->exists(inFulfillmentOf : cda::InFulfillmentOf | not inFulfillmentOf.oclIsUndefined() and inFulfillmentOf.oclIsKindOf(rim::ActRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vJ4VUIokEeSkH97cUQxLGA" name="HistoryAndPhysicalNoteComponentOf" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vJ4VUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->one(componentOf : cda::Component1 | not componentOf.oclIsUndefined() and componentOf.oclIsKindOf(cda::Component1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vJ48YIokEeSkH97cUQxLGA" name="HistoryAndPhysicalNoteAllergiesSectionEntriesOptional" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vJ48YYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSectionEntriesOptional))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vJ6KhYokEeSkH97cUQxLGA" name="HistoryAndPhysicalNoteAssessmentSection" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vJ6KhookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vJ7_sIokEeSkH97cUQxLGA" name="HistoryAndPhysicalNotePlanOfCareSection" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vJ7_sYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfCareSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vJ9N0IokEeSkH97cUQxLGA" name="HistoryAndPhysicalNoteAssessmentAndPlanSection" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vJ9N0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentAndPlanSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vJ-b8IokEeSkH97cUQxLGA" name="HistoryAndPhysicalNoteChiefComplaintSection" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vJ-b8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vJ_qEIokEeSkH97cUQxLGA" name="HistoryAndPhysicalNoteChiefComplaintAndReasonForVisitSection" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vJ_qEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vKA4M4okEeSkH97cUQxLGA" name="HistoryAndPhysicalNoteFamilyHistorySection" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vKA4NIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::FamilyHistorySection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vKCGVYokEeSkH97cUQxLGA" name="HistoryAndPhysicalNoteGeneralStatusSection" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vKCGVookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::GeneralStatusSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vKD7gIokEeSkH97cUQxLGA" name="HistoryAndPhysicalNoteHistoryOfPastIllnessSection" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vKD7gYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HistoryOfPastIllnessSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vKFJoIokEeSkH97cUQxLGA" name="HistoryAndPhysicalNoteMedicationsSectionEntriesOptional" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vKFJoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsSectionEntriesOptional))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vKGXwIokEeSkH97cUQxLGA" name="HistoryAndPhysicalNotePhysicalExamSection" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vKGXwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PhysicalExamSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vKHl4IokEeSkH97cUQxLGA" name="HistoryAndPhysicalNoteReasonForVisitSection" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vKHl4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vKJbEIokEeSkH97cUQxLGA" name="HistoryAndPhysicalNoteResultsSectionEntriesOptional" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vKJbEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ResultsSectionEntriesOptional))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vKKpMIokEeSkH97cUQxLGA" name="HistoryAndPhysicalNoteReviewOfSystemsSection" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vKKpMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReviewOfSystemsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vKL3UIokEeSkH97cUQxLGA" name="HistoryAndPhysicalNoteSocialHistorySection" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vKL3UYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::SocialHistorySection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vKNFcIokEeSkH97cUQxLGA" name="HistoryAndPhysicalNoteHistoryOfPresentIllnessSection" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vKNFcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HistoryOfPresentIllnessSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vKO6oIokEeSkH97cUQxLGA" name="HistoryAndPhysicalNoteImmunizationsSectionEntriesOptional" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vKO6oYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ImmunizationsSectionEntriesOptional))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vKQIxYokEeSkH97cUQxLGA" name="HistoryAndPhysicalNoteProblemSectionEntriesOptional" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vKQIxookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSectionEntriesOptional))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vKR98IokEeSkH97cUQxLGA" name="HistoryAndPhysicalNoteProceduresSectionEntriesOptional" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vKR98YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSectionEntriesOptional))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vKTMEIokEeSkH97cUQxLGA" name="HistoryAndPhysicalNoteVitalSignsSectionEntriesOptional" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vKTMEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSectionEntriesOptional))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vZVtoIokEeSkH97cUQxLGA" name="HistoryAndPhysicalNoteInstructionsSection" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vZVtoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::InstructionsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wS3WoIokEeSkH97cUQxLGA" name="HistoryAndPhysicalNoteComponentOfEncompassingEncounter4ResponsiblePartyAssignedEntityHasPersonOrOrganization" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wS3WoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null).responsibleParty->excluding(null)->reject(not assignedEntity.assignedPerson.oclIsUndefined() or not assignedEntity.representedOrganization->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wS3WoookEeSkH97cUQxLGA" name="HistoryAndPhysicalNoteComponentOfEncompassingEncounter4ResponsiblePartyAssignedEntity" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wS3Wo4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null).responsibleParty->excluding(null)->reject(assignedEntity->one(assignedEntity : cda::AssignedEntity | not assignedEntity.oclIsUndefined() and assignedEntity.oclIsKindOf(rim::Role)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wS4kwIokEeSkH97cUQxLGA" name="HistoryAndPhysicalNoteComponentOfEncompassingEncounter4EncounterParticipantAssignedEntityHasPersonOrOrganization" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wS4kwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null).encounterParticipant->excluding(null)->reject(not assignedEntity.assignedPerson.oclIsUndefined() or not assignedEntity.representedOrganization->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wS5L0IokEeSkH97cUQxLGA" name="HistoryAndPhysicalNoteComponentOfEncompassingEncounter4EncounterParticipantAssignedEntity" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wS5L0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null).encounterParticipant->excluding(null)->reject(assignedEntity->one(assignedEntity : cda::AssignedEntity | not assignedEntity.oclIsUndefined() and assignedEntity.oclIsKindOf(rim::Role)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wS5y4IokEeSkH97cUQxLGA" name="HistoryAndPhysicalNoteComponentOfEncompassingEncounter4PreciseToTheDay" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wS5y4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(not effectiveTime.value.oclIsUndefined() implies effectiveTime.value.size() >= 8)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wS6Z8IokEeSkH97cUQxLGA" name="HistoryAndPhysicalNoteComponentOfEncompassingEncounter4PreciseToTheMinute" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wS6Z8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(not effectiveTime.value.oclIsUndefined() implies effectiveTime.value.size() >= 12)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wS6Z8ookEeSkH97cUQxLGA" name="HistoryAndPhysicalNoteComponentOfEncompassingEncounter4PreciseToTheSecond" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wS6Z84okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(not effectiveTime.value.oclIsUndefined() implies effectiveTime.value.size() >= 14)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wS7BAIokEeSkH97cUQxLGA" name="HistoryAndPhysicalNoteComponentOfEncompassingEncounter4IfMorePreciseThanDayIncludeTimeZoneOffset" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wS7BAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(not effectiveTime.value.oclIsUndefined() and effectiveTime.value.size() > 8 implies effectiveTime.value.size() >= 15)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wS7oEIokEeSkH97cUQxLGA" name="HistoryAndPhysicalNoteComponentOfEncompassingEncounter4EffectiveTime" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wS7oEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject((effectiveTime.oclIsUndefined() or effectiveTime.isNullFlavorUndefined()) implies (not effectiveTime.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wS8PIIokEeSkH97cUQxLGA" name="HistoryAndPhysicalNoteComponentOfEncompassingEncounter4Id" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wS8PIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (id->size() = 1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wS82MIokEeSkH97cUQxLGA" name="HistoryAndPhysicalNoteComponentOfEncompassingEncounter4Location" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wS82MYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(location->one(location : cda::Location | not location.oclIsUndefined() and location.oclIsKindOf(rim::Participation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wS82MookEeSkH97cUQxLGA" name="HistoryAndPhysicalNoteComponentOfEncompassingEncounter4ResponsibleParty" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wS82M4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(responsibleParty->one(responsibleParty : cda::ResponsibleParty | not responsibleParty.oclIsUndefined() and responsibleParty.oclIsKindOf(cda::ResponsibleParty)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wS9dQIokEeSkH97cUQxLGA" name="HistoryAndPhysicalNoteComponentOfEncompassingEncounter4EncounterParticipant" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wS9dQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(encounterParticipant->one(encounterParticipant : cda::EncounterParticipant | not encounterParticipant.oclIsUndefined() and encounterParticipant.oclIsKindOf(cda::EncounterParticipant)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wS-EUIokEeSkH97cUQxLGA" name="HistoryAndPhysicalNoteComponentOfEncompassingEncounter" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wS-EUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null)->reject(encompassingEncounter->one(encompassingEncounter : cda::EncompassingEncounter | not encompassingEncounter.oclIsUndefined() and encompassingEncounter.oclIsKindOf(cda::EncompassingEncounter)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_-QelMD1jEeG3tde5scYNWA" general="_2DNRcBSVEeGGzu7fmW9pXw"/>
      <ownedOperation xmi:id="_vJ6KgIokEeSkH97cUQxLGA" name="getAllergiesSectionEntriesOptional" bodyCondition="_vJ6Kg4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vJ6Kg4okEeSkH97cUQxLGA" name="body" constrainedElement="_vJ6KgIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vJ6KhIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSectionEntriesOptional))->asSequence()->any(true).oclAsType(consol::AllergiesSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vJ6KgYokEeSkH97cUQxLGA" type="_bGzYgBVdEeGQCvUGzi1kDQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vJ6KgookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vJ7YoIokEeSkH97cUQxLGA" name="getAssessmentSection" bodyCondition="_vJ7Yo4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vJ7Yo4okEeSkH97cUQxLGA" name="body" constrainedElement="_vJ7YoIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vJ7YpIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentSection))->asSequence()->any(true).oclAsType(consol::AssessmentSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vJ7YoYokEeSkH97cUQxLGA" type="_W8pI4DszEeGvzMYhXuqAEA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vJ7YoookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vJ8mwIokEeSkH97cUQxLGA" name="getPlanOfCareSection" bodyCondition="_vJ8mw4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vJ8mw4okEeSkH97cUQxLGA" name="body" constrainedElement="_vJ8mwIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vJ8mxIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfCareSection))->asSequence()->any(true).oclAsType(consol::PlanOfCareSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vJ8mwYokEeSkH97cUQxLGA" type="_2NP-QxSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vJ8mwookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vJ904IokEeSkH97cUQxLGA" name="getAssessmentAndPlanSection" bodyCondition="_vJ9044okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vJ9044okEeSkH97cUQxLGA" name="body" constrainedElement="_vJ904IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vJ905IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentAndPlanSection))->asSequence()->any(true).oclAsType(consol::AssessmentAndPlanSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vJ904YokEeSkH97cUQxLGA" type="_2Rwq0BSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vJ904ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vJ_DAIokEeSkH97cUQxLGA" name="getChiefComplaintSection" bodyCondition="_vJ_DA4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vJ_DA4okEeSkH97cUQxLGA" name="body" constrainedElement="_vJ_DAIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vJ_DBIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection))->asSequence()->any(true).oclAsType(consol::ChiefComplaintSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vJ_DAYokEeSkH97cUQxLGA" type="_2PWQCBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vJ_DAookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vKARIIokEeSkH97cUQxLGA" name="getChiefComplaintAndReasonForVisitSection" bodyCondition="_vKA4MYokEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vKA4MYokEeSkH97cUQxLGA" name="body" constrainedElement="_vKARIIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vKA4MookEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))->asSequence()->any(true).oclAsType(consol::ChiefComplaintAndReasonForVisitSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vKARIYokEeSkH97cUQxLGA" type="_oI7CQCsaEeGHF88-qhhUMA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vKA4MIokEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vKCGUIokEeSkH97cUQxLGA" name="getFamilyHistorySection" bodyCondition="_vKCGU4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vKCGU4okEeSkH97cUQxLGA" name="body" constrainedElement="_vKCGUIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vKCGVIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::FamilyHistorySection))->asSequence()->any(true).oclAsType(consol::FamilyHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vKCGUYokEeSkH97cUQxLGA" type="_2IWQIxSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vKCGUookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vKDUcIokEeSkH97cUQxLGA" name="getGeneralStatusSection" bodyCondition="_vKDUc4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vKDUc4okEeSkH97cUQxLGA" name="body" constrainedElement="_vKDUcIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vKDUdIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::GeneralStatusSection))->asSequence()->any(true).oclAsType(consol::GeneralStatusSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vKDUcYokEeSkH97cUQxLGA" type="_2Pxt6xSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vKDUcookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vKEikIokEeSkH97cUQxLGA" name="getHistoryOfPastIllnessSection" bodyCondition="_vKEik4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vKEik4okEeSkH97cUQxLGA" name="body" constrainedElement="_vKEikIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vKEilIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HistoryOfPastIllnessSection))->asSequence()->any(true).oclAsType(consol::HistoryOfPastIllnessSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vKEikYokEeSkH97cUQxLGA" type="_2PQJcxSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vKEikookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vKFwsIokEeSkH97cUQxLGA" name="getMedicationsSectionEntriesOptional" bodyCondition="_vKFws4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vKFws4okEeSkH97cUQxLGA" name="body" constrainedElement="_vKFwsIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vKFwtIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsSectionEntriesOptional))->asSequence()->any(true).oclAsType(consol::MedicationsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vKFwsYokEeSkH97cUQxLGA" type="_iAoXEBVdEeGQCvUGzi1kDQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vKFwsookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vKG-0IokEeSkH97cUQxLGA" name="getPhysicalExamSection" bodyCondition="_vKG-04okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vKG-04okEeSkH97cUQxLGA" name="body" constrainedElement="_vKG-0IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vKG-1IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PhysicalExamSection))->asSequence()->any(true).oclAsType(consol::PhysicalExamSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vKG-0YokEeSkH97cUQxLGA" type="_2Pxt0hSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vKG-0ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vKI0AIokEeSkH97cUQxLGA" name="getReasonForVisitSection" bodyCondition="_vKI0A4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vKI0A4okEeSkH97cUQxLGA" name="body" constrainedElement="_vKI0AIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vKI0BIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))->asSequence()->any(true).oclAsType(consol::ReasonForVisitSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vKI0AYokEeSkH97cUQxLGA" type="_Nm64UCscEeGHF88-qhhUMA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vKI0AookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vKKCIIokEeSkH97cUQxLGA" name="getResultsSectionEntriesOptional" bodyCondition="_vKKCI4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vKKCI4okEeSkH97cUQxLGA" name="body" constrainedElement="_vKKCIIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vKKCJIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ResultsSectionEntriesOptional))->asSequence()->any(true).oclAsType(consol::ResultsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vKKCIYokEeSkH97cUQxLGA" type="_xGqiEBVdEeGQCvUGzi1kDQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vKKCIookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vKLQQIokEeSkH97cUQxLGA" name="getReviewOfSystemsSection" bodyCondition="_vKLQQ4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vKLQQ4okEeSkH97cUQxLGA" name="body" constrainedElement="_vKLQQIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vKLQRIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReviewOfSystemsSection))->asSequence()->any(true).oclAsType(consol::ReviewOfSystemsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vKLQQYokEeSkH97cUQxLGA" type="_2RqkMBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vKLQQookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vKMeYIokEeSkH97cUQxLGA" name="getSocialHistorySection" bodyCondition="_vKMeY4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vKMeY4okEeSkH97cUQxLGA" name="body" constrainedElement="_vKMeYIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vKMeZIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::SocialHistorySection))->asSequence()->any(true).oclAsType(consol::SocialHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vKMeYYokEeSkH97cUQxLGA" type="_2JKvgBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vKMeYookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vKOTkIokEeSkH97cUQxLGA" name="getHistoryOfPresentIllnessSection" bodyCondition="_vKOTk4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vKOTk4okEeSkH97cUQxLGA" name="body" constrainedElement="_vKOTkIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vKOTlIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HistoryOfPresentIllnessSection))->asSequence()->any(true).oclAsType(consol::HistoryOfPresentIllnessSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vKOTkYokEeSkH97cUQxLGA" type="_2PcWsRSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vKOTkookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vKQIwIokEeSkH97cUQxLGA" name="getImmunizationsSectionEntriesOptional" bodyCondition="_vKQIw4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vKQIw4okEeSkH97cUQxLGA" name="body" constrainedElement="_vKQIwIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vKQIxIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ImmunizationsSectionEntriesOptional))->asSequence()->any(true).oclAsType(consol::ImmunizationsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vKQIwYokEeSkH97cUQxLGA" type="_EuPloBVeEeGQCvUGzi1kDQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vKQIwookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vKRW4IokEeSkH97cUQxLGA" name="getProblemSectionEntriesOptional" bodyCondition="_vKRW44okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vKRW44okEeSkH97cUQxLGA" name="body" constrainedElement="_vKRW4IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vKRW5IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSectionEntriesOptional))->asSequence()->any(true).oclAsType(consol::ProblemSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vKRW4YokEeSkH97cUQxLGA" type="_naxrkBVdEeGQCvUGzi1kDQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vKRW4ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vKSlAIokEeSkH97cUQxLGA" name="getProceduresSectionEntriesOptional" bodyCondition="_vKSlA4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vKSlA4okEeSkH97cUQxLGA" name="body" constrainedElement="_vKSlAIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vKSlBIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSectionEntriesOptional))->asSequence()->any(true).oclAsType(consol::ProceduresSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vKSlAYokEeSkH97cUQxLGA" type="_s9Ig4BVdEeGQCvUGzi1kDQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vKSlAookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vKUaMIokEeSkH97cUQxLGA" name="getVitalSignsSectionEntriesOptional" bodyCondition="_vKUaM4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vKUaM4okEeSkH97cUQxLGA" name="body" constrainedElement="_vKUaMIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vKUaNIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSectionEntriesOptional))->asSequence()->any(true).oclAsType(consol::VitalSignsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vKUaMYokEeSkH97cUQxLGA" type="_bRH8sBVeEeGQCvUGzi1kDQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vKUaMookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vZW7wIokEeSkH97cUQxLGA" name="getInstructionsSection" bodyCondition="_vZW7w4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vZW7w4okEeSkH97cUQxLGA" name="body" constrainedElement="_vZW7wIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vZW7xIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::InstructionsSection))->asSequence()->any(true).oclAsType(consol::InstructionsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vZW7wYokEeSkH97cUQxLGA" type="_4qKukEE1EeGdmoWy_aLP0Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vZW7wookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_xe9MsD4iEeGhnL_c4sBHGg" name="OperativeNote">
      <ownedComment xmi:id="_n7Z1wEE2EeGdmoWy_aLP0Q">
        <body>The Operative Note Fluids section may be used to record fluids administered during the surgical procedure.</body>
      </ownedComment>
      <ownedRule xmi:id="_vKW2cIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsTemplateId" constrainedElement="_xe9MsD4iEeGhnL_c4sBHGg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vKW2cYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.1.7')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vKbu8IokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsCodeP" constrainedElement="_xe9MsD4iEeGhnL_c4sBHGg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vKbu8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vKZSsIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsCode" constrainedElement="_xe9MsD4iEeGhnL_c4sBHGg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vKZSsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = '11504-8' or value.code = '34137-0' or value.code = '28583-3' or value.code = '28624-5' or value.code = '28573-4' or value.code = '34877-1' or value.code = '34874-8' or value.code = '34870-6' or value.code = '34868-0' or value.code = '34818-5'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vKsNoIokEeSkH97cUQxLGA" name="OperativeNoteDocumentationOf" constrainedElement="_xe9MsD4iEeGhnL_c4sBHGg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vKsNoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->exists(documentationOf : cda::DocumentationOf | not documentationOf.oclIsUndefined() and documentationOf.oclIsKindOf(cda::DocumentationOf))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vKtbwIokEeSkH97cUQxLGA" name="OperativeNoteAnesthesiaSection" constrainedElement="_xe9MsD4iEeGhnL_c4sBHGg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vKtbwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AnesthesiaSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vKup4IokEeSkH97cUQxLGA" name="OperativeNoteComplicationsSection" constrainedElement="_xe9MsD4iEeGhnL_c4sBHGg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vKup4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ComplicationsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vKv4AookEeSkH97cUQxLGA" name="OperativeNotePostoperativeDiagnosisSection" constrainedElement="_xe9MsD4iEeGhnL_c4sBHGg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vKv4A4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PostoperativeDiagnosisSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vKxGJYokEeSkH97cUQxLGA" name="OperativeNotePreoperativeDiagnosisSection" constrainedElement="_xe9MsD4iEeGhnL_c4sBHGg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vKxGJookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PreoperativeDiagnosisSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vKyURYokEeSkH97cUQxLGA" name="OperativeNoteProcedureEstimatedBloodLossSection" constrainedElement="_xe9MsD4iEeGhnL_c4sBHGg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vKyURookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureEstimatedBloodLossSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vK0JcIokEeSkH97cUQxLGA" name="OperativeNoteProcedureFindingsSection" constrainedElement="_xe9MsD4iEeGhnL_c4sBHGg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vK0JcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureFindingsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vK1XkIokEeSkH97cUQxLGA" name="OperativeNoteProcedureSpecimensTakenSection" constrainedElement="_xe9MsD4iEeGhnL_c4sBHGg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vK1XkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureSpecimensTakenSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vK2lsIokEeSkH97cUQxLGA" name="OperativeNoteProcedureDescriptionSection" constrainedElement="_xe9MsD4iEeGhnL_c4sBHGg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vK2lsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureDescriptionSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vK3z0ookEeSkH97cUQxLGA" name="OperativeNoteProcedureImplantsSection" constrainedElement="_xe9MsD4iEeGhnL_c4sBHGg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vK3z04okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureImplantsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vK5B9YokEeSkH97cUQxLGA" name="OperativeNoteFluidSection" constrainedElement="_xe9MsD4iEeGhnL_c4sBHGg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vK5B9ookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::OperativeNoteFluidSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vK6QFYokEeSkH97cUQxLGA" name="OperativeNoteSurgicalProcedureSection" constrainedElement="_xe9MsD4iEeGhnL_c4sBHGg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vK6QFookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::OperativeNoteSurgicalProcedureSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vK8FQIokEeSkH97cUQxLGA" name="OperativeNotePlanOfCareSection" constrainedElement="_xe9MsD4iEeGhnL_c4sBHGg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vK8FQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfCareSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vK9TYIokEeSkH97cUQxLGA" name="OperativeNotePlannedProcedureSection" constrainedElement="_xe9MsD4iEeGhnL_c4sBHGg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vK9TYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlannedProcedureSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vK-hgIokEeSkH97cUQxLGA" name="OperativeNoteProcedureDispositionSection" constrainedElement="_xe9MsD4iEeGhnL_c4sBHGg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vK-hgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureDispositionSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vK_voIokEeSkH97cUQxLGA" name="OperativeNoteProcedureIndicationsSection" constrainedElement="_xe9MsD4iEeGhnL_c4sBHGg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vK_voYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureIndicationsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vLA9wIokEeSkH97cUQxLGA" name="OperativeNoteSurgicalDrainsSection" constrainedElement="_xe9MsD4iEeGhnL_c4sBHGg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vLA9wYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::SurgicalDrainsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wTBHoIokEeSkH97cUQxLGA" name="OperativeNoteDocumentationOfServiceEventPrimaryPerformerAssignedEntityCode" constrainedElement="_xe9MsD4iEeGhnL_c4sBHGg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wTBHoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null).performer->excluding(null)->select(typeCode = vocab::x_ServiceEventPerformer::PPRF).assignedEntity->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined() and code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = code.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.101' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wTBusIokEeSkH97cUQxLGA" name="OperativeNoteDocumentationOfServiceEventPrimaryPerformerAssignedEntityCodeP" constrainedElement="_xe9MsD4iEeGhnL_c4sBHGg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wTBusYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null).performer->excluding(null)->select(typeCode = vocab::x_ServiceEventPerformer::PPRF).assignedEntity->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wTCVwIokEeSkH97cUQxLGA" name="OperativeNoteDocumentationOfServiceEventPrimaryPerformerTypeCode" constrainedElement="_xe9MsD4iEeGhnL_c4sBHGg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wTCVwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null).performer->excluding(null)->select(typeCode = vocab::x_ServiceEventPerformer::PPRF)->select(typeCode = vocab::x_ServiceEventPerformer::PPRF)->reject(typeCode=vocab::x_ServiceEventPerformer::PPRF)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wTC80IokEeSkH97cUQxLGA" name="OperativeNoteDocumentationOfServiceEventPrimaryPerformerAssignedEntity" constrainedElement="_xe9MsD4iEeGhnL_c4sBHGg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wTC80YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null).performer->excluding(null)->select(typeCode = vocab::x_ServiceEventPerformer::PPRF)->select(typeCode = vocab::x_ServiceEventPerformer::PPRF)->reject(assignedEntity->one(assignedEntity : cda::AssignedEntity | not assignedEntity.oclIsUndefined() and assignedEntity.oclIsKindOf(cda::AssignedEntity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wTDj4IokEeSkH97cUQxLGA" name="OperativeNoteDocumentationOfServiceEventProcedureCodes" constrainedElement="_xe9MsD4iEeGhnL_c4sBHGg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wTDj4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject(code.codeSystem = '2.16.840.1.113883.6.104' or code.codeSystem = '2.16.840.1.113883.6.12' or code.codeSystem = '2.16.840.1.113883.6.96')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wTDj4ookEeSkH97cUQxLGA" name="OperativeNoteDocumentationOfServiceEventEffectiveTimeHasLow" constrainedElement="_xe9MsD4iEeGhnL_c4sBHGg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wTEK8IokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject(not effectiveTime.low.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wTEK8YokEeSkH97cUQxLGA" name="OperativeNoteDocumentationOfServiceEventEffectiveTimeHasHighWhenNoWidth" constrainedElement="_xe9MsD4iEeGhnL_c4sBHGg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wTEK8ookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject(not effectiveTime.width.oclIsUndefined() xor not effectiveTime.high.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wTEyAIokEeSkH97cUQxLGA" name="OperativeNoteDocumentationOfServiceEventEffectiveTimeNoHighIfWidth" constrainedElement="_xe9MsD4iEeGhnL_c4sBHGg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wTEyAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject(not effectiveTime.width.oclIsUndefined() xor not effectiveTime.high.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wTFZEIokEeSkH97cUQxLGA" name="OperativeNoteDocumentationOfServiceEventPreciseToTheDay" constrainedElement="_xe9MsD4iEeGhnL_c4sBHGg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wTFZEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject((not effectiveTime.low.value.oclIsUndefined() implies effectiveTime.low.value.size() >= 8) and (not effectiveTime.high.value.oclIsUndefined() implies effectiveTime.high.value.size() >= 8))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wTGAIIokEeSkH97cUQxLGA" name="OperativeNoteDocumentationOfServiceEventPreciseToTheMinute" constrainedElement="_xe9MsD4iEeGhnL_c4sBHGg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wTGAIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject((not effectiveTime.low.value.oclIsUndefined() implies effectiveTime.low.value.size() >= 12) and (not effectiveTime.high.value.oclIsUndefined() implies effectiveTime.high.value.size() >= 12))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wTGnMIokEeSkH97cUQxLGA" name="OperativeNoteDocumentationOfServiceEventPreciseToTheSecond" constrainedElement="_xe9MsD4iEeGhnL_c4sBHGg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wTGnMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject((not effectiveTime.low.value.oclIsUndefined() implies effectiveTime.low.value.size() >= 14) and (not effectiveTime.high.value.oclIsUndefined() implies effectiveTime.high.value.size() >= 14))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wTGnMookEeSkH97cUQxLGA" name="OperativeNoteDocumentationOfServiceEventIfMorePreciseThanDayIncludeTimeZoneOffset" constrainedElement="_xe9MsD4iEeGhnL_c4sBHGg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wTGnM4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject((not effectiveTime.low.value.oclIsUndefined() and effectiveTime.low.value.size() > 8 implies effectiveTime.low.value.size() >= 15) and (not effectiveTime.high.value.oclIsUndefined() and effectiveTime.high.value.size() > 8 implies effectiveTime.high.value.size() >= 15))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wTHOQIokEeSkH97cUQxLGA" name="OperativeNoteDocumentationOfServiceEventCode" constrainedElement="_xe9MsD4iEeGhnL_c4sBHGg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wTHOQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wTH1UIokEeSkH97cUQxLGA" name="OperativeNoteDocumentationOfServiceEventEffectiveTime" constrainedElement="_xe9MsD4iEeGhnL_c4sBHGg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wTH1UYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject((effectiveTime.oclIsUndefined() or effectiveTime.isNullFlavorUndefined()) implies (not effectiveTime.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wTIcYIokEeSkH97cUQxLGA" name="OperativeNoteDocumentationOfServiceEventPrimaryPerformer" constrainedElement="_xe9MsD4iEeGhnL_c4sBHGg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wTIcYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject(performer->select(performer : cda::Performer1 | not performer.oclIsUndefined() and performer.oclIsKindOf(cda::Performer1))->select(typeCode = vocab::x_ServiceEventPerformer::PPRF)->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wTJDcIokEeSkH97cUQxLGA" name="OperativeNoteDocumentationOfServiceEvent" constrainedElement="_xe9MsD4iEeGhnL_c4sBHGg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wTJDcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null)->reject(serviceEvent->one(serviceEvent : cda::ServiceEvent | not serviceEvent.oclIsUndefined() and serviceEvent.oclIsKindOf(cda::ServiceEvent)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_xfHkwD4iEeGhnL_c4sBHGg" general="_2DNRcBSVEeGGzu7fmW9pXw"/>
      <ownedOperation xmi:id="_vKuC0IokEeSkH97cUQxLGA" name="getAnesthesiaSection" bodyCondition="_vKuC04okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vKuC04okEeSkH97cUQxLGA" name="body" constrainedElement="_vKuC0IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vKuC1IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AnesthesiaSection))->asSequence()->any(true).oclAsType(consol::AnesthesiaSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vKuC0YokEeSkH97cUQxLGA" type="_OA_Q0DVyEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vKuC0ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vKvQ8IokEeSkH97cUQxLGA" name="getComplicationsSection" bodyCondition="_vKv4AIokEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vKv4AIokEeSkH97cUQxLGA" name="body" constrainedElement="_vKvQ8IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vKv4AYokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ComplicationsSection))->asSequence()->any(true).oclAsType(consol::ComplicationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vKvQ8YokEeSkH97cUQxLGA" type="_R1OXcDVyEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vKvQ8ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vKxGIIokEeSkH97cUQxLGA" name="getPostoperativeDiagnosisSection" bodyCondition="_vKxGI4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vKxGI4okEeSkH97cUQxLGA" name="body" constrainedElement="_vKxGIIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vKxGJIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PostoperativeDiagnosisSection))->asSequence()->any(true).oclAsType(consol::PostoperativeDiagnosisSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vKxGIYokEeSkH97cUQxLGA" type="_7UA-4DVyEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vKxGIookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vKyUQIokEeSkH97cUQxLGA" name="getPreoperativeDiagnosisSection" bodyCondition="_vKyUQ4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vKyUQ4okEeSkH97cUQxLGA" name="body" constrainedElement="_vKyUQIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vKyURIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PreoperativeDiagnosisSection))->asSequence()->any(true).oclAsType(consol::PreoperativeDiagnosisSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vKyUQYokEeSkH97cUQxLGA" type="_Cu6qMDVzEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vKyUQookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vKziYIokEeSkH97cUQxLGA" name="getProcedureEstimatedBloodLossSection" bodyCondition="_vKziY4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vKziY4okEeSkH97cUQxLGA" name="body" constrainedElement="_vKziYIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vKziZIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureEstimatedBloodLossSection))->asSequence()->any(true).oclAsType(consol::ProcedureEstimatedBloodLossSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vKziYYokEeSkH97cUQxLGA" type="_TvcL8DVzEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vKziYookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vK0wgIokEeSkH97cUQxLGA" name="getProcedureFindingsSection" bodyCondition="_vK0wg4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vK0wg4okEeSkH97cUQxLGA" name="body" constrainedElement="_vK0wgIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vK0whIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureFindingsSection))->asSequence()->any(true).oclAsType(consol::ProcedureFindingsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vK0wgYokEeSkH97cUQxLGA" type="_W4UBYDVzEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vK0wgookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vK1-oIokEeSkH97cUQxLGA" name="getProcedureSpecimensTakenSection" bodyCondition="_vK1-o4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vK1-o4okEeSkH97cUQxLGA" name="body" constrainedElement="_vK1-oIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vK1-pIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureSpecimensTakenSection))->asSequence()->any(true).oclAsType(consol::ProcedureSpecimensTakenSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vK1-oYokEeSkH97cUQxLGA" type="_gSUdsDVzEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vK1-oookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vK3MwIokEeSkH97cUQxLGA" name="getProcedureDescriptionSection" bodyCondition="_vK3z0IokEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vK3z0IokEeSkH97cUQxLGA" name="body" constrainedElement="_vK3MwIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vK3z0YokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureDescriptionSection))->asSequence()->any(true).oclAsType(consol::ProcedureDescriptionSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vK3MwYokEeSkH97cUQxLGA" type="_HNUIIDVzEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vK3MwookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vK5B8IokEeSkH97cUQxLGA" name="getProcedureImplantsSection" bodyCondition="_vK5B84okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vK5B84okEeSkH97cUQxLGA" name="body" constrainedElement="_vK5B8IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vK5B9IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureImplantsSection))->asSequence()->any(true).oclAsType(consol::ProcedureImplantsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vK5B8YokEeSkH97cUQxLGA" type="_Z662wDVzEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vK5B8ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vK6QEIokEeSkH97cUQxLGA" name="getOperativeNoteFluidSection" bodyCondition="_vK6QE4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vK6QE4okEeSkH97cUQxLGA" name="body" constrainedElement="_vK6QEIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vK6QFIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::OperativeNoteFluidSection))->asSequence()->any(true).oclAsType(consol::OperativeNoteFluidSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vK6QEYokEeSkH97cUQxLGA" type="_vHfXoDVyEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vK6QEookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vK7eMIokEeSkH97cUQxLGA" name="getOperativeNoteSurgicalProcedureSection" bodyCondition="_vK7eM4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vK7eM4okEeSkH97cUQxLGA" name="body" constrainedElement="_vK7eMIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vK7eNIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::OperativeNoteSurgicalProcedureSection))->asSequence()->any(true).oclAsType(consol::OperativeNoteSurgicalProcedureSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vK7eMYokEeSkH97cUQxLGA" type="_zel6wDVyEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vK7eMookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vK8sUIokEeSkH97cUQxLGA" name="getPlanOfCareSection" bodyCondition="_vK8sU4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vK8sU4okEeSkH97cUQxLGA" name="body" constrainedElement="_vK8sUIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vK8sVIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfCareSection))->asSequence()->any(true).oclAsType(consol::PlanOfCareSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vK8sUYokEeSkH97cUQxLGA" type="_2NP-QxSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vK8sUookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vK96cIokEeSkH97cUQxLGA" name="getPlannedProcedureSection" bodyCondition="_vK96c4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vK96c4okEeSkH97cUQxLGA" name="body" constrainedElement="_vK96cIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vK96dIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlannedProcedureSection))->asSequence()->any(true).oclAsType(consol::PlannedProcedureSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vK96cYokEeSkH97cUQxLGA" type="_3b6E4DVyEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vK96cookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vK_IkIokEeSkH97cUQxLGA" name="getProcedureDispositionSection" bodyCondition="_vK_Ik4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vK_Ik4okEeSkH97cUQxLGA" name="body" constrainedElement="_vK_IkIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vK_IlIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureDispositionSection))->asSequence()->any(true).oclAsType(consol::ProcedureDispositionSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vK_IkYokEeSkH97cUQxLGA" type="_QhXGYDVzEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vK_IkookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vLAWsIokEeSkH97cUQxLGA" name="getProcedureIndicationsSection" bodyCondition="_vLAWs4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vLAWs4okEeSkH97cUQxLGA" name="body" constrainedElement="_vLAWsIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vLAWtIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureIndicationsSection))->asSequence()->any(true).oclAsType(consol::ProcedureIndicationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vLAWsYokEeSkH97cUQxLGA" type="_cjmJMDVzEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vLAWsookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vLBk0IokEeSkH97cUQxLGA" name="getSurgicalDrainsSection" bodyCondition="_vLBk04okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vLBk04okEeSkH97cUQxLGA" name="body" constrainedElement="_vLBk0IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vLCL4IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::SurgicalDrainsSection))->asSequence()->any(true).oclAsType(consol::SurgicalDrainsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vLBk0YokEeSkH97cUQxLGA" type="_luQh8DVzEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vLBk0ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_LuYEsD7YEeGvOdejHZ7dYg" name="ProcedureNote">
      <ownedRule xmi:id="_NBpHsD-6EeGtTIIxHid14Q" name="ProcedureNoteHasAnAssementAndPlanSectionOrIndividualAssementAndPlanSections" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_NBpHsT-6EeGtTIIxHid14Q">
          <language>OCL</language>
          <body>(self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfCareSection)) and  self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentSection))) xor self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentAndPlanSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Ot-tsD-6EeGtTIIxHid14Q" name="ProcedureNoteDoesNotHaveIndividualAssementAndPlanSectionsWhenAssementAndPlanSectionPresent" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Ot-tsT-6EeGtTIIxHid14Q">
          <language>OCL</language>
          <body>(self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfCareSection)) or  self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentSection))) xor self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentAndPlanSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_KkMxIGjIEeGNoZ3kEkcY2A" name="ProcedureNoteDoesNotHaveChiefComplaintAndReasonForVisitWithChiefComplaintSectionOrReasonSection" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_KkMxIWjIEeGNoZ3kEkcY2A">
          <language>OCL</language>
          <body>(self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection)) or  self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))) xor self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_fHsUwPK8EeGFUPBL8qS7yQ" name="ProcedureNoteSectionTitles" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lyeKsPK8EeGFUPBL8qS7yQ">
          <language>OCL</language>
          <body>self.getAllSections()->forAll(section : cda::Section | not section.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vLCL4YokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsTemplateId" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vLCy8IokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.1.6')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vLI5kIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsCodeP" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vLI5kYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vLGdUIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsCode" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vLGdUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = '28570-0' or value.code = '11505-5' or value.code = '18744-3' or value.code = '18745-0' or value.code = '18746-8' or value.code = '18751-8' or value.code = '18753-4' or value.code = '18836-7' or value.code = '28577-5' or value.code = '28625-2' or value.code = '29757-2' or value.code = '33721-2' or value.code = '34121-4' or value.code = '34896-1' or value.code = '34899-5' or value.code = '47048-4' or value.code = '48807-2'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vLcbkIokEeSkH97cUQxLGA" name="ProcedureNoteComponentOf" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vLcbkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->one(componentOf : cda::Component1 | not componentOf.oclIsUndefined() and componentOf.oclIsKindOf(cda::Component1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vLgF8IokEeSkH97cUQxLGA" name="ProcedureNoteAssessmentSection" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vLgF8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vLhUEIokEeSkH97cUQxLGA" name="ProcedureNotePlanOfCareSection" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vLhUEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfCareSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vLiiMIokEeSkH97cUQxLGA" name="ProcedureNoteAssessmentAndPlanSection" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vLiiMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentAndPlanSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vLjwUIokEeSkH97cUQxLGA" name="ProcedureNoteComplicationsSection" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vLjwUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ComplicationsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vLk-cIokEeSkH97cUQxLGA" name="ProcedureNotePostprocedureDiagnosisSection" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vLk-cYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PostprocedureDiagnosisSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vLmMkIokEeSkH97cUQxLGA" name="ProcedureNoteProcedureDescriptionSection" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vLmMkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureDescriptionSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vLnasYokEeSkH97cUQxLGA" name="ProcedureNoteProcedureIndicationsSection" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vLnasookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureIndicationsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vLoo0YokEeSkH97cUQxLGA" name="ProcedureNoteAllergiesSectionEntriesOptional" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vLoo0ookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSectionEntriesOptional))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vLp28ookEeSkH97cUQxLGA" name="ProcedureNoteAnesthesiaSection" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vLp284okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AnesthesiaSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vLrFE4okEeSkH97cUQxLGA" name="ProcedureNoteChiefComplaintSection" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vLrFFIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vLsTMYokEeSkH97cUQxLGA" name="ProcedureNoteChiefComplaintAndReasonForVisitSection" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vLsTMookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vLthUIokEeSkH97cUQxLGA" name="ProcedureNoteFamilyHistorySection" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vLthUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::FamilyHistorySection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vLuvcYokEeSkH97cUQxLGA" name="ProcedureNoteHistoryOfPastIllnessSection" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vLuvcookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HistoryOfPastIllnessSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vLv9kIokEeSkH97cUQxLGA" name="ProcedureNoteHistoryOfPresentIllnessSection" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vLv9kYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HistoryOfPresentIllnessSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vLxLsookEeSkH97cUQxLGA" name="ProcedureNoteMedicalHistorySection" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vLxLs4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicalHistorySection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vLyZ0ookEeSkH97cUQxLGA" name="ProcedureNoteMedicationsSectionEntriesOptional" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vLyZ04okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsSectionEntriesOptional))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vLzn8IokEeSkH97cUQxLGA" name="ProcedureNoteMedicationsAdministeredSection" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vLzn8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsAdministeredSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vL02EYokEeSkH97cUQxLGA" name="ProcedureNotePhysicalExamSection" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vL02EookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PhysicalExamSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vL2EMIokEeSkH97cUQxLGA" name="ProcedureNotePlannedProcedureSection" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vL2EMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlannedProcedureSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vL3SUookEeSkH97cUQxLGA" name="ProcedureNoteProcedureDispositionSection" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vL3SU4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureDispositionSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vL4gcIokEeSkH97cUQxLGA" name="ProcedureNoteProcedureEstimatedBloodLossSection" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vL4gcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureEstimatedBloodLossSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vL5ukIokEeSkH97cUQxLGA" name="ProcedureNoteProcedureFindingsSection" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vL5ukYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureFindingsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vL68sIokEeSkH97cUQxLGA" name="ProcedureNoteProcedureImplantsSection" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vL68sYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureImplantsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vL8K0IokEeSkH97cUQxLGA" name="ProcedureNoteProcedureSpecimensTakenSection" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vL8K0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureSpecimensTakenSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vL9Y8YokEeSkH97cUQxLGA" name="ProcedureNoteProceduresSectionEntriesOptional" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vL9Y8ookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSectionEntriesOptional))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vL-nEIokEeSkH97cUQxLGA" name="ProcedureNoteReasonForVisitSection" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vL-nEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vMAcQIokEeSkH97cUQxLGA" name="ProcedureNoteReviewOfSystemsSection" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vMAcQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReviewOfSystemsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vMBqYIokEeSkH97cUQxLGA" name="ProcedureNoteSocialHistorySection" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vMBqYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::SocialHistorySection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vZXi0IokEeSkH97cUQxLGA" name="ProcedureNoteParticipant1" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vZXi0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->exists(participant : cda::Participant1 | not participant.oclIsUndefined() and participant.oclIsKindOf(rim::Participation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vZfeoIokEeSkH97cUQxLGA" name="ProcedureNoteDocumentationOf" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vZfeoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->exists(documentationOf : cda::DocumentationOf | not documentationOf.oclIsUndefined() and documentationOf.oclIsKindOf(cda::DocumentationOf))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wTNU4IokEeSkH97cUQxLGA" name="ProcedureNoteComponentOfEncompassingEncounter5LocationHealthCareFacilityId" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wTNU4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null).location->excluding(null).healthCareFacility->excluding(null)->reject((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wTN78IokEeSkH97cUQxLGA" name="ProcedureNoteComponentOfEncompassingEncounter5LocationHealthCareFacility" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wTN78YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null).location->excluding(null)->reject(healthCareFacility->exists(healthCareFacility : cda::HealthCareFacility | not healthCareFacility.oclIsUndefined() and healthCareFacility.oclIsKindOf(cda::HealthCareFacility)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wTOjAIokEeSkH97cUQxLGA" name="ProcedureNoteComponentOfEncompassingEncounter5EncounterParticipantTypeCode" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wTOjAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null).encounterParticipant->excluding(null)->select(typeCode = vocab::x_EncounterParticipant::REF)->select(typeCode = vocab::x_EncounterParticipant::REF)->reject(typeCode=vocab::x_EncounterParticipant::REF)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wTPKEIokEeSkH97cUQxLGA" name="ProcedureNoteComponentOfEncompassingEncounter5Code" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wTPKEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wTPKEookEeSkH97cUQxLGA" name="ProcedureNoteComponentOfEncompassingEncounter5Location" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wTPKE4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(location->exists(location : cda::Location | not location.oclIsUndefined() and location.oclIsKindOf(cda::Location)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wTPxIIokEeSkH97cUQxLGA" name="ProcedureNoteComponentOfEncompassingEncounter5EncounterParticipant" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wTPxIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(encounterParticipant->select(encounterParticipant : cda::EncounterParticipant | not encounterParticipant.oclIsUndefined() and encounterParticipant.oclIsKindOf(cda::EncounterParticipant))->select(typeCode = vocab::x_EncounterParticipant::REF)->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wTQYMIokEeSkH97cUQxLGA" name="ProcedureNoteComponentOfEncompassingEncounter5" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wTQYMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null)->reject(encompassingEncounter->one(encompassingEncounter : cda::EncompassingEncounter | not encompassingEncounter.oclIsUndefined() and encompassingEncounter.oclIsKindOf(cda::EncompassingEncounter)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wTTbgIokEeSkH97cUQxLGA" name="ProcedureNoteDocumentationOfServiceEvent1PrimaryPerformerAssignedEntityCodeP" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wTTbgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null).performer->excluding(null)->select(typeCode = vocab::x_ServiceEventPerformer::PPRF).assignedEntity->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wTTbgookEeSkH97cUQxLGA" name="ProcedureNoteDocumentationOfServiceEvent1PrimaryPerformerAssignedEntityCode" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wTTbg4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null).performer->excluding(null)->select(typeCode = vocab::x_ServiceEventPerformer::PPRF).assignedEntity->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined() and code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = code.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.101' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wTUCkIokEeSkH97cUQxLGA" name="ProcedureNoteDocumentationOfServiceEvent1PrimaryPerformerTypeCode" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wTUCkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null).performer->excluding(null)->select(typeCode = vocab::x_ServiceEventPerformer::PPRF)->select(typeCode = vocab::x_ServiceEventPerformer::PPRF)->reject(typeCode=vocab::x_ServiceEventPerformer::PPRF)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wTUpoIokEeSkH97cUQxLGA" name="ProcedureNoteDocumentationOfServiceEvent1PrimaryPerformerAssignedEntity" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wTUpoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null).performer->excluding(null)->select(typeCode = vocab::x_ServiceEventPerformer::PPRF)->select(typeCode = vocab::x_ServiceEventPerformer::PPRF)->reject(assignedEntity->one(assignedEntity : cda::AssignedEntity | not assignedEntity.oclIsUndefined() and assignedEntity.oclIsKindOf(cda::AssignedEntity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wTUpoookEeSkH97cUQxLGA" name="ProcedureNoteDocumentationOfServiceEvent1ProcedureCodes" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wTUpo4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject(code.codeSystem = '2.16.840.1.113883.6.104' or code.codeSystem = '2.16.840.1.113883.6.12' or code.codeSystem = '2.16.840.1.113883.6.96')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wTVQsIokEeSkH97cUQxLGA" name="ProcedureNoteDocumentationOfServiceEvent1EffectiveTimeHasLow" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wTVQsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject(not effectiveTime.low.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wTV3wIokEeSkH97cUQxLGA" name="ProcedureNoteDocumentationOfServiceEvent1EffectiveTimeHasHighWhenNoWidth" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wTV3wYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject(not effectiveTime.width.oclIsUndefined() xor not effectiveTime.high.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wTV3wookEeSkH97cUQxLGA" name="ProcedureNoteDocumentationOfServiceEvent1EffectiveTimeNoHighIfWidth" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wTV3w4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject(not effectiveTime.width.oclIsUndefined() xor not effectiveTime.high.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wTWe0IokEeSkH97cUQxLGA" name="ProcedureNoteDocumentationOfServiceEvent1PreciseToTheDay" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wTWe0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject((not effectiveTime.low.value.oclIsUndefined() implies effectiveTime.low.value.size() >= 8) and (not effectiveTime.high.value.oclIsUndefined() implies effectiveTime.high.value.size() >= 8))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wTXF4IokEeSkH97cUQxLGA" name="ProcedureNoteDocumentationOfServiceEvent1PreciseToTheMinute" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wTXF4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject((not effectiveTime.low.value.oclIsUndefined() implies effectiveTime.low.value.size() >= 12) and (not effectiveTime.high.value.oclIsUndefined() implies effectiveTime.high.value.size() >= 12))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wTXF4ookEeSkH97cUQxLGA" name="ProcedureNoteDocumentationOfServiceEvent1PreciseToTheSecond" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wTXF44okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject((not effectiveTime.low.value.oclIsUndefined() implies effectiveTime.low.value.size() >= 14) and (not effectiveTime.high.value.oclIsUndefined() implies effectiveTime.high.value.size() >= 14))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wTXs8IokEeSkH97cUQxLGA" name="ProcedureNoteDocumentationOfServiceEvent1IfMorePreciseThanDayIncludeTimeZoneOffset" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wTXs8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject((not effectiveTime.low.value.oclIsUndefined() and effectiveTime.low.value.size() > 8 implies effectiveTime.low.value.size() >= 15) and (not effectiveTime.high.value.oclIsUndefined() and effectiveTime.high.value.size() > 8 implies effectiveTime.high.value.size() >= 15))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wTXs8ookEeSkH97cUQxLGA" name="ProcedureNoteDocumentationOfServiceEvent1Code" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wTXs84okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wTYUAIokEeSkH97cUQxLGA" name="ProcedureNoteDocumentationOfServiceEvent1EffectiveTime" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wTYUAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject((effectiveTime.oclIsUndefined() or effectiveTime.isNullFlavorUndefined()) implies (not effectiveTime.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wTY7EIokEeSkH97cUQxLGA" name="ProcedureNoteDocumentationOfServiceEvent1PrimaryPerformer" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wTY7EYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject(performer->select(performer : cda::Performer1 | not performer.oclIsUndefined() and performer.oclIsKindOf(cda::Performer1))->select(typeCode = vocab::x_ServiceEventPerformer::PPRF)->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wTY7EookEeSkH97cUQxLGA" name="ProcedureNoteDocumentationOfServiceEvent1" constrainedElement="_LuYEsD7YEeGvOdejHZ7dYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wTY7E4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null)->reject(serviceEvent->one(serviceEvent : cda::ServiceEvent | not serviceEvent.oclIsUndefined() and serviceEvent.oclIsKindOf(cda::ServiceEvent)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Luag8D7YEeGvOdejHZ7dYg" general="_2DNRcBSVEeGGzu7fmW9pXw"/>
      <ownedOperation xmi:id="_vLgtAIokEeSkH97cUQxLGA" name="getAssessmentSection" bodyCondition="_vLgtA4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vLgtA4okEeSkH97cUQxLGA" name="body" constrainedElement="_vLgtAIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vLgtBIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentSection))->asSequence()->any(true).oclAsType(consol::AssessmentSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vLgtAYokEeSkH97cUQxLGA" type="_W8pI4DszEeGvzMYhXuqAEA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vLgtAookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vLh7IIokEeSkH97cUQxLGA" name="getPlanOfCareSection" bodyCondition="_vLh7I4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vLh7I4okEeSkH97cUQxLGA" name="body" constrainedElement="_vLh7IIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vLh7JIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfCareSection))->asSequence()->any(true).oclAsType(consol::PlanOfCareSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vLh7IYokEeSkH97cUQxLGA" type="_2NP-QxSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vLh7IookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vLjJQIokEeSkH97cUQxLGA" name="getAssessmentAndPlanSection" bodyCondition="_vLjJQ4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vLjJQ4okEeSkH97cUQxLGA" name="body" constrainedElement="_vLjJQIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vLjJRIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentAndPlanSection))->asSequence()->any(true).oclAsType(consol::AssessmentAndPlanSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vLjJQYokEeSkH97cUQxLGA" type="_2Rwq0BSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vLjJQookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vLkXYIokEeSkH97cUQxLGA" name="getComplicationsSection" bodyCondition="_vLkXY4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vLkXY4okEeSkH97cUQxLGA" name="body" constrainedElement="_vLkXYIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vLkXZIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ComplicationsSection))->asSequence()->any(true).oclAsType(consol::ComplicationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vLkXYYokEeSkH97cUQxLGA" type="_R1OXcDVyEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vLkXYookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vLllgIokEeSkH97cUQxLGA" name="getPostprocedureDiagnosisSection" bodyCondition="_vLllg4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vLllg4okEeSkH97cUQxLGA" name="body" constrainedElement="_vLllgIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vLllhIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PostprocedureDiagnosisSection))->asSequence()->any(true).oclAsType(consol::PostprocedureDiagnosisSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vLllgYokEeSkH97cUQxLGA" type="_-jlSMDVyEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vLllgookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vLmzoIokEeSkH97cUQxLGA" name="getProcedureDescriptionSection" bodyCondition="_vLmzo4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vLmzo4okEeSkH97cUQxLGA" name="body" constrainedElement="_vLmzoIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vLnasIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureDescriptionSection))->asSequence()->any(true).oclAsType(consol::ProcedureDescriptionSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vLmzoYokEeSkH97cUQxLGA" type="_HNUIIDVzEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vLmzoookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vLoBwIokEeSkH97cUQxLGA" name="getProcedureIndicationsSection" bodyCondition="_vLoBw4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vLoBw4okEeSkH97cUQxLGA" name="body" constrainedElement="_vLoBwIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vLoo0IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureIndicationsSection))->asSequence()->any(true).oclAsType(consol::ProcedureIndicationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vLoBwYokEeSkH97cUQxLGA" type="_cjmJMDVzEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vLoBwookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vLpP4IokEeSkH97cUQxLGA" name="getAllergiesSectionEntriesOptional" bodyCondition="_vLp28IokEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vLp28IokEeSkH97cUQxLGA" name="body" constrainedElement="_vLpP4IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vLp28YokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSectionEntriesOptional))->asSequence()->any(true).oclAsType(consol::AllergiesSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vLpP4YokEeSkH97cUQxLGA" type="_bGzYgBVdEeGQCvUGzi1kDQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vLpP4ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vLqeAIokEeSkH97cUQxLGA" name="getAnesthesiaSection" bodyCondition="_vLrFEYokEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vLrFEYokEeSkH97cUQxLGA" name="body" constrainedElement="_vLqeAIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vLrFEookEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AnesthesiaSection))->asSequence()->any(true).oclAsType(consol::AnesthesiaSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vLqeAYokEeSkH97cUQxLGA" type="_OA_Q0DVyEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vLrFEIokEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vLrsIIokEeSkH97cUQxLGA" name="getChiefComplaintSection" bodyCondition="_vLrsI4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vLrsI4okEeSkH97cUQxLGA" name="body" constrainedElement="_vLrsIIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vLsTMIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection))->asSequence()->any(true).oclAsType(consol::ChiefComplaintSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vLrsIYokEeSkH97cUQxLGA" type="_2PWQCBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vLrsIookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vLs6QIokEeSkH97cUQxLGA" name="getChiefComplaintAndReasonForVisitSection" bodyCondition="_vLs6Q4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vLs6Q4okEeSkH97cUQxLGA" name="body" constrainedElement="_vLs6QIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vLs6RIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))->asSequence()->any(true).oclAsType(consol::ChiefComplaintAndReasonForVisitSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vLs6QYokEeSkH97cUQxLGA" type="_oI7CQCsaEeGHF88-qhhUMA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vLs6QookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vLuIYIokEeSkH97cUQxLGA" name="getFamilyHistorySection" bodyCondition="_vLuIY4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vLuIY4okEeSkH97cUQxLGA" name="body" constrainedElement="_vLuIYIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vLuvcIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::FamilyHistorySection))->asSequence()->any(true).oclAsType(consol::FamilyHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vLuIYYokEeSkH97cUQxLGA" type="_2IWQIxSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vLuIYookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vLvWgIokEeSkH97cUQxLGA" name="getHistoryOfPastIllnessSection" bodyCondition="_vLvWg4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vLvWg4okEeSkH97cUQxLGA" name="body" constrainedElement="_vLvWgIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vLvWhIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HistoryOfPastIllnessSection))->asSequence()->any(true).oclAsType(consol::HistoryOfPastIllnessSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vLvWgYokEeSkH97cUQxLGA" type="_2PQJcxSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vLvWgookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vLwkoIokEeSkH97cUQxLGA" name="getHistoryOfPresentIllnessSection" bodyCondition="_vLxLsIokEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vLxLsIokEeSkH97cUQxLGA" name="body" constrainedElement="_vLwkoIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vLxLsYokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HistoryOfPresentIllnessSection))->asSequence()->any(true).oclAsType(consol::HistoryOfPresentIllnessSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vLwkoYokEeSkH97cUQxLGA" type="_2PcWsRSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vLwkoookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vLxywIokEeSkH97cUQxLGA" name="getMedicalHistorySection" bodyCondition="_vLyZ0IokEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vLyZ0IokEeSkH97cUQxLGA" name="body" constrainedElement="_vLxywIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vLyZ0YokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicalHistorySection))->asSequence()->any(true).oclAsType(consol::MedicalHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vLxywYokEeSkH97cUQxLGA" type="_mEIgwDVyEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vLxywookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vLzA4IokEeSkH97cUQxLGA" name="getMedicationsSectionEntriesOptional" bodyCondition="_vLzA44okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vLzA44okEeSkH97cUQxLGA" name="body" constrainedElement="_vLzA4IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vLzA5IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsSectionEntriesOptional))->asSequence()->any(true).oclAsType(consol::MedicationsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vLzA4YokEeSkH97cUQxLGA" type="_iAoXEBVdEeGQCvUGzi1kDQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vLzA4ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vL0PAIokEeSkH97cUQxLGA" name="getMedicationsAdministeredSection" bodyCondition="_vL0PA4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vL0PA4okEeSkH97cUQxLGA" name="body" constrainedElement="_vL0PAIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vL02EIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsAdministeredSection))->asSequence()->any(true).oclAsType(consol::MedicationsAdministeredSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vL0PAYokEeSkH97cUQxLGA" type="_2Poj_BSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vL0PAookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vL1dIIokEeSkH97cUQxLGA" name="getPhysicalExamSection" bodyCondition="_vL1dI4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vL1dI4okEeSkH97cUQxLGA" name="body" constrainedElement="_vL1dIIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vL1dJIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PhysicalExamSection))->asSequence()->any(true).oclAsType(consol::PhysicalExamSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vL1dIYokEeSkH97cUQxLGA" type="_2Pxt0hSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vL1dIookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vL2rQIokEeSkH97cUQxLGA" name="getPlannedProcedureSection" bodyCondition="_vL3SUIokEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vL3SUIokEeSkH97cUQxLGA" name="body" constrainedElement="_vL2rQIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vL3SUYokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlannedProcedureSection))->asSequence()->any(true).oclAsType(consol::PlannedProcedureSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vL2rQYokEeSkH97cUQxLGA" type="_3b6E4DVyEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vL2rQookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vL35YIokEeSkH97cUQxLGA" name="getProcedureDispositionSection" bodyCondition="_vL35Y4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vL35Y4okEeSkH97cUQxLGA" name="body" constrainedElement="_vL35YIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vL35ZIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureDispositionSection))->asSequence()->any(true).oclAsType(consol::ProcedureDispositionSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vL35YYokEeSkH97cUQxLGA" type="_QhXGYDVzEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vL35YookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vL5HgIokEeSkH97cUQxLGA" name="getProcedureEstimatedBloodLossSection" bodyCondition="_vL5Hg4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vL5Hg4okEeSkH97cUQxLGA" name="body" constrainedElement="_vL5HgIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vL5HhIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureEstimatedBloodLossSection))->asSequence()->any(true).oclAsType(consol::ProcedureEstimatedBloodLossSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vL5HgYokEeSkH97cUQxLGA" type="_TvcL8DVzEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vL5HgookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vL6VoIokEeSkH97cUQxLGA" name="getProcedureFindingsSection" bodyCondition="_vL6Vo4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vL6Vo4okEeSkH97cUQxLGA" name="body" constrainedElement="_vL6VoIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vL6VpIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureFindingsSection))->asSequence()->any(true).oclAsType(consol::ProcedureFindingsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vL6VoYokEeSkH97cUQxLGA" type="_W4UBYDVzEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vL6VoookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vL7jwIokEeSkH97cUQxLGA" name="getProcedureImplantsSection" bodyCondition="_vL7jw4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vL7jw4okEeSkH97cUQxLGA" name="body" constrainedElement="_vL7jwIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vL7jxIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureImplantsSection))->asSequence()->any(true).oclAsType(consol::ProcedureImplantsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vL7jwYokEeSkH97cUQxLGA" type="_Z662wDVzEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vL7jwookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vL8x4IokEeSkH97cUQxLGA" name="getProcedureSpecimensTakenSection" bodyCondition="_vL8x44okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vL8x44okEeSkH97cUQxLGA" name="body" constrainedElement="_vL8x4IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vL9Y8IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureSpecimensTakenSection))->asSequence()->any(true).oclAsType(consol::ProcedureSpecimensTakenSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vL8x4YokEeSkH97cUQxLGA" type="_gSUdsDVzEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vL8x4ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vL-AAIokEeSkH97cUQxLGA" name="getProceduresSectionEntriesOptional" bodyCondition="_vL-AA4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vL-AA4okEeSkH97cUQxLGA" name="body" constrainedElement="_vL-AAIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vL-ABIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSectionEntriesOptional))->asSequence()->any(true).oclAsType(consol::ProceduresSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vL-AAYokEeSkH97cUQxLGA" type="_s9Ig4BVdEeGQCvUGzi1kDQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vL-AAookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vL_1MIokEeSkH97cUQxLGA" name="getReasonForVisitSection" bodyCondition="_vL_1M4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vL_1M4okEeSkH97cUQxLGA" name="body" constrainedElement="_vL_1MIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vL_1NIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))->asSequence()->any(true).oclAsType(consol::ReasonForVisitSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vL_1MYokEeSkH97cUQxLGA" type="_Nm64UCscEeGHF88-qhhUMA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vL_1MookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vMBDUIokEeSkH97cUQxLGA" name="getReviewOfSystemsSection" bodyCondition="_vMBDU4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vMBDU4okEeSkH97cUQxLGA" name="body" constrainedElement="_vMBDUIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vMBDVIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReviewOfSystemsSection))->asSequence()->any(true).oclAsType(consol::ReviewOfSystemsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vMBDUYokEeSkH97cUQxLGA" type="_2RqkMBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vMBDUookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vMCRcIokEeSkH97cUQxLGA" name="getSocialHistorySection" bodyCondition="_vMCRc4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vMCRc4okEeSkH97cUQxLGA" name="body" constrainedElement="_vMCRcIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vMCRdIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::SocialHistorySection))->asSequence()->any(true).oclAsType(consol::SocialHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vMCRcYokEeSkH97cUQxLGA" type="_2JKvgBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vMCRcookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_UBzvED_LEeGXieeKs7NJjA" name="ProgressNote">
      <ownedComment xmi:id="_m480MD_LEeGXieeKs7NJjA">
        <body>A Progress Note documents a patient's clinical status during a hospitalization or outpatient visit; thus, it is associated with an encounter.&#xD;
Taber's  medical dictionary defines a Progress Note as &quot;An ongoing record of a patient's illness and treatment. Physicians, nurses, consultants, and therapists record their notes concerning the progress or lack of progress made by the patient between the time of the previous note and the most recent note.&quot; &#xD;
Mosby's  medical dictionary defines a Progress Note as &quot;Notes made by a nurse, physician, social worker, physical therapist, and other health care professionals that describe the patient's condition and the treatment given or planned.&quot;&#xD;
A Progress Note is not a re-evaluation note. A Progress Note is not intended to be a Progress Report for Medicare. Medicare B Section 1833(e) defines the requirements of a Medicare Progress Report.</body>
      </ownedComment>
      <ownedRule xmi:id="_iu5zoD_hEeGysvimLgYv4A" name="ProgressNoteHasAnAssementAndPlanSectionOrIndividualAssementAndPlanSections" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iu5zoT_hEeGysvimLgYv4A">
          <language>OCL</language>
          <body>(self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfCareSection)) and  self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentSection))) xor self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentAndPlanSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lKUtMD_hEeGysvimLgYv4A" name="ProgressNoteDoesNotHaveIndividualAssementAndPlanSectionsWhenAssementAndPlanSectionPresent" constrainedElement="_-Qa60D1jEeG3tde5scYNWA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lKUtMT_hEeGysvimLgYv4A">
          <language>OCL</language>
          <body>(self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfCareSection)) or  self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentSection))) xor self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentAndPlanSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vMC4gIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsTemplateId" constrainedElement="_UBzvED_LEeGXieeKs7NJjA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vMC4gYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.1.9')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vMI_IIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsCodeP" constrainedElement="_UBzvED_LEeGXieeKs7NJjA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vMI_IYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vMF70IokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsCode" constrainedElement="_UBzvED_LEeGXieeKs7NJjA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vMF70YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = '11506-3' or value.code = '18733-6' or value.code = '18762-5' or value.code = '28569-2' or value.code = '28617-9' or value.code = '34900-1' or value.code = '34904-3' or value.code = '18764-1' or value.code = '28623-7' or value.code = '11507-1' or value.code = '11508-9' or value.code = '11509-7' or value.code = '28627-8' or value.code = '11510-5' or value.code = '28656-7' or value.code = '11512-1' or value.code = '34126-3' or value.code = '15507-7' or value.code = '34129-7' or value.code = '34125-5' or value.code = '34130-5' or value.code = '34131-3' or value.code = '34124-8' or value.code = '34127-1' or value.code = '34128-9' or value.code = '34901-9' or value.code = '34132-1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vMY2wIokEeSkH97cUQxLGA" name="ProgressNoteDocumentationOf" constrainedElement="_UBzvED_LEeGXieeKs7NJjA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vMY2wYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->one(documentationOf : cda::DocumentationOf | not documentationOf.oclIsUndefined() and documentationOf.oclIsKindOf(cda::DocumentationOf))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vMZd0IokEeSkH97cUQxLGA" name="ProgressNoteComponentOf" constrainedElement="_UBzvED_LEeGXieeKs7NJjA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vMZd0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->one(componentOf : cda::Component1 | not componentOf.oclIsUndefined() and componentOf.oclIsKindOf(cda::Component1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vMb6EYokEeSkH97cUQxLGA" name="ProgressNoteAssessmentSection" constrainedElement="_UBzvED_LEeGXieeKs7NJjA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vMchIIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vMdINYokEeSkH97cUQxLGA" name="ProgressNotePlanOfCareSection" constrainedElement="_UBzvED_LEeGXieeKs7NJjA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vMdINookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfCareSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vMeWVYokEeSkH97cUQxLGA" name="ProgressNoteAssessmentAndPlanSection" constrainedElement="_UBzvED_LEeGXieeKs7NJjA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vMeWVookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentAndPlanSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vMfkdYokEeSkH97cUQxLGA" name="ProgressNoteAllergiesSectionEntriesOptional" constrainedElement="_UBzvED_LEeGXieeKs7NJjA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vMfkdookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSectionEntriesOptional))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vMgylYokEeSkH97cUQxLGA" name="ProgressNoteChiefComplaintSection" constrainedElement="_UBzvED_LEeGXieeKs7NJjA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vMgylookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vMiAtYokEeSkH97cUQxLGA" name="ProgressNoteInterventionsSection" constrainedElement="_UBzvED_LEeGXieeKs7NJjA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vMiAtookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::InterventionsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vMjO1YokEeSkH97cUQxLGA" name="ProgressNoteMedicationsSectionEntriesOptional" constrainedElement="_UBzvED_LEeGXieeKs7NJjA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vMjO1ookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsSectionEntriesOptional))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vMkc9YokEeSkH97cUQxLGA" name="ProgressNoteObjectiveSection" constrainedElement="_UBzvED_LEeGXieeKs7NJjA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vMkc9ookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ObjectiveSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vMlrFYokEeSkH97cUQxLGA" name="ProgressNotePhysicalExamSection" constrainedElement="_UBzvED_LEeGXieeKs7NJjA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vMlrFookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PhysicalExamSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vMm5NYokEeSkH97cUQxLGA" name="ProgressNoteProblemSectionEntriesOptional" constrainedElement="_UBzvED_LEeGXieeKs7NJjA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vMm5NookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSectionEntriesOptional))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vMouYIokEeSkH97cUQxLGA" name="ProgressNoteResultsSectionEntriesOptional" constrainedElement="_UBzvED_LEeGXieeKs7NJjA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vMouYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ResultsSectionEntriesOptional))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vMp8gIokEeSkH97cUQxLGA" name="ProgressNoteReviewOfSystemsSection" constrainedElement="_UBzvED_LEeGXieeKs7NJjA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vMp8gYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReviewOfSystemsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vMrKoIokEeSkH97cUQxLGA" name="ProgressNoteSubjectiveSection" constrainedElement="_UBzvED_LEeGXieeKs7NJjA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vMrKoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::SubjectiveSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vMrxtYokEeSkH97cUQxLGA" name="ProgressNoteVitalSignsSectionEntriesOptional" constrainedElement="_UBzvED_LEeGXieeKs7NJjA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vMsYwIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSectionEntriesOptional))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vZZYAIokEeSkH97cUQxLGA" name="ProgressNoteInstructionsSection" constrainedElement="_UBzvED_LEeGXieeKs7NJjA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vZZYAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::InstructionsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wTdMgIokEeSkH97cUQxLGA" name="ProgressNoteDocumentationOfServiceEvent2EffectiveTimeLow" constrainedElement="_UBzvED_LEeGXieeKs7NJjA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wTdMgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject(effectiveTime->forAll(not low.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wTdzkIokEeSkH97cUQxLGA" name="ProgressNoteDocumentationOfServiceEvent2EffectiveTimeHigh" constrainedElement="_UBzvED_LEeGXieeKs7NJjA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wTdzkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject(effectiveTime->forAll(width.oclIsUndefined() implies not high.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wTdzkookEeSkH97cUQxLGA" name="ProgressNoteDocumentationOfServiceEvent2PreciseToTheDay" constrainedElement="_UBzvED_LEeGXieeKs7NJjA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wTdzk4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject((not effectiveTime.low.value.oclIsUndefined() implies effectiveTime.low.value.size() >= 8) and (not effectiveTime.high.value.oclIsUndefined() implies effectiveTime.high.value.size() >= 8))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wTeaoIokEeSkH97cUQxLGA" name="ProgressNoteDocumentationOfServiceEvent2PreciseToTheMinute" constrainedElement="_UBzvED_LEeGXieeKs7NJjA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wTeaoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject((not effectiveTime.low.value.oclIsUndefined() implies effectiveTime.low.value.size() >= 12) and (not effectiveTime.high.value.oclIsUndefined() implies effectiveTime.high.value.size() >= 12))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wTfBsIokEeSkH97cUQxLGA" name="ProgressNoteDocumentationOfServiceEvent2PreciseToTheSecond" constrainedElement="_UBzvED_LEeGXieeKs7NJjA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wTfBsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject((not effectiveTime.low.value.oclIsUndefined() implies effectiveTime.low.value.size() >= 14) and (not effectiveTime.high.value.oclIsUndefined() implies effectiveTime.high.value.size() >= 14))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wTfBsookEeSkH97cUQxLGA" name="ProgressNoteDocumentationOfServiceEvent2IfMorePreciseThanDayIncludeTimeZoneOffset" constrainedElement="_UBzvED_LEeGXieeKs7NJjA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wTfBs4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject((not effectiveTime.low.value.oclIsUndefined() and effectiveTime.low.value.size() > 8 implies effectiveTime.low.value.size() >= 15) and (not effectiveTime.high.value.oclIsUndefined() and effectiveTime.high.value.size() > 8 implies effectiveTime.high.value.size() >= 15))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wTfowIokEeSkH97cUQxLGA" name="ProgressNoteDocumentationOfServiceEvent2TemplateId" constrainedElement="_UBzvED_LEeGXieeKs7NJjA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wTfowYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject(templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.21.3.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wTfowookEeSkH97cUQxLGA" name="ProgressNoteDocumentationOfServiceEvent2ClassCode" constrainedElement="_UBzvED_LEeGXieeKs7NJjA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wTfow4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject(isDefined('classCode') and classCode=vocab::ActClassRoot::PCPR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wTgP0IokEeSkH97cUQxLGA" name="ProgressNoteDocumentationOfServiceEvent2EffectiveTime" constrainedElement="_UBzvED_LEeGXieeKs7NJjA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wTgP0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject((effectiveTime.oclIsUndefined() or effectiveTime.isNullFlavorUndefined()) implies (not effectiveTime.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wTg24IokEeSkH97cUQxLGA" name="ProgressNoteDocumentationOfServiceEvent2" constrainedElement="_UBzvED_LEeGXieeKs7NJjA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wTg24YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null)->reject(serviceEvent->one(serviceEvent : cda::ServiceEvent | not serviceEvent.oclIsUndefined() and serviceEvent.oclIsKindOf(cda::ServiceEvent)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wTisEIokEeSkH97cUQxLGA" name="ProgressNoteComponentOfEncompassingEncounter6LocationHealthCareFacility1Id" constrainedElement="_UBzvED_LEeGXieeKs7NJjA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wTisEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null).location->excluding(null).healthCareFacility->excluding(null)->reject((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (id->size() = 1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wTjTIIokEeSkH97cUQxLGA" name="ProgressNoteComponentOfEncompassingEncounter6LocationHealthCareFacility" constrainedElement="_UBzvED_LEeGXieeKs7NJjA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wTjTIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null).location->excluding(null)->reject(healthCareFacility->one(healthCareFacility : cda::HealthCareFacility | not healthCareFacility.oclIsUndefined() and healthCareFacility.oclIsKindOf(cda::HealthCareFacility)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wTjTIookEeSkH97cUQxLGA" name="ProgressNoteComponentOfEncompassingEncounter6PreciseToTheDay" constrainedElement="_UBzvED_LEeGXieeKs7NJjA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wTj6MIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(not effectiveTime.value.oclIsUndefined() implies effectiveTime.value.size() >= 8)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wTj6MYokEeSkH97cUQxLGA" name="ProgressNoteComponentOfEncompassingEncounter6PreciseToTheMinute" constrainedElement="_UBzvED_LEeGXieeKs7NJjA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wTj6MookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(not effectiveTime.value.oclIsUndefined() implies effectiveTime.value.size() >= 12)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wTkhQIokEeSkH97cUQxLGA" name="ProgressNoteComponentOfEncompassingEncounter6PreciseToTheSecond" constrainedElement="_UBzvED_LEeGXieeKs7NJjA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wTkhQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(not effectiveTime.value.oclIsUndefined() implies effectiveTime.value.size() >= 14)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wTkhQookEeSkH97cUQxLGA" name="ProgressNoteComponentOfEncompassingEncounter6IfMorePreciseThanDayIncludeTimeZoneOffset" constrainedElement="_UBzvED_LEeGXieeKs7NJjA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wTlIUIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(not effectiveTime.value.oclIsUndefined() and effectiveTime.value.size() > 8 implies effectiveTime.value.size() >= 15)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wTlIUYokEeSkH97cUQxLGA" name="ProgressNoteComponentOfEncompassingEncounter6EffectiveTime" constrainedElement="_UBzvED_LEeGXieeKs7NJjA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wTlIUookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject((effectiveTime.oclIsUndefined() or effectiveTime.isNullFlavorUndefined()) implies (not effectiveTime.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wTlvYIokEeSkH97cUQxLGA" name="ProgressNoteComponentOfEncompassingEncounter6Id" constrainedElement="_UBzvED_LEeGXieeKs7NJjA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wTlvYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wTlvYookEeSkH97cUQxLGA" name="ProgressNoteComponentOfEncompassingEncounter6Location" constrainedElement="_UBzvED_LEeGXieeKs7NJjA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wTlvY4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(location->one(location : cda::Location | not location.oclIsUndefined() and location.oclIsKindOf(cda::Location)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wTmWcIokEeSkH97cUQxLGA" name="ProgressNoteComponentOfEncompassingEncounter6" constrainedElement="_UBzvED_LEeGXieeKs7NJjA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wTmWcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null)->reject(encompassingEncounter->one(encompassingEncounter : cda::EncompassingEncounter | not encompassingEncounter.oclIsUndefined() and encompassingEncounter.oclIsKindOf(cda::EncompassingEncounter)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_UCQbAD_LEeGXieeKs7NJjA" general="_2DNRcBSVEeGGzu7fmW9pXw"/>
      <ownedOperation xmi:id="_vMdIMIokEeSkH97cUQxLGA" name="getAssessmentSection" bodyCondition="_vMdIM4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vMdIM4okEeSkH97cUQxLGA" name="body" constrainedElement="_vMdIMIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vMdINIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentSection))->asSequence()->any(true).oclAsType(consol::AssessmentSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vMdIMYokEeSkH97cUQxLGA" type="_W8pI4DszEeGvzMYhXuqAEA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vMdIMookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vMeWUIokEeSkH97cUQxLGA" name="getPlanOfCareSection" bodyCondition="_vMeWU4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vMeWU4okEeSkH97cUQxLGA" name="body" constrainedElement="_vMeWUIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vMeWVIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfCareSection))->asSequence()->any(true).oclAsType(consol::PlanOfCareSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vMeWUYokEeSkH97cUQxLGA" type="_2NP-QxSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vMeWUookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vMfkcIokEeSkH97cUQxLGA" name="getAssessmentAndPlanSection" bodyCondition="_vMfkc4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vMfkc4okEeSkH97cUQxLGA" name="body" constrainedElement="_vMfkcIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vMfkdIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentAndPlanSection))->asSequence()->any(true).oclAsType(consol::AssessmentAndPlanSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vMfkcYokEeSkH97cUQxLGA" type="_2Rwq0BSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vMfkcookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vMgykIokEeSkH97cUQxLGA" name="getAllergiesSectionEntriesOptional" bodyCondition="_vMgyk4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vMgyk4okEeSkH97cUQxLGA" name="body" constrainedElement="_vMgykIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vMgylIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSectionEntriesOptional))->asSequence()->any(true).oclAsType(consol::AllergiesSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vMgykYokEeSkH97cUQxLGA" type="_bGzYgBVdEeGQCvUGzi1kDQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vMgykookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vMiAsIokEeSkH97cUQxLGA" name="getChiefComplaintSection" bodyCondition="_vMiAs4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vMiAs4okEeSkH97cUQxLGA" name="body" constrainedElement="_vMiAsIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vMiAtIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection))->asSequence()->any(true).oclAsType(consol::ChiefComplaintSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vMiAsYokEeSkH97cUQxLGA" type="_2PWQCBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vMiAsookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vMjO0IokEeSkH97cUQxLGA" name="getInterventionsSection" bodyCondition="_vMjO04okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vMjO04okEeSkH97cUQxLGA" name="body" constrainedElement="_vMjO0IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vMjO1IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::InterventionsSection))->asSequence()->any(true).oclAsType(consol::InterventionsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vMjO0YokEeSkH97cUQxLGA" type="_hqzJADVyEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vMjO0ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vMkc8IokEeSkH97cUQxLGA" name="getMedicationsSectionEntriesOptional" bodyCondition="_vMkc84okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vMkc84okEeSkH97cUQxLGA" name="body" constrainedElement="_vMkc8IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vMkc9IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsSectionEntriesOptional))->asSequence()->any(true).oclAsType(consol::MedicationsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vMkc8YokEeSkH97cUQxLGA" type="_iAoXEBVdEeGQCvUGzi1kDQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vMkc8ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vMlrEIokEeSkH97cUQxLGA" name="getObjectiveSection" bodyCondition="_vMlrE4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vMlrE4okEeSkH97cUQxLGA" name="body" constrainedElement="_vMlrEIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vMlrFIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ObjectiveSection))->asSequence()->any(true).oclAsType(consol::ObjectiveSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vMlrEYokEeSkH97cUQxLGA" type="_rNJpADVyEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vMlrEookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vMm5MIokEeSkH97cUQxLGA" name="getPhysicalExamSection" bodyCondition="_vMm5M4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vMm5M4okEeSkH97cUQxLGA" name="body" constrainedElement="_vMm5MIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vMm5NIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PhysicalExamSection))->asSequence()->any(true).oclAsType(consol::PhysicalExamSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vMm5MYokEeSkH97cUQxLGA" type="_2Pxt0hSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vMm5MookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vMoHUIokEeSkH97cUQxLGA" name="getProblemSectionEntriesOptional" bodyCondition="_vMoHU4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vMoHU4okEeSkH97cUQxLGA" name="body" constrainedElement="_vMoHUIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vMoHVIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSectionEntriesOptional))->asSequence()->any(true).oclAsType(consol::ProblemSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vMoHUYokEeSkH97cUQxLGA" type="_naxrkBVdEeGQCvUGzi1kDQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vMoHUookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vMpVcIokEeSkH97cUQxLGA" name="getResultsSectionEntriesOptional" bodyCondition="_vMpVc4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vMpVc4okEeSkH97cUQxLGA" name="body" constrainedElement="_vMpVcIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vMpVdIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ResultsSectionEntriesOptional))->asSequence()->any(true).oclAsType(consol::ResultsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vMpVcYokEeSkH97cUQxLGA" type="_xGqiEBVdEeGQCvUGzi1kDQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vMpVcookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vMqjkIokEeSkH97cUQxLGA" name="getReviewOfSystemsSection" bodyCondition="_vMqjk4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vMqjk4okEeSkH97cUQxLGA" name="body" constrainedElement="_vMqjkIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vMqjlIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReviewOfSystemsSection))->asSequence()->any(true).oclAsType(consol::ReviewOfSystemsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vMqjkYokEeSkH97cUQxLGA" type="_2RqkMBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vMqjkookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vMrxsIokEeSkH97cUQxLGA" name="getSubjectiveSection" bodyCondition="_vMrxs4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vMrxs4okEeSkH97cUQxLGA" name="body" constrainedElement="_vMrxsIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vMrxtIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::SubjectiveSection))->asSequence()->any(true).oclAsType(consol::SubjectiveSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vMrxsYokEeSkH97cUQxLGA" type="_iy8nYDVzEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vMrxsookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vMs_0IokEeSkH97cUQxLGA" name="getVitalSignsSectionEntriesOptional" bodyCondition="_vMs_04okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vMs_04okEeSkH97cUQxLGA" name="body" constrainedElement="_vMs_0IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vMs_1IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSectionEntriesOptional))->asSequence()->any(true).oclAsType(consol::VitalSignsSectionEntriesOptional)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vMs_0YokEeSkH97cUQxLGA" type="_bRH8sBVeEeGQCvUGzi1kDQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vMs_0ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vZamIIokEeSkH97cUQxLGA" name="getInstructionsSection" bodyCondition="_vZamI4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vZamI4okEeSkH97cUQxLGA" name="body" constrainedElement="_vZamIIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vZamJIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::InstructionsSection))->asSequence()->any(true).oclAsType(consol::InstructionsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vZamIYokEeSkH97cUQxLGA" type="_4qKukEE1EeGdmoWy_aLP0Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vZamIookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_0fjXAEEvEeGdmoWy_aLP0Q" name="PostprocedureDiagnosis">
      <ownedComment xmi:id="_rQo48FmwEeGRqYkwoeymcA">
        <body>The Postprocedure Diagnosis entry encodes the diagnosis or diagnoses discovered or confirmed during the procedure. Often it is the same as the pre-procedure diagnosis or indication.</body>
      </ownedComment>
      <ownedRule xmi:id="_vM07o4okEeSkH97cUQxLGA" name="PostprocedureDiagnosisTemplateId" constrainedElement="_0fjXAEEvEeGdmoWy_aLP0Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vM07pIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.51')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vM2JwIokEeSkH97cUQxLGA" name="PostprocedureDiagnosisClassCode" constrainedElement="_0fjXAEEvEeGdmoWy_aLP0Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vM2JwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryAct::ACT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vM3-8IokEeSkH97cUQxLGA" name="PostprocedureDiagnosisMoodCode" constrainedElement="_0fjXAEEvEeGdmoWy_aLP0Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vM3-8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vM50IIokEeSkH97cUQxLGA" name="PostprocedureDiagnosisCode" constrainedElement="_0fjXAEEvEeGdmoWy_aLP0Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vM50IYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '59769-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vM7pUIokEeSkH97cUQxLGA" name="PostprocedureDiagnosisProblemObservation" constrainedElement="_0fjXAEEvEeGdmoWy_aLP0Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vM7pUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::ProblemObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_0fjXAUEvEeGdmoWy_aLP0Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_vM8QYIokEeSkH97cUQxLGA" name="getProblemObservations" bodyCondition="_vM83cYokEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vM83cYokEeSkH97cUQxLGA" name="body" constrainedElement="_vM8QYIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vM83cookEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProblemObservation)).oclAsType(consol::ProblemObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vM8QYYokEeSkH97cUQxLGA" type="_5Ha7ABUyEeGbmN_W114JUw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vM83cIokEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_0baBYEEwEeGdmoWy_aLP0Q" name="PreoperativeDiagnosis">
      <ownedRule xmi:id="_vM-Fk4okEeSkH97cUQxLGA" name="PreoperativeDiagnosisTemplateId" constrainedElement="_0baBYEEwEeGdmoWy_aLP0Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vM-FlIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.65')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vM_6wIokEeSkH97cUQxLGA" name="PreoperativeDiagnosisClassCode" constrainedElement="_0baBYEEwEeGdmoWy_aLP0Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vM_6wYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryAct::ACT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vNBI4IokEeSkH97cUQxLGA" name="PreoperativeDiagnosisCode" constrainedElement="_0baBYEEwEeGdmoWy_aLP0Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vNBI4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '10219-4' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vNDlIIokEeSkH97cUQxLGA" name="PreoperativeDiagnosisMoodCode" constrainedElement="_0baBYEEwEeGdmoWy_aLP0Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vNDlIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vNEzQIokEeSkH97cUQxLGA" name="PreoperativeDiagnosisProblemObservation" constrainedElement="_0baBYEEwEeGdmoWy_aLP0Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vNEzQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::ProblemObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_0baBYUEwEeGdmoWy_aLP0Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_vNGBYIokEeSkH97cUQxLGA" name="getProblemObservations" bodyCondition="_vNGBY4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vNGBY4okEeSkH97cUQxLGA" name="body" constrainedElement="_vNGBYIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vNGBZIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProblemObservation)).oclAsType(consol::ProblemObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vNGBYYokEeSkH97cUQxLGA" type="_5Ha7ABUyEeGbmN_W114JUw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vNGBYookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_4qKukEE1EeGdmoWy_aLP0Q" name="InstructionsSection">
      <ownedComment xmi:id="_9It9gEE1EeGdmoWy_aLP0Q">
        <body>The Instructions section records instructions given to a patient. List patient decision aids here.</body>
      </ownedComment>
      <ownedRule xmi:id="_vNJEs4okEeSkH97cUQxLGA" name="InstructionsSectionTemplateId" constrainedElement="_4qKukEE1EeGdmoWy_aLP0Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vNJrwIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.45')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vNMIAIokEeSkH97cUQxLGA" name="InstructionsSectionCode" constrainedElement="_4qKukEE1EeGdmoWy_aLP0Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vNMIAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '69730-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vNN9MIokEeSkH97cUQxLGA" name="InstructionsSectionCodeP" constrainedElement="_4qKukEE1EeGdmoWy_aLP0Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vNN9MYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vNQZcIokEeSkH97cUQxLGA" name="InstructionsSectionText" constrainedElement="_4qKukEE1EeGdmoWy_aLP0Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vNQZcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vNRnkIokEeSkH97cUQxLGA" name="InstructionsSectionTitle" constrainedElement="_4qKukEE1EeGdmoWy_aLP0Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vNRnkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vNTcwIokEeSkH97cUQxLGA" name="InstructionsSectionInstructions" constrainedElement="_4qKukEE1EeGdmoWy_aLP0Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vNTcwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::Instructions))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_4qKukUE1EeGdmoWy_aLP0Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_vNUD0IokEeSkH97cUQxLGA" name="getInstructionss" bodyCondition="_vNUD04okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vNUD04okEeSkH97cUQxLGA" name="body" constrainedElement="_vNUD0IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vNUD1IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::Instructions)).oclAsType(consol::Instructions)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vNUD0YokEeSkH97cUQxLGA" type="_2G8h9RSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vNUD0ookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_LNP08EFGEeGorO80f-Cppg" name="AdmissionMedication">
      <ownedComment xmi:id="_NdKLUHhrEeGJtvg2iiStYg">
        <body>The Admission Medications entry codes medications that the patient took prior to admission.</body>
      </ownedComment>
      <ownedRule xmi:id="_vNUD1YokEeSkH97cUQxLGA" name="AdmissionMedicationTemplateId" constrainedElement="_LNP08EFGEeGorO80f-Cppg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vNUq4IokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.36')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vNV5AIokEeSkH97cUQxLGA" name="AdmissionMedicationClassCode" constrainedElement="_LNP08EFGEeGorO80f-Cppg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vNV5AYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryAct::ACT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vNZjYIokEeSkH97cUQxLGA" name="AdmissionMedicationCodeP" constrainedElement="_LNP08EFGEeGorO80f-Cppg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vNZjYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vNXuMIokEeSkH97cUQxLGA" name="AdmissionMedicationCode" constrainedElement="_LNP08EFGEeGorO80f-Cppg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vNXuMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
not value.codeSystem.oclIsUndefined() or not value.codeSystemName.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vNb_oIokEeSkH97cUQxLGA" name="AdmissionMedicationMoodCode" constrainedElement="_LNP08EFGEeGorO80f-Cppg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vNb_oYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vNdNwIokEeSkH97cUQxLGA" name="AdmissionMedicationMedicationActivity" constrainedElement="_LNP08EFGEeGorO80f-Cppg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vNdNwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.substanceAdministration.oclIsUndefined() and entryRelationship.substanceAdministration.oclIsKindOf(consol::MedicationActivity) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_LNsg4EFGEeGorO80f-Cppg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_vNd00IokEeSkH97cUQxLGA" name="getMedicationActivities" bodyCondition="_vNd004okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vNd004okEeSkH97cUQxLGA" name="body" constrainedElement="_vNd00IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vNd01IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(consol::MedicationActivity)).oclAsType(consol::MedicationActivity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vNd00YokEeSkH97cUQxLGA" type="_2GHbgBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vNd00ookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_5K6mAEFHEeGorO80f-Cppg" name="HospitalAdmissionDiagnosis">
      <ownedComment xmi:id="_90pKMEFHEeGorO80f-Cppg">
        <body>The Hospital Admission Diagnosis entry describes the relevant problems or diagnoses at the time of admission.</body>
      </ownedComment>
      <ownedRule xmi:id="_vNfqAIokEeSkH97cUQxLGA" name="HospitalAdmissionDiagnosisTemplateId" constrainedElement="_5K6mAEFHEeGorO80f-Cppg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vNfqAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.34')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vNg4IIokEeSkH97cUQxLGA" name="HospitalAdmissionDiagnosisClassCode" constrainedElement="_5K6mAEFHEeGorO80f-Cppg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vNhfMIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryAct::ACT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vNqCEIokEeSkH97cUQxLGA" name="HospitalAdmissionDiagnosisCode" constrainedElement="_5K6mAEFHEeGorO80f-Cppg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vNqpIIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '46241-6' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vNtFYIokEeSkH97cUQxLGA" name="HospitalAdmissionDiagnosisMoodCode" constrainedElement="_5K6mAEFHEeGorO80f-Cppg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vNtFYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vNuTgIokEeSkH97cUQxLGA" name="HospitalAdmissionDiagnosisProblemObservation" constrainedElement="_5K6mAEFHEeGorO80f-Cppg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vNuTgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::ProblemObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_5K6mAUFHEeGorO80f-Cppg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_vNu6kIokEeSkH97cUQxLGA" name="getProblemObservations" bodyCondition="_vNu6k4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vNu6k4okEeSkH97cUQxLGA" name="body" constrainedElement="_vNu6kIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vNu6lIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProblemObservation)).oclAsType(consol::ProblemObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vNu6kYokEeSkH97cUQxLGA" type="_5Ha7ABUyEeGbmN_W114JUw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vNu6kookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_XwBooEUuEeGdQ4KWAmnbhw" name="DiagnosticImagingReport">
      <ownedComment xmi:id="_kSJscEUuEeGdQ4KWAmnbhw">
        <body>A Diagnostic Imaging Report (DIR) is a document that contains a consulting specialist's interpretation of image data.  It conveys the interpretation to the referring (ordering) physician and becomes part of the patient's medical record.  It is for use in Radiology, Endoscopy, Cardiology, and other imaging specialties.</body>
      </ownedComment>
      <ownedRule xmi:id="__CBy8EUvEeGdQ4KWAmnbhw" name="DiagnosticImagingReportUseDiagnosticImagingCode" constrainedElement="_XwBooEUuEeGdQ4KWAmnbhw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_RwFNgEUwEeGdQ4KWAmnbhw">
          <language>OCL</language>
          <body>not self.code.oclIsUndefined() and self.code.code = '18748-4'</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_CldWAErZEeGJpZWiuxRVIw" name="DiagnosticImagingReportAllSectionsHaveTitle" constrainedElement="_XwBooEUuEeGdQ4KWAmnbhw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_DuVCkErZEeGJpZWiuxRVIw">
          <language>OCL</language>
          <body>self.getAllSections()->reject(section : cda::Section | section.templateId->exists(root = '2.16.840.1.113883.10.20.6.1.1'))->forAll(section : cda::Section | not section.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_5AKaQErZEeGJpZWiuxRVIw" name="DiagnosticImagingReportSectionsHaveText" constrainedElement="_XwBooEUuEeGdQ4KWAmnbhw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_6sfZMErZEeGJpZWiuxRVIw">
          <language>OCL</language>
          <body>self.getAllSections()->reject(section : cda::Section | section.templateId->exists(root = '2.16.840.1.113883.10.20.6.1.1'))->forAll(section : cda::Section | not section.text.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vOK_cIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsTemplateId" constrainedElement="_XwBooEUuEeGdQ4KWAmnbhw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vOK_cYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.1.5')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vOTiUIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsCodeP" constrainedElement="_XwBooEUuEeGdQ4KWAmnbhw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vOTiUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vORGEIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsCode" constrainedElement="_XwBooEUuEeGdQ4KWAmnbhw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vORGEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = '18748-4' or value.code = '18747-6' or value.code = '18755-9' or value.code = '18760-9' or value.code = '18757-5' or value.code = '18758-3' or value.code = '18745-0' or value.code = '11522-0' or value.code = '18746-8' or value.code = '18751-8' or value.code = '11525-3'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vOV-kIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsId" constrainedElement="_XwBooEUuEeGdQ4KWAmnbhw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vOV-kYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id.oclIsUndefined() or self.id.isNullFlavorUndefined()) implies (not self.id.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vOhkwIokEeSkH97cUQxLGA" name="DiagnosticImagingReportInformant" constrainedElement="_XwBooEUuEeGdQ4KWAmnbhw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vOhkwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.informant->select(informant : cda::Informant12 | not informant.oclIsUndefined() and informant.oclIsKindOf(rim::Participation))->isEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vOiL0IokEeSkH97cUQxLGA" name="DiagnosticImagingReportInformationRecipient" constrainedElement="_XwBooEUuEeGdQ4KWAmnbhw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vOiL0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.informationRecipient->exists(informationRecipient : cda::InformationRecipient | not informationRecipient.oclIsUndefined() and informationRecipient.oclIsKindOf(rim::Participation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vOjZ8IokEeSkH97cUQxLGA" name="DiagnosticImagingReportParticipant1" constrainedElement="_XwBooEUuEeGdQ4KWAmnbhw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vOjZ8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->one(participant : cda::Participant1 | not participant.oclIsUndefined() and participant.oclIsKindOf(cda::Participant1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vOl2MIokEeSkH97cUQxLGA" name="DiagnosticImagingReportInFulfillmentOf" constrainedElement="_XwBooEUuEeGdQ4KWAmnbhw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vOl2MYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.inFulfillmentOf->one(inFulfillmentOf : cda::InFulfillmentOf | not inFulfillmentOf.oclIsUndefined() and inFulfillmentOf.oclIsKindOf(cda::InFulfillmentOf))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vOmdQIokEeSkH97cUQxLGA" name="DiagnosticImagingReportDocumentationOf" constrainedElement="_XwBooEUuEeGdQ4KWAmnbhw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vOmdQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->one(documentationOf : cda::DocumentationOf | not documentationOf.oclIsUndefined() and documentationOf.oclIsKindOf(cda::DocumentationOf))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vOzRkIokEeSkH97cUQxLGA" name="DiagnosticImagingReportRelatedDocument" constrainedElement="_XwBooEUuEeGdQ4KWAmnbhw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vOzRkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.relatedDocument->one(relatedDocument : cda::RelatedDocument | not relatedDocument.oclIsUndefined() and relatedDocument.oclIsKindOf(cda::RelatedDocument))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vO8bgIokEeSkH97cUQxLGA" name="DiagnosticImagingReportComponentOf" constrainedElement="_XwBooEUuEeGdQ4KWAmnbhw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vO8bgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->one(componentOf : cda::Component1 | not componentOf.oclIsUndefined() and componentOf.oclIsKindOf(cda::Component1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vQ4VMIokEeSkH97cUQxLGA" name="DiagnosticImagingReportFindingsSection" constrainedElement="_XwBooEUuEeGdQ4KWAmnbhw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vQ4VMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::FindingsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vZI5UIokEeSkH97cUQxLGA" name="DiagnosticImagingReportDICOMObjectCatalogSection" constrainedElement="_XwBooEUuEeGdQ4KWAmnbhw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vZI5UYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::DICOMObjectCatalogSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wTpZwIokEeSkH97cUQxLGA" name="DiagnosticImagingReportParticipantAssociatedEntityPersonName" constrainedElement="_XwBooEUuEeGdQ4KWAmnbhw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wTpZwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).associatedEntity->excluding(null).associatedPerson->excluding(null)->reject((name->isEmpty() or name->exists(element | element.isNullFlavorUndefined())) implies (name->size() = 1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wTpZwookEeSkH97cUQxLGA" name="DiagnosticImagingReportParticipantAssociatedEntityAssociatedPerson" constrainedElement="_XwBooEUuEeGdQ4KWAmnbhw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wTqA0IokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).associatedEntity->excluding(null)->reject(associatedPerson->one(associatedPerson : cda::Person | not associatedPerson.oclIsUndefined() and associatedPerson.oclIsKindOf(cda::Person)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wTqA0YokEeSkH97cUQxLGA" name="DiagnosticImagingReportParticipantAssociatedEntity" constrainedElement="_XwBooEUuEeGdQ4KWAmnbhw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wTqA0ookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->reject(associatedEntity->one(associatedEntity : cda::AssociatedEntity | not associatedEntity.oclIsUndefined() and associatedEntity.oclIsKindOf(cda::AssociatedEntity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wTr2AIokEeSkH97cUQxLGA" name="DiagnosticImagingReportDocumentationOfServiceEvent4ClassCode" constrainedElement="_XwBooEUuEeGdQ4KWAmnbhw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wTr2AYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject(isDefined('classCode') and classCode=vocab::ActClassRoot::ACT)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wTsdEIokEeSkH97cUQxLGA" name="DiagnosticImagingReportDocumentationOfServiceEvent4Code" constrainedElement="_XwBooEUuEeGdQ4KWAmnbhw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wTsdEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wTsdEookEeSkH97cUQxLGA" name="DiagnosticImagingReportDocumentationOfServiceEvent4Id" constrainedElement="_XwBooEUuEeGdQ4KWAmnbhw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wTtEIIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wTtEIYokEeSkH97cUQxLGA" name="DiagnosticImagingReportDocumentationOfServiceEvent4PhysicianReadingStudyPerformer" constrainedElement="_XwBooEUuEeGdQ4KWAmnbhw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wTtEIookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject(performer->exists(performer : cda::Performer1 | not performer.oclIsUndefined() and performer.oclIsKindOf(consol::PhysicianReadingStudyPerformer)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wTtrMIokEeSkH97cUQxLGA" name="DiagnosticImagingReportDocumentationOfServiceEvent3" constrainedElement="_XwBooEUuEeGdQ4KWAmnbhw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wTtrMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null)->reject(serviceEvent->one(serviceEvent : cda::ServiceEvent | not serviceEvent.oclIsUndefined() and serviceEvent.oclIsKindOf(cda::ServiceEvent)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wTwHcIokEeSkH97cUQxLGA" name="DiagnosticImagingReportComponentOfEncompassingEncounter7ResponsiblePartyAssignedEntityHasAssignPersonOrRepresentedOrganization" constrainedElement="_XwBooEUuEeGdQ4KWAmnbhw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wTwHcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null).responsibleParty->excluding(null).assignedEntity->excluding(null)->reject(assignedPerson->size() = 1 or representedOrganization->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wTwugIokEeSkH97cUQxLGA" name="DiagnosticImagingReportComponentOfEncompassingEncounter7ResponsiblePartyAssignedEntity" constrainedElement="_XwBooEUuEeGdQ4KWAmnbhw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wTwugYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null).responsibleParty->excluding(null)->reject(assignedEntity->one(assignedEntity : cda::AssignedEntity | not assignedEntity.oclIsUndefined() and assignedEntity.oclIsKindOf(cda::AssignedEntity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wTxVkIokEeSkH97cUQxLGA" name="DiagnosticImagingReportComponentOfEncompassingEncounter7PreciseToTheDay" constrainedElement="_XwBooEUuEeGdQ4KWAmnbhw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wTxVkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(not effectiveTime.value.oclIsUndefined() implies effectiveTime.value.size() >= 8)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wTxVkookEeSkH97cUQxLGA" name="DiagnosticImagingReportComponentOfEncompassingEncounter7PreciseToTheMinute" constrainedElement="_XwBooEUuEeGdQ4KWAmnbhw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wTxVk4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(not effectiveTime.value.oclIsUndefined() implies effectiveTime.value.size() >= 12)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wTx8oIokEeSkH97cUQxLGA" name="DiagnosticImagingReportComponentOfEncompassingEncounter7PreciseToTheSecond" constrainedElement="_XwBooEUuEeGdQ4KWAmnbhw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wTx8oYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(not effectiveTime.value.oclIsUndefined() implies effectiveTime.value.size() >= 14)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wTyjsIokEeSkH97cUQxLGA" name="DiagnosticImagingReportComponentOfEncompassingEncounter7IfMorePreciseThanDayIncludeTimeZoneOffset" constrainedElement="_XwBooEUuEeGdQ4KWAmnbhw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wTyjsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(not effectiveTime.value.oclIsUndefined() and effectiveTime.value.size() > 8 implies effectiveTime.value.size() >= 15)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wTzKwIokEeSkH97cUQxLGA" name="DiagnosticImagingReportComponentOfEncompassingEncounter7EffectiveTime" constrainedElement="_XwBooEUuEeGdQ4KWAmnbhw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wTzKwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject((effectiveTime.oclIsUndefined() or effectiveTime.isNullFlavorUndefined()) implies (not effectiveTime.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wTzKwookEeSkH97cUQxLGA" name="DiagnosticImagingReportComponentOfEncompassingEncounter7Id" constrainedElement="_XwBooEUuEeGdQ4KWAmnbhw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wTzKw4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wTzx0IokEeSkH97cUQxLGA" name="DiagnosticImagingReportComponentOfEncompassingEncounter7PhysicianofRecordParticipant" constrainedElement="_XwBooEUuEeGdQ4KWAmnbhw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wTzx0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(encounterParticipant->one(encounterParticipant : cda::EncounterParticipant | not encounterParticipant.oclIsUndefined() and encounterParticipant.oclIsKindOf(consol::PhysicianofRecordParticipant)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wTzx0ookEeSkH97cUQxLGA" name="DiagnosticImagingReportComponentOfEncompassingEncounter7ResponsibleParty" constrainedElement="_XwBooEUuEeGdQ4KWAmnbhw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wT0Y4IokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(responsibleParty->one(responsibleParty : cda::ResponsibleParty | not responsibleParty.oclIsUndefined() and responsibleParty.oclIsKindOf(cda::ResponsibleParty)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wT0Y4YokEeSkH97cUQxLGA" name="DiagnosticImagingReportComponentOfEncompassingEncounter" constrainedElement="_XwBooEUuEeGdQ4KWAmnbhw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wT0Y4ookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null)->reject(encompassingEncounter->one(encompassingEncounter : cda::EncompassingEncounter | not encompassingEncounter.oclIsUndefined() and encompassingEncounter.oclIsKindOf(cda::EncompassingEncounter)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_XwdtgEUuEeGdQ4KWAmnbhw" general="_2DNRcBSVEeGGzu7fmW9pXw"/>
      <ownedOperation xmi:id="_vQ6KYIokEeSkH97cUQxLGA" name="getFindingsSection" bodyCondition="_vQ6KY4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vQ6KY4okEeSkH97cUQxLGA" name="body" constrainedElement="_vQ6KYIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vQ6KZIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::FindingsSection))->asSequence()->any(true).oclAsType(consol::FindingsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vQ6KYYokEeSkH97cUQxLGA" type="_ZcC-4DVyEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vQ6KYookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vZKHcIokEeSkH97cUQxLGA" name="getDICOMObjectCatalogSection" bodyCondition="_vZKHc4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vZKHc4okEeSkH97cUQxLGA" name="body" constrainedElement="_vZKHcIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vZKHdIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::DICOMObjectCatalogSection))->asSequence()->any(true).oclAsType(consol::DICOMObjectCatalogSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vZKHcYokEeSkH97cUQxLGA" type="_WPTWEDVyEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vZKHcookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_H1UdcEVEEeGAh_iQGJvI5w" name="PhysicianReadingStudyPerformer">
      <ownedComment xmi:id="_s137QIfHEeSBauRYePLghA">
        <body>This participant is the Physician Reading Study Performer defined in documentationOf/serviceEvent and is usually different from the attending physician. The reading physician interprets the images and evidence of the study (DICOM Definition)</body>
      </ownedComment>
      <ownedRule xmi:id="_GoNVEIfBEeSBauRYePLghA" name="PhysicianReadingStudyPerformerPreciseToTheDayIVLTS">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_GoNVEYfBEeSBauRYePLghA">
          <language>OCL</language>
          <body>not self.time.value.oclIsUndefined() implies self.time.value.size() >= 8</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Nct5UIfCEeSBauRYePLghA" name="PhysicianReadingStudyPerformerPreciseToTheMinuteIVLTS">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Nct5UYfCEeSBauRYePLghA">
          <language>OCL</language>
          <body>not self.time.value.oclIsUndefined() implies self.time.value.size() >= 12</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_8bhMsIfCEeSBauRYePLghA" name="PhysicianReadingStudyPerformerPreciseToTheSecondIVLTS">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_8bhMsYfCEeSBauRYePLghA">
          <language>OCL</language>
          <body>not self.time.value.oclIsUndefined() implies self.time.value.size() >= 14</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_f6dKgIfDEeSBauRYePLghA" name="PhysicianReadingStudyPerformerIfMorePreciseThanDayIncludeTimeZoneOffsetIVLTS">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_f6dKgYfDEeSBauRYePLghA">
          <language>OCL</language>
          <body>not self.time.value.oclIsUndefined() and self.time.value.size() > 8 implies self.time.value.size() >= 15</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vOnrYYokEeSkH97cUQxLGA" name="PhysicianReadingStudyPerformerTemplateId" constrainedElement="_H1UdcEVEEeGAh_iQGJvI5w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vOnrYookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.6.2.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vOrVwIokEeSkH97cUQxLGA" name="PhysicianReadingStudyPerformerTime" constrainedElement="_H1UdcEVEEeGAh_iQGJvI5w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vOrVwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.time.oclIsUndefined() or self.time.isNullFlavorUndefined()) implies (not self.time.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vOsj4IokEeSkH97cUQxLGA" name="PhysicianReadingStudyPerformerTypeCode" constrainedElement="_H1UdcEVEEeGAh_iQGJvI5w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vOsj4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.typeCode=vocab::x_ServiceEventPerformer::PRF</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vQ148IokEeSkH97cUQxLGA" name="PhysicianReadingStudyPerformerAssignedEntity" constrainedElement="_H1UdcEVEEeGAh_iQGJvI5w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vQ148YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.assignedEntity->one(assignedEntity : cda::AssignedEntity | not assignedEntity.oclIsUndefined() and assignedEntity.oclIsKindOf(cda::AssignedEntity))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wT1nAIokEeSkH97cUQxLGA" name="PhysicianReadingStudyPerformerAssignedEntityHasDICOM" constrainedElement="_H1UdcEVEEeGAh_iQGJvI5w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wT1nAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.assignedEntity->excluding(null)->reject(code.codeSystem = '1.2.840.10008.2.16.4' or code.codeSystem = '2.16.840.1.113883.6.101')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wT2OEIokEeSkH97cUQxLGA" name="PhysicianReadingStudyPerformerAssignedEntityHasAssignedPersonOrRepresentedOrganization" constrainedElement="_H1UdcEVEEeGAh_iQGJvI5w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wT2OEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.assignedEntity->excluding(null)->reject(not assignedPerson->isEmpty() or  not representedOrganization->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wT21IIokEeSkH97cUQxLGA" name="PhysicianReadingStudyPerformerAssignedEntityHasNationalProviderId" constrainedElement="_H1UdcEVEEeGAh_iQGJvI5w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wT21IYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.assignedEntity->excluding(null)->reject(id->exists( root='2.16.840.1.113883.4.6' ))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wT21IookEeSkH97cUQxLGA" name="PhysicianReadingStudyPerformerAssignedEntityId" constrainedElement="_H1UdcEVEEeGAh_iQGJvI5w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wT21I4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.assignedEntity->excluding(null)->reject((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wT3cMIokEeSkH97cUQxLGA" name="PhysicianReadingStudyPerformerAssignedEntityCode" constrainedElement="_H1UdcEVEEeGAh_iQGJvI5w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wT3cMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.assignedEntity->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_H1UdcUVEEeGAh_iQGJvI5w">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_FvF74EcaEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_H_izsEb1EeGp67IkyTw1fg" name="PhysicianofRecordParticipant">
      <ownedComment xmi:id="_TthdwEb1EeGp67IkyTw1fg">
        <body>This encounterParticipant is the attending physician and is usually different from the Physician Reading Study Performer defined in documentationOf/serviceEvent.</body>
      </ownedComment>
      <ownedRule xmi:id="_vOz4oIokEeSkH97cUQxLGA" name="PhysicianofRecordParticipantTemplateId" constrainedElement="_H_izsEb1EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vO0fsIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.6.2.2')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vO1t0IokEeSkH97cUQxLGA" name="PhysicianofRecordParticipantTypeCode" constrainedElement="_H_izsEb1EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vO1t0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.typeCode=vocab::x_EncounterParticipant::ATND</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vQ3HEIokEeSkH97cUQxLGA" name="PhysicianofRecordParticipantAssignedEntity" constrainedElement="_H_izsEb1EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vQ3HEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.assignedEntity->one(assignedEntity : cda::AssignedEntity | not assignedEntity.oclIsUndefined() and assignedEntity.oclIsKindOf(cda::AssignedEntity))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wT4qUIokEeSkH97cUQxLGA" name="PhysicianofRecordParticipantAssignedEntityAssignedPersonName" constrainedElement="_H_izsEb1EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wT4qUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.assignedEntity->excluding(null).assignedPerson->excluding(null)->reject((name->isEmpty() or name->exists(element | element.isNullFlavorUndefined())) implies (not name->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wT4qUookEeSkH97cUQxLGA" name="PhysicianofRecordParticipantAssignedEntityHasDICOMOrNUCCCode" constrainedElement="_H_izsEb1EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wT4qU4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.assignedEntity->excluding(null)->reject(code.codeSystem = '1.2.840.10008.2.16.4' or code.codeSystem = '2.16.840.1.113883.6.101')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wT5RYIokEeSkH97cUQxLGA" name="PhysicianofRecordParticipantAssignedEntityHasNationalProviderId" constrainedElement="_H_izsEb1EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wT5RYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.assignedEntity->excluding(null)->reject(id->exists( root='2.16.840.1.113883.4.6' ))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wT54cIokEeSkH97cUQxLGA" name="PhysicianofRecordParticipantAssignedEntityCode" constrainedElement="_H_izsEb1EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wT54cYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.assignedEntity->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wT54cookEeSkH97cUQxLGA" name="PhysicianofRecordParticipantAssignedEntityId" constrainedElement="_H_izsEb1EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wT54c4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.assignedEntity->excluding(null)->reject((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wT6fgIokEeSkH97cUQxLGA" name="PhysicianofRecordParticipantAssignedEntityAssignedPerson" constrainedElement="_H_izsEb1EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wT6fgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.assignedEntity->excluding(null)->reject(assignedPerson->one(assignedPerson : cda::Person | not assignedPerson.oclIsUndefined() and assignedPerson.oclIsKindOf(cda::Person)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_H_izsUb1EeGp67IkyTw1fg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_5t1WAEcEEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_vjf-wEb4EeGp67IkyTw1fg" name="StudyAct">
      <ownedComment xmi:id="_MDWe4FwTEeG0y_7i0ygc4g">
        <body>A Study Act contains the DICOM study information that defines the characteristics of a referenced medical study performed on a patient. A study is a collection of one or more series of medical images, presentation states, SR documents, overlays, and/or curves that are logically related for the purpose of diagnosing a patient. Each study is associated with exactly one patient. A study may include composite instances that are created by a single modality, multiple modalities, or by multiple devices of the same modality. The study information is modality-independent. Study Act clinical statements are only instantiated in the DICOM Object Catalog section; in other sections, the SOP Instance Observation is included directly.</body>
      </ownedComment>
      <ownedRule xmi:id="_d5wtUErcEeGJpZWiuxRVIw" name="StudyActIdsHaveRoot" constrainedElement="_vjf-wEb4EeGp67IkyTw1fg">
        <ownedComment xmi:id="_6tKHoOZVEeGINOJ_SD9_dA">
          <body>The @root contains the OID of the study instance UID since DICOM study ids consist only of an OID</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_etURMErcEeGJpZWiuxRVIw">
          <language>OCL</language>
          <body>self.id->forAll( not root.oclIsUndefined() )</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Be9EIErdEeGJpZWiuxRVIw" name="StudyActNoIdExtension" constrainedElement="_vjf-wEb4EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_EVWCcErdEeGJpZWiuxRVIw">
          <language>OCL</language>
          <body>self.id->forAll(  extension.oclIsUndefined() )</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_USs-cOZWEeGINOJ_SD9_dA" name="StudyActTextReference">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_e3Cf4OZWEeGINOJ_SD9_dA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined() implies self.text->forAll(reference->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_as4MkOZWEeGINOJ_SD9_dA" name="StudyActTextReferenceValue" constrainedElement="_USs-cOZWEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hjLWAOZWEeGINOJ_SD9_dA">
          <language>OCL</language>
          <body>self.text->forAll(reference->size() = 1) implies self.text->forAll(reference->one(value->size() = 1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cGcnkOZWEeGINOJ_SD9_dA" name="StudyActReferenceValue" constrainedElement="_as4MkOZWEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j8RUUOZWEeGINOJ_SD9_dA">
          <language>OCL</language>
          <body>not self.text.reference.value.oclIsUndefined() implies not self.getSection().text.getText(self.text.reference.value.substring(2, self.text.reference.value.size())).oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vO-3wYokEeSkH97cUQxLGA" name="StudyActTemplateId" constrainedElement="_vjf-wEb4EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vO-3wookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.6.2.6')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vPDJMIokEeSkH97cUQxLGA" name="StudyActClassCode" constrainedElement="_vjf-wEb4EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vPDJMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryAct::ACT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vPEXUIokEeSkH97cUQxLGA" name="StudyActMoodCode" constrainedElement="_vjf-wEb4EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vPEXUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vPFlcIokEeSkH97cUQxLGA" name="StudyActId" constrainedElement="_vjf-wEb4EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vPFlcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vPHaoIokEeSkH97cUQxLGA" name="StudyActCode" constrainedElement="_vjf-wEb4EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vPHaoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '113014' and value.codeSystem = '1.2.840.10008.2.16.4')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vPJP0IokEeSkH97cUQxLGA" name="StudyActEffectiveTime" constrainedElement="_vjf-wEb4EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vPJP0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vPLFAIokEeSkH97cUQxLGA" name="StudyActText" constrainedElement="_vjf-wEb4EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vPLFAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.text.oclIsUndefined() or self.text.isNullFlavorUndefined()) implies (not self.text.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vQ9NsIokEeSkH97cUQxLGA" name="StudyActSeriesAct" constrainedElement="_vjf-wEb4EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vQ9NsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(consol::SeriesAct) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_vjpIsEb4EeGp67IkyTw1fg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_vQ90wIokEeSkH97cUQxLGA" name="getSeriesAct" bodyCondition="_vQ90w4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vQ90w4okEeSkH97cUQxLGA" name="body" constrainedElement="_vQ90wIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vQ90xIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::SeriesAct))->asSequence()->any(true).oclAsType(consol::SeriesAct)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vQ90wYokEeSkH97cUQxLGA" type="_N2wscEb6EeGp67IkyTw1fg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vQ90wookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_N2wscEb6EeGp67IkyTw1fg" name="SeriesAct">
      <ownedComment xmi:id="_ltp54FwTEeG0y_7i0ygc4g">
        <body>A Series Act contains the DICOM series information for referenced DICOM composite objects. The series information defines the attributes that are used to group composite instances into distinct logical sets. Each series is associated with exactly one study. Series Act clinical statements are only instantiated in the DICOM Object Catalog section inside a Study Act, and thus do not require a separate templateId; in other sections, the SOP Instance Observation is included directly.</body>
      </ownedComment>
      <ownedRule xmi:id="_2p6msFwTEeG0y_7i0ygc4g" name="SeriesActIdHasRoot" constrainedElement="_N2wscEb6EeGp67IkyTw1fg">
        <ownedComment xmi:id="_9KjXIOZVEeGINOJ_SD9_dA">
          <body>The @root contains the OID of the study instance UID since DICOM study ids consist only of an OID</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_5kx1UFwTEeG0y_7i0ygc4g">
          <language>OCL</language>
          <body>self.id->forAll( not root.oclIsUndefined() )</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_EbZZkFwUEeG0y_7i0ygc4g" name="SeriesActIdNoExtension">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_GNg3cFwUEeG0y_7i0ygc4g">
          <language>OCL</language>
          <body>self.id->forAll(  extension.oclIsUndefined() )</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_arA2YFwUEeG0y_7i0ygc4g" name="SeriesActCodeQualifier" constrainedElement="_EbZZkFwUEeG0y_7i0ygc4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_eVe9AFwUEeG0y_7i0ygc4g">
          <language>OCL</language>
          <body>self.code.qualifier->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hmNt8FwUEeG0y_7i0ygc4g" name="SeriesActCodeQualifierCode" constrainedElement="_arA2YFwUEeG0y_7i0ygc4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ie5CYFwUEeG0y_7i0ygc4g">
          <language>OCL</language>
          <body>self.code.qualifier.name->one(name : datatypes::CV | name.code = '121139' and name.codeSystem = '1.2.840.10008.2.16.4')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oCw6oFwUEeG0y_7i0ygc4g" name="SeriesActCodeQualifierValue" constrainedElement="_hmNt8FwUEeG0y_7i0ygc4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pP0joFwUEeG0y_7i0ygc4g">
          <language>OCL</language>
          <body>self.code.qualifier.value->one(val | not val.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_sPmHcFwUEeG0y_7i0ygc4g" name="SeriesActCodeQualifierValueCode" constrainedElement="_oCw6oFwUEeG0y_7i0ygc4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t8fuIFwUEeG0y_7i0ygc4g">
          <language>OCL</language>
          <body>self.code.qualifier.value->one(val | (not val.oclIsUndefined() or val.isNullFlavorUndefined()) implies val.oclIsKindOf(datatypes::ANY) and val.codeSystem = '1.2.840.10008.2.16.4')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vPMTIIokEeSkH97cUQxLGA" name="SeriesActTemplateId" constrainedElement="_N2wscEb6EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vPMTIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.63')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vPRLoIokEeSkH97cUQxLGA" name="SeriesActClassCode" constrainedElement="_N2wscEb6EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vPRLoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryAct::ACT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vPSZwIokEeSkH97cUQxLGA" name="SeriesActMoodCode" constrainedElement="_N2wscEb6EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vPSZwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vPTn4IokEeSkH97cUQxLGA" name="SeriesActCode" constrainedElement="_N2wscEb6EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vPTn4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '113015' and value.codeSystem = '1.2.840.10008.2.16.4')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vPWEIIokEeSkH97cUQxLGA" name="SeriesActEffectiveTime" constrainedElement="_N2wscEb6EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vPWEIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vPXSQIokEeSkH97cUQxLGA" name="SeriesActId" constrainedElement="_N2wscEb6EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vPXSQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vPYgYIokEeSkH97cUQxLGA" name="SeriesActText" constrainedElement="_N2wscEb6EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vPYgYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.text.oclIsUndefined() or self.text.isNullFlavorUndefined()) implies (not self.text.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vQ-b0IokEeSkH97cUQxLGA" name="SeriesActSOPInstanceObservation" constrainedElement="_N2wscEb6EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vQ-b0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::SOPInstanceObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_N2wscUb6EeGp67IkyTw1fg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_vQ_C4IokEeSkH97cUQxLGA" name="getSOPInstanceObservations" bodyCondition="_vQ_C44okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vQ_C44okEeSkH97cUQxLGA" name="body" constrainedElement="_vQ_C4IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vQ_C5IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::SOPInstanceObservation)).oclAsType(consol::SOPInstanceObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vQ_C4YokEeSkH97cUQxLGA" type="_9o7WcEb6EeGp67IkyTw1fg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vQ_C4ookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9o7WcEb6EeGp67IkyTw1fg" name="SOPInstanceObservation">
      <ownedComment xmi:id="_P8O7IErfEeGJpZWiuxRVIw">
        <body>A SOP Instance Observation contains the DICOM Service Object Pair (SOP) Instance information for referenced DICOM composite objects. The SOP Instance act class is used to reference both image and non-image DICOM instances. The text attribute contains the DICOM WADO reference.</body>
      </ownedComment>
      <ownedRule xmi:id="_vIPrMErfEeGJpZWiuxRVIw" name="SOPInstanceObservationEffectiveTimeHasValue" constrainedElement="_9o7WcEb6EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wVIVEErfEeGJpZWiuxRVIw">
          <language>OCL</language>
          <body>not self.effectiveTime.oclIsUndefined() implies not self.effectiveTime.value.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_0eEgYErfEeGJpZWiuxRVIw" name="SOPInstanceObservationEffectiveTimeNoLow" constrainedElement="_9o7WcEb6EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_1WsxgErfEeGJpZWiuxRVIw">
          <language>OCL</language>
          <body>not self.effectiveTime.oclIsUndefined() implies self.effectiveTime.low.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_5IsccErfEeGJpZWiuxRVIw" name="SOPInstanceObservationEffectiveTimeNoHigh" constrainedElement="_9o7WcEb6EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_6KtTEErfEeGJpZWiuxRVIw">
          <language>OCL</language>
          <body>not self.effectiveTime.oclIsUndefined() implies self.effectiveTime.high.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_H4BmkFwWEeG0y_7i0ygc4g" name="SOPInstanceObservationTextMediaType">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_MEj4cFwWEeG0y_7i0ygc4g">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined() implies self.text.mediaType = 'application/dicom'</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_QcZbYFwWEeG0y_7i0ygc4g" name="SOPInstanceObservationTextReference" constrainedElement="_H4BmkFwWEeG0y_7i0ygc4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_SRyPsFwWEeG0y_7i0ygc4g">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined() implies self.text.reference->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_VYPqUFwWEeG0y_7i0ygc4g" name="SOPInstanceObservationTextReferenceValue" constrainedElement="_QcZbYFwWEeG0y_7i0ygc4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_XhkHQFwWEeG0y_7i0ygc4g">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined() implies self.text.reference.value->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vPZugIokEeSkH97cUQxLGA" name="SOPInstanceObservationTemplateId" constrainedElement="_9o7WcEb6EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vPZugYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.6.2.8')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vPenAIokEeSkH97cUQxLGA" name="SOPInstanceObservationClassCode" constrainedElement="_9o7WcEb6EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vPenAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::DGIMG</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vPf1IIokEeSkH97cUQxLGA" name="SOPInstanceObservationEffectiveTime" constrainedElement="_9o7WcEb6EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vPf1IYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vPhDQIokEeSkH97cUQxLGA" name="SOPInstanceObservationId" constrainedElement="_9o7WcEb6EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vPhDQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vPiRYIokEeSkH97cUQxLGA" name="SOPInstanceObservationMoodCode" constrainedElement="_9o7WcEb6EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vPiRYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vPjfgIokEeSkH97cUQxLGA" name="SOPInstanceObservationText" constrainedElement="_9o7WcEb6EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vPjfgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.text.oclIsUndefined() or self.text.isNullFlavorUndefined()) implies (not self.text.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vPoYAIokEeSkH97cUQxLGA" name="SOPInstanceObservationCodeP" constrainedElement="_9o7WcEb6EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vPoYAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vPmi0IokEeSkH97cUQxLGA" name="SOPInstanceObservationCode" constrainedElement="_9o7WcEb6EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vPmi0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '1.2.840.10008.2.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vQ_p8IokEeSkH97cUQxLGA" name="SOPInstanceObservation" constrainedElement="_9o7WcEb6EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vQ_p8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::SOPInstanceObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vRCGMIokEeSkH97cUQxLGA" name="SOPInstanceObservationPurposeofReferenceObservation" constrainedElement="_9o7WcEb6EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vRCGMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::PurposeofReferenceObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::RSON)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vRDUVYokEeSkH97cUQxLGA" name="SOPInstanceObservationReferencedFramesObservation" constrainedElement="_9o7WcEb6EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vRDUVookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::ReferencedFramesObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_9o7WcUb6EeGp67IkyTw1fg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_vRA4EIokEeSkH97cUQxLGA" name="getSOPInstanceObservations" bodyCondition="_vRA4E4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vRA4E4okEeSkH97cUQxLGA" name="body" constrainedElement="_vRA4EIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vRA4FIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::SOPInstanceObservation)).oclAsType(consol::SOPInstanceObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vRA4EYokEeSkH97cUQxLGA" type="_9o7WcEb6EeGp67IkyTw1fg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vRA4EookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vRDUUIokEeSkH97cUQxLGA" name="getPurposeofReferenceObservations" bodyCondition="_vRDUU4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vRDUU4okEeSkH97cUQxLGA" name="body" constrainedElement="_vRDUUIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vRDUVIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::PurposeofReferenceObservation)).oclAsType(consol::PurposeofReferenceObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vRDUUYokEeSkH97cUQxLGA" type="_J-F8UEb7EeGp67IkyTw1fg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vRDUUookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vREicIokEeSkH97cUQxLGA" name="getReferencedFramesObservations" bodyCondition="_vREic4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vREic4okEeSkH97cUQxLGA" name="body" constrainedElement="_vREicIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vREidIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ReferencedFramesObservation)).oclAsType(consol::ReferencedFramesObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vREicYokEeSkH97cUQxLGA" type="_1Zyf4Eb8EeGp67IkyTw1fg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vREicookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_J-F8UEb7EeGp67IkyTw1fg" name="PurposeofReferenceObservation">
      <ownedComment xmi:id="_u8ba4Eb8EeGp67IkyTw1fg">
        <body>A Purpose of Reference Observation describes the purpose of the DICOM composite object reference. Appropriate codes, such as externally defined DICOM codes, may be used to specify the semantics of the purpose of reference. When this observation is absent, it implies that the reason for the reference is unknown.</body>
      </ownedComment>
      <ownedRule xmi:id="_x-fKoFwZEeG0y_7i0ygc4g" name="PurposeofReferenceObservationCodeCodeSystem" constrainedElement="_J-F8UEb7EeGp67IkyTw1fg">
        <ownedComment xmi:id="_27hsYFwZEeG0y_7i0ygc4g">
          <body>For backwards compatibility with the DICOM CMET, the code MAY be drawn from ValueSet 2.16.840.1.113883.11.20.9.28 DICOMPurposeOfReference DYNAMIC</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_zyh7IFwZEeG0y_7i0ygc4g">
          <language>OCL</language>
          <body>self.code.isNullFlavorDefined() or (self.code.code = 'ASSERTION' and self.code.codeSystem = '2.16.840.1.113883.5.4')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vPqNMIokEeSkH97cUQxLGA" name="PurposeofReferenceObservationTemplateId" constrainedElement="_J-F8UEb7EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vPq0QIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.6.2.9')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vPspcIokEeSkH97cUQxLGA" name="PurposeofReferenceObservationClassCode" constrainedElement="_J-F8UEb7EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vPspcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vPt3kIokEeSkH97cUQxLGA" name="PurposeofReferenceObservationCode" constrainedElement="_J-F8UEb7EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vPt3kYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vPvswIokEeSkH97cUQxLGA" name="PurposeofReferenceObservationMoodCode" constrainedElement="_J-F8UEb7EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vPvswYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vPywEIokEeSkH97cUQxLGA" name="PurposeofReferenceObservationValue" constrainedElement="_J-F8UEb7EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vPywEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '1.2.840.10008.2.16.4' and (value.code = '121079' or value.code = '121080' or value.code = '121112')))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_J-F8UUb7EeGp67IkyTw1fg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_1Zyf4Eb8EeGp67IkyTw1fg" name="ReferencedFramesObservation">
      <ownedComment xmi:id="_E1-4EEriEeGJpZWiuxRVIw">
        <body>A Referenced Frames Observation is used if the referenced DICOM SOP instance is a multiframe image and the reference does not apply to all frames. The list of integer values for the referenced frames of a DICOM multiframe image SOP instance is contained in a Boundary Observation nested inside this class.</body>
      </ownedComment>
      <ownedRule xmi:id="_vP1MUIokEeSkH97cUQxLGA" name="ReferencedFramesObservationTemplateId" constrainedElement="_1Zyf4Eb8EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vP1MUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.6.2.10')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vP2acIokEeSkH97cUQxLGA" name="ReferencedFramesObservationClassCode" constrainedElement="_1Zyf4Eb8EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vP2acYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::ROIBND</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vP3okIokEeSkH97cUQxLGA" name="ReferencedFramesObservationMoodCode" constrainedElement="_1Zyf4Eb8EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vP3okYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vP5dwIokEeSkH97cUQxLGA" name="ReferencedFramesObservationCode" constrainedElement="_1Zyf4Eb8EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vP5dwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '121190' and value.codeSystem = '1.2.840.10008.2.16.4')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vRFJgIokEeSkH97cUQxLGA" name="ReferencedFramesObservationBoundaryObservation" constrainedElement="_1Zyf4Eb8EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vRFJgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::BoundaryObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_1Zyf4Ub8EeGp67IkyTw1fg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_vRFwkIokEeSkH97cUQxLGA" name="getBoundaryObservation" bodyCondition="_vRFwk4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vRFwk4okEeSkH97cUQxLGA" name="body" constrainedElement="_vRFwkIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vRFwlIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::BoundaryObservation))->asSequence()->any(true).oclAsType(consol::BoundaryObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vRFwkYokEeSkH97cUQxLGA" type="_9Yv6gEb8EeGp67IkyTw1fg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vRFwkookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9Yv6gEb8EeGp67IkyTw1fg" name="BoundaryObservation">
      <ownedComment xmi:id="_xkMo4EriEeGJpZWiuxRVIw">
        <body>A Boundary Observation contains a list of integer values for the referenced frames of a DICOM multiframe image SOP instance. It identifies the frame numbers within the referenced SOP instance to which the reference applies. The CDA Boundary Observation numbers frames using the same convention as DICOM, with the first frame in the referenced object being Frame 1. A Boundary Observation must be used if a referenced DICOM SOP instance is a multiframe image and the reference does not apply to all frames.</body>
      </ownedComment>
      <ownedRule xmi:id="_vP7S8IokEeSkH97cUQxLGA" name="BoundaryObservationTemplateId" constrainedElement="_9Yv6gEb8EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vP7S8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.6.2.11')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vP9IIIokEeSkH97cUQxLGA" name="BoundaryObservationClassCode" constrainedElement="_9Yv6gEb8EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vP9IIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vP-9UIokEeSkH97cUQxLGA" name="BoundaryObservationCode" constrainedElement="_9Yv6gEb8EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vP-9UYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '113036' and value.codeSystem = '1.2.840.10008.2.16.4')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vQCAoIokEeSkH97cUQxLGA" name="BoundaryObservationMoodCode" constrainedElement="_9Yv6gEb8EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vQCAoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vQEc4IokEeSkH97cUQxLGA" name="BoundaryObservationValue" constrainedElement="_9Yv6gEb8EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vQEc4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | element.oclIsTypeOf(datatypes::INT)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_9Yv6gUb8EeGp67IkyTw1fg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9xjKIEb-EeGp67IkyTw1fg" name="TextObservation">
      <ownedComment xmi:id="_3yIrgOZWEeGINOJ_SD9_dA">
        <body>DICOM Template 2000 specifies that Imaging Report Elements of Value Type Text are contained in sections. The Imaging Report Elements are inferred from Basic Diagnostic Imaging Report Observations that consist of image references and measurements (linear, area, volume, and numeric). Text DICOM Imaging Report Elements in this context are mapped to CDA text observations that are section components and are related to the SOP Instance Observations (templateId 2.16.840.1.113883.10.20.6.2.8) or Quantity Measurement Observations (templateId 2.16.840.1.113883.10.20.6.2.14) by the SPRT (Support) act relationship.&#xD;
A Text Observation is required if the findings in the section text are represented as inferred from SOP Instance Observations.</body>
      </ownedComment>
      <ownedRule xmi:id="_k0_vQOZaEeGINOJ_SD9_dA" name="TextObservationTextReference">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oh10cOZaEeGINOJ_SD9_dA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined() implies self.text->forAll(reference->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_l-ML8OZaEeGINOJ_SD9_dA" name="TextObservationTextReferenceValue" constrainedElement="_k0_vQOZaEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pzqosOZaEeGINOJ_SD9_dA">
          <language>OCL</language>
          <body>self.text->forAll(reference->size() = 1) implies self.text->forAll(reference->one(value->size() = 1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nVEfUOZaEeGINOJ_SD9_dA" name="TextObservationReferenceValue" constrainedElement="_l-ML8OZaEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_rAIb0OZaEeGINOJ_SD9_dA">
          <language>OCL</language>
          <body>not self.text.reference.value.oclIsUndefined() implies not self.getSection().text.getText(self.text.reference.value.substring(2, self.text.reference.value.size())).oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vQFrAIokEeSkH97cUQxLGA" name="TextObservationTemplateId" constrainedElement="_9xjKIEb-EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vQGSEIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.6.2.12')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vQKjgIokEeSkH97cUQxLGA" name="TextObservationClassCode" constrainedElement="_9xjKIEb-EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vQKjgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vQLxoIokEeSkH97cUQxLGA" name="TextObservationMoodCode" constrainedElement="_9xjKIEb-EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vQLxoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vQM_wIokEeSkH97cUQxLGA" name="TextObservationCode" constrainedElement="_9xjKIEb-EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vQM_wYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vQO08IokEeSkH97cUQxLGA" name="TextObservationEffectiveTime" constrainedElement="_9xjKIEb-EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vQO08YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vQQqIIokEeSkH97cUQxLGA" name="TextObservationText" constrainedElement="_9xjKIEb-EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vQQqIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.text.oclIsUndefined() or self.text.isNullFlavorUndefined()) implies (not self.text.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vQSfUIokEeSkH97cUQxLGA" name="TextObservationValue" constrainedElement="_9xjKIEb-EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vQSfUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::ED)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vUJroIokEeSkH97cUQxLGA" name="TextObservationSOPInstanceObservation" constrainedElement="_9xjKIEb-EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vUJroYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::SOPInstanceObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SPRT)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vULg0IokEeSkH97cUQxLGA" name="TextObservationQuantityMeasurementObservation" constrainedElement="_9xjKIEb-EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vULg0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::QuantityMeasurementObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SPRT)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_9xjKIUb-EeGp67IkyTw1fg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_vUK5wIokEeSkH97cUQxLGA" name="getSOPInstanceObservations" bodyCondition="_vUK5w4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vUK5w4okEeSkH97cUQxLGA" name="body" constrainedElement="_vUK5wIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vUK5xIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::SOPInstanceObservation)).oclAsType(consol::SOPInstanceObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vUK5wYokEeSkH97cUQxLGA" type="_9o7WcEb6EeGp67IkyTw1fg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vUK5wookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vUMu8IokEeSkH97cUQxLGA" name="getQuantityMeasurementObservations" bodyCondition="_vUMu84okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vUMu84okEeSkH97cUQxLGA" name="body" constrainedElement="_vUMu8IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vUMu9IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::QuantityMeasurementObservation)).oclAsType(consol::QuantityMeasurementObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vUMu8YokEeSkH97cUQxLGA" type="_Px2t4Eb_EeGp67IkyTw1fg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vUMu8ookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Px2t4Eb_EeGp67IkyTw1fg" name="QuantityMeasurementObservation">
      <ownedComment xmi:id="_Uk93kEb_EeGp67IkyTw1fg">
        <body>A Quantity Measurement Observation records quantity measurements based on image data such as linear, area, volume, and numeric measurements. The codes in DIRQuantityMeasurementTypeCodes (ValueSet: 2.16.840.1.113883.11.20.9.29) are from the qualifier hierarchy of SNOMED CT and are not valid for observation/code according to the Term Info guidelines. These codes can be used for backwards compatibility, but going forward, codes from the observable entity hierarchy will be requested and used.</body>
      </ownedComment>
      <ownedRule xmi:id="_BCpU8OZUEeGINOJ_SD9_dA" name="QuantityMeasurementObservationCodeCodeSystemDIR">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_K4jqIOZUEeGINOJ_SD9_dA">
          <language>OCL</language>
          <body>self.code.isNullFlavorDefined() or self.code.codeSystem = '2.16.840.1.113883.6.96'</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ChkKAOZUEeGINOJ_SD9_dA" name="QuantityMeasurementObservationCodeCodeSystemDICOM" constrainedElement="_BCpU8OZUEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_L6dzEOZUEeGINOJ_SD9_dA">
          <language>OCL</language>
          <body>self.code.isNullFlavorDefined() or self.code.codeSystem='1.2.840.10008.2.16.4'</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vQUUgIokEeSkH97cUQxLGA" name="QuantityMeasurementObservationTemplateId" constrainedElement="_Px2t4Eb_EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vQUUgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.6.2.14')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vQX-4IokEeSkH97cUQxLGA" name="QuantityMeasurementObservationClassCode" constrainedElement="_Px2t4Eb_EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vQX-4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vQZ0EIokEeSkH97cUQxLGA" name="QuantityMeasurementObservationMoodCode" constrainedElement="_Px2t4Eb_EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vQZ0EYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vQbCMIokEeSkH97cUQxLGA" name="QuantityMeasurementObservationCode" constrainedElement="_Px2t4Eb_EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vQbpQIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vQdecIokEeSkH97cUQxLGA" name="QuantityMeasurementObservationEffectiveTime" constrainedElement="_Px2t4Eb_EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vQdecYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vQf6sIokEeSkH97cUQxLGA" name="QuantityMeasurementObservationValue" constrainedElement="_Px2t4Eb_EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vQf6sYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::PQ)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vUHPYIokEeSkH97cUQxLGA" name="QuantityMeasurementObservationSOPInstanceObservation" constrainedElement="_Px2t4Eb_EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vUH2cIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::SOPInstanceObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SPRT)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Px2t4Ub_EeGp67IkyTw1fg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_vUIdgIokEeSkH97cUQxLGA" name="getSOPInstanceObservations" bodyCondition="_vUJEkookEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vUJEkookEeSkH97cUQxLGA" name="body" constrainedElement="_vUIdgIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vUJEk4okEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::SOPInstanceObservation)).oclAsType(consol::SOPInstanceObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vUJEkIokEeSkH97cUQxLGA" type="_9o7WcEb6EeGp67IkyTw1fg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vUJEkYokEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_pmiz8Eb_EeGp67IkyTw1fg" name="CodeObservations">
      <ownedComment xmi:id="_uqo_8Eb_EeGp67IkyTw1fg">
        <body>DICOM Template 2000 specifies that Imaging Report Elements of Value Type Code are contained in sections. The Imaging Report Elements are inferred from Basic Diagnostic Imaging Report Observations that consist of image references and measurements (linear, area, volume, and numeric). Coded DICOM Imaging Report Elements in this context are mapped to CDA-coded observations that are section components and are related to the SOP Instance Observations (templateId 2.16.840.1.113883.10.20.6.2.8) or Quantity Measurement Observations (templateId 2.16.840.1.113883.10.20.6.2.14) by the SPRT (Support) act relationship.</body>
      </ownedComment>
      <ownedRule xmi:id="_vQhv4IokEeSkH97cUQxLGA" name="CodeObservationsTemplateId" constrainedElement="_pmiz8Eb_EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vQhv4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.6.2.13')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vQkzMIokEeSkH97cUQxLGA" name="CodeObservationsClassCode" constrainedElement="_pmiz8Eb_EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vQkzMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vQmBUIokEeSkH97cUQxLGA" name="CodeObservationsMoodCode" constrainedElement="_pmiz8Eb_EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vQmBUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vQnPcIokEeSkH97cUQxLGA" name="CodeObservationsCode" constrainedElement="_pmiz8Eb_EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vQnPcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vQodkIokEeSkH97cUQxLGA" name="CodeObservationsEffectiveTime" constrainedElement="_pmiz8Eb_EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vQodkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vQprsIokEeSkH97cUQxLGA" name="CodeObservationsValue" constrainedElement="_pmiz8Eb_EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vQprsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vTp8YIokEeSkH97cUQxLGA" name="CodeObservationsSOPInstanceObservation" constrainedElement="_pmiz8Eb_EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vTp8YYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::SOPInstanceObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SPRT)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vTqjdYokEeSkH97cUQxLGA" name="CodeObservationsQuantityMeasurementObservation" constrainedElement="_pmiz8Eb_EeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vTqjdookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::QuantityMeasurementObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SPRT)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_pmiz8Ub_EeGp67IkyTw1fg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_vTqjcIokEeSkH97cUQxLGA" name="getSOPInstanceObservations" bodyCondition="_vTqjc4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vTqjc4okEeSkH97cUQxLGA" name="body" constrainedElement="_vTqjcIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vTqjdIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::SOPInstanceObservation)).oclAsType(consol::SOPInstanceObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vTqjcYokEeSkH97cUQxLGA" type="_9o7WcEb6EeGp67IkyTw1fg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vTqjcookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vTrxkIokEeSkH97cUQxLGA" name="getQuantityMeasurementObservations" bodyCondition="_vTrxk4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vTrxk4okEeSkH97cUQxLGA" name="body" constrainedElement="_vTrxkIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vTrxlIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::QuantityMeasurementObservation)).oclAsType(consol::QuantityMeasurementObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vTrxkYokEeSkH97cUQxLGA" type="_Px2t4Eb_EeGp67IkyTw1fg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vTrxkookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_crHC0EcAEeGp67IkyTw1fg" name="ProcedureContext">
      <ownedComment xmi:id="_grHUkEcAEeGp67IkyTw1fg">
        <body>The ServiceEvent Procedure Context of the document header may be overridden in the CDA structured body if there is a need to refer to multiple imaging procedures or acts. The selection of the Procedure or Act entry from the clinical statement choice box depends on the nature of the imaging service that has been performed. The Procedure entry shall be used for image-guided interventions and minimal invasive imaging services, whereas the Act entry shall be used for diagnostic imaging services.</body>
      </ownedComment>
      <ownedRule xmi:id="_Rqt7cOZJEeGINOJ_SD9_dA" name="ProcedureContextEffectiveTimeValue">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_U0JxkOZJEeGINOJ_SD9_dA">
          <language>OCL</language>
          <body>not self.effectiveTime.oclIsUndefined() implies self.effectiveTime.value->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vQq50IokEeSkH97cUQxLGA" name="ProcedureContextTemplateId" constrainedElement="_crHC0EcAEeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vQrg4IokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.6.2.5')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vQukMIokEeSkH97cUQxLGA" name="ProcedureContextClassCode" constrainedElement="_crHC0EcAEeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vQukMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryAct::ACT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vQxAcIokEeSkH97cUQxLGA" name="ProcedureContextMoodCode" constrainedElement="_crHC0EcAEeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vQxAcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vQy1oIokEeSkH97cUQxLGA" name="ProcedureContextCode" constrainedElement="_crHC0EcAEeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vQy1oYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vQ0DwIokEeSkH97cUQxLGA" name="ProcedureContextEffectiveTime" constrainedElement="_crHC0EcAEeGp67IkyTw1fg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vQ0DwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_crHC0UcAEeGp67IkyTw1fg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Ker6MOM2EeGfv4R-kzpM0g" name="EncounterDiagnosis">
      <ownedComment xmi:id="_yctScOM2EeGfv4R-kzpM0g">
        <body>This template wraps relevant problems or diagnoses at the close of a visit or that need to be followed after the visit. If the encounter is associated with a Hospital Discharge, the Hospital Discharge Diagnosis must be used. This entry requires at least one Problem Observation entry.</body>
      </ownedComment>
      <ownedRule xmi:id="_vRs0kookEeSkH97cUQxLGA" name="EncounterDiagnosisTemplateId" constrainedElement="_Ker6MOM2EeGfv4R-kzpM0g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vRtboIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.80')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vRvQ0IokEeSkH97cUQxLGA" name="EncounterDiagnosisClassCode" constrainedElement="_Ker6MOM2EeGfv4R-kzpM0g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vRvQ0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryAct::ACT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vRxGAIokEeSkH97cUQxLGA" name="EncounterDiagnosisMoodCode" constrainedElement="_Ker6MOM2EeGfv4R-kzpM0g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vRxGAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vR2lkIokEeSkH97cUQxLGA" name="EncounterDiagnosisCodeP" constrainedElement="_Ker6MOM2EeGfv4R-kzpM0g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vR2lkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vR0JUIokEeSkH97cUQxLGA" name="EncounterDiagnosisCode" constrainedElement="_Ker6MOM2EeGfv4R-kzpM0g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vR0JUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '29308-4' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vR6P8IokEeSkH97cUQxLGA" name="EncounterDiagnosisProblemObservation" constrainedElement="_Ker6MOM2EeGfv4R-kzpM0g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vR6P8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::ProblemObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Ker6MeM2EeGfv4R-kzpM0g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_vR63AIokEeSkH97cUQxLGA" name="getProblemObservations" bodyCondition="_vR63A4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vR63A4okEeSkH97cUQxLGA" name="body" constrainedElement="_vR63AIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vR63BIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProblemObservation)).oclAsType(consol::ProblemObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vR63AYokEeSkH97cUQxLGA" type="_5Ha7ABUyEeGbmN_W114JUw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vR63AookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_RYJj0OWQEeGKmvzED_He2w" name="SmokingStatusObservation">
      <ownedComment xmi:id="_0PTokOWTEeGKmvzED_He2w">
        <body>This clinical statement represents a patient's current smoking status. The vocabulary selected for this clinical statement is the best approximation of the statuses in Meaningful Use (MU) Stage 1.  &#xD;
If the patient is a smoker (77176002), the effectiveTime/low element must be present. If the patient is an ex-smoker (8517006), both the effectiveTime/low and effectiveTime/high element must be present.&#xD;
The smoking status value set includes a special code to communicate if the smoking status is unknown which is different from how Consolidated CDA generally communicates unknown information.</body>
      </ownedComment>
      <ownedRule xmi:id="_5lXR0OWUEeGKmvzED_He2w" name="SmokingStatusObservationEffectiveTimeLow" constrainedElement="_RYJj0OWQEeGKmvzED_He2w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_7peeoOWUEeGKmvzED_He2w">
          <language>OCL</language>
          <body>not self.effectiveTime.oclIsUndefined() implies not self.effectiveTime.low.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vSCLwYokEeSkH97cUQxLGA" name="TobaccoUseTemplateId" constrainedElement="_RYJj0OWQEeGKmvzED_He2w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vSCy0IokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.78')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vSF2IIokEeSkH97cUQxLGA" name="SmokingStatusObservationClassCode" constrainedElement="_RYJj0OWQEeGKmvzED_He2w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vSF2IYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vSISYIokEeSkH97cUQxLGA" name="SmokingStatusObservationMoodCode" constrainedElement="_RYJj0OWQEeGKmvzED_He2w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vSISYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vSNK4IokEeSkH97cUQxLGA" name="SmokingStatusObservationCodeP" constrainedElement="_RYJj0OWQEeGKmvzED_He2w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vSNK4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vSKuoIokEeSkH97cUQxLGA" name="SmokingStatusObservationCode" constrainedElement="_RYJj0OWQEeGKmvzED_He2w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vSKuoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = 'ASSERTION' and value.codeSystem = '2.16.840.1.113883.5.4')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vSPnIIokEeSkH97cUQxLGA" name="SmokingStatusObservationEffectiveTime" constrainedElement="_RYJj0OWQEeGKmvzED_He2w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vSPnIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vST4kIokEeSkH97cUQxLGA" name="SmokingStatusObservationStatusCodeP" constrainedElement="_RYJj0OWQEeGKmvzED_He2w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vSUfoIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vSSDYIokEeSkH97cUQxLGA" name="SmokingStatusObservationStatusCode" constrainedElement="_RYJj0OWQEeGKmvzED_He2w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vSSDYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vSZYIIokEeSkH97cUQxLGA" name="SmokingStatusObservationValueP" constrainedElement="_RYJj0OWQEeGKmvzED_He2w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vSZYIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vSW74IokEeSkH97cUQxLGA" name="SmokingStatusObservationValue" constrainedElement="_RYJj0OWQEeGKmvzED_He2w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vSW74YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.96' and (value.code = '449868002' or value.code = '428041000124106' or value.code = '8517006' or value.code = '266919005' or value.code = '77176002' or value.code = '266927001')))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_reIG0OWTEeGKmvzED_He2w" general="_gIH_QOWQEeGKmvzED_He2w"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_gIH_QOWQEeGKmvzED_He2w" name="TobaccoUse">
      <ownedComment xmi:id="_v5_OIOWTEeGKmvzED_He2w">
        <body>This clinical statement represents a patient's tobacco use. All types of tobacco use are represented using the codes from the tobacco use and exposure - finding hierarchy in SNOMED CT.</body>
      </ownedComment>
      <ownedRule xmi:id="_gBRpAOWTEeGKmvzED_He2w" name="TobaccoUseEffectiveTimeLow" constrainedElement="_gIH_QOWQEeGKmvzED_He2w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hhh60OWTEeGKmvzED_He2w">
          <language>OCL</language>
          <body>not self.effectiveTime.oclIsUndefined() implies not self.effectiveTime.low.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vSbNUIokEeSkH97cUQxLGA" name="TobaccoUseTemplateId" constrainedElement="_gIH_QOWQEeGKmvzED_He2w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vSbNUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.85')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vSdpkIokEeSkH97cUQxLGA" name="TobaccoUseClassCode" constrainedElement="_gIH_QOWQEeGKmvzED_He2w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vSdpkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vSe3sIokEeSkH97cUQxLGA" name="TobaccoUseMoodCode" constrainedElement="_gIH_QOWQEeGKmvzED_He2w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vSe3sYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vSiiEIokEeSkH97cUQxLGA" name="TobaccoUseCodeP" constrainedElement="_gIH_QOWQEeGKmvzED_He2w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vSiiEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vSgF0IokEeSkH97cUQxLGA" name="TobaccoUseCode" constrainedElement="_gIH_QOWQEeGKmvzED_He2w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vSgF0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = 'ASSERTION' and value.codeSystem = '2.16.840.1.113883.5.4')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vSkXQIokEeSkH97cUQxLGA" name="TobaccoUseEffectiveTime" constrainedElement="_gIH_QOWQEeGKmvzED_He2w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vSkXQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vSmzgIokEeSkH97cUQxLGA" name="TobaccoUseStatusCode" constrainedElement="_gIH_QOWQEeGKmvzED_He2w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vSmzgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vSoosIokEeSkH97cUQxLGA" name="TobaccoUseStatusCodeP" constrainedElement="_gIH_QOWQEeGKmvzED_He2w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vSoosYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vSrsAIokEeSkH97cUQxLGA" name="TobaccoUseValue" constrainedElement="_gIH_QOWQEeGKmvzED_He2w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vSrsAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.96' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vSthMIokEeSkH97cUQxLGA" name="TobaccoUseValueP" constrainedElement="_gIH_QOWQEeGKmvzED_He2w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vSuIQIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_gIH_QeWQEeGKmvzED_He2w">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Zi33YOYxEeGINOJ_SD9_dA" name="AssessmentScaleObservation">
      <ownedComment xmi:id="_UY-EsOY5EeGINOJ_SD9_dA">
        <body>An assessment scale is a collection of observations that together yield a summary evaluation of a particular condition. Examples include the Braden Scale (assesses pressure ulcer risk), APACHE Score (estimates mortality in critically ill patients), Mini-Mental Status Exam (assesses cognitive function), APGAR Score (assesses the health of a newborn), and Glasgow Coma Scale (assesses coma and impaired consciousness.)</body>
      </ownedComment>
      <ownedRule xmi:id="_rnS0MOYzEeGINOJ_SD9_dA" name="AssessmentScaleObservationCodeCodeSystem" constrainedElement="_Zi33YOYxEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v7vE4OYzEeGINOJ_SD9_dA">
          <language>OCL</language>
          <body>self.code.isNullFlavorDefined() or self.code.codeSystem = '2.16.840.1.113883.6.1' or self.code.codeSystem = '2.16.840.1.113883.6.96'</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_WfZX8OY0EeGINOJ_SD9_dA" name="AssessmentScaleObservationInterpretationCodeTranslation" constrainedElement="_Zi33YOYxEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ZZ6oUOY0EeGINOJ_SD9_dA">
          <language>OCL</language>
          <body>self.interpretationCode->size() > 0 implies self.interpretationCode.translation->size() > 0</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vSzAwIokEeSkH97cUQxLGA" name="AssessmentScaleObservationTemplateId" constrainedElement="_Zi33YOYxEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vSzAwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.69')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vS2EEIokEeSkH97cUQxLGA" name="AssessmentScaleObservationClassCode" constrainedElement="_Zi33YOYxEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vS2EEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vS3SMIokEeSkH97cUQxLGA" name="AssessmentScaleObservationMoodCode" constrainedElement="_Zi33YOYxEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vS3SMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vS4gUIokEeSkH97cUQxLGA" name="AssessmentScaleObservationCode" constrainedElement="_Zi33YOYxEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vS4gUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vS5ucIokEeSkH97cUQxLGA" name="AssessmentScaleObservationDerivationExpr" constrainedElement="_Zi33YOYxEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vS5ucYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.derivationExpr.oclIsUndefined() or self.derivationExpr.isNullFlavorUndefined()) implies (not self.derivationExpr.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vS68kIokEeSkH97cUQxLGA" name="AssessmentScaleObservationEffectiveTime" constrainedElement="_Zi33YOYxEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vS68kYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vS8KsIokEeSkH97cUQxLGA" name="AssessmentScaleObservationId" constrainedElement="_Zi33YOYxEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vS8KsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vS9Y0IokEeSkH97cUQxLGA" name="AssessmentScaleObservationInterpretationCode" constrainedElement="_Zi33YOYxEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vS9Y0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.interpretationCode->isEmpty() or self.interpretationCode->exists(element | element.isNullFlavorUndefined())) implies (not self.interpretationCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vS_OAIokEeSkH97cUQxLGA" name="AssessmentScaleObservationStatusCode" constrainedElement="_Zi33YOYxEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vS_OAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vTBDMIokEeSkH97cUQxLGA" name="AssessmentScaleObservationStatusCodeP" constrainedElement="_Zi33YOYxEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vTBDMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vTC4YIokEeSkH97cUQxLGA" name="AssessmentScaleObservationValue" constrainedElement="_Zi33YOYxEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vTC4YYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vTGiwIokEeSkH97cUQxLGA" name="AssessmentScaleObservationAuthor" constrainedElement="_Zi33YOYxEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vTGiwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->exists(author : cda::Author | not author.oclIsUndefined() and author.oclIsKindOf(rim::Participation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vTHw4IokEeSkH97cUQxLGA" name="AssessmentScaleObservationReferenceRange" constrainedElement="_Zi33YOYxEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vTHw4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.referenceRange->exists(referenceRange : cda::ReferenceRange | not referenceRange.oclIsUndefined() and referenceRange.oclIsKindOf(cda::ReferenceRange))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vTWaYIokEeSkH97cUQxLGA" name="AssessmentScaleObservationAssessmentScaleSupportingObservation" constrainedElement="_Zi33YOYxEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vTWaYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::AssessmentScaleSupportingObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wT8UsIokEeSkH97cUQxLGA" name="AssessmentScaleObservationReferenceRangeObservationRangeTextReference" constrainedElement="_Zi33YOYxEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wT8UsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.referenceRange->excluding(null).observationRange->excluding(null)->reject(not text.oclIsUndefined() implies text->forAll(reference->size() = 1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wT87wIokEeSkH97cUQxLGA" name="AssessmentScaleObservationReferenceRangeObservationRangeTextReferenceValue" constrainedElement="_Zi33YOYxEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wT87wYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.referenceRange->excluding(null).observationRange->excluding(null)->reject(text->forAll(reference->size() = 1) implies text->forAll(reference->one(value->size() = 1)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wT9i0IokEeSkH97cUQxLGA" name="AssessmentScaleObservationReferenceRangeObservationRangeReferenceValue" constrainedElement="_Zi33YOYxEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wT9i0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.referenceRange->excluding(null).observationRange->excluding(null)->reject(not text.reference.value.oclIsUndefined() implies not getSection().text.getText(text.reference.value.substring(2, text.reference.value.size())).oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wT9i0ookEeSkH97cUQxLGA" name="AssessmentScaleObservationReferenceRangeObservationRangeText" constrainedElement="_Zi33YOYxEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wT9i04okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.referenceRange->excluding(null).observationRange->excluding(null)->reject((text.oclIsUndefined() or text.isNullFlavorUndefined()) implies (not text.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wT-J4IokEeSkH97cUQxLGA" name="AssessmentScaleObservationReferenceRangeObservationRange" constrainedElement="_Zi33YOYxEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wT-J4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.referenceRange->excluding(null)->reject(observationRange->one(observationRange : cda::ObservationRange | not observationRange.oclIsUndefined() and observationRange.oclIsKindOf(cda::ObservationRange)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Zi33YeYxEeGINOJ_SD9_dA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_vTXBcIokEeSkH97cUQxLGA" name="getAssessmentScaleSupportingObservations" bodyCondition="_vTXBc4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vTXBc4okEeSkH97cUQxLGA" name="body" constrainedElement="_vTXBcIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vTXBdIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::AssessmentScaleSupportingObservation)).oclAsType(consol::AssessmentScaleSupportingObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vTXBcYokEeSkH97cUQxLGA" type="_1ZKPgOY2EeGINOJ_SD9_dA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vTXBcookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_1ZKPgOY2EeGINOJ_SD9_dA" name="AssessmentScaleSupportingObservation">
      <ownedComment xmi:id="_VokEUOY5EeGINOJ_SD9_dA">
        <body>An Assessment Scale Supporting observation represents the components of a scale used in an Assessment Scale Observation. The individual parts that make up the component may be a group of cognitive or functional status observations.</body>
      </ownedComment>
      <ownedRule xmi:id="_W_NRsOY6EeGINOJ_SD9_dA" name="AssessmentScaleSupportingObservationCodeCodeSystem" constrainedElement="_1ZKPgOY2EeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_eTQHEOY6EeGINOJ_SD9_dA">
          <language>OCL</language>
          <body>self.code.isNullFlavorDefined() or self.code.codeSystem = '2.16.840.1.113883.6.1' or self.code.codeSystem = '2.16.840.1.113883.6.96'</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_u6PHcOY6EeGINOJ_SD9_dA" name="AssessmentScaleSupportingObservationValueTranslation">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_zCA1IOY6EeGINOJ_SD9_dA">
          <language>OCL</language>
          <body>self.value.oclAsType(datatypes::CD).translation->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vTI_AIokEeSkH97cUQxLGA" name="AssessmentScaleSupportingObservationTemplateId" constrainedElement="_1ZKPgOY2EeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vTI_AYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.86')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vTLbQIokEeSkH97cUQxLGA" name="AssessmentScaleSupportingObservationClassCode" constrainedElement="_1ZKPgOY2EeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vTLbQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vTMpYIokEeSkH97cUQxLGA" name="AssessmentScaleSupportingObservationMoodCode" constrainedElement="_1ZKPgOY2EeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vTMpYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vTN3gIokEeSkH97cUQxLGA" name="AssessmentScaleSupportingObservationCode" constrainedElement="_1ZKPgOY2EeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vTN3gYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vTPFoIokEeSkH97cUQxLGA" name="AssessmentScaleSupportingObservationId" constrainedElement="_1ZKPgOY2EeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vTPFoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vTQTwIokEeSkH97cUQxLGA" name="AssessmentScaleSupportingObservationStatusCode" constrainedElement="_1ZKPgOY2EeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vTQ60IokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vTSwAIokEeSkH97cUQxLGA" name="AssessmentScaleSupportingObservationStatusCodeP" constrainedElement="_1ZKPgOY2EeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vTSwAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vTVMQIokEeSkH97cUQxLGA" name="AssessmentScaleSupportingObservationValue" constrainedElement="_1ZKPgOY2EeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vTVMQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_1ZMrwOY2EeGINOJ_SD9_dA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="__pNCUOY-EeGINOJ_SD9_dA" name="CaregiverCharacteristics">
      <ownedRule xmi:id="_kF-hYOY_EeGINOJ_SD9_dA" name="CaregiverCharacteristicsValueCodeSystem">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lsVbMOY_EeGINOJ_SD9_dA">
          <language>OCL</language>
          <body>self.value->forAll(val | val.isNullFlavorDefined() or val.oclAsType(datatypes::CD).codeSystem = '2.16.840.1.113883.6.1' or val.oclAsType(datatypes::CD).codeSystem = '2.16.840.1.113883.6.96')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vTXBdYokEeSkH97cUQxLGA" name="CaregiverCharacteristicsTemplateId" constrainedElement="__pNCUOY-EeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vTXBdookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.72')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vTZdsIokEeSkH97cUQxLGA" name="CaregiverCharacteristicsClassCode" constrainedElement="__pNCUOY-EeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vTZdsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vTar0IokEeSkH97cUQxLGA" name="CaregiverCharacteristicsMoodCode" constrainedElement="__pNCUOY-EeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vTar0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vTb58IokEeSkH97cUQxLGA" name="CaregiverCharacteristicsId" constrainedElement="__pNCUOY-EeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vTb58YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vTchAIokEeSkH97cUQxLGA" name="CaregiverCharacteristicsCode" constrainedElement="__pNCUOY-EeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vTdIEIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vTeWMIokEeSkH97cUQxLGA" name="CaregiverCharacteristicsStatusCode" constrainedElement="__pNCUOY-EeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vTe9QIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vTgycIokEeSkH97cUQxLGA" name="CaregiverCharacteristicsStatusCodeP" constrainedElement="__pNCUOY-EeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vTgycYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vTinoIokEeSkH97cUQxLGA" name="CaregiverCharacteristicsValue" constrainedElement="__pNCUOY-EeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vTinoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vToHMIokEeSkH97cUQxLGA" name="CaregiverCharacteristicsParticipant" constrainedElement="__pNCUOY-EeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vToHMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->exists(participant : cda::Participant2 | not participant.oclIsUndefined() and participant.oclIsKindOf(cda::Participant2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wT_YAIokEeSkH97cUQxLGA" name="CaregiverCharacteristicsParticipantParticipantRoleClassCode" constrainedElement="__pNCUOY-EeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wT_YAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).participantRole->excluding(null)->reject(isDefined('classCode') and classCode=vocab::RoleClassRoot::CAREGIVER)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wT__EIokEeSkH97cUQxLGA" name="CaregiverCharacteristicsParticipantTimeLow" constrainedElement="__pNCUOY-EeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wT__EYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->reject(not time.oclIsUndefined() implies time.low->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wT__EookEeSkH97cUQxLGA" name="CaregiverCharacteristicsParticipantTimeHigh" constrainedElement="__pNCUOY-EeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wT__E4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->reject(not time.oclIsUndefined() implies time.high->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wUAmIIokEeSkH97cUQxLGA" name="CaregiverCharacteristicsParticipantTypeCode" constrainedElement="__pNCUOY-EeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wUAmIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->reject(typeCode=vocab::ParticipationType::IND)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wUBNMIokEeSkH97cUQxLGA" name="CaregiverCharacteristicsParticipantTime" constrainedElement="__pNCUOY-EeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wUBNMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->reject((time.oclIsUndefined() or time.isNullFlavorUndefined()) implies (not time.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wUBNMookEeSkH97cUQxLGA" name="CaregiverCharacteristicsParticipantParticipantRole" constrainedElement="__pNCUOY-EeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wUBNM4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->reject(participantRole->one(participantRole : cda::ParticipantRole | not participantRole.oclIsUndefined() and participantRole.oclIsKindOf(cda::ParticipantRole)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="__pNCUeY-EeGINOJ_SD9_dA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_6kIXMOZEEeGINOJ_SD9_dA" name="MedicationUseNoneKnown">
      <ownedComment xmi:id="_EepfkOZFEeGINOJ_SD9_dA">
        <body>The recommended approach to stating no known medications is to use the appropriate nullFlavor instead of this template. See &quot;Unknown Information&quot; in Section 1.&#xD;
This template indicates that the subject is not known to be on any medications.</body>
      </ownedComment>
      <ownedRule xmi:id="_Fu374OZGEeGINOJ_SD9_dA" name="MedicationUseNoneKnownTextReference" constrainedElement="_6kIXMOZEEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_J57AAOZGEeGINOJ_SD9_dA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined() implies self.text->forAll(reference->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_HEttcOZGEeGINOJ_SD9_dA" name="MedicationUseNoneKnownTextReferenceValue" constrainedElement="_Fu374OZGEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_SlvgoOZGEeGINOJ_SD9_dA">
          <language>OCL</language>
          <body>self.text->forAll(reference->size() = 1) implies self.text->forAll(reference->one(value->size() = 1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_H4Cn0OZGEeGINOJ_SD9_dA" name="MedicationUseNoneKnownReferenceValue" constrainedElement="_HEttcOZGEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_VIM2UOZGEeGINOJ_SD9_dA">
          <language>OCL</language>
          <body>not self.text.reference.value.oclIsUndefined() implies not self.getSection().text.getText(self.text.reference.value.substring(2, self.text.reference.value.size())).oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vTrxlYokEeSkH97cUQxLGA" name="MedicationUseNoneKnownTemplateId" constrainedElement="_6kIXMOZEEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vTrxlookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.29')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vTu04IokEeSkH97cUQxLGA" name="MedicationUseNoneKnownClassCode" constrainedElement="_6kIXMOZEEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vTu04YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vTwDAIokEeSkH97cUQxLGA" name="MedicationUseNoneKnownMoodCode" constrainedElement="_6kIXMOZEEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vTwDAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vTx4MIokEeSkH97cUQxLGA" name="MedicationUseNoneKnownId" constrainedElement="_6kIXMOZEEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vTx4MYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vT1ikIokEeSkH97cUQxLGA" name="MedicationUseNoneKnownCodeP" constrainedElement="_6kIXMOZEEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vT1ikYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vTztYIokEeSkH97cUQxLGA" name="MedicationUseNoneKnownCode" constrainedElement="_6kIXMOZEEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vTztYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = 'ASSERTION' and value.codeSystem = '2.16.840.1.113883.5.4')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vT3-0IokEeSkH97cUQxLGA" name="MedicationUseNoneKnownEffectiveTime" constrainedElement="_6kIXMOZEEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vT3-0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vT50AIokEeSkH97cUQxLGA" name="MedicationUseNoneKnownStatusCode" constrainedElement="_6kIXMOZEEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vT50AYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vT7pMIokEeSkH97cUQxLGA" name="MedicationUseNoneKnownStatusCodeP" constrainedElement="_6kIXMOZEEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vT7pMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vT9eYIokEeSkH97cUQxLGA" name="MedicationUseNoneKnownText" constrainedElement="_6kIXMOZEEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vT9eYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.text.oclIsUndefined() or self.text.isNullFlavorUndefined()) implies (not self.text.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vUAhsIokEeSkH97cUQxLGA" name="MedicationUseNoneKnownValue" constrainedElement="_6kIXMOZEEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vUAhsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.code = '182904002' and value.codeSystem = '2.16.840.1.113883.6.96'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vUEMEIokEeSkH97cUQxLGA" name="MedicationUseNoneKnownValueP" constrainedElement="_6kIXMOZEEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vUEMEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_6kIXMeZEEeGINOJ_SD9_dA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_dXKPQOZbEeGINOJ_SD9_dA" name="CognitiveStatusProblemObservation">
      <ownedComment xmi:id="_FgL9oOZcEeGINOJ_SD9_dA">
        <body>A cognitive status problem observation is a clinical statement that describes a patient's cognitive condition, findings, or symptoms. Examples of cognitive problem observations are inability to recall, amnesia, dementia, and aggressive behavior. &#xD;
A cognitive problem observation is a finding or medical condition. This is different from a cognitive result observation, which is a response to a question that provides insight into the patient's cognitive status, judgement, comprehension ability, or response speed.</body>
      </ownedComment>
      <ownedRule xmi:id="_daqkUOZdEeGINOJ_SD9_dA" name="CognitiveStatusProblemObservationHasTextReference">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_daqkUeZdEeGINOJ_SD9_dA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined() implies (self.text->forAll(reference->size() = 1) and self.text->forAll(reference->one(value->size() = 1)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_gxDRUOZdEeGINOJ_SD9_dA" name="CognitiveStatusProblemObservationHasTextReferenceValue" constrainedElement="_vaH7gCBEEeG938evaWkvcA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_gxDRUeZdEeGINOJ_SD9_dA">
          <language>OCL</language>
          <body>not self.text.reference.value.oclIsUndefined() implies not self.getSection().text.getText(self.text.reference.value.substring(2, self.text.reference.value.size())).oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jpFOYOZdEeGINOJ_SD9_dA" name="CognitiveStatusProblemObservationHasOnsetDate">
        <ownedComment xmi:id="_jpFOYeZdEeGINOJ_SD9_dA">
          <body>This field represents the onset date (CONF:16882)</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jpFOYuZdEeGINOJ_SD9_dA">
          <language>OCL</language>
          <body>not self.effectiveTime.low.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kUEsIOZdEeGINOJ_SD9_dA" name="CognitiveStatusProblemObservationHasResolutionDate">
        <ownedComment xmi:id="_kUEsIeZdEeGINOJ_SD9_dA">
          <body>This field represents the resolution date (CONF:16883)</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kUEsIuZdEeGINOJ_SD9_dA">
          <language>OCL</language>
          <body>not self.effectiveTime.high.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vUNWAYokEeSkH97cUQxLGA" name="ProblemObservationTemplateId" constrainedElement="_dXKPQOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vUNWAookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.73')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vUSOgIokEeSkH97cUQxLGA" name="ProblemObservationClassCode" constrainedElement="_dXKPQOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vUSOgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vUUDsIokEeSkH97cUQxLGA" name="ProblemObservationMoodCode" constrainedElement="_dXKPQOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vUUDsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vUVR0IokEeSkH97cUQxLGA" name="ProblemObservationNegationInd" constrainedElement="_dXKPQOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vUVR0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.negationInd.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vUWf8IokEeSkH97cUQxLGA" name="ProblemObservationId" constrainedElement="_dXKPQOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vUWf8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vUaxYIokEeSkH97cUQxLGA" name="ProblemObservationCodeP" constrainedElement="_dXKPQOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vUaxYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vUY8MIokEeSkH97cUQxLGA" name="ProblemObservationCode" constrainedElement="_dXKPQOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vUY8MYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '373930000' and value.codeSystem = '2.16.840.1.113883.6.96')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vUdNoIokEeSkH97cUQxLGA" name="ProblemObservationText" constrainedElement="_dXKPQOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vUdNoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.text.oclIsUndefined() or self.text.isNullFlavorUndefined()) implies (not self.text.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vUhfEIokEeSkH97cUQxLGA" name="ProblemObservationStatusCode" constrainedElement="_dXKPQOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vUhfEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vUkiYIokEeSkH97cUQxLGA" name="ProblemObservationEffectiveTime" constrainedElement="_dXKPQOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vUkiYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vUlwgIokEeSkH97cUQxLGA" name="CognitiveStatusProblemObservationMethodCode" constrainedElement="_dXKPQOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vUmXkIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.methodCode->isEmpty() or self.methodCode->exists(element | element.isNullFlavorUndefined())) implies (not self.methodCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vUqB8IokEeSkH97cUQxLGA" name="ProblemObservationValueP" constrainedElement="_dXKPQOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vUqB8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vUoMwIokEeSkH97cUQxLGA" name="ProblemObservationValue" constrainedElement="_dXKPQOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vUoMwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.96' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vYPhcIokEeSkH97cUQxLGA" name="CognitiveStatusProblemObservationNonMedicinalSupplyActivity" constrainedElement="_dXKPQOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vYPhcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.supply.oclIsUndefined() and entryRelationship.supply.oclIsKindOf(consol::NonMedicinalSupplyActivity) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vYQvkIokEeSkH97cUQxLGA" name="CognitiveStatusProblemObservationCaregiverCharacteristics" constrainedElement="_dXKPQOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vYQvkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::CaregiverCharacteristics) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vYR9sIokEeSkH97cUQxLGA" name="CognitiveStatusProblemObservationAssessmentScaleObservation" constrainedElement="_dXKPQOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vYR9sYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::AssessmentScaleObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_JGpG8OZcEeGINOJ_SD9_dA" general="_5Ha7ABUyEeGbmN_W114JUw"/>
      <ownedOperation xmi:id="_vYQIgIokEeSkH97cUQxLGA" name="getNonMedicinalSupplyActivities" bodyCondition="_vYQIg4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vYQIg4okEeSkH97cUQxLGA" name="body" constrainedElement="_vYQIgIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vYQIhIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getSupplies()->select(supply : cda::Supply | not supply.oclIsUndefined() and supply.oclIsKindOf(consol::NonMedicinalSupplyActivity)).oclAsType(consol::NonMedicinalSupplyActivity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vYQIgYokEeSkH97cUQxLGA" type="_2HIvMBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vYQIgookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vYRWoIokEeSkH97cUQxLGA" name="getCaregiverCharacteristicss" bodyCondition="_vYRWo4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vYRWo4okEeSkH97cUQxLGA" name="body" constrainedElement="_vYRWoIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vYRWpIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::CaregiverCharacteristics)).oclAsType(consol::CaregiverCharacteristics)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vYRWoYokEeSkH97cUQxLGA" type="__pNCUOY-EeGINOJ_SD9_dA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vYRWoookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vYSkwIokEeSkH97cUQxLGA" name="getAssessmentScaleObservations" bodyCondition="_vYSkw4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vYSkw4okEeSkH97cUQxLGA" name="body" constrainedElement="_vYSkwIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vYSkxIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::AssessmentScaleObservation)).oclAsType(consol::AssessmentScaleObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vYSkwYokEeSkH97cUQxLGA" type="_Zi33YOYxEeGINOJ_SD9_dA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vYSkwookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_gkBM0OZbEeGINOJ_SD9_dA" name="CognitiveStatusResultObservation">
      <ownedComment xmi:id="_7vqakOZiEeGINOJ_SD9_dA">
        <body>This clinical statement contains details of an evaluation or assessment of a patient's cognitive status. The evaluation may include assessment of a patient's mood, memory, and ability to make decisions. The statement, if present, will include supporting caregivers, non-medical devices, and the time period for which the evaluation and assessment were performed.&#xD;
This is different from a cognitive status problem observation, which is a clinical statement that describes a patient's cognitive condition, findings, or symptoms. Examples of cognitive problem observations are inability to recall, amnesia, dementia, and aggressive behavior.</body>
      </ownedComment>
      <ownedRule xmi:id="_BlR1AOZhEeGINOJ_SD9_dA" name="CognitiveStatusResultObservationTextReference">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_BlR1AeZhEeGINOJ_SD9_dA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()  implies (self.text->forAll(reference->size() = 1) and self.text->forAll(reference->one(value->size() = 1)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Cs16AOZhEeGINOJ_SD9_dA" name="CognitiveStatusResultObservationTextReferenceValue" constrainedElement="_tjUmsB7rEeGaOZtrEokzNQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Cs16AeZhEeGINOJ_SD9_dA">
          <language>OCL</language>
          <body>not self.text.reference.value.oclIsUndefined() implies not self.getSection().text.getText(self.text.reference.value.substring(2, self.text.reference.value.size())).oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cjM0AOZhEeGINOJ_SD9_dA" name="CognitiveStatusResultObservationValueDatatype">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g5HEUOZhEeGINOJ_SD9_dA">
          <language>OCL</language>
          <body>self.value->forAll(val | val.oclIsTypeOf(datatypes::CD) implies (val.isNullFlavorDefined() or val.oclAsType(datatypes::CD).codeSystem = '2.16.840.1.113883.6.96'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vUtFQYokEeSkH97cUQxLGA" name="ResultObservationTemplateId" constrainedElement="_gkBM0OZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vUtFQookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.74')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vUwvoIokEeSkH97cUQxLGA" name="ResultObservationClassCode" constrainedElement="_gkBM0OZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vUwvoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vUx9wIokEeSkH97cUQxLGA" name="ResultObservationMoodCode" constrainedElement="_gkBM0OZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vUx9wYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vUzL4IokEeSkH97cUQxLGA" name="ResultObservationId" constrainedElement="_gkBM0OZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vUzL4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vU3dUIokEeSkH97cUQxLGA" name="ResultObservationCodeP" constrainedElement="_gkBM0OZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vU3dUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vU1oIIokEeSkH97cUQxLGA" name="ResultObservationCode" constrainedElement="_gkBM0OZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vU1oIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '373930000' and value.codeSystem = '2.16.840.1.113883.6.96')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vU55kIokEeSkH97cUQxLGA" name="ResultObservationText" constrainedElement="_gkBM0OZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vU55kYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.text.oclIsUndefined() or self.text.isNullFlavorUndefined()) implies (not self.text.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vU_ZIIokEeSkH97cUQxLGA" name="ResultObservationStatusCodeP" constrainedElement="_gkBM0OZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vU_ZIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vU8V0IokEeSkH97cUQxLGA" name="ResultObservationStatusCode" constrainedElement="_gkBM0OZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vU8V0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vVB1YIokEeSkH97cUQxLGA" name="ResultObservationEffectiveTime" constrainedElement="_gkBM0OZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vVB1YYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vVDDgIokEeSkH97cUQxLGA" name="ResultObservationValue" constrainedElement="_gkBM0OZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vVDDgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vVERoIokEeSkH97cUQxLGA" name="ResultObservationInterpretationCode" constrainedElement="_gkBM0OZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vVERoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.interpretationCode->isEmpty() or self.interpretationCode->exists(element | element.isNullFlavorUndefined())) implies (not self.interpretationCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vVGG0IokEeSkH97cUQxLGA" name="ResultObservationMethodCode" constrainedElement="_gkBM0OZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vVGG0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.methodCode->isEmpty() or self.methodCode->exists(element | element.isNullFlavorUndefined())) implies (not self.methodCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vVH8AIokEeSkH97cUQxLGA" name="ResultObservationTargetSiteCode" constrainedElement="_gkBM0OZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vVH8AYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (not self.targetSiteCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vYSkxYokEeSkH97cUQxLGA" name="CognitiveStatusResultObservationAuthor" constrainedElement="_gkBM0OZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vYSkxookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->one(author : cda::Author | not author.oclIsUndefined() and author.oclIsKindOf(rim::Participation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vYTy4IokEeSkH97cUQxLGA" name="CognitiveStatusResultObservationNonMedicinalSupplyActivity" constrainedElement="_gkBM0OZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vYUZ8IokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.supply.oclIsUndefined() and entryRelationship.supply.oclIsKindOf(consol::NonMedicinalSupplyActivity) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vYWPIIokEeSkH97cUQxLGA" name="CognitiveStatusResultObservationCaregiverCharacteristics" constrainedElement="_gkBM0OZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vYWPIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::CaregiverCharacteristics) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vYYEUIokEeSkH97cUQxLGA" name="CognitiveStatusResultObservationAssessmentScaleObservation" constrainedElement="_gkBM0OZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vYYEUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::AssessmentScaleObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vYZSc4okEeSkH97cUQxLGA" name="CognitiveStatusResultObservationReferenceRange" constrainedElement="_gkBM0OZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vYZSdIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.referenceRange->exists(referenceRange : cda::ReferenceRange | not referenceRange.oclIsUndefined() and referenceRange.oclIsKindOf(cda::ReferenceRange))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wUDCYIokEeSkH97cUQxLGA" name="CognitiveStatusResultObservationReferenceRangeObservationRangeNoCode" constrainedElement="_gkBM0OZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wUDCYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.referenceRange->excluding(null).observationRange->excluding(null)->reject(code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wUDpcIokEeSkH97cUQxLGA" name="CognitiveStatusResultObservationReferenceRangeObservationRange" constrainedElement="_gkBM0OZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wUDpcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.referenceRange->excluding(null)->reject(observationRange->one(observationRange : cda::ObservationRange | not observationRange.oclIsUndefined() and observationRange.oclIsKindOf(cda::ObservationRange)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_gLy9QOZfEeGINOJ_SD9_dA" general="_2J1d4BSVEeGGzu7fmW9pXw"/>
      <ownedOperation xmi:id="_vYVBAIokEeSkH97cUQxLGA" name="getNonMedicinalSupplyActivities" bodyCondition="_vYVoEookEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vYVoEookEeSkH97cUQxLGA" name="body" constrainedElement="_vYVBAIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vYVoE4okEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getSupplies()->select(supply : cda::Supply | not supply.oclIsUndefined() and supply.oclIsKindOf(consol::NonMedicinalSupplyActivity)).oclAsType(consol::NonMedicinalSupplyActivity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vYVoEIokEeSkH97cUQxLGA" type="_2HIvMBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vYVoEYokEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vYW2MIokEeSkH97cUQxLGA" name="getCaregiverCharacteristicss" bodyCondition="_vYW2M4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vYW2M4okEeSkH97cUQxLGA" name="body" constrainedElement="_vYW2MIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vYW2NIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::CaregiverCharacteristics)).oclAsType(consol::CaregiverCharacteristics)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vYW2MYokEeSkH97cUQxLGA" type="__pNCUOY-EeGINOJ_SD9_dA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vYW2MookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vYYrYIokEeSkH97cUQxLGA" name="getAssessmentScaleObservations" bodyCondition="_vYZScYokEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vYZScYokEeSkH97cUQxLGA" name="body" constrainedElement="_vYYrYIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vYZScookEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::AssessmentScaleObservation)).oclAsType(consol::AssessmentScaleObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vYYrYYokEeSkH97cUQxLGA" type="_Zi33YOYxEeGINOJ_SD9_dA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vYZScIokEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_jfoCUOZbEeGINOJ_SD9_dA" name="CognitiveStatusResultOrganizer">
      <ownedComment xmi:id="_67cIUOZiEeGINOJ_SD9_dA">
        <body>This clinical statement identifies a set of cognitive status result observations. It contains information applicable to all of the contained cognitive status result observations. A result organizer may be used to group questions in a Patient Health Questionaire (PHQ). &#xD;
An appropriate nullFlavor can be used when the organizer/code or organizer/id is unknown.</body>
      </ownedComment>
      <ownedRule xmi:id="_ckydgOZjEeGINOJ_SD9_dA" name="CognitiveStatusResultOrganizerCodeCodeSystem" constrainedElement="_jfoCUOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fg1-8OZjEeGINOJ_SD9_dA">
          <language>OCL</language>
          <body>self.code.isNullFlavorDefined() or self.code.codeSystem = '2.16.840.1.113883.6.254' or self.code.codeSystem = '2.16.840.1.113883.6.96'</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vVJxMYokEeSkH97cUQxLGA" name="ResultOrganizerTemplateId" constrainedElement="_jfoCUOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vVJxMookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.75')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vVMNcIokEeSkH97cUQxLGA" name="ResultOrganizerClassCode" constrainedElement="_jfoCUOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vVMNcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryOrganizer::CLUSTER</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vVNbkIokEeSkH97cUQxLGA" name="ResultOrganizerMoodCode" constrainedElement="_jfoCUOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vVNbkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::ActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vVOpsIokEeSkH97cUQxLGA" name="ResultOrganizerId" constrainedElement="_jfoCUOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vVOpsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vVP30IokEeSkH97cUQxLGA" name="ResultOrganizerCode" constrainedElement="_jfoCUOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vVP30YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vVUJQIokEeSkH97cUQxLGA" name="ResultOrganizerStatusCodeP" constrainedElement="_jfoCUOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vVUJQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vVRtAIokEeSkH97cUQxLGA" name="ResultOrganizerStatusCode" constrainedElement="_jfoCUOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vVRtAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vYbHoIokEeSkH97cUQxLGA" name="CognitiveStatusResultOrganizerCognitiveStatusResultObservation" constrainedElement="_jfoCUOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vYbHoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.component->exists(component : cda::Component4 | not component.observation.oclIsUndefined() and component.observation.oclIsKindOf(consol::CognitiveStatusResultObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_-QfYkOZiEeGINOJ_SD9_dA" general="_2JxzgBSVEeGGzu7fmW9pXw"/>
      <ownedOperation xmi:id="_vYbusIokEeSkH97cUQxLGA" name="getCognitiveStatusResultObservations" bodyCondition="_vYbus4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vYbus4okEeSkH97cUQxLGA" name="body" constrainedElement="_vYbusIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vYbutIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::CognitiveStatusResultObservation)).oclAsType(consol::CognitiveStatusResultObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vYbusYokEeSkH97cUQxLGA" type="_gkBM0OZbEeGINOJ_SD9_dA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vYbusookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_lm3boOZbEeGINOJ_SD9_dA" name="DeceasedObservation">
      <ownedComment xmi:id="_ZtiHEOZkEeGINOJ_SD9_dA">
        <body>This clinical statement represents the observation that a patient has expired. It also represents the cause of death, indicated by an entryRelationship type of &quot;CAUS&quot;.</body>
      </ownedComment>
      <ownedRule xmi:id="_Dk8p4OZlEeGINOJ_SD9_dA" name="DeceasedObservationEffectiveTimeLow" constrainedElement="_lm3boOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_E9UyEOZlEeGINOJ_SD9_dA">
          <language>OCL</language>
          <body>not self.effectiveTime.oclIsUndefined() implies self.effectiveTime.low->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vVV-cIokEeSkH97cUQxLGA" name="DeceasedObservationTemplateId" constrainedElement="_lm3boOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vVV-cYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.79')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vVYasIokEeSkH97cUQxLGA" name="DeceasedObservationClassCode" constrainedElement="_lm3boOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vVYasYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vVZo0IokEeSkH97cUQxLGA" name="DeceasedObservationMoodCode" constrainedElement="_lm3boOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vVZo0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vVaP4IokEeSkH97cUQxLGA" name="DeceasedObservationId" constrainedElement="_lm3boOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vVaP4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vVehUIokEeSkH97cUQxLGA" name="DeceasedObservationCodeP" constrainedElement="_lm3boOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vVehUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vVcFEIokEeSkH97cUQxLGA" name="DeceasedObservationCode" constrainedElement="_lm3boOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vVcFEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = 'ASSERTION' and value.codeSystem = '2.16.840.1.113883.5.4')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vVhkoIokEeSkH97cUQxLGA" name="DeceasedObservationStatusCode" constrainedElement="_lm3boOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vVhkoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vVjZ0IokEeSkH97cUQxLGA" name="DeceasedObservationStatusCodeP" constrainedElement="_lm3boOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vVjZ0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vVlPAIokEeSkH97cUQxLGA" name="DeceasedObservationEffectiveTime" constrainedElement="_lm3boOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vVlPAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vVnEMIokEeSkH97cUQxLGA" name="DeceasedObservationValue" constrainedElement="_lm3boOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vVnEMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.code = '419099009' and value.codeSystem = '2.16.840.1.113883.6.96'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vVpgcIokEeSkH97cUQxLGA" name="DeceasedObservationValueP" constrainedElement="_lm3boOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vVpgcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vYcVwIokEeSkH97cUQxLGA" name="DeceasedObservationProblemObservation" constrainedElement="_lm3boOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vYcVwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::ProblemObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::CAUS)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_lm3boeZbEeGINOJ_SD9_dA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_vYc80IokEeSkH97cUQxLGA" name="getProblemObservation" bodyCondition="_vYc804okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vYc804okEeSkH97cUQxLGA" name="body" constrainedElement="_vYc80IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vYc81IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProblemObservation))->asSequence()->any(true).oclAsType(consol::ProblemObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vYc80YokEeSkH97cUQxLGA" type="_5Ha7ABUyEeGbmN_W114JUw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vYc80ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_rVl5AOZbEeGINOJ_SD9_dA" name="FunctionalStatusProblemObservation">
      <ownedComment xmi:id="_1PP4wObqEeGINOJ_SD9_dA">
        <body>A functional status problem observation is a clinical statement that represents a patient's functional perfomance and ability.</body>
      </ownedComment>
      <ownedRule xmi:id="_4AP2MObpEeGINOJ_SD9_dA" name="FunctionalStatusProblemObservationHasTextReference">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_4AP2MebpEeGINOJ_SD9_dA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined() implies self.text->forAll(reference->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_42ZbEObpEeGINOJ_SD9_dA" name="FunctionalStatusProblemObservationTextReferenceValue" constrainedElement="_vaH7gCBEEeG938evaWkvcA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_42ZbEebpEeGINOJ_SD9_dA">
          <language>OCL</language>
          <body>self.text->forAll(reference->size() = 1) implies self.text->forAll(reference->one(value->size() = 1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_iBSEgObpEeGINOJ_SD9_dA" name="FunctionalStatusProblemObservationHasTextReferenceValue" constrainedElement="_vaH7gCBEEeG938evaWkvcA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iBSEgebpEeGINOJ_SD9_dA">
          <language>OCL</language>
          <body>not self.text.reference.value.oclIsUndefined() implies not self.getSection().text.getText(self.text.reference.value.substring(2, self.text.reference.value.size())).oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i8gWoObpEeGINOJ_SD9_dA" name="FunctionalStatusProblemObservationHasOnsetDate">
        <ownedComment xmi:id="_i8gWoebpEeGINOJ_SD9_dA">
          <body>This field represents the onset date (CONF:16882)</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i8gWoubpEeGINOJ_SD9_dA">
          <language>OCL</language>
          <body>not self.effectiveTime.low.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j7l1EObpEeGINOJ_SD9_dA" name="FunctionalStatusProblemObservationHasResolutionDate">
        <ownedComment xmi:id="_j7l1EebpEeGINOJ_SD9_dA">
          <body>This field represents the resolution date (CONF:16883)</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j7l1EubpEeGINOJ_SD9_dA">
          <language>OCL</language>
          <body>not self.effectiveTime.high.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_q-X7UObpEeGINOJ_SD9_dA" name="FunctionalStatusProblemObservationValueNullFlavor" constrainedElement="_5Ha7ABUyEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_q-X7UebpEeGINOJ_SD9_dA">
          <language>OCL</language>
          <body>self.value->forAll(val | not val.isNullFlavorUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vVsjwIokEeSkH97cUQxLGA" name="ProblemObservationTemplateId" constrainedElement="_rVl5AOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vVsjwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.68')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vVyqYIokEeSkH97cUQxLGA" name="ProblemObservationClassCode" constrainedElement="_rVl5AOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vVyqYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vVz4gIokEeSkH97cUQxLGA" name="ProblemObservationMoodCode" constrainedElement="_rVl5AOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vVz4gYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vV1GoIokEeSkH97cUQxLGA" name="ProblemObservationNegationInd" constrainedElement="_rVl5AOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vV1GoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.negationInd.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vV2UwIokEeSkH97cUQxLGA" name="ProblemObservationId" constrainedElement="_rVl5AOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vV2UwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vV6mMIokEeSkH97cUQxLGA" name="ProblemObservationCodeP" constrainedElement="_rVl5AOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vV6mMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vV4xAIokEeSkH97cUQxLGA" name="ProblemObservationCode" constrainedElement="_rVl5AOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vV4xAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '248536006' and value.codeSystem = '2.16.840.1.113883.6.96')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vV9CcIokEeSkH97cUQxLGA" name="ProblemObservationText" constrainedElement="_rVl5AOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vV9CcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.text.oclIsUndefined() or self.text.isNullFlavorUndefined()) implies (not self.text.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vV-3oIokEeSkH97cUQxLGA" name="ProblemObservationStatusCode" constrainedElement="_rVl5AOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vV_esIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vWBT4IokEeSkH97cUQxLGA" name="ProblemObservationEffectiveTime" constrainedElement="_rVl5AOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vWBT4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vWFlUIokEeSkH97cUQxLGA" name="ProblemObservationValueP" constrainedElement="_rVl5AOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vWFlUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vWDwIIokEeSkH97cUQxLGA" name="ProblemObservationValue" constrainedElement="_rVl5AOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vWDwIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.96' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vWIBkIokEeSkH97cUQxLGA" name="FunctionalStatusProblemObservationMethodCode" constrainedElement="_rVl5AOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vWIBkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.methodCode->isEmpty() or self.methodCode->exists(element | element.isNullFlavorUndefined())) implies (not self.methodCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vYdj4IokEeSkH97cUQxLGA" name="FunctionalStatusProblemObservationNonMedicinalSupplyActivity" constrainedElement="_rVl5AOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vYdj4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.supply.oclIsUndefined() and entryRelationship.supply.oclIsKindOf(consol::NonMedicinalSupplyActivity) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vYeyAIokEeSkH97cUQxLGA" name="FunctionalStatusProblemObservationCaregiverCharacteristics" constrainedElement="_rVl5AOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vYeyAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::CaregiverCharacteristics) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vYfZFYokEeSkH97cUQxLGA" name="FunctionalStatusProblemObservationAssessmentScaleObservation" constrainedElement="_rVl5AOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vYfZFookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::AssessmentScaleObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_whRx8ObjEeGINOJ_SD9_dA" general="_5Ha7ABUyEeGbmN_W114JUw"/>
      <ownedOperation xmi:id="_vYeK8IokEeSkH97cUQxLGA" name="getNonMedicinalSupplyActivities" bodyCondition="_vYeK84okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vYeK84okEeSkH97cUQxLGA" name="body" constrainedElement="_vYeK8IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vYeK9IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getSupplies()->select(supply : cda::Supply | not supply.oclIsUndefined() and supply.oclIsKindOf(consol::NonMedicinalSupplyActivity)).oclAsType(consol::NonMedicinalSupplyActivity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vYeK8YokEeSkH97cUQxLGA" type="_2HIvMBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vYeK8ookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vYfZEIokEeSkH97cUQxLGA" name="getCaregiverCharacteristicss" bodyCondition="_vYfZE4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vYfZE4okEeSkH97cUQxLGA" name="body" constrainedElement="_vYfZEIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vYfZFIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::CaregiverCharacteristics)).oclAsType(consol::CaregiverCharacteristics)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vYfZEYokEeSkH97cUQxLGA" type="__pNCUOY-EeGINOJ_SD9_dA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vYfZEookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vYgnMIokEeSkH97cUQxLGA" name="getAssessmentScaleObservations" bodyCondition="_vYgnM4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vYgnM4okEeSkH97cUQxLGA" name="body" constrainedElement="_vYgnMIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vYgnNIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::AssessmentScaleObservation)).oclAsType(consol::AssessmentScaleObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vYgnMYokEeSkH97cUQxLGA" type="_Zi33YOYxEeGINOJ_SD9_dA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vYgnMookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_viRU0OZbEeGINOJ_SD9_dA" name="FunctionalStatusResultObservation">
      <ownedComment xmi:id="_KBX8gObuEeGINOJ_SD9_dA">
        <body>This clinical statement represents details of an evaluation or assessment of a patient's functional status. The evaluation may include assessment of a patient's language, vision, hearing, activities of daily living, behavior, general function, mobility, and self-care status. The statement, if present,  will include supporting caregivers, non-medical devices, and the time period for which the evaluation and assessment were performed.</body>
      </ownedComment>
      <ownedRule xmi:id="_j2XAsObyEeGINOJ_SD9_dA" name="FunctionalStatusResultObservationTextReference">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j2XAsebyEeGINOJ_SD9_dA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined() implies (self.text->forAll(reference->size() = 1) and self.text->forAll(reference->one(value->size() = 1)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_krLI0ObyEeGINOJ_SD9_dA" name="FunctionalStatusResultObservationTextReferenceValue" constrainedElement="_tjUmsB7rEeGaOZtrEokzNQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_krLI0ebyEeGINOJ_SD9_dA">
          <language>OCL</language>
          <body>not self.text.reference.value.oclIsUndefined() implies not self.getSection().text.getText(self.text.reference.value.substring(2, self.text.reference.value.size())).oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pRJ1cObyEeGINOJ_SD9_dA" name="FunctionalStatusResultObservationValueDatatype">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pRJ1cebyEeGINOJ_SD9_dA">
          <language>OCL</language>
          <body>self.value->forAll(val | val.oclIsTypeOf(datatypes::CD) implies (val.isNullFlavorDefined() or val.oclAsType(datatypes::CD).codeSystem = '2.16.840.1.113883.6.96'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vWJ2wIokEeSkH97cUQxLGA" name="ResultObservationTemplateId" constrainedElement="_viRU0OZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vWJ2wYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.67')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vWM6EIokEeSkH97cUQxLGA" name="ResultObservationClassCode" constrainedElement="_viRU0OZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vWM6EYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vWOIMIokEeSkH97cUQxLGA" name="ResultObservationMoodCode" constrainedElement="_viRU0OZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vWOvQIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vWPWUIokEeSkH97cUQxLGA" name="ResultObservationId" constrainedElement="_viRU0OZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vWPWUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vWUO0IokEeSkH97cUQxLGA" name="ResultObservationCodeP" constrainedElement="_viRU0OZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vWUO0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vWRykIokEeSkH97cUQxLGA" name="ResultObservationCode" constrainedElement="_viRU0OZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vWRykYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vWXSIIokEeSkH97cUQxLGA" name="ResultObservationText" constrainedElement="_viRU0OZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vWXSIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.text.oclIsUndefined() or self.text.isNullFlavorUndefined()) implies (not self.text.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vWcKoIokEeSkH97cUQxLGA" name="ResultObservationStatusCodeP" constrainedElement="_viRU0OZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vWcKoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vWZuYIokEeSkH97cUQxLGA" name="ResultObservationStatusCode" constrainedElement="_viRU0OZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vWZuYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vWd_0IokEeSkH97cUQxLGA" name="ResultObservationEffectiveTime" constrainedElement="_viRU0OZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vWd_0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vWfN8IokEeSkH97cUQxLGA" name="ResultObservationValue" constrainedElement="_viRU0OZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vWfN8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vWgcEIokEeSkH97cUQxLGA" name="ResultObservationInterpretationCode" constrainedElement="_viRU0OZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vWgcEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.interpretationCode->isEmpty() or self.interpretationCode->exists(element | element.isNullFlavorUndefined())) implies (not self.interpretationCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vWhqMIokEeSkH97cUQxLGA" name="ResultObservationMethodCode" constrainedElement="_viRU0OZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vWiRQIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.methodCode->isEmpty() or self.methodCode->exists(element | element.isNullFlavorUndefined())) implies (not self.methodCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vWjfYIokEeSkH97cUQxLGA" name="ResultObservationTargetSiteCode" constrainedElement="_viRU0OZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vWjfYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (not self.targetSiteCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vYgnNYokEeSkH97cUQxLGA" name="FunctionalStatusResultObservationAuthor" constrainedElement="_viRU0OZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vYgnNookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->one(author : cda::Author | not author.oclIsUndefined() and author.oclIsKindOf(rim::Participation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vYh1UIokEeSkH97cUQxLGA" name="FunctionalStatusResultObservationNonMedicinalSupplyActivity" constrainedElement="_viRU0OZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vYh1UYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.supply.oclIsUndefined() and entryRelationship.supply.oclIsKindOf(consol::NonMedicinalSupplyActivity) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vYjDcookEeSkH97cUQxLGA" name="FunctionalStatusResultObservationCaregiverCharacteristics" constrainedElement="_viRU0OZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vYjDc4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::CaregiverCharacteristics) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vYkRkIokEeSkH97cUQxLGA" name="FunctionalStatusResultObservationAssessmentScaleObservation" constrainedElement="_viRU0OZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vYkRkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::AssessmentScaleObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vYlfsIokEeSkH97cUQxLGA" name="FunctionalStatusResultObservationReferenceRange" constrainedElement="_viRU0OZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vYlfsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.referenceRange->exists(referenceRange : cda::ReferenceRange | not referenceRange.oclIsUndefined() and referenceRange.oclIsKindOf(cda::ReferenceRange))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wUFeoIokEeSkH97cUQxLGA" name="FunctionalStatusResultObservationReferenceRangeObservationRangeNoCode" constrainedElement="_viRU0OZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wUFeoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.referenceRange->excluding(null).observationRange->excluding(null)->reject(code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wUFeoookEeSkH97cUQxLGA" name="FunctionalStatusResultObservationReferenceRangeObservationRange" constrainedElement="_viRU0OZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wUFeo4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.referenceRange->excluding(null)->reject(observationRange->one(observationRange : cda::ObservationRange | not observationRange.oclIsUndefined() and observationRange.oclIsKindOf(cda::ObservationRange)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_dM_VcObxEeGINOJ_SD9_dA" general="_2J1d4BSVEeGGzu7fmW9pXw"/>
      <ownedOperation xmi:id="_vYicYIokEeSkH97cUQxLGA" name="getNonMedicinalSupplyActivity" bodyCondition="_vYjDcIokEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vYjDcIokEeSkH97cUQxLGA" name="body" constrainedElement="_vYicYIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vYjDcYokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getSupplies()->select(supply : cda::Supply | not supply.oclIsUndefined() and supply.oclIsKindOf(consol::NonMedicinalSupplyActivity))->asSequence()->any(true).oclAsType(consol::NonMedicinalSupplyActivity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vYicYYokEeSkH97cUQxLGA" type="_2HIvMBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vYicYookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vYjqgIokEeSkH97cUQxLGA" name="getCaregiverCharacteristics" bodyCondition="_vYjqg4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vYjqg4okEeSkH97cUQxLGA" name="body" constrainedElement="_vYjqgIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vYjqhIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::CaregiverCharacteristics))->asSequence()->any(true).oclAsType(consol::CaregiverCharacteristics)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vYjqgYokEeSkH97cUQxLGA" type="__pNCUOY-EeGINOJ_SD9_dA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vYjqgookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vYk4oIokEeSkH97cUQxLGA" name="getAssessmentScaleObservation" bodyCondition="_vYk4o4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vYk4o4okEeSkH97cUQxLGA" name="body" constrainedElement="_vYk4oIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vYk4pIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::AssessmentScaleObservation))->asSequence()->any(true).oclAsType(consol::AssessmentScaleObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vYk4oYokEeSkH97cUQxLGA" type="_Zi33YOYxEeGINOJ_SD9_dA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vYk4oookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_zBlUUOZbEeGINOJ_SD9_dA" name="FunctionalStatusResultOrganizer">
      <ownedComment xmi:id="_6omM8ObzEeGINOJ_SD9_dA">
        <body>This clinical statement identifies a set of functional status result observations. It contains information applicable to all of the contained functional status result observations. A functional status organizer may group self-care observations related to a patient's ability to feed, bathe, and dress.&#xD;
An appropriate nullFlavor can be used when the organizer/code or organizer/id is unknown.</body>
      </ownedComment>
      <ownedRule xmi:id="_flXasOb0EeGINOJ_SD9_dA" name="FunctionalStatusResultOrganizerCodeCodeSystem" constrainedElement="_jfoCUOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_flXaseb0EeGINOJ_SD9_dA">
          <language>OCL</language>
          <body>self.code.isNullFlavorDefined() or self.code.codeSystem = '2.16.840.1.113883.6.254' or self.code.codeSystem = '2.16.840.1.113883.6.96'</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vWl7oIokEeSkH97cUQxLGA" name="ResultOrganizerTemplateId" constrainedElement="_zBlUUOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vWl7oYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.66')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vWnw0IokEeSkH97cUQxLGA" name="ResultOrganizerClassCode" constrainedElement="_zBlUUOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vWnw0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryOrganizer::CLUSTER</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vWpmAIokEeSkH97cUQxLGA" name="ResultOrganizerMoodCode" constrainedElement="_zBlUUOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vWpmAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::ActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vWq0IIokEeSkH97cUQxLGA" name="ResultOrganizerId" constrainedElement="_zBlUUOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vWrbMIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vWtQYIokEeSkH97cUQxLGA" name="ResultOrganizerCode" constrainedElement="_zBlUUOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vWtQYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vWzXAIokEeSkH97cUQxLGA" name="ResultOrganizerStatusCodeP" constrainedElement="_zBlUUOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vWzXAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vWw6wIokEeSkH97cUQxLGA" name="ResultOrganizerStatusCode" constrainedElement="_zBlUUOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vWw6wYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vYnU4IokEeSkH97cUQxLGA" name="FunctionalStatusResultOrganizerFunctionalStatusResultObservation" constrainedElement="_zBlUUOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vYnU4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.component->exists(component : cda::Component4 | not component.observation.oclIsUndefined() and component.observation.oclIsKindOf(consol::FunctionalStatusResultObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_8KA8YObzEeGINOJ_SD9_dA" general="_2JxzgBSVEeGGzu7fmW9pXw"/>
      <ownedOperation xmi:id="_vYn78IokEeSkH97cUQxLGA" name="getFunctionalStatusResultObservations" bodyCondition="_vYn784okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vYn784okEeSkH97cUQxLGA" name="body" constrainedElement="_vYn78IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vYn79IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::FunctionalStatusResultObservation)).oclAsType(consol::FunctionalStatusResultObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vYn78YokEeSkH97cUQxLGA" type="_viRU0OZbEeGINOJ_SD9_dA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vYn78ookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_4YgVsOZbEeGINOJ_SD9_dA" name="HighestPressureUlcerStage">
      <ownedComment xmi:id="_lI9UMOb2EeGINOJ_SD9_dA">
        <body>This observation contains a description of the wound tissue of the most severe or highest staged pressure ulcer observed on a patient.</body>
      </ownedComment>
      <ownedRule xmi:id="_vW1MMIokEeSkH97cUQxLGA" name="HighestPressureUlcerStageTemplateId" constrainedElement="_4YgVsOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vW1MMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.77')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vW3BYIokEeSkH97cUQxLGA" name="HighestPressureUlcerStageClassCode" constrainedElement="_4YgVsOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vW3BYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vW4PgIokEeSkH97cUQxLGA" name="HighestPressureUlcerStageMoodCode" constrainedElement="_4YgVsOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vW4PgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vW42kIokEeSkH97cUQxLGA" name="HighestPressureUlcerStageId" constrainedElement="_4YgVsOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vW42kYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vW9IAIokEeSkH97cUQxLGA" name="HighestPressureUlcerStageCodeP" constrainedElement="_4YgVsOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vW9IAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vW6rwIokEeSkH97cUQxLGA" name="HighestPressureUlcerStageCode" constrainedElement="_4YgVsOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vW6rwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '420905001' and value.codeSystem = '2.16.840.1.113883.6.96')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vW-9MIokEeSkH97cUQxLGA" name="HighestPressureUlcerStageValue" constrainedElement="_4YgVsOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vW-9MYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_mPs50Ob2EeGINOJ_SD9_dA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_7c4ssOZbEeGINOJ_SD9_dA" name="NumberOfPressureUlcersObservation">
      <ownedComment xmi:id="_z95uMOcBEeGINOJ_SD9_dA">
        <body>This clinical statement enumerates the number of pressure ulcers observed in a particular stage.</body>
      </ownedComment>
      <ownedRule xmi:id="_vXALUIokEeSkH97cUQxLGA" name="NumberOfPressureUlcersObservationTemplateId" constrainedElement="_7c4ssOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vXALUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.76')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vXBZcIokEeSkH97cUQxLGA" name="NumberOfPressureUlcersObservationClassCode" constrainedElement="_7c4ssOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vXBZcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vXCnkIokEeSkH97cUQxLGA" name="NumberOfPressureUlcersObservationMoodCode" constrainedElement="_7c4ssOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vXCnkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vXD1sIokEeSkH97cUQxLGA" name="NumberOfPressureUlcersObservationId" constrainedElement="_7c4ssOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vXD1sYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vXHgEIokEeSkH97cUQxLGA" name="NumberOfPressureUlcersObservationCodeP" constrainedElement="_7c4ssOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vXHgEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vXFq4IokEeSkH97cUQxLGA" name="NumberOfPressureUlcersObservationCode" constrainedElement="_7c4ssOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vXFq4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '2264892003' and value.codeSystem = '2.16.840.1.113883.6.96')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vXKjYIokEeSkH97cUQxLGA" name="NumberOfPressureUlcersObservationStatusCode" constrainedElement="_7c4ssOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vXKjYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vXMYkIokEeSkH97cUQxLGA" name="NumberOfPressureUlcersObservationStatusCodeP" constrainedElement="_7c4ssOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vXMYkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vXONwIokEeSkH97cUQxLGA" name="NumberOfPressureUlcersObservationEffectiveTime" constrainedElement="_7c4ssOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vXONwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vXPb4IokEeSkH97cUQxLGA" name="NumberOfPressureUlcersObservationValue" constrainedElement="_7c4ssOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vXPb4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::INT)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vYn79YokEeSkH97cUQxLGA" name="NumberOfPressureUlcersObservationAuthor" constrainedElement="_7c4ssOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vYn79ookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->one(author : cda::Author | not author.oclIsUndefined() and author.oclIsKindOf(rim::Participation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vYpKEIokEeSkH97cUQxLGA" name="NumberOfPressureUlcersObservationEntryRelationship" constrainedElement="_7c4ssOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vYpKEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->select(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))->select(typeCode=vocab::x_ActRelationshipEntryRelationship::SUBJ)->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wUHT0IokEeSkH97cUQxLGA" name="NumberOfPressureUlcersObservationEntryRelationshipObservationClassCode" constrainedElement="_7c4ssOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wUHT0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->select(typeCode=vocab::x_ActRelationshipEntryRelationship::SUBJ).observation->excluding(null)->reject(classCode=vocab::ActClassObservation::OBS)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wUHT0ookEeSkH97cUQxLGA" name="NumberOfPressureUlcersObservationEntryRelationshipObservationMoodCode" constrainedElement="_7c4ssOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wUHT04okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->select(typeCode=vocab::x_ActRelationshipEntryRelationship::SUBJ).observation->excluding(null)->reject(moodCode=vocab::x_ActMoodDocumentObservation::EVN)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wUH64IokEeSkH97cUQxLGA" name="NumberOfPressureUlcersObservationEntryRelationshipObservationValue" constrainedElement="_7c4ssOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wUH64YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->select(typeCode=vocab::x_ActRelationshipEntryRelationship::SUBJ).observation->excluding(null)->reject((value->isEmpty() or value->exists(element | element.isNullFlavorUndefined())) implies (value->size() = 1 and value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.96' and (value.code = '421076008' or value.code = '420324007' or value.code = '421927004' or value.code = '420597008' or value.code = '421594008'))))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wUH64ookEeSkH97cUQxLGA" name="NumberOfPressureUlcersObservationEntryRelationshipObservationValueP" constrainedElement="_7c4ssOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wUH644okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->select(typeCode=vocab::x_ActRelationshipEntryRelationship::SUBJ).observation->excluding(null)->reject((value->isEmpty() or value->exists(element | element.isNullFlavorUndefined())) implies (value->size() = 1 and value->forAll(element | element.oclIsTypeOf(datatypes::CD))))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wUIh8IokEeSkH97cUQxLGA" name="NumberOfPressureUlcersObservationEntryRelationshipTypeCode" constrainedElement="_7c4ssOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wUIh8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->select(typeCode=vocab::x_ActRelationshipEntryRelationship::SUBJ)->select(typeCode=vocab::x_ActRelationshipEntryRelationship::SUBJ)->reject(typeCode=vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wUJJAIokEeSkH97cUQxLGA" name="NumberOfPressureUlcersObservationEntryRelationshipObservation" constrainedElement="_7c4ssOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wUJJAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->select(typeCode=vocab::x_ActRelationshipEntryRelationship::SUBJ)->select(typeCode=vocab::x_ActRelationshipEntryRelationship::SUBJ)->reject(observation->one(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(cda::Observation)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_7c4sseZbEeGINOJ_SD9_dA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9rQowOZbEeGINOJ_SD9_dA" name="PressureUlcerObservation">
      <ownedComment xmi:id="_mJ7LgOcCEeGINOJ_SD9_dA">
        <body>The pressure ulcer observation contains details about the pressure ulcer such as the stage of the ulcer, location, and dimensions. If the pressure ulcer is a diagnosis, you may find this on the problem list. An example of how this would appear is in the Problem Section.</body>
      </ownedComment>
      <ownedRule xmi:id="_XS7QIOcEEeGINOJ_SD9_dA" name="PressureUlcerObservationHasTextReference">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_XS7QIecEEeGINOJ_SD9_dA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined() implies self.text->forAll(reference->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Y3WQQOcEEeGINOJ_SD9_dA" name="PressureUlcerObservationTextReferenceValue" constrainedElement="_vaH7gCBEEeG938evaWkvcA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Y3WQQecEEeGINOJ_SD9_dA">
          <language>OCL</language>
          <body>self.text->forAll(reference->size() = 1) implies self.text->forAll(reference->one(value->size() = 1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ZuPcAOcEEeGINOJ_SD9_dA" name="PressureUlcerObservationHasTextReferenceValue" constrainedElement="_vaH7gCBEEeG938evaWkvcA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ZuPcAecEEeGINOJ_SD9_dA">
          <language>OCL</language>
          <body>not self.text.reference.value.oclIsUndefined() implies not self.getSection().text.getText(self.text.reference.value.substring(2, self.text.reference.value.size())).oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_BD7o8OcFEeGINOJ_SD9_dA" name="PressureUlcerObservationValueNullFlavor" constrainedElement="_5Ha7ABUyEeGbmN_W114JUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_BD7o8ecFEeGINOJ_SD9_dA">
          <language>OCL</language>
          <body>self.value->forAll(val | not val.isNullFlavorUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_1uHKwOcFEeGINOJ_SD9_dA" name="PressureUlcerObservationTargetSiteQualifier" constrainedElement="_9rQowOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_A5Q0kOcGEeGINOJ_SD9_dA">
          <language>OCL</language>
          <body>self.targetSiteCode->forAll(qualifier->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_5vyQcOcFEeGINOJ_SD9_dA" name="PressureUlcerObservationTargetSiteQualifierName" constrainedElement="_1uHKwOcFEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_EJZvoOcGEeGINOJ_SD9_dA">
          <language>OCL</language>
          <body>self.targetSiteCode.qualifier->forAll(name->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_7RhwAOcFEeGINOJ_SD9_dA" name="PressureUlcerObservationTargetSiteQualifierNameCode" constrainedElement="_5vyQcOcFEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_HEHNQOcGEeGINOJ_SD9_dA">
          <language>OCL</language>
          <body>self.targetSiteCode.qualifier->forAll(name->size() = 1 and name.code='272741003' and name.codeSystem = '2.16.840.1.113883.6.96')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_9MavYOcFEeGINOJ_SD9_dA" name="PressureUlcerObservationTargetSiteQualifierValue" constrainedElement="_1uHKwOcFEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_KSdYkOcGEeGINOJ_SD9_dA">
          <language>OCL</language>
          <body>self.targetSiteCode.qualifier->forAll(value->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_-ACksOcFEeGINOJ_SD9_dA" name="PressureUlcerObservationTargetSiteQualifierValueCode" constrainedElement="_9MavYOcFEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Mgjn0OcGEeGINOJ_SD9_dA">
          <language>OCL</language>
          <body>self.targetSiteCode.qualifier->forAll((value.isNullFlavorDefined()) or (value->size() = 1 and not value.code.oclIsUndefined() and value.codeSystem = '2.16.840.1.113883.6.96'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vXYl0IokEeSkH97cUQxLGA" name="PressureUlcerObservationTemplateId" constrainedElement="_9rQowOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vXZM4IokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.70')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vXfTgIokEeSkH97cUQxLGA" name="PressureUlcerObservationClassCode" constrainedElement="_9rQowOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vXfTgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vXghoIokEeSkH97cUQxLGA" name="PressureUlcerObservationMoodCode" constrainedElement="_9rQowOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vXghoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vXhvwIokEeSkH97cUQxLGA" name="PressureUlcerObservationNegationInd" constrainedElement="_9rQowOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vXhvwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.negationInd.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vXiW0IokEeSkH97cUQxLGA" name="PressureUlcerObservationId" constrainedElement="_9rQowOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vXi94IokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vXmoQIokEeSkH97cUQxLGA" name="PressureUlcerObservationCodeP" constrainedElement="_9rQowOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vXmoQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vXkzEIokEeSkH97cUQxLGA" name="PressureUlcerObservationCode" constrainedElement="_9rQowOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vXkzEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = 'ASSERTION' and value.codeSystem = '2.16.840.1.113883.5.4')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vXodcIokEeSkH97cUQxLGA" name="PressureUlcerObservationText" constrainedElement="_9rQowOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vXodcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.text.oclIsUndefined() or self.text.isNullFlavorUndefined()) implies (not self.text.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vXq5sIokEeSkH97cUQxLGA" name="PressureUlcerObservationValue" constrainedElement="_9rQowOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vXq5sYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.96' and (value.code = '421076008' or value.code = '420324007' or value.code = '421927004' or value.code = '420597008' or value.code = '421594008')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vXtV8IokEeSkH97cUQxLGA" name="PressureUlcerObservationValueP" constrainedElement="_9rQowOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vXtV8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vXyOcIokEeSkH97cUQxLGA" name="PressureUlcerObservationTargetSiteCodeP" constrainedElement="_9rQowOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vXyOcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (not self.targetSiteCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vXwZQIokEeSkH97cUQxLGA" name="PressureUlcerObservationTargetSiteCode" constrainedElement="_9rQowOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vXwZQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.targetSiteCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.96' and (value.code = '79951008' or value.code = '23747009' or value.code = '76552005' or value.code = '45980000' or value.code = '74757004' or value.code = '51027004' or value.code = '304037003' or value.code = '286591006' or value.code = '49812005' or value.code = '29850006' or value.code = '22180002')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vYqYMIokEeSkH97cUQxLGA" name="PressureUlcerObservationEntryRelationship" constrainedElement="_9rQowOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vYqYMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->select(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))->select(typeCode=vocab::x_ActRelationshipEntryRelationship::COMP and observation.code.code='401238003')->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vYq_QIokEeSkH97cUQxLGA" name="PressureUlcerObservationEntryRelationship2" constrainedElement="_9rQowOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vYq_QYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->select(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))->select(typeCode=vocab::x_ActRelationshipEntryRelationship::COMP and observation.code.code='401239006')->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vYrmUIokEeSkH97cUQxLGA" name="PressureUlcerObservationEntryRelationship3" constrainedElement="_9rQowOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vYrmUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->select(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))->select(typeCode=vocab::x_ActRelationshipEntryRelationship::COMP and observation.code.code='425094009')->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wUKXIIokEeSkH97cUQxLGA" name="PressureUlcerObservationEntryRelationship1Observation1ClassCode" constrainedElement="_9rQowOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wUKXIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->select(typeCode=vocab::x_ActRelationshipEntryRelationship::COMP and observation.code.code='401238003').observation->excluding(null)->reject(classCode=vocab::ActClassObservation::OBS)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wUK-MIokEeSkH97cUQxLGA" name="PressureUlcerObservationEntryRelationship1Observation1MoodCode" constrainedElement="_9rQowOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wUK-MYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->select(typeCode=vocab::x_ActRelationshipEntryRelationship::COMP and observation.code.code='401238003').observation->excluding(null)->reject(moodCode=vocab::x_ActMoodDocumentObservation::EVN)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wULlQIokEeSkH97cUQxLGA" name="PressureUlcerObservationEntryRelationship1Observation1CodeP" constrainedElement="_9rQowOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wULlQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->select(typeCode=vocab::x_ActRelationshipEntryRelationship::COMP and observation.code.code='401238003').observation->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wUMMUIokEeSkH97cUQxLGA" name="PressureUlcerObservationEntryRelationship1Observation1Code" constrainedElement="_9rQowOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wUMMUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->select(typeCode=vocab::x_ActRelationshipEntryRelationship::COMP and observation.code.code='401238003').observation->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined() and code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = code.oclAsType(datatypes::CD) in &#xD;
value.code = '401238003' and value.codeSystem = '2.16.840.1.113883.6.96'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wUMMUookEeSkH97cUQxLGA" name="PressureUlcerObservationEntryRelationship1Observation1Value" constrainedElement="_9rQowOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wUMMU4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->select(typeCode=vocab::x_ActRelationshipEntryRelationship::COMP and observation.code.code='401238003').observation->excluding(null)->reject((value->isEmpty() or value->exists(element | element.isNullFlavorUndefined())) implies (value->size() = 1 and value->forAll(element | element.oclIsTypeOf(datatypes::PQ))))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wUMzYIokEeSkH97cUQxLGA" name="PressureUlcerObservationEntryRelationship1TypeCode" constrainedElement="_9rQowOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wUMzYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->select(typeCode=vocab::x_ActRelationshipEntryRelationship::COMP and observation.code.code='401238003')->select(typeCode=vocab::x_ActRelationshipEntryRelationship::COMP and observation.code.code='401238003')->reject(typeCode=vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wUNacIokEeSkH97cUQxLGA" name="PressureUlcerObservationEntryRelationship1Observation1" constrainedElement="_9rQowOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wUNacYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->select(typeCode=vocab::x_ActRelationshipEntryRelationship::COMP and observation.code.code='401238003')->select(typeCode=vocab::x_ActRelationshipEntryRelationship::COMP and observation.code.code='401238003')->reject(observation->one(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(cda::Observation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wUOokIokEeSkH97cUQxLGA" name="PressureUlcerObservationEntryRelationship2Observation2ClassCode" constrainedElement="_9rQowOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wUPPoIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->select(typeCode=vocab::x_ActRelationshipEntryRelationship::COMP and observation.code.code='401239006').observation->excluding(null)->reject(classCode=vocab::ActClassObservation::OBS)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wUPPoYokEeSkH97cUQxLGA" name="PressureUlcerObservationEntryRelationship2Observation2MoodCode" constrainedElement="_9rQowOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wUPPoookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->select(typeCode=vocab::x_ActRelationshipEntryRelationship::COMP and observation.code.code='401239006').observation->excluding(null)->reject(moodCode=vocab::x_ActMoodDocumentObservation::EVN)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wUP2sIokEeSkH97cUQxLGA" name="PressureUlcerObservationEntryRelationship2Observation2CodeP" constrainedElement="_9rQowOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wUP2sYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->select(typeCode=vocab::x_ActRelationshipEntryRelationship::COMP and observation.code.code='401239006').observation->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wUQdwIokEeSkH97cUQxLGA" name="PressureUlcerObservationEntryRelationship2Observation2Code" constrainedElement="_9rQowOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wUQdwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->select(typeCode=vocab::x_ActRelationshipEntryRelationship::COMP and observation.code.code='401239006').observation->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined() and code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = code.oclAsType(datatypes::CD) in &#xD;
value.code = '401239006' and value.codeSystem = '2.16.840.1.113883.6.96'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wURE0IokEeSkH97cUQxLGA" name="PressureUlcerObservationEntryRelationship2Observation2Value" constrainedElement="_9rQowOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wURE0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->select(typeCode=vocab::x_ActRelationshipEntryRelationship::COMP and observation.code.code='401239006').observation->excluding(null)->reject((value->isEmpty() or value->exists(element | element.isNullFlavorUndefined())) implies (value->size() = 1 and value->forAll(element | element.oclIsTypeOf(datatypes::PQ))))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wURE0ookEeSkH97cUQxLGA" name="PressureUlcerObservationEntryRelationship2TypeCode" constrainedElement="_9rQowOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wURE04okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->select(typeCode=vocab::x_ActRelationshipEntryRelationship::COMP and observation.code.code='401239006')->select(typeCode=vocab::x_ActRelationshipEntryRelationship::COMP and observation.code.code='401239006')->reject(typeCode=vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wURr4IokEeSkH97cUQxLGA" name="PressureUlcerObservationEntryRelationship2Observation2" constrainedElement="_9rQowOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wURr4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->select(typeCode=vocab::x_ActRelationshipEntryRelationship::COMP and observation.code.code='401239006')->select(typeCode=vocab::x_ActRelationshipEntryRelationship::COMP and observation.code.code='401239006')->reject(observation->one(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(cda::Observation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wUThEIokEeSkH97cUQxLGA" name="PressureUlcerObservationEntryRelationship3Observation3ClassCode" constrainedElement="_9rQowOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wUThEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->select(typeCode=vocab::x_ActRelationshipEntryRelationship::COMP and observation.code.code='425094009').observation->excluding(null)->reject(classCode=vocab::ActClassObservation::OBS)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wUUIIIokEeSkH97cUQxLGA" name="PressureUlcerObservationEntryRelationship3Observation3MoodCode" constrainedElement="_9rQowOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wUUIIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->select(typeCode=vocab::x_ActRelationshipEntryRelationship::COMP and observation.code.code='425094009').observation->excluding(null)->reject(moodCode=vocab::x_ActMoodDocumentObservation::EVN)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wUUIIookEeSkH97cUQxLGA" name="PressureUlcerObservationEntryRelationship3Observation3CodeP" constrainedElement="_9rQowOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wUUII4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->select(typeCode=vocab::x_ActRelationshipEntryRelationship::COMP and observation.code.code='425094009').observation->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wUUvMIokEeSkH97cUQxLGA" name="PressureUlcerObservationEntryRelationship3Observation3Code" constrainedElement="_9rQowOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wUVWQIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->select(typeCode=vocab::x_ActRelationshipEntryRelationship::COMP and observation.code.code='425094009').observation->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined() and code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = code.oclAsType(datatypes::CD) in &#xD;
value.code = '425094009' and value.codeSystem = '2.16.840.1.113883.6.96'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wUVWQYokEeSkH97cUQxLGA" name="PressureUlcerObservationEntryRelationship3Observation3Value" constrainedElement="_9rQowOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wUV9UIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->select(typeCode=vocab::x_ActRelationshipEntryRelationship::COMP and observation.code.code='425094009').observation->excluding(null)->reject((value->isEmpty() or value->exists(element | element.isNullFlavorUndefined())) implies (value->size() = 1 and value->forAll(element | element.oclIsTypeOf(datatypes::PQ))))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wUWkYIokEeSkH97cUQxLGA" name="PressureUlcerObservationEntryRelationship3TypeCode" constrainedElement="_9rQowOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wUWkYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->select(typeCode=vocab::x_ActRelationshipEntryRelationship::COMP and observation.code.code='425094009')->select(typeCode=vocab::x_ActRelationshipEntryRelationship::COMP and observation.code.code='425094009')->reject(typeCode=vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wUXLcIokEeSkH97cUQxLGA" name="PressureUlcerObservationEntryRelationship3Observation3" constrainedElement="_9rQowOZbEeGINOJ_SD9_dA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wUXLcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->select(typeCode=vocab::x_ActRelationshipEntryRelationship::COMP and observation.code.code='425094009')->select(typeCode=vocab::x_ActRelationshipEntryRelationship::COMP and observation.code.code='425094009')->reject(observation->one(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(cda::Observation)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_9raZwOZbEeGINOJ_SD9_dA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_TkyvwPKwEeGFUPBL8qS7yQ" name="FetusSubjectContext">
      <ownedComment xmi:id="_ZaFIIPKwEeGFUPBL8qS7yQ">
        <body>For reports on mothers and their fetus(es), information on a mother is mapped to recordTarget, PatientRole, and Patient. Information on the fetus is mapped to subject, relatedSubject, and SubjectPerson at the CDA section level. Both context information on the mother and fetus must be included in the document if observations on fetus(es) are contained in the document.</body>
      </ownedComment>
      <ownedRule xmi:id="_vZKugIokEeSkH97cUQxLGA" name="FetusSubjectContextTemplateId" constrainedElement="_TkyvwPKwEeGFUPBL8qS7yQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vZKugYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.6.2.3')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vZNKwIokEeSkH97cUQxLGA" name="FetusSubjectContextCode" constrainedElement="_TkyvwPKwEeGFUPBL8qS7yQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vZNKwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '121026' and value.codeSystem = '1.2.840.10008.2.16.4')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vZRcMYokEeSkH97cUQxLGA" name="FetusSubjectContextSubject" constrainedElement="_TkyvwPKwEeGFUPBL8qS7yQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vZRcMookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.subject->one(subject : cda::SubjectPerson | not subject.oclIsUndefined() and subject.oclIsKindOf(cda::SubjectPerson))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_TkyvwfKwEeGFUPBL8qS7yQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_grTqsEcaEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_XIE-YPKyEeGFUPBL8qS7yQ" name="ObserverContext">
      <ownedRule xmi:id="_vZSDQIokEeSkH97cUQxLGA" name="ObserverContextTemplateId" constrainedElement="_XIE-YPKyEeGFUPBL8qS7yQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vZSDQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.6.2.4')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vZVGkIokEeSkH97cUQxLGA" name="ObserverContextAssignedAuthor" constrainedElement="_XIE-YPKyEeGFUPBL8qS7yQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vZVGkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.assignedAuthor->one(assignedAuthor : cda::AssignedAuthor | not assignedAuthor.oclIsUndefined() and assignedAuthor.oclIsKindOf(cda::AssignedAuthor))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_XIE-YfKyEeGFUPBL8qS7yQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_ChEisEcEEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_u_keoIkOEeOJGtGyq_dBbA" name="ActReference">
      <ownedComment xmi:id="_CDcekIkXEeOJGtGyq_dBbA">
        <body>This template represents the act of referencing another entry in the same CDA document instance. Its purpose is to remove the need to repeat the complete XML representation of the referred entry when relating one entry to another. For example, in a Care Plan it is necessary to repeatedly relate Health Concerns, Goals, Interventions and Outcomes.&#xD;
The id is required and must be the same id as the entry/id it is referencing. Act/Code is nulled to &quot;NP&quot; (Not Present).</body>
      </ownedComment>
      <ownedRule xmi:id="_vZih8IokEeSkH97cUQxLGA" name="ActReferenceTemplateId" constrainedElement="_u_keoIkOEeOJGtGyq_dBbA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vZih8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.122')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vZkXIIokEeSkH97cUQxLGA" name="ActReferenceClassCode" constrainedElement="_u_keoIkOEeOJGtGyq_dBbA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vZkXIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryAct::ACT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vZllQIokEeSkH97cUQxLGA" name="ActReferenceMoodCode" constrainedElement="_u_keoIkOEeOJGtGyq_dBbA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vZllQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vZmzYIokEeSkH97cUQxLGA" name="ActReferenceId" constrainedElement="_u_keoIkOEeOJGtGyq_dBbA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vZmzYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (self.id->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vZoBgIokEeSkH97cUQxLGA" name="ActReferenceCode" constrainedElement="_u_keoIkOEeOJGtGyq_dBbA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vZoBgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vZrE0IokEeSkH97cUQxLGA" name="ActReferenceStatusCode" constrainedElement="_u_keoIkOEeOJGtGyq_dBbA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vZrE0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in &#xD;
not value.codeSystem.oclIsUndefined() or not value.codeSystemName.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vZs6AIokEeSkH97cUQxLGA" name="ActReferenceStatusCodeP" constrainedElement="_u_keoIkOEeOJGtGyq_dBbA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vZs6AYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wUcD8IokEeSkH97cUQxLGA" name="ActReferenceCDNullFlavor" constrainedElement="_u_keoIkOEeOJGtGyq_dBbA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wUcD8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.code->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies (not nullFlavor.oclIsUndefined() and nullFlavor.oclIsKindOf(vocab::NullFlavor) and &#xD;
let value : vocab::NullFlavor = nullFlavor.oclAsType(vocab::NullFlavor) in &#xD;
value = vocab::NullFlavor::NP )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wUcrAIokEeSkH97cUQxLGA" name="ActReferenceCDNullFlavorP" constrainedElement="_u_keoIkOEeOJGtGyq_dBbA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wUcrAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.code->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies (isDefined('nullFlavor') )))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_u__VYIkOEeOJGtGyq_dBbA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Z8VQYIlFEeOJGtGyq_dBbA" name="AdvanceDirectiveOrganizer">
      <ownedComment xmi:id="_eflRwIlIEeOJGtGyq_dBbA">
        <body>This clinical statement groups a set of advance directive observations.</body>
      </ownedComment>
      <ownedRule xmi:id="_vZyZkIokEeSkH97cUQxLGA" name="AdvanceDirectiveOrganizerTemplateId" constrainedElement="_Z8VQYIlFEeOJGtGyq_dBbA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vZyZkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.108')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vZznsIokEeSkH97cUQxLGA" name="AdvanceDirectiveOrganizerClassCode" constrainedElement="_Z8VQYIlFEeOJGtGyq_dBbA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vZznsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryOrganizer::CLUSTER</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vZ010IokEeSkH97cUQxLGA" name="AdvanceDirectiveOrganizerMoodCode" constrainedElement="_Z8VQYIlFEeOJGtGyq_dBbA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vZ010YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::ActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vZ2D8IokEeSkH97cUQxLGA" name="AdvanceDirectiveOrganizerId" constrainedElement="_Z8VQYIlFEeOJGtGyq_dBbA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vZ2D8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vZ35IIokEeSkH97cUQxLGA" name="AdvanceDirectiveOrganizerCode" constrainedElement="_Z8VQYIlFEeOJGtGyq_dBbA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vZ35IYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '45473-6' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vZ6VYIokEeSkH97cUQxLGA" name="AdvanceDirectiveOrganizerCodeP" constrainedElement="_Z8VQYIlFEeOJGtGyq_dBbA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vZ6VYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vZ-m0IokEeSkH97cUQxLGA" name="AdvanceDirectiveOrganizerStatusCodeP" constrainedElement="_Z8VQYIlFEeOJGtGyq_dBbA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vZ-m0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vZ8KkIokEeSkH97cUQxLGA" name="AdvanceDirectiveOrganizerStatusCode" constrainedElement="_Z8VQYIlFEeOJGtGyq_dBbA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vZ8KkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vaAcAIokEeSkH97cUQxLGA" name="AdvanceDirectiveOrganizerAdvanceDirectiveObservation2" constrainedElement="_Z8VQYIlFEeOJGtGyq_dBbA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vaAcAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.component->exists(component : cda::Component4 | not component.observation.oclIsUndefined() and component.observation.oclIsKindOf(consol::AdvanceDirectiveObservation2))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Z8VQYYlFEeOJGtGyq_dBbA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_B6aX4EbvEd6besF9iFIJkQ"/>
      </generalization>
      <ownedOperation xmi:id="_vaBDEIokEeSkH97cUQxLGA" name="getAdvanceDirectiveObservation2s" bodyCondition="_vaBqIIokEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vaBqIIokEeSkH97cUQxLGA" name="body" constrainedElement="_vaBDEIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vaBqIYokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::AdvanceDirectiveObservation2)).oclAsType(consol::AdvanceDirectiveObservation2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vaBDEYokEeSkH97cUQxLGA" type="_GnllUK-9EeO8duI_7f6kZw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vaBDEookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_O-O-IInUEeOJGtGyq_dBbA" name="CharacteristicsOfHomeEnvironment">
      <ownedComment xmi:id="_opipQInVEeOJGtGyq_dBbA">
        <body>This template represents the patient's home environment including, but not limited to, type of residence (trailer, single family home, assisted living), living arrangement (e.g., alone, with parents), and housing status (e.g., evicted, homeless, home owner).</body>
      </ownedComment>
      <ownedRule xmi:id="_vaBqIookEeSkH97cUQxLGA" name="CharacteristicsOfHomeEnvironmentTemplateId" constrainedElement="_O-O-IInUEeOJGtGyq_dBbA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vaBqI4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.109')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vaDfUIokEeSkH97cUQxLGA" name="CharacteristicsOfHomeEnvironmentClassCode" constrainedElement="_O-O-IInUEeOJGtGyq_dBbA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vaDfUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vaEtcIokEeSkH97cUQxLGA" name="CharacteristicsOfHomeEnvironmentMoodCode" constrainedElement="_O-O-IInUEeOJGtGyq_dBbA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vaEtcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vaF7kIokEeSkH97cUQxLGA" name="CharacteristicsOfHomeEnvironmentId" constrainedElement="_O-O-IInUEeOJGtGyq_dBbA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vaF7kYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vaJl8IokEeSkH97cUQxLGA" name="CharacteristicsOfHomeEnvironmentCodeP" constrainedElement="_O-O-IInUEeOJGtGyq_dBbA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vaJl8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vaHwwIokEeSkH97cUQxLGA" name="CharacteristicsOfHomeEnvironmentCode" constrainedElement="_O-O-IInUEeOJGtGyq_dBbA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vaHwwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '224249004' and value.codeSystem = '2.16.840.1.113883.6.96')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vaMCMIokEeSkH97cUQxLGA" name="CharacteristicsOfHomeEnvironmentStatusCode" constrainedElement="_O-O-IInUEeOJGtGyq_dBbA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vaMCMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vaOecIokEeSkH97cUQxLGA" name="CharacteristicsOfHomeEnvironmentStatusCodeP" constrainedElement="_O-O-IInUEeOJGtGyq_dBbA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vaOecYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vaPskIokEeSkH97cUQxLGA" name="CharacteristicsOfHomeEnvironmentValue" constrainedElement="_O-O-IInUEeOJGtGyq_dBbA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vaPskYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_O-PlMInUEeOJGtGyq_dBbA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Y_oGkIoAEeOoMZgUoTghIg" name="CognitiveAbilitiesObservation">
      <ownedComment xmi:id="_V3xvYIoBEeOoMZgUoTghIg">
        <body>The Cognitive Abilities Observation represents a patient's ability to perform specific cognitive tasks (e.g., ability to plan, logical sequencing ability, ability to think abstractly).</body>
      </ownedComment>
      <ownedRule xmi:id="_vaQ6sIokEeSkH97cUQxLGA" name="CognitiveAbilitiesObservationTemplateId" constrainedElement="_Y_oGkIoAEeOoMZgUoTghIg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vaQ6sYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.126')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vaSv4IokEeSkH97cUQxLGA" name="CognitiveAbilitiesObservationClassCode" constrainedElement="_Y_oGkIoAEeOoMZgUoTghIg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vaSv4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vaT-AIokEeSkH97cUQxLGA" name="CognitiveAbilitiesObservationMoodCode" constrainedElement="_Y_oGkIoAEeOoMZgUoTghIg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vaT-AYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vaUlEIokEeSkH97cUQxLGA" name="CognitiveAbilitiesObservationId" constrainedElement="_Y_oGkIoAEeOoMZgUoTghIg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vaUlEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vaY2gIokEeSkH97cUQxLGA" name="CognitiveAbilitiesObservationCodeP" constrainedElement="_Y_oGkIoAEeOoMZgUoTghIg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vaY2gYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vaXBUIokEeSkH97cUQxLGA" name="CognitiveAbilitiesObservationCode" constrainedElement="_Y_oGkIoAEeOoMZgUoTghIg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vaXBUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.96' and (value.code = '61254005' or value.code = '395659009' or value.code = '286574007' or value.code = '307082005' or value.code = '304641000' or value.code = '363878000' or value.code = '418907009' or value.code = '304645009' or value.code = '311465003'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vaarsIokEeSkH97cUQxLGA" name="CognitiveAbilitiesObservationText" constrainedElement="_Y_oGkIoAEeOoMZgUoTghIg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vaarsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.text.oclIsUndefined() or self.text.isNullFlavorUndefined()) implies (not self.text.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vacg4IokEeSkH97cUQxLGA" name="CognitiveAbilitiesObservationStatusCode" constrainedElement="_Y_oGkIoAEeOoMZgUoTghIg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vacg4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vae9IIokEeSkH97cUQxLGA" name="CognitiveAbilitiesObservationStatusCodeP" constrainedElement="_Y_oGkIoAEeOoMZgUoTghIg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vae9IYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vagyUIokEeSkH97cUQxLGA" name="CognitiveAbilitiesObservationEffectiveTime" constrainedElement="_Y_oGkIoAEeOoMZgUoTghIg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vagyUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vajOkIokEeSkH97cUQxLGA" name="CognitiveAbilitiesObservationValue" constrainedElement="_Y_oGkIoAEeOoMZgUoTghIg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vajOkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.96' and (value.code = '11163003' or value.code = '260379002')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_valDwIokEeSkH97cUQxLGA" name="CognitiveAbilitiesObservationValueP" constrainedElement="_Y_oGkIoAEeOoMZgUoTghIg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_valDwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vam48IokEeSkH97cUQxLGA" name="CognitiveAbilitiesObservationAssessmentScaleObservation" constrainedElement="_Y_oGkIoAEeOoMZgUoTghIg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vam48YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::AssessmentScaleObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vq6l0IokEeSkH97cUQxLGA" name="CognitiveAbilitiesObservationAuthorParticipation" constrainedElement="_Y_oGkIoAEeOoMZgUoTghIg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vq6l0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->exists(author : cda::Author | not author.oclIsUndefined() and author.oclIsKindOf(consol::AuthorParticipation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Y_otoIoAEeOoMZgUoTghIg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_vangAIokEeSkH97cUQxLGA" name="getAssessmentScaleObservations" bodyCondition="_vaoHEookEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vaoHEookEeSkH97cUQxLGA" name="body" constrainedElement="_vangAIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vaoHE4okEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::AssessmentScaleObservation)).oclAsType(consol::AssessmentScaleObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vaoHEIokEeSkH97cUQxLGA" type="_Zi33YOYxEeGINOJ_SD9_dA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vaoHEYokEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_H2EzIIqZEeOoMZgUoTghIg" name="CulturalAndReligiousObservation">
      <ownedComment xmi:id="_OepNIIqaEeOoMZgUoTghIg">
        <body>This template represents a patient's spiritual, religious, and cultural belief practices, such as a kosher diet or fasting ritual. religiousAffiliationCode in the document header captures only the patient's religious affiliation.</body>
      </ownedComment>
      <ownedRule xmi:id="_vaoHFIokEeSkH97cUQxLGA" name="CulturalAndReligiousObservationTemplateId" constrainedElement="_H2EzIIqZEeOoMZgUoTghIg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vaoHFYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.111')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vap8QIokEeSkH97cUQxLGA" name="CulturalAndReligiousObservationClassCode" constrainedElement="_H2EzIIqZEeOoMZgUoTghIg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vap8QYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_varKYIokEeSkH97cUQxLGA" name="CulturalAndReligiousObservationMoodCode" constrainedElement="_H2EzIIqZEeOoMZgUoTghIg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_varKYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_varxcIokEeSkH97cUQxLGA" name="CulturalAndReligiousObservationId" constrainedElement="_H2EzIIqZEeOoMZgUoTghIg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_varxcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vawC4IokEeSkH97cUQxLGA" name="CulturalAndReligiousObservationCodeP" constrainedElement="_H2EzIIqZEeOoMZgUoTghIg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vawC4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vatmoIokEeSkH97cUQxLGA" name="CulturalAndReligiousObservationCode" constrainedElement="_H2EzIIqZEeOoMZgUoTghIg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vatmoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '406198009' and value.codeSystem = '2.16.840.1.113883.6.96')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vayfIIokEeSkH97cUQxLGA" name="CulturalAndReligiousObservationStatusCode" constrainedElement="_H2EzIIqZEeOoMZgUoTghIg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vayfIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_va0UUIokEeSkH97cUQxLGA" name="CulturalAndReligiousObservationStatusCodeP" constrainedElement="_H2EzIIqZEeOoMZgUoTghIg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_va0UUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_va2JgIokEeSkH97cUQxLGA" name="CulturalAndReligiousObservationValue" constrainedElement="_H2EzIIqZEeOoMZgUoTghIg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_va2JgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_H2EzIYqZEeOoMZgUoTghIg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_MbKs8IqvEeOoMZgUoTghIg" name="DrugMonitoringAct">
      <ownedComment xmi:id="_OWb3EIrAEeOoMZgUoTghIg">
        <body>This template represents the person responsible for monitoring the medication. The prescriber of the medication is not necessarily the same person as the one designated to monitor the drug.</body>
      </ownedComment>
      <ownedRule xmi:id="_va3XoIokEeSkH97cUQxLGA" name="DrugMonitoringActTemplateId" constrainedElement="_MbKs8IqvEeOoMZgUoTghIg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_va3XoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.123')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_va4lwIokEeSkH97cUQxLGA" name="DrugMonitoringActClassCode" constrainedElement="_MbKs8IqvEeOoMZgUoTghIg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_va4lwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryAct::ACT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_va5z4IokEeSkH97cUQxLGA" name="DrugMonitoringActMoodCode" constrainedElement="_MbKs8IqvEeOoMZgUoTghIg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_va5z4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentActMood::INT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_va7CAIokEeSkH97cUQxLGA" name="DrugMonitoringActId" constrainedElement="_MbKs8IqvEeOoMZgUoTghIg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_va7CAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vbBvsIokEeSkH97cUQxLGA" name="DrugMonitoringActCodeP" constrainedElement="_MbKs8IqvEeOoMZgUoTghIg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vbBvsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_va-FUIokEeSkH97cUQxLGA" name="DrugMonitoringActCode" constrainedElement="_MbKs8IqvEeOoMZgUoTghIg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_va-FUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '395170001' and value.codeSystem = '2.16.840.1.113883.6.96')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vbEL8IokEeSkH97cUQxLGA" name="DrugMonitoringActStatusCode" constrainedElement="_MbKs8IqvEeOoMZgUoTghIg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vbEL8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vbGBIIokEeSkH97cUQxLGA" name="DrugMonitoringActEffectiveTime" constrainedElement="_MbKs8IqvEeOoMZgUoTghIg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vbGBIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vbN88IokEeSkH97cUQxLGA" name="DrugMonitoringActParticipant" constrainedElement="_MbKs8IqvEeOoMZgUoTghIg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vbN88YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->exists(participant : cda::Participant2 | not participant.oclIsUndefined() and participant.oclIsKindOf(cda::Participant2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wUgVYIokEeSkH97cUQxLGA" name="DrugMonitoringActParticipantParticipantRolePlayingEntityClassCode" constrainedElement="_MbKs8IqvEeOoMZgUoTghIg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wUgVYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).participantRole->excluding(null).playingEntity->excluding(null)->reject(isDefined('classCode') and classCode=vocab::EntityClassRoot::PSN)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wUhjgIokEeSkH97cUQxLGA" name="DrugMonitoringActParticipantParticipantRolePlayingEntityName" constrainedElement="_MbKs8IqvEeOoMZgUoTghIg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wUhjgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).participantRole->excluding(null).playingEntity->excluding(null)->reject((name->isEmpty() or name->exists(element | element.isNullFlavorUndefined())) implies (name->size() = 1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wUiKkIokEeSkH97cUQxLGA" name="DrugMonitoringActParticipantParticipantRoleClassCode" constrainedElement="_MbKs8IqvEeOoMZgUoTghIg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wUiKkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).participantRole->excluding(null)->reject(isDefined('classCode') and classCode=vocab::RoleClassRoot::ASSIGNED)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wUixoIokEeSkH97cUQxLGA" name="DrugMonitoringActParticipantParticipantRoleId" constrainedElement="_MbKs8IqvEeOoMZgUoTghIg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wUixoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).participantRole->excluding(null)->reject((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wUjYsIokEeSkH97cUQxLGA" name="DrugMonitoringActParticipantParticipantRolePlayingEntity" constrainedElement="_MbKs8IqvEeOoMZgUoTghIg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wUjYsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).participantRole->excluding(null)->reject(playingEntity->one(playingEntity : cda::PlayingEntity | not playingEntity.oclIsUndefined() and playingEntity.oclIsKindOf(cda::PlayingEntity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wUj_wIokEeSkH97cUQxLGA" name="DrugMonitoringActParticipantTypeCode" constrainedElement="_MbKs8IqvEeOoMZgUoTghIg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wUj_wYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->reject(typeCode=vocab::ParticipationType::RESP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wUkm0IokEeSkH97cUQxLGA" name="DrugMonitoringActParticipantParticipantRole" constrainedElement="_MbKs8IqvEeOoMZgUoTghIg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wUkm0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->reject(participantRole->one(participantRole : cda::ParticipantRole | not participantRole.oclIsUndefined() and participantRole.oclIsKindOf(cda::ParticipantRole)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_MbKs8YqvEeOoMZgUoTghIg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_POfwAIz7EeOoMZgUoTghIg" name="HandoffCommunication">
      <ownedComment xmi:id="_VONaQIz8EeOoMZgUoTghIg">
        <body>This template represents provider hand-off communication. The 'hand-off' process involves senders, those transmitting the patient's information and releasing the care of that patient to the next clinician, and receivers, those who accept the patient information and care of that patient.</body>
      </ownedComment>
      <ownedRule xmi:id="_vbPyIIokEeSkH97cUQxLGA" name="HandoffCommunicationTemplateId" constrainedElement="_POfwAIz7EeOoMZgUoTghIg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vbQZMIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.141')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vbRnUIokEeSkH97cUQxLGA" name="HandoffCommunicationClassCode" constrainedElement="_POfwAIz7EeOoMZgUoTghIg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vbRnUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryAct::ACT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vbS1cIokEeSkH97cUQxLGA" name="HandoffCommunicationMoodCode" constrainedElement="_POfwAIz7EeOoMZgUoTghIg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vbS1cYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vbWf0IokEeSkH97cUQxLGA" name="HandoffCommunicationCodeP" constrainedElement="_POfwAIz7EeOoMZgUoTghIg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vbWf0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vbUqoIokEeSkH97cUQxLGA" name="HandoffCommunicationCode" constrainedElement="_POfwAIz7EeOoMZgUoTghIg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vbUqoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '432138007' and value.codeSystem = '2.16.840.1.113883.6.96')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vbY8EIokEeSkH97cUQxLGA" name="HandoffCommunicationStatusCode" constrainedElement="_POfwAIz7EeOoMZgUoTghIg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vbY8EYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vbb_YIokEeSkH97cUQxLGA" name="HandoffCommunicationStatusCodeP" constrainedElement="_POfwAIz7EeOoMZgUoTghIg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vbjUIIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vbnlkIokEeSkH97cUQxLGA" name="HandoffCommunicationEffectiveTime" constrainedElement="_POfwAIz7EeOoMZgUoTghIg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vbnlkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vbxWkIokEeSkH97cUQxLGA" name="HandoffCommunicationParticipant" constrainedElement="_POfwAIz7EeOoMZgUoTghIg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vbxWkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->exists(participant : cda::Participant2 | not participant.oclIsUndefined() and participant.oclIsKindOf(cda::Participant2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vrAFYookEeSkH97cUQxLGA" name="HandoffCommunicationAuthorParticipation" constrainedElement="_POfwAIz7EeOoMZgUoTghIg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vrAFY4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->exists(author : cda::Author | not author.oclIsUndefined() and author.oclIsKindOf(consol::AuthorParticipation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wUmcAIokEeSkH97cUQxLGA" name="HandoffCommunicationParticipantParticipantRoleCodeP" constrainedElement="_POfwAIz7EeOoMZgUoTghIg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wUmcAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).participantRole->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wUnDEIokEeSkH97cUQxLGA" name="HandoffCommunicationParticipantParticipantRoleCode" constrainedElement="_POfwAIz7EeOoMZgUoTghIg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wUnDEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).participantRole->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined() and code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = code.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.101' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wUnqIIokEeSkH97cUQxLGA" name="HandoffCommunicationParticipantTypeCode" constrainedElement="_POfwAIz7EeOoMZgUoTghIg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wUnqIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->reject(typeCode=vocab::ParticipationType::IRCP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wUoRMIokEeSkH97cUQxLGA" name="HandoffCommunicationParticipantParticipantRole" constrainedElement="_POfwAIz7EeOoMZgUoTghIg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wUoRMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->reject(participantRole->one(participantRole : cda::ParticipantRole | not participantRole.oclIsUndefined() and participantRole.oclIsKindOf(cda::ParticipantRole)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_POfwAYz7EeOoMZgUoTghIg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_RbbCII0dEeOB0eBUISUB4Q" name="MedicalEquipmentOrganizer">
      <ownedComment xmi:id="_F36tQI0eEeOB0eBUISUB4Q">
        <body>This template represents a set of current or historical medical devices/equipment used by the patient. This template may contain Non-Medicinal Supply Activity (V2) (templateId: 2.16.840.1.113883.10.20.22.4.50.2) and/or Procedure Activity Procedure (V2) (templateId: 2.16.840.1.113883.10.20.22.4.14.2) templates. &#xD;
Devices applied to, or placed in, the patient are represented with the Procedure Activity Procedure (V2) template. Equipment supplied to the patient (e.g. pumps, inhalers, wheelchairs) is represented by the Non-Medicinal Supply Activity V2 template. The organizer would probably not be used with devices applied in or on the patient but rather to organize a group of medical supplies the patient has been supplied with.</body>
      </ownedComment>
      <ownedRule xmi:id="_vbyksIokEeSkH97cUQxLGA" name="MedicalEquipmentOrganizerTemplateId" constrainedElement="_RbbCII0dEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vbyksYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.135')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vb1A8IokEeSkH97cUQxLGA" name="MedicalEquipmentOrganizerClassCode" constrainedElement="_RbbCII0dEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vb1A8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryOrganizer::CLUSTER</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vb22IIokEeSkH97cUQxLGA" name="MedicalEquipmentOrganizerMoodCode" constrainedElement="_RbbCII0dEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vb22IYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::ActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vb4rUIokEeSkH97cUQxLGA" name="MedicalEquipmentOrganizerId" constrainedElement="_RbbCII0dEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vb4rUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vb55cIokEeSkH97cUQxLGA" name="MedicalEquipmentOrganizerCode" constrainedElement="_RbbCII0dEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vb55cYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vb9j0IokEeSkH97cUQxLGA" name="MedicalEquipmentOrganizerStatusCodeP" constrainedElement="_RbbCII0dEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vb-K4IokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vb7uoIokEeSkH97cUQxLGA" name="MedicalEquipmentOrganizerStatusCode" constrainedElement="_RbbCII0dEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vb7uoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'aborted' or value.code = 'active' or value.code = 'cancelled' or value.code = 'completed' or value.code = 'held' or value.code = 'suspended')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vcBOMIokEeSkH97cUQxLGA" name="MedicalEquipmentOrganizerEffectiveTime" constrainedElement="_RbbCII0dEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vcBOMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vcDDYIokEeSkH97cUQxLGA" name="MedicalEquipmentOrganizerNonMedicinalSupplyActivity2" constrainedElement="_RbbCII0dEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vcDDYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.component->exists(component : cda::Component4 | not component.supply.oclIsUndefined() and component.supply.oclIsKindOf(consol::NonMedicinalSupplyActivity2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vcERgIokEeSkH97cUQxLGA" name="MedicalEquipmentOrganizerProcedureActivityProcedure2" constrainedElement="_RbbCII0dEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vcERgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.component->exists(component : cda::Component4 | not component.procedure.oclIsUndefined() and component.procedure.oclIsKindOf(consol::ProcedureActivityProcedure2))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_RbdeYI0dEeOB0eBUISUB4Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_B6aX4EbvEd6besF9iFIJkQ"/>
      </generalization>
      <ownedOperation xmi:id="_vcDqcIokEeSkH97cUQxLGA" name="getNonMedicinalSupplyActivity2s" bodyCondition="_vcDqc4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vcDqc4okEeSkH97cUQxLGA" name="body" constrainedElement="_vcDqcIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vcDqdIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getSupplies()->select(supply : cda::Supply | not supply.oclIsUndefined() and supply.oclIsKindOf(consol::NonMedicinalSupplyActivity2)).oclAsType(consol::NonMedicinalSupplyActivity2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vcDqcYokEeSkH97cUQxLGA" type="_k_C20OaCEeOmzetP5oaH3A" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vcDqcookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vcE4kIokEeSkH97cUQxLGA" name="getProcedureActivityProcedure2s" bodyCondition="_vcE4k4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vcE4k4okEeSkH97cUQxLGA" name="body" constrainedElement="_vcE4kIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vcE4lIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getProcedures()->select(procedure : cda::Procedure | not procedure.oclIsUndefined() and procedure.oclIsKindOf(consol::ProcedureActivityProcedure2)).oclAsType(consol::ProcedureActivityProcedure2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vcE4kYokEeSkH97cUQxLGA" type="_fCVOQPDqEeOKPKE9au0oug" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vcE4kookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_-lJmEI0kEeOB0eBUISUB4Q" name="MentalStatusObservation">
      <ownedComment xmi:id="_WTRLwI0mEeOB0eBUISUB4Q">
        <body>This template represents observations relating intellectual and mental powers and state of mind. Mental status observations in a clinical note often have a psychological focus (e.g., level of consciousness, mood, anxiety level, reasoning ability).</body>
      </ownedComment>
      <ownedRule xmi:id="_vcFfoIokEeSkH97cUQxLGA" name="MentalStatusObservationTemplateId" constrainedElement="_-lJmEI0kEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vcFfoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.125')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vcGtwIokEeSkH97cUQxLGA" name="MentalStatusObservationClassCode" constrainedElement="_-lJmEI0kEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vcGtwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vcH74IokEeSkH97cUQxLGA" name="MentalStatusObservationMoodCode" constrainedElement="_-lJmEI0kEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vcH74YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vcJKAIokEeSkH97cUQxLGA" name="MentalStatusObservationId" constrainedElement="_-lJmEI0kEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vcJKAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vcNbcIokEeSkH97cUQxLGA" name="MentalStatusObservationCodeP" constrainedElement="_-lJmEI0kEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vcNbcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vcK_MIokEeSkH97cUQxLGA" name="MentalStatusObservationCode" constrainedElement="_-lJmEI0kEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vcK_MYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.96' and (value.code = '43173001' or value.code = '405051006' or value.code = '363871006' or value.code = '85256008' or value.code = '285231000' or value.code = '6942003'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vcP3sIokEeSkH97cUQxLGA" name="MentalStatusObservationStatusCode" constrainedElement="_-lJmEI0kEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vcP3sYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vcRs4IokEeSkH97cUQxLGA" name="MentalStatusObservationStatusCodeP" constrainedElement="_-lJmEI0kEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vcRs4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vcTiEIokEeSkH97cUQxLGA" name="MentalStatusObservationEffectiveTime" constrainedElement="_-lJmEI0kEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vcTiEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vcV-UIokEeSkH97cUQxLGA" name="MentalStatusObservationValue" constrainedElement="_-lJmEI0kEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vcV-UYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.96' and (value.code = '11163003' or value.code = '260379002')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vcXzgIokEeSkH97cUQxLGA" name="MentalStatusObservationValueP" constrainedElement="_-lJmEI0kEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vcXzgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vcaPwIokEeSkH97cUQxLGA" name="MentalStatusObservationAssessmentScaleObservation" constrainedElement="_-lJmEI0kEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vcaPwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::AssessmentScaleObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vrKdcIokEeSkH97cUQxLGA" name="MentalStatusObservationAuthorParticipation" constrainedElement="_-lJmEI0kEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vrKdcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->exists(author : cda::Author | not author.oclIsUndefined() and author.oclIsKindOf(consol::AuthorParticipation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_-lJmEY0kEeOB0eBUISUB4Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_vca20IokEeSkH97cUQxLGA" name="getAssessmentScaleObservations" bodyCondition="_vca204okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vca204okEeSkH97cUQxLGA" name="body" constrainedElement="_vca20IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vca21IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::AssessmentScaleObservation)).oclAsType(consol::AssessmentScaleObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vca20YokEeSkH97cUQxLGA" type="_Zi33YOYxEeGINOJ_SD9_dA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vca20ookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_NP5zMI05EeOB0eBUISUB4Q" name="NutritionAssessment">
      <ownedComment xmi:id="_itqVQI05EeOB0eBUISUB4Q">
        <body>This template represents the patient's nutrition abilities and habits including intake, diet requirements or diet followed.</body>
      </ownedComment>
      <ownedRule xmi:id="_vca21YokEeSkH97cUQxLGA" name="NutritionAssessmentTemplateId" constrainedElement="_NP5zMI05EeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vca21ookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.138')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vccsAIokEeSkH97cUQxLGA" name="NutritionAssessmentClassCode" constrainedElement="_NP5zMI05EeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vccsAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vcd6IIokEeSkH97cUQxLGA" name="NutritionAssessmentMoodCode" constrainedElement="_NP5zMI05EeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vcd6IYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vcfIQIokEeSkH97cUQxLGA" name="NutritionAssessmentId" constrainedElement="_NP5zMI05EeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vcfIQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vcjZsIokEeSkH97cUQxLGA" name="NutritionAssessmentCodeP" constrainedElement="_NP5zMI05EeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vcjZsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vcg9cIokEeSkH97cUQxLGA" name="NutritionAssessmentCode" constrainedElement="_NP5zMI05EeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vcg9cYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.96' and not value.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vcl18IokEeSkH97cUQxLGA" name="NutritionAssessmentStatusCode" constrainedElement="_NP5zMI05EeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vcl18YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vcnrIIokEeSkH97cUQxLGA" name="NutritionAssessmentStatusCodeP" constrainedElement="_NP5zMI05EeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vcnrIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vcpgUIokEeSkH97cUQxLGA" name="NutritionAssessmentEffectiveTime" constrainedElement="_NP5zMI05EeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vcpgUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vcqucIokEeSkH97cUQxLGA" name="NutritionAssessmentValue" constrainedElement="_NP5zMI05EeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vcqucYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vrLrkIokEeSkH97cUQxLGA" name="NutritionAssessmentAuthorParticipation" constrainedElement="_NP5zMI05EeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vrLrkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->exists(author : cda::Author | not author.oclIsUndefined() and author.oclIsKindOf(consol::AuthorParticipation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_NP5zMY05EeOB0eBUISUB4Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_FhAIMI3FEeOB0eBUISUB4Q" name="NutritionRecommendations">
      <ownedComment xmi:id="_YFQGgI3FEeOB0eBUISUB4Q">
        <body>This template represents nutrition regimens (e.g., fluid restrictions, calorie minimum), interventions (e.g., NPO, nutritional supplements), and procedures (e.g., G-Tube by bolus, TPN by central line). It may also depict the need for nutrition education.</body>
      </ownedComment>
      <ownedRule xmi:id="_vcr8kIokEeSkH97cUQxLGA" name="NutritionRecommendationsTemplateId" constrainedElement="_FhAIMI3FEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vcr8kYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.130')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vctKsIokEeSkH97cUQxLGA" name="NutritionRecommendationsClassCode" constrainedElement="_FhAIMI3FEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vctKsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryAct::ACT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vcxcIIokEeSkH97cUQxLGA" name="NutritionRecommendationsMoodCodeP" constrainedElement="_FhAIMI3FEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vcxcIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vcvm8IokEeSkH97cUQxLGA" name="NutritionRecommendationsMoodCode" constrainedElement="_FhAIMI3FEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vcvm8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.moodCode.oclIsUndefined() and self.moodCode.oclIsKindOf(vocab::x_DocumentActMood) and &#xD;
let value : vocab::x_DocumentActMood = self.moodCode.oclAsType(vocab::x_DocumentActMood) in &#xD;
value = vocab::x_DocumentActMood::INT or value = vocab::x_DocumentActMood::ARQ or value = vocab::x_DocumentActMood::PRMS or value = vocab::x_DocumentActMood::PRP or value = vocab::x_DocumentActMood::RQO</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vc2UoIokEeSkH97cUQxLGA" name="NutritionRecommendationsCodeP" constrainedElement="_FhAIMI3FEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vc2UoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vc0fcIokEeSkH97cUQxLGA" name="NutritionRecommendationsCode" constrainedElement="_FhAIMI3FEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vc0fcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.96' and (value.code = '61310001' or value.code = '386373004' or value.code = '418995006' or value.code = '413315001' or value.code = '182922004' or value.code = '229912004' or value.code = '225372007' or value.code = '2897151011'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vc5X8IokEeSkH97cUQxLGA" name="NutritionRecommendationsStatusCode" constrainedElement="_FhAIMI3FEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vc5X8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'active')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vc7NIIokEeSkH97cUQxLGA" name="NutritionRecommendationsStatusCodeP" constrainedElement="_FhAIMI3FEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vc7NIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vc9CUIokEeSkH97cUQxLGA" name="NutritionRecommendationsEffectiveTime" constrainedElement="_FhAIMI3FEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vc9CUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_FhAvQI3FEeOB0eBUISUB4Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_T1dcwI37EeOB0eBUISUB4Q" name="NutritionalStatusObservation">
      <ownedComment xmi:id="_C93YEI38EeOB0eBUISUB4Q">
        <body>This template describes the overall nutritional status of the patient including findings related to nutritional status.</body>
      </ownedComment>
      <ownedRule xmi:id="_vc-QcIokEeSkH97cUQxLGA" name="NutritionalStatusObservationTemplateId" constrainedElement="_T1dcwI37EeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vc-QcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.124')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vc_ekIokEeSkH97cUQxLGA" name="NutritionalStatusObservationClassCode" constrainedElement="_T1dcwI37EeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vc_ekYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vdAssIokEeSkH97cUQxLGA" name="NutritionalStatusObservationMoodCode" constrainedElement="_T1dcwI37EeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vdAssYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vdB60IokEeSkH97cUQxLGA" name="NutritionalStatusObservationId" constrainedElement="_T1dcwI37EeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vdB60YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vdFlMIokEeSkH97cUQxLGA" name="NutritionalStatusObservationCodeP" constrainedElement="_T1dcwI37EeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vdFlMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vdDwAIokEeSkH97cUQxLGA" name="NutritionalStatusObservationCode" constrainedElement="_T1dcwI37EeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vdDwAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '87276001' and value.codeSystem = '2.16.840.1.113883.6.96')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vdIBcIokEeSkH97cUQxLGA" name="NutritionalStatusObservationStatusCode" constrainedElement="_T1dcwI37EeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vdIBcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vdKdsIokEeSkH97cUQxLGA" name="NutritionalStatusObservationStatusCodeP" constrainedElement="_T1dcwI37EeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vdKdsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vdLr0IokEeSkH97cUQxLGA" name="NutritionalStatusObservationEffectiveTime" constrainedElement="_T1dcwI37EeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vdLr0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vdOIEIokEeSkH97cUQxLGA" name="NutritionalStatusObservationValue" constrainedElement="_T1dcwI37EeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vdOIEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.96' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vdP9QIokEeSkH97cUQxLGA" name="NutritionalStatusObservationValueP" constrainedElement="_T1dcwI37EeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vdP9QYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vdRycIokEeSkH97cUQxLGA" name="NutritionalStatusObservationNutritionAssessment" constrainedElement="_T1dcwI37EeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vdRycYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::NutritionAssessment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_T1eD0I37EeOB0eBUISUB4Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_vdSZgIokEeSkH97cUQxLGA" name="getNutritionAssessments" bodyCondition="_vdSZg4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vdSZg4okEeSkH97cUQxLGA" name="body" constrainedElement="_vdSZgIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vdSZhIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::NutritionAssessment)).oclAsType(consol::NutritionAssessment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vdSZgYokEeSkH97cUQxLGA" type="_NP5zMI05EeOB0eBUISUB4Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vdSZgookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_ihaWkI55EeOB0eBUISUB4Q" name="OutcomeObservation">
      <ownedComment xmi:id="_nN3oMI6FEeOB0eBUISUB4Q">
        <body>This template represents the outcome of care resulting from the interventions used to treat the patient.&#xD;
Often thought of as an 'actual outcome', the Outcome Observation may be related to goals, progression toward goals, and the associated interventions. For example, an observation outcome of a Pulse Ox reading of 95% is related to the goal of 'Maintain Pulse Ox greater than 92', which in turn is related to the health concern of respiratory insufficiency and the problem of pneumonia. The template makes use of the Act Reference (NEW) (templateId:2.16.840.1.113883.10.20.22.4.122) to reference the interventions and goals defined elsewhere in the Care Plan CDA instance.</body>
      </ownedComment>
      <ownedRule xmi:id="_vdTAkIokEeSkH97cUQxLGA" name="OutcomeObservationTemplateId" constrainedElement="_ihaWkI55EeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vdTAkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.144')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vdU1wIokEeSkH97cUQxLGA" name="OutcomeObservationClassCode" constrainedElement="_ihaWkI55EeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vdU1wYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vdWD4IokEeSkH97cUQxLGA" name="OutcomeObservationMoodCode" constrainedElement="_ihaWkI55EeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vdWD4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vdWq8IokEeSkH97cUQxLGA" name="OutcomeObservationId" constrainedElement="_ihaWkI55EeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vdWq8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (self.id->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vdYgIIokEeSkH97cUQxLGA" name="OutcomeObservationActReference" constrainedElement="_ihaWkI55EeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vdYgIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(consol::ActReference) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::GEVL)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vdZuQIokEeSkH97cUQxLGA" name="OutcomeObservationActReference2" constrainedElement="_ihaWkI55EeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vdZuQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(consol::ActReference) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::RSON)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vrM5sIokEeSkH97cUQxLGA" name="OutcomeObservationAuthorParticipation" constrainedElement="_ihaWkI55EeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vrM5sYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->exists(author : cda::Author | not author.oclIsUndefined() and author.oclIsKindOf(consol::AuthorParticipation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vrOH0IokEeSkH97cUQxLGA" name="OutcomeObservationGoalObservation" constrainedElement="_ihaWkI55EeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vrOH0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::GoalObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::GEVL)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vrOu5YokEeSkH97cUQxLGA" name="OutcomeObservationProgressTowardGoalObservation" constrainedElement="_ihaWkI55EeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vrPV8IokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::ProgressTowardGoalObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SPRT)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vrP9BYokEeSkH97cUQxLGA" name="OutcomeObservationInterventionAct" constrainedElement="_ihaWkI55EeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vrP9BookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(consol::InterventionAct) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::RSON)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vrRLJIokEeSkH97cUQxLGA" name="OutcomeObservationExternalDocumentReference" constrainedElement="_ihaWkI55EeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vrRLJYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(consol::ExternalDocumentReference) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_ihaWkY55EeOB0eBUISUB4Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_vdZHMIokEeSkH97cUQxLGA" name="getActReferences" bodyCondition="_vdZHM4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vdZHM4okEeSkH97cUQxLGA" name="body" constrainedElement="_vdZHMIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vdZHNIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::ActReference)).oclAsType(consol::ActReference)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vdZHMYokEeSkH97cUQxLGA" type="_u_keoIkOEeOJGtGyq_dBbA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vdZHMookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vdaVUIokEeSkH97cUQxLGA" name="getActReference2s" bodyCondition="_vda8YIokEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vda8YIokEeSkH97cUQxLGA" name="body" constrainedElement="_vdaVUIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vda8YYokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::ActReference)).oclAsType(consol::ActReference)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vdaVUYokEeSkH97cUQxLGA" type="_u_keoIkOEeOJGtGyq_dBbA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vdaVUookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vrOu4IokEeSkH97cUQxLGA" name="getGoalObservations" bodyCondition="_vrOu44okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vrOu44okEeSkH97cUQxLGA" name="body" constrainedElement="_vrOu4IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vrOu5IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::GoalObservation)).oclAsType(consol::GoalObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vrOu4YokEeSkH97cUQxLGA" type="_-miMII9TEeOB0eBUISUB4Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vrOu4ookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vrP9AIokEeSkH97cUQxLGA" name="getProgressTowardGoalObservation" bodyCondition="_vrP9A4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vrP9A4okEeSkH97cUQxLGA" name="body" constrainedElement="_vrP9AIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vrP9BIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProgressTowardGoalObservation))->asSequence()->any(true).oclAsType(consol::ProgressTowardGoalObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vrP9AYokEeSkH97cUQxLGA" type="_0NewYJmVEeOLJeQez13EkQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vrP9AookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vrQkEIokEeSkH97cUQxLGA" name="getInterventionActs" bodyCondition="_vrRLIookEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vrRLIookEeSkH97cUQxLGA" name="body" constrainedElement="_vrQkEIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vrRLI4okEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::InterventionAct)).oclAsType(consol::InterventionAct)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vrRLIIokEeSkH97cUQxLGA" type="_XD5vgJA8EeOZX935IVJfOg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vrRLIYokEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vrRyMIokEeSkH97cUQxLGA" name="getExternalDocumentReferences" bodyCondition="_vrRyM4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vrRyM4okEeSkH97cUQxLGA" name="body" constrainedElement="_vrRyMIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vrRyNIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::ExternalDocumentReference)).oclAsType(consol::ExternalDocumentReference)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vrRyMYokEeSkH97cUQxLGA" type="_QcUL8JBGEeOZX935IVJfOg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vrRyMookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_UqXAAI6hEeOB0eBUISUB4Q" name="PatientPriorityPreference">
      <ownedComment xmi:id="_POG9QI6iEeOB0eBUISUB4Q">
        <body>This template represents patient preferences. Preferences are choices made by patients, independently or together with their caregivers (e.g., family) relative to options for care or treatment (including scheduling, care experience, and meeting of personal health goals) and the sharing and disclosure of health information. This template does not represent guardianship. The patient's guardian is represented in the CDA header with recordTarget/PatientRole/Patient/Guardian.</body>
      </ownedComment>
      <ownedRule xmi:id="_vda8YookEeSkH97cUQxLGA" name="PatientPriorityPreferenceTemplateId" constrainedElement="_UqXAAI6hEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vda8Y4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.142')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vdcxkIokEeSkH97cUQxLGA" name="PatientPriorityPreferenceClassCode" constrainedElement="_UqXAAI6hEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vdcxkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vdd_sIokEeSkH97cUQxLGA" name="PatientPriorityPreferenceMoodCode" constrainedElement="_UqXAAI6hEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vdd_sYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vdemwIokEeSkH97cUQxLGA" name="PatientPriorityPreferenceId" constrainedElement="_UqXAAI6hEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vdemwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (self.id->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vdjfQIokEeSkH97cUQxLGA" name="PatientPriorityPreferenceCodeP" constrainedElement="_UqXAAI6hEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vdjfQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vdgb8IokEeSkH97cUQxLGA" name="PatientPriorityPreferenceCode" constrainedElement="_UqXAAI6hEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vdgb8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = 'PAT')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vdo-0IokEeSkH97cUQxLGA" name="PatientPriorityPreferencePriorityCodeP" constrainedElement="_UqXAAI6hEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vdo-0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.priorityCode.oclIsUndefined() or self.priorityCode.isNullFlavorUndefined()) implies (not self.priorityCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vdnJoIokEeSkH97cUQxLGA" name="PatientPriorityPreferencePriorityCode" constrainedElement="_UqXAAI6hEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vdnJoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.priorityCode.oclIsUndefined() or self.priorityCode.isNullFlavorUndefined()) implies (not self.priorityCode.oclIsUndefined() and self.priorityCode.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.priorityCode.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.96' and (value.code = '255216001' or value.code = '81170007' or value.code = '70905002' or value.code = '29970001' or value.code = '32088001' or value.code = '53046009' or value.code = '86777004' or value.code = '51601003' or value.code = '58584009' or value.code = '28226006' or value.code = '40397004' or value.code = '46213005'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vdrbEIokEeSkH97cUQxLGA" name="PatientPriorityPreferenceValue" constrainedElement="_UqXAAI6hEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vdrbEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.96' and (value.code = '394849002' or value.code = '394848005' or value.code = '441808003')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vdt3UIokEeSkH97cUQxLGA" name="PatientPriorityPreferenceValueP" constrainedElement="_UqXAAI6hEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vdt3UYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wUr7kIokEeSkH97cUQxLGA" name="PatientPriorityPreferenceCDCodeSystem" constrainedElement="_UqXAAI6hEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wUr7kYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.code->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies (not codeSystem.oclIsUndefined() )))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_UqXAAY6hEeOB0eBUISUB4Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_50a2UI62EeOB0eBUISUB4Q" name="PatientReferralAct">
      <ownedComment xmi:id="_HHU20I63EeOB0eBUISUB4Q">
        <body>This template represents the type of referral (e.g., for dental care, to a specialist, for aging problems) and represents whether the referral is for full care or shared care. It may contain a reference to another act in the document instance representing the clinical reason for the referral (e.g., problem, concern, procedure).</body>
      </ownedComment>
      <ownedRule xmi:id="_vdw6oIokEeSkH97cUQxLGA" name="PatientReferralActTemplateId" constrainedElement="_50a2UI62EeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vdw6oYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.140')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vdyv0IokEeSkH97cUQxLGA" name="PatientReferralActClassCode" constrainedElement="_50a2UI62EeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vdyv0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryAct::ACT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vdz98IokEeSkH97cUQxLGA" name="PatientReferralActMoodCode" constrainedElement="_50a2UI62EeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vdz98YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentActMood::INT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vd0lAIokEeSkH97cUQxLGA" name="PatientReferralActId" constrainedElement="_50a2UI62EeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vd0lAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vd42cIokEeSkH97cUQxLGA" name="PatientReferralActCodeP" constrainedElement="_50a2UI62EeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vd42cYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vd2aMIokEeSkH97cUQxLGA" name="PatientReferralActCode" constrainedElement="_50a2UI62EeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vd3BQIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.96' and not value.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vd75wIokEeSkH97cUQxLGA" name="PatientReferralActStatusCode" constrainedElement="_50a2UI62EeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vd75wYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'active')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vd9u8IokEeSkH97cUQxLGA" name="PatientReferralActStatusCodeP" constrainedElement="_50a2UI62EeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vd9u8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vd_kIIokEeSkH97cUQxLGA" name="PatientReferralActEffectiveTime" constrainedElement="_50a2UI62EeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vd_kIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_veRQ8IokEeSkH97cUQxLGA" name="PatientReferralActActReference" constrainedElement="_50a2UI62EeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_veRQ8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(consol::ActReference) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::RSON)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_veSfEIokEeSkH97cUQxLGA" name="PatientReferralActEntryRelationship" constrainedElement="_50a2UI62EeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_veSfEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vrSZQIokEeSkH97cUQxLGA" name="PatientReferralActAuthorParticipation" constrainedElement="_50a2UI62EeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vrSZQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->exists(author : cda::Author | not author.oclIsUndefined() and author.oclIsKindOf(consol::AuthorParticipation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wUtwwIokEeSkH97cUQxLGA" name="PatientReferralActEntryRelationshipObservationClassCode" constrainedElement="_50a2UI62EeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wUuX0IokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null).observation->excluding(null)->reject(classCode=vocab::ActClassObservation::OBS)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wUuX0YokEeSkH97cUQxLGA" name="PatientReferralActEntryRelationshipObservationMoodCode" constrainedElement="_50a2UI62EeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wUuX0ookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null).observation->excluding(null)->reject(moodCode=vocab::x_ActMoodDocumentObservation::EVN)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wUvl8IokEeSkH97cUQxLGA" name="PatientReferralActEntryRelationshipObservationCodeP" constrainedElement="_50a2UI62EeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wUvl8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null).observation->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wUwNAIokEeSkH97cUQxLGA" name="PatientReferralActEntryRelationshipObservationCode" constrainedElement="_50a2UI62EeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wUwNAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null).observation->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined() and code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = code.oclAsType(datatypes::CD) in &#xD;
value.code = 'ASSERTION' and value.codeSystem = '2.16.840.1.113883.5.4'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wUw0EIokEeSkH97cUQxLGA" name="PatientReferralActEntryRelationshipObservationStatusCode" constrainedElement="_50a2UI62EeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wUw0EYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null).observation->excluding(null)->reject((statusCode.oclIsUndefined() or statusCode.isNullFlavorUndefined()) implies (not statusCode.oclIsUndefined() and statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'completed'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wUxbIIokEeSkH97cUQxLGA" name="PatientReferralActEntryRelationshipObservationStatusCodeP" constrainedElement="_50a2UI62EeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wUxbIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null).observation->excluding(null)->reject((statusCode.oclIsUndefined() or statusCode.isNullFlavorUndefined()) implies (not statusCode.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wUyCMIokEeSkH97cUQxLGA" name="PatientReferralActEntryRelationshipObservationValue" constrainedElement="_50a2UI62EeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wUyCMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null).observation->excluding(null)->reject((value->isEmpty() or value->exists(element | element.isNullFlavorUndefined())) implies (value->size() = 1 and value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.96' and (value.code = '370985002' or value.code = '170941001' or value.code = '170935008' or value.code = '268528005' or value.code = '170939002' or value.code = '268529002' or value.code = '170936009' or value.code = '170937000' or value.code = '170940000'))))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wUypQIokEeSkH97cUQxLGA" name="PatientReferralActEntryRelationshipObservationValueP" constrainedElement="_50a2UI62EeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wUypQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null).observation->excluding(null)->reject((value->isEmpty() or value->exists(element | element.isNullFlavorUndefined())) implies (value->size() = 1 and value->forAll(element | element.oclIsTypeOf(datatypes::CD))))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wUypQookEeSkH97cUQxLGA" name="PatientReferralActEntryRelationshipTypeCode" constrainedElement="_50a2UI62EeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wUypQ4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->reject(typeCode=vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wUzQUIokEeSkH97cUQxLGA" name="PatientReferralActEntryRelationshipObservation" constrainedElement="_50a2UI62EeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wUzQUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->reject(observation->one(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(cda::Observation)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_50a2UY62EeOB0eBUISUB4Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_veR4AIokEeSkH97cUQxLGA" name="getActReferences" bodyCondition="_veR4A4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_veR4A4okEeSkH97cUQxLGA" name="body" constrainedElement="_veR4AIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_veR4BIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::ActReference)).oclAsType(consol::ActReference)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_veR4AYokEeSkH97cUQxLGA" type="_u_keoIkOEeOJGtGyq_dBbA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_veR4AookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_O2I3AI9DEeOB0eBUISUB4Q" name="PlannedCoverage">
      <ownedComment xmi:id="_olcGwI9DEeOB0eBUISUB4Q">
        <body>This template represents the amount of insurance coverage that is projected to cover an act or procedure.</body>
      </ownedComment>
      <ownedRule xmi:id="_veTtMIokEeSkH97cUQxLGA" name="PlannedCoverageTemplateId" constrainedElement="_O2I3AI9DEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_veTtMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.129')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_veViYIokEeSkH97cUQxLGA" name="PlannedCoverageClassCode" constrainedElement="_O2I3AI9DEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_veViYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryAct::ACT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_veWJcIokEeSkH97cUQxLGA" name="PlannedCoverageMoodCode" constrainedElement="_O2I3AI9DEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_veWJcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentActMood::INT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_veXXkIokEeSkH97cUQxLGA" name="PlannedCoverageId" constrainedElement="_O2I3AI9DEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_veXXkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vebB8IokEeSkH97cUQxLGA" name="PlannedCoverageCodeP" constrainedElement="_O2I3AI9DEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vebB8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_veZMwIokEeSkH97cUQxLGA" name="PlannedCoverageCode" constrainedElement="_O2I3AI9DEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_veZMwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '48768-6' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vedeMIokEeSkH97cUQxLGA" name="PlannedCoverageStatusCode" constrainedElement="_O2I3AI9DEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_veeFQIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'active')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vef6cIokEeSkH97cUQxLGA" name="PlannedCoverageStatusCodeP" constrainedElement="_O2I3AI9DEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vef6cYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_veuj8IokEeSkH97cUQxLGA" name="PlannedCoverageEntryRelationship" constrainedElement="_O2I3AI9DEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_veuj8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wU0ecIokEeSkH97cUQxLGA" name="PlannedCoverageEntryRelationshipActClassCode" constrainedElement="_O2I3AI9DEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wU0ecYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null).act->excluding(null)->reject(classCode=vocab::x_ActClassDocumentEntryAct::ACT)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wU1FgIokEeSkH97cUQxLGA" name="PlannedCoverageEntryRelationshipActMoodCode" constrainedElement="_O2I3AI9DEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wU1FgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null).act->excluding(null)->reject(moodCode=vocab::x_DocumentActMood::INT)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wU1FgookEeSkH97cUQxLGA" name="PlannedCoverageEntryRelationshipActId" constrainedElement="_O2I3AI9DEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wU1Fg4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null).act->excluding(null)->reject((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wU1skIokEeSkH97cUQxLGA" name="PlannedCoverageEntryRelationshipActCodeP" constrainedElement="_O2I3AI9DEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wU1skYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null).act->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wU2ToIokEeSkH97cUQxLGA" name="PlannedCoverageEntryRelationshipActCode" constrainedElement="_O2I3AI9DEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wU2ToYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null).act->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined() and code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = code.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.3.221.5' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wU2ToookEeSkH97cUQxLGA" name="PlannedCoverageEntryRelationshipActStatusCode" constrainedElement="_O2I3AI9DEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wU2To4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null).act->excluding(null)->reject((statusCode.oclIsUndefined() or statusCode.isNullFlavorUndefined()) implies (not statusCode.oclIsUndefined() and statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'active'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wU26sIokEeSkH97cUQxLGA" name="PlannedCoverageEntryRelationshipActStatusCodeP" constrainedElement="_O2I3AI9DEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wU26sYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null).act->excluding(null)->reject((statusCode.oclIsUndefined() or statusCode.isNullFlavorUndefined()) implies (not statusCode.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wU26sookEeSkH97cUQxLGA" name="PlannedCoverageEntryRelationshipTypeCode" constrainedElement="_O2I3AI9DEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wU26s4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->reject(typeCode=vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wU3hwIokEeSkH97cUQxLGA" name="PlannedCoverageEntryRelationshipAct" constrainedElement="_O2I3AI9DEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wU3hwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->reject(act->one(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(cda::Act)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_O2JeEI9DEeOB0eBUISUB4Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_-miMII9TEeOB0eBUISUB4Q" name="GoalObservation">
      <ownedComment xmi:id="_iSyNMI9UEeOB0eBUISUB4Q">
        <body>This template represents a patient care goal.  A Goal Observation template may have related components that are acts, encounters, observations, procedures, substance administrations, or supplies. &#xD;
A goal may be a patient or provider goal.  If the author is set to the recordTarget (patient), this is a patient goal.  If the author is set to a provider, this is a provider goal. If both patient and provider are set as authors, this is a negotiated goal.&#xD;
A goal usually has a related health concern and/or risk.&#xD;
A goal may have components consisting of other goals (milestones), these milestones are related to the overall goal through entryRelationships.</body>
      </ownedComment>
      <ownedRule xmi:id="_vewZIIokEeSkH97cUQxLGA" name="PlanOfCareActivityObservationTemplateId" constrainedElement="_-miMII9TEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vewZIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.121')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vexnQIokEeSkH97cUQxLGA" name="GoalObservationClassCode" constrainedElement="_-miMII9TEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vexnQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vezccIokEeSkH97cUQxLGA" name="GoalObservationMoodCode" constrainedElement="_-miMII9TEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vezccYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::GOL</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ve0qkIokEeSkH97cUQxLGA" name="GoalObservationCode" constrainedElement="_-miMII9TEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ve0qkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ve2fwIokEeSkH97cUQxLGA" name="GoalObservationPatientPriorityPreference" constrainedElement="_-miMII9TEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ve2fwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::PatientPriorityPreference) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::RSON)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ve3t4IokEeSkH97cUQxLGA" name="GoalObservation" constrainedElement="_-miMII9TEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ve3t4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::GoalObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ve48AIokEeSkH97cUQxLGA" name="GoalObservationActReference" constrainedElement="_-miMII9TEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ve48AYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(consol::ActReference) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vq7z8IokEeSkH97cUQxLGA" name="GoalObservationAuthorParticipation" constrainedElement="_-miMII9TEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vq7z8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->exists(author : cda::Author | not author.oclIsUndefined() and author.oclIsKindOf(consol::AuthorParticipation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vq8bAIokEeSkH97cUQxLGA" name="GoalObservationHealthConcernAct" constrainedElement="_-miMII9TEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vq8bAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(consol::HealthConcernAct) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vq9pJIokEeSkH97cUQxLGA" name="GoalObservationProviderPriorityPreference" constrainedElement="_-miMII9TEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vq9pJYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::ProviderPriorityPreference) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::RSON)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vq-3Q4okEeSkH97cUQxLGA" name="GoalObservationExternalDocumentReference" constrainedElement="_-miMII9TEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vq-3RIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(consol::ExternalDocumentReference) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wGP28IokEeSkH97cUQxLGA" name="GoalObservationPlannedEncounter2" constrainedElement="_-miMII9TEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wGP28YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.encounter.oclIsUndefined() and entryRelationship.encounter.oclIsKindOf(consol::PlannedEncounter2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wGRFEIokEeSkH97cUQxLGA" name="GoalObservationPlannedObservation2" constrainedElement="_-miMII9TEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wGRFEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::PlannedObservation2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wGSTMIokEeSkH97cUQxLGA" name="GoalObservationPlannedProcedure2" constrainedElement="_-miMII9TEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wGSTMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.procedure.oclIsUndefined() and entryRelationship.procedure.oclIsKindOf(consol::PlannedProcedure2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wGThUIokEeSkH97cUQxLGA" name="GoalObservationPlannedMedicationActivity2" constrainedElement="_-miMII9TEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wGThUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.substanceAdministration.oclIsUndefined() and entryRelationship.substanceAdministration.oclIsKindOf(consol::PlannedMedicationActivity2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wGUvcIokEeSkH97cUQxLGA" name="GoalObservationPlannedSupply2" constrainedElement="_-miMII9TEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wGUvcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.supply.oclIsUndefined() and entryRelationship.supply.oclIsKindOf(consol::PlannedSupply2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wGVWhYokEeSkH97cUQxLGA" name="GoalObservationPlannedAct2" constrainedElement="_-miMII9TEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wGVWhookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(consol::PlannedAct2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_-miMIY9TEeOB0eBUISUB4Q" general="_jKZssOdvEeOqBOMhgDlycQ"/>
      <ownedOperation xmi:id="_ve3G0IokEeSkH97cUQxLGA" name="getConsolPatientPriorityPreference" bodyCondition="_ve3G04okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_ve3G04okEeSkH97cUQxLGA" name="body" constrainedElement="_ve3G0IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ve3G1IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::PatientPriorityPreference))->asSequence()->any(true).oclAsType(consol::PatientPriorityPreference)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ve3G0YokEeSkH97cUQxLGA" type="_UqXAAI6hEeOB0eBUISUB4Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ve3G0ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ve4U8IokEeSkH97cUQxLGA" name="getGoalObservations" bodyCondition="_ve4U84okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_ve4U84okEeSkH97cUQxLGA" name="body" constrainedElement="_ve4U8IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ve4U9IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::GoalObservation)).oclAsType(consol::GoalObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ve4U8YokEeSkH97cUQxLGA" type="_-miMII9TEeOB0eBUISUB4Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ve4U8ookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ve5jEIokEeSkH97cUQxLGA" name="getActReferences" bodyCondition="_ve5jE4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_ve5jE4okEeSkH97cUQxLGA" name="body" constrainedElement="_ve5jEIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ve5jFIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::ActReference)).oclAsType(consol::ActReference)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ve5jEYokEeSkH97cUQxLGA" type="_u_keoIkOEeOJGtGyq_dBbA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ve5jEookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vq9CEIokEeSkH97cUQxLGA" name="getHealthConcernActs" bodyCondition="_vq9pIookEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vq9pIookEeSkH97cUQxLGA" name="body" constrainedElement="_vq9CEIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vq9pI4okEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::HealthConcernAct)).oclAsType(consol::HealthConcernAct)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vq9pIIokEeSkH97cUQxLGA" type="_An8P8I9kEeOB0eBUISUB4Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vq9pIYokEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vq-QMIokEeSkH97cUQxLGA" name="getConsolProviderPriorityPreferences" bodyCondition="_vq-3QYokEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vq-3QYokEeSkH97cUQxLGA" name="body" constrainedElement="_vq-QMIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vq-3QookEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProviderPriorityPreference)).oclAsType(consol::ProviderPriorityPreference)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vq-QMYokEeSkH97cUQxLGA" type="_ncafYJmaEeOLJeQez13EkQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vq-3QIokEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vq_eUIokEeSkH97cUQxLGA" name="getExternalDocumentReferences" bodyCondition="_vrAFYIokEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vrAFYIokEeSkH97cUQxLGA" name="body" constrainedElement="_vq_eUIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vrAFYYokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::ExternalDocumentReference)).oclAsType(consol::ExternalDocumentReference)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vq_eUYokEeSkH97cUQxLGA" type="_QcUL8JBGEeOZX935IVJfOg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vq_eUookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wGQeAIokEeSkH97cUQxLGA" name="getPlannedEncounter2s" bodyCondition="_wGQeA4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wGQeA4okEeSkH97cUQxLGA" name="body" constrainedElement="_wGQeAIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wGQeBIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getEncounters()->select(encounter : cda::Encounter | not encounter.oclIsUndefined() and encounter.oclIsKindOf(consol::PlannedEncounter2)).oclAsType(consol::PlannedEncounter2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wGQeAYokEeSkH97cUQxLGA" type="_bDPFMOdXEeOqBOMhgDlycQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wGQeAookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wGRsIIokEeSkH97cUQxLGA" name="getPlannedObservation2s" bodyCondition="_wGRsI4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wGRsI4okEeSkH97cUQxLGA" name="body" constrainedElement="_wGRsIIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wGRsJIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::PlannedObservation2)).oclAsType(consol::PlannedObservation2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wGRsIYokEeSkH97cUQxLGA" type="_jKZssOdvEeOqBOMhgDlycQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wGRsIookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wGS6QIokEeSkH97cUQxLGA" name="getPlannedProcedure2s" bodyCondition="_wGS6Q4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wGS6Q4okEeSkH97cUQxLGA" name="body" constrainedElement="_wGS6QIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wGS6RIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getProcedures()->select(procedure : cda::Procedure | not procedure.oclIsUndefined() and procedure.oclIsKindOf(consol::PlannedProcedure2)).oclAsType(consol::PlannedProcedure2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wGS6QYokEeSkH97cUQxLGA" type="_cs0YsOeEEeOqBOMhgDlycQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wGS6QookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wGUIYIokEeSkH97cUQxLGA" name="getPlannedMedicationActivity2s" bodyCondition="_wGUIY4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wGUIY4okEeSkH97cUQxLGA" name="body" constrainedElement="_wGUIYIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wGUIZIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(consol::PlannedMedicationActivity2)).oclAsType(consol::PlannedMedicationActivity2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wGUIYYokEeSkH97cUQxLGA" type="_Yj45YOgREeO-iJTuAv7BKQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wGUIYookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wGVWgIokEeSkH97cUQxLGA" name="getPlannedSupply2s" bodyCondition="_wGVWg4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wGVWg4okEeSkH97cUQxLGA" name="body" constrainedElement="_wGVWgIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wGVWhIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getSupplies()->select(supply : cda::Supply | not supply.oclIsUndefined() and supply.oclIsKindOf(consol::PlannedSupply2)).oclAsType(consol::PlannedSupply2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wGVWgYokEeSkH97cUQxLGA" type="_vEd1cOg0EeO-iJTuAv7BKQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wGVWgookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wGWkoIokEeSkH97cUQxLGA" name="getPlannedAct2s" bodyCondition="_wGWko4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wGWko4okEeSkH97cUQxLGA" name="body" constrainedElement="_wGWkoIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wGWkpIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::PlannedAct2)).oclAsType(consol::PlannedAct2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wGWkoYokEeSkH97cUQxLGA" type="_lLnRMOaYEeOmzetP5oaH3A" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wGWkoookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_An8P8I9kEeOB0eBUISUB4Q" name="HealthConcernAct">
      <ownedComment xmi:id="_f2uAII9kEeOB0eBUISUB4Q">
        <body>This template represents a health concern. &#xD;
It is a wrapper for health concerns derived from a variety of sources within an EHR (such as Problem List, Family History, Social History, Social Worker Note, etc.). &#xD;
A Health Concern Act can represent a health concern that a patient currently has. Health concerns require intervention(s) to increase the likelihood of achieving the goals of care for the patient.&#xD;
A Health Concern Act can also represent a health concern that is a risk. A risk is a clinical or socioeconomic condition that the patient does not currently have, but the probability of developing that condition rises to the level of concern such that an intervention and/or monitoring is needed.&#xD;
The code on the Health Concern Act is set to differentiate between the two types of health concerns.</body>
      </ownedComment>
      <ownedRule xmi:id="_ve5jFYokEeSkH97cUQxLGA" name="HealthConcernActTemplateId" constrainedElement="_An8P8I9kEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ve6KIIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.132')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ve7YQIokEeSkH97cUQxLGA" name="HealthConcernActClassCode" constrainedElement="_An8P8I9kEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ve7YQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryAct::ACT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ve8mYIokEeSkH97cUQxLGA" name="HealthConcernActMoodCode" constrainedElement="_An8P8I9kEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ve8mYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ve90gIokEeSkH97cUQxLGA" name="HealthConcernActId" constrainedElement="_An8P8I9kEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ve90gYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (self.id->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vfBe4IokEeSkH97cUQxLGA" name="HealthConcernActCodeP" constrainedElement="_An8P8I9kEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vfBe4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ve_psIokEeSkH97cUQxLGA" name="HealthConcernActCode" constrainedElement="_An8P8I9kEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ve_psYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.5.6' and (value.code = 'CONC' or value.code = '281694009'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vfDUEIokEeSkH97cUQxLGA" name="HealthConcernActStatusCode" constrainedElement="_An8P8I9kEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vfDUEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vfEiMIokEeSkH97cUQxLGA" name="HealthConcernActEffectiveTime" constrainedElement="_An8P8I9kEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vfEiMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vfHlgIokEeSkH97cUQxLGA" name="HealthConcernActActReference" constrainedElement="_An8P8I9kEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vfHlgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(consol::ActReference) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vfIzoIokEeSkH97cUQxLGA" name="HealthConcernActActReferenceExtra" constrainedElement="_An8P8I9kEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vfIzoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(consol::ActReference) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vfKBwIokEeSkH97cUQxLGA" name="HealthConcernActAssessmentScaleObservation" constrainedElement="_An8P8I9kEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vfKBwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::AssessmentScaleObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vfLP4IokEeSkH97cUQxLGA" name="HealthConcernActCognitiveAbilitiesObservation" constrainedElement="_An8P8I9kEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vfLP4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::CognitiveAbilitiesObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vfL29YokEeSkH97cUQxLGA" name="HealthConcernActFamilyHistoryOrganizer" constrainedElement="_An8P8I9kEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vfL29ookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.organizer.oclIsUndefined() and entryRelationship.organizer.oclIsKindOf(consol::FamilyHistoryOrganizer) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vfNFE4okEeSkH97cUQxLGA" name="HealthConcernActMentalStatusObservation" constrainedElement="_An8P8I9kEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vfNFFIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::MentalStatusObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vfOTMYokEeSkH97cUQxLGA" name="HealthConcernActNutritionAssessment" constrainedElement="_An8P8I9kEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vfOTMookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::NutritionAssessment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vfPhUYokEeSkH97cUQxLGA" name="HealthConcernActNutritionAssessmentExtra" constrainedElement="_An8P8I9kEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vfPhUookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::NutritionAssessment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vfQvcIokEeSkH97cUQxLGA" name="HealthConcernActPregnancyObservation" constrainedElement="_An8P8I9kEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vfQvcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::PregnancyObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vfR9kIokEeSkH97cUQxLGA" name="HealthConcernActCaregiverCharacteristics" constrainedElement="_An8P8I9kEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vfR9kYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::CaregiverCharacteristics) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vfTLsIokEeSkH97cUQxLGA" name="HealthConcernActCulturalAndReligiousObservation" constrainedElement="_An8P8I9kEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vfTLsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::CulturalAndReligiousObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vfUZ0IokEeSkH97cUQxLGA" name="HealthConcernActCharacteristicsOfHomeEnvironment" constrainedElement="_An8P8I9kEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vfUZ0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::CharacteristicsOfHomeEnvironment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vfVn84okEeSkH97cUQxLGA" name="HealthConcernActNutritionalStatusObservation" constrainedElement="_An8P8I9kEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vfVn9IokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::NutritionalStatusObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vfW2EookEeSkH97cUQxLGA" name="HealthConcernActPatientPriorityPreference" constrainedElement="_An8P8I9kEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vfW2E4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::PatientPriorityPreference) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vfYENYokEeSkH97cUQxLGA" name="HealthConcernActActReferenceExtra3" constrainedElement="_An8P8I9kEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vfYENookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(consol::ActReference) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vrBTgIokEeSkH97cUQxLGA" name="HealthConcernActAuthorParticipation" constrainedElement="_An8P8I9kEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vrBTgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->exists(author : cda::Author | not author.oclIsUndefined() and author.oclIsKindOf(consol::AuthorParticipation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vrChoIokEeSkH97cUQxLGA" name="HealthConcernActSelfCareActivities" constrainedElement="_An8P8I9kEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vrChoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::SelfCareActivities) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vrDvwIokEeSkH97cUQxLGA" name="HealthConcernActSensoryAndSpeechStatus" constrainedElement="_An8P8I9kEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vrDvwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::SensoryAndSpeechStatus) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vrE94IokEeSkH97cUQxLGA" name="HealthConcernActWoundObservation" constrainedElement="_An8P8I9kEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vrE94YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::WoundObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vrGMAIokEeSkH97cUQxLGA" name="HealthConcernActProviderPriorityPreference" constrainedElement="_An8P8I9kEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vrGMAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::ProviderPriorityPreference) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vrGzFYokEeSkH97cUQxLGA" name="HealthConcernActExternalDocumentReference" constrainedElement="_An8P8I9kEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vrGzFookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(consol::ExternalDocumentReference) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wGWkpYokEeSkH97cUQxLGA" name="HealthConcernActProblemObservation2" constrainedElement="_An8P8I9kEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wGWkpookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::ProblemObservation2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wGXywYokEeSkH97cUQxLGA" name="HealthConcernActAllergyObservation2" constrainedElement="_An8P8I9kEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wGXywookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::AllergyObservation2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wGZA4IokEeSkH97cUQxLGA" name="HealthConcernActCognitiveStatusObservation2" constrainedElement="_An8P8I9kEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wGZA4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::CognitiveStatusObservation2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wGaPAIokEeSkH97cUQxLGA" name="HealthConcernActCognitiveStatusObservation2Extra" constrainedElement="_An8P8I9kEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wGaPAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::CognitiveStatusObservation2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wGbdIIokEeSkH97cUQxLGA" name="HealthConcernActCurrentSmokingStatus2" constrainedElement="_An8P8I9kEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wGbdIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::CurrentSmokingStatus2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wGcrQ4okEeSkH97cUQxLGA" name="HealthConcernActEncounterDiagnosis2" constrainedElement="_An8P8I9kEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wGcrRIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(consol::EncounterDiagnosis2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wGd5YIokEeSkH97cUQxLGA" name="HealthConcernActFunctionalStatusObservation2" constrainedElement="_An8P8I9kEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wGd5YYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::FunctionalStatusObservation2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wGfHg4okEeSkH97cUQxLGA" name="HealthConcernActHospitalAdmissionDiagnosis2" constrainedElement="_An8P8I9kEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wGfHhIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(consol::HospitalAdmissionDiagnosis2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wGgVpIokEeSkH97cUQxLGA" name="HealthConcernActPostprocedureDiagnosis2" constrainedElement="_An8P8I9kEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wGgVpYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(consol::PostprocedureDiagnosis2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wGhjxYokEeSkH97cUQxLGA" name="HealthConcernActPreoperativeDiagnosis2" constrainedElement="_An8P8I9kEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wGhjxookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(consol::PreoperativeDiagnosis2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wGjY8IokEeSkH97cUQxLGA" name="HealthConcernActReactionObservation2" constrainedElement="_An8P8I9kEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wGjY8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::ReactionObservation2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wGknEIokEeSkH97cUQxLGA" name="HealthConcernActResultObservation2" constrainedElement="_An8P8I9kEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wGknEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::ResultObservation2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wGl1MIokEeSkH97cUQxLGA" name="HealthConcernActSocialHistoryObservation2" constrainedElement="_An8P8I9kEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wGl1MYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::SocialHistoryObservation2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wGnDUIokEeSkH97cUQxLGA" name="HealthConcernActSubstanceOrDeviceAllergyObservation2" constrainedElement="_An8P8I9kEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wGnDUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::SubstanceOrDeviceAllergyObservation2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wGoRcIokEeSkH97cUQxLGA" name="HealthConcernActTobaccoUse2" constrainedElement="_An8P8I9kEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wGoRcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::TobaccoUse2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wGpfkIokEeSkH97cUQxLGA" name="HealthConcernActVitalSignObservation2" constrainedElement="_An8P8I9kEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wGpfkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::VitalSignObservation2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wGqtsIokEeSkH97cUQxLGA" name="HealthConcernActProblemObservation2Support" constrainedElement="_An8P8I9kEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wGqtsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::ProblemObservation2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SPRT)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wGr70IokEeSkH97cUQxLGA" name="HealthConcernActResultOrganizer2" constrainedElement="_An8P8I9kEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wGr70YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.organizer.oclIsUndefined() and entryRelationship.organizer.oclIsKindOf(consol::ResultOrganizer2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wGtJ8IokEeSkH97cUQxLGA" name="HealthConcernActProblemConcernAct2" constrainedElement="_An8P8I9kEeOB0eBUISUB4Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wGtJ8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(consol::ProblemConcernAct2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_An8P8Y9kEeOB0eBUISUB4Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_vfIMkIokEeSkH97cUQxLGA" name="getActReferences" bodyCondition="_vfIMk4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vfIMk4okEeSkH97cUQxLGA" name="body" constrainedElement="_vfIMkIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vfIMlIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::ActReference)).oclAsType(consol::ActReference)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vfIMkYokEeSkH97cUQxLGA" type="_u_keoIkOEeOJGtGyq_dBbA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vfIMkookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vfJasIokEeSkH97cUQxLGA" name="getActReferenceExtras" bodyCondition="_vfJas4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vfJas4okEeSkH97cUQxLGA" name="body" constrainedElement="_vfJasIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vfJatIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::ActReference)).oclAsType(consol::ActReference)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vfJasYokEeSkH97cUQxLGA" type="_u_keoIkOEeOJGtGyq_dBbA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vfJasookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vfKo0IokEeSkH97cUQxLGA" name="getAssessmentScaleObservations" bodyCondition="_vfKo04okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vfKo04okEeSkH97cUQxLGA" name="body" constrainedElement="_vfKo0IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vfKo1IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::AssessmentScaleObservation)).oclAsType(consol::AssessmentScaleObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vfKo0YokEeSkH97cUQxLGA" type="_Zi33YOYxEeGINOJ_SD9_dA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vfKo0ookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vfL28IokEeSkH97cUQxLGA" name="getCognitiveAbilitiesObservations" bodyCondition="_vfL284okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vfL284okEeSkH97cUQxLGA" name="body" constrainedElement="_vfL28IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vfL29IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::CognitiveAbilitiesObservation)).oclAsType(consol::CognitiveAbilitiesObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vfL28YokEeSkH97cUQxLGA" type="_Y_oGkIoAEeOoMZgUoTghIg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vfL28ookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vfMeAIokEeSkH97cUQxLGA" name="getFamilyHistoryOrganizers" bodyCondition="_vfNFEYokEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vfNFEYokEeSkH97cUQxLGA" name="body" constrainedElement="_vfMeAIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vfNFEookEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getOrganizers()->select(organizer : cda::Organizer | not organizer.oclIsUndefined() and organizer.oclIsKindOf(consol::FamilyHistoryOrganizer)).oclAsType(consol::FamilyHistoryOrganizer)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vfMeAYokEeSkH97cUQxLGA" type="_2IbIoBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vfNFEIokEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vfNsIIokEeSkH97cUQxLGA" name="getMentalStatusObservations" bodyCondition="_vfNsI4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vfNsI4okEeSkH97cUQxLGA" name="body" constrainedElement="_vfNsIIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vfOTMIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::MentalStatusObservation)).oclAsType(consol::MentalStatusObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vfNsIYokEeSkH97cUQxLGA" type="_-lJmEI0kEeOB0eBUISUB4Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vfNsIookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vfO6QIokEeSkH97cUQxLGA" name="getNutritionAssessments" bodyCondition="_vfO6Q4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vfO6Q4okEeSkH97cUQxLGA" name="body" constrainedElement="_vfO6QIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vfPhUIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::NutritionAssessment)).oclAsType(consol::NutritionAssessment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vfO6QYokEeSkH97cUQxLGA" type="_NP5zMI05EeOB0eBUISUB4Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vfO6QookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vfQIYIokEeSkH97cUQxLGA" name="getNutritionAssessmentExtras" bodyCondition="_vfQIY4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vfQIY4okEeSkH97cUQxLGA" name="body" constrainedElement="_vfQIYIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vfQIZIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::NutritionAssessment)).oclAsType(consol::NutritionAssessment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vfQIYYokEeSkH97cUQxLGA" type="_NP5zMI05EeOB0eBUISUB4Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vfQIYookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vfRWgIokEeSkH97cUQxLGA" name="getPregnancyObservations" bodyCondition="_vfRWg4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vfRWg4okEeSkH97cUQxLGA" name="body" constrainedElement="_vfRWgIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vfRWhIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::PregnancyObservation)).oclAsType(consol::PregnancyObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vfRWgYokEeSkH97cUQxLGA" type="_2N6soBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vfRWgookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vfSkoIokEeSkH97cUQxLGA" name="getCaregiverCharacteristicss" bodyCondition="_vfSko4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vfSko4okEeSkH97cUQxLGA" name="body" constrainedElement="_vfSkoIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vfSkpIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::CaregiverCharacteristics)).oclAsType(consol::CaregiverCharacteristics)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vfSkoYokEeSkH97cUQxLGA" type="__pNCUOY-EeGINOJ_SD9_dA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vfSkoookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vfTywIokEeSkH97cUQxLGA" name="getCulturalAndReligiousObservations" bodyCondition="_vfTyw4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vfTyw4okEeSkH97cUQxLGA" name="body" constrainedElement="_vfTywIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vfTyxIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::CulturalAndReligiousObservation)).oclAsType(consol::CulturalAndReligiousObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vfTywYokEeSkH97cUQxLGA" type="_H2EzIIqZEeOoMZgUoTghIg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vfTywookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vfVA4IokEeSkH97cUQxLGA" name="getCharacteristicsOfHomeEnvironments" bodyCondition="_vfVn8YokEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vfVn8YokEeSkH97cUQxLGA" name="body" constrainedElement="_vfVA4IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vfVn8ookEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::CharacteristicsOfHomeEnvironment)).oclAsType(consol::CharacteristicsOfHomeEnvironment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vfVA4YokEeSkH97cUQxLGA" type="_O-O-IInUEeOJGtGyq_dBbA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vfVn8IokEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vfWPAIokEeSkH97cUQxLGA" name="getNutritionalStatusObservations" bodyCondition="_vfW2EIokEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vfW2EIokEeSkH97cUQxLGA" name="body" constrainedElement="_vfWPAIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vfW2EYokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::NutritionalStatusObservation)).oclAsType(consol::NutritionalStatusObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vfWPAYokEeSkH97cUQxLGA" type="_T1dcwI37EeOB0eBUISUB4Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vfWPAookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vfYEMIokEeSkH97cUQxLGA" name="getPatientPriorityPreferences" bodyCondition="_vfYEM4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vfYEM4okEeSkH97cUQxLGA" name="body" constrainedElement="_vfYEMIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vfYENIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::PatientPriorityPreference)).oclAsType(consol::PatientPriorityPreference)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vfYEMYokEeSkH97cUQxLGA" type="_UqXAAI6hEeOB0eBUISUB4Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vfYEMookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vfYrQIokEeSkH97cUQxLGA" name="getActReferenceExtra3s" bodyCondition="_vfZSUYokEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vfZSUYokEeSkH97cUQxLGA" name="body" constrainedElement="_vfYrQIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vfZSUookEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::ActReference)).oclAsType(consol::ActReference)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vfYrQYokEeSkH97cUQxLGA" type="_u_keoIkOEeOJGtGyq_dBbA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vfZSUIokEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vrDIsIokEeSkH97cUQxLGA" name="getSelfCareActivitiess" bodyCondition="_vrDIs4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vrDIs4okEeSkH97cUQxLGA" name="body" constrainedElement="_vrDIsIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vrDItIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::SelfCareActivities)).oclAsType(consol::SelfCareActivities)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vrDIsYokEeSkH97cUQxLGA" type="_nC0xUJmzEeOLJeQez13EkQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vrDIsookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vrEW0IokEeSkH97cUQxLGA" name="getSensoryAndSpeechStatuss" bodyCondition="_vrEW04okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vrEW04okEeSkH97cUQxLGA" name="body" constrainedElement="_vrEW0IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vrEW1IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::SensoryAndSpeechStatus)).oclAsType(consol::SensoryAndSpeechStatus)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vrEW0YokEeSkH97cUQxLGA" type="_kyeGAJm4EeOLJeQez13EkQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vrEW0ookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vrFk8IokEeSkH97cUQxLGA" name="getWoundObservations" bodyCondition="_vrFk84okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vrFk84okEeSkH97cUQxLGA" name="body" constrainedElement="_vrFk8IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vrFk9IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::WoundObservation)).oclAsType(consol::WoundObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vrFk8YokEeSkH97cUQxLGA" type="_09uFMJp_EeOK6dzbL4VoTA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vrFk8ookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vrGzEIokEeSkH97cUQxLGA" name="getProviderPriorityPreferences" bodyCondition="_vrGzE4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vrGzE4okEeSkH97cUQxLGA" name="body" constrainedElement="_vrGzEIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vrGzFIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProviderPriorityPreference)).oclAsType(consol::ProviderPriorityPreference)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vrGzEYokEeSkH97cUQxLGA" type="_ncafYJmaEeOLJeQez13EkQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vrGzEookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vrIBMIokEeSkH97cUQxLGA" name="getExternalDocumentReferences" bodyCondition="_vrIBM4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vrIBM4okEeSkH97cUQxLGA" name="body" constrainedElement="_vrIBMIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vrIBNIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::ExternalDocumentReference)).oclAsType(consol::ExternalDocumentReference)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vrIBMYokEeSkH97cUQxLGA" type="_QcUL8JBGEeOZX935IVJfOg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vrIBMookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wGXLsIokEeSkH97cUQxLGA" name="getProblemObservation2s" bodyCondition="_wGXLs4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wGXLs4okEeSkH97cUQxLGA" name="body" constrainedElement="_wGXLsIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wGXywIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProblemObservation2)).oclAsType(consol::ProblemObservation2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wGXLsYokEeSkH97cUQxLGA" type="_prDAkPDCEeOKPKE9au0oug" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wGXLsookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wGYZ0IokEeSkH97cUQxLGA" name="getAllergyObservation2s" bodyCondition="_wGYZ04okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wGYZ04okEeSkH97cUQxLGA" name="body" constrainedElement="_wGYZ0IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wGYZ1IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::AllergyObservation2)).oclAsType(consol::AllergyObservation2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wGYZ0YokEeSkH97cUQxLGA" type="_uVJogLj5EeODDJAC5t5vpw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wGYZ0ookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wGZn8IokEeSkH97cUQxLGA" name="getCognitiveStatusObservation2s" bodyCondition="_wGZn84okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wGZn84okEeSkH97cUQxLGA" name="body" constrainedElement="_wGZn8IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wGZn9IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::CognitiveStatusObservation2)).oclAsType(consol::CognitiveStatusObservation2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wGZn8YokEeSkH97cUQxLGA" type="_ze150PitEeOXlK95I8tUew" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wGZn8ookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wGa2EIokEeSkH97cUQxLGA" name="getCognitiveStatusObservation2Extras" bodyCondition="_wGa2E4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wGa2E4okEeSkH97cUQxLGA" name="body" constrainedElement="_wGa2EIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wGa2FIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::CognitiveStatusObservation2)).oclAsType(consol::CognitiveStatusObservation2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wGa2EYokEeSkH97cUQxLGA" type="_ze150PitEeOXlK95I8tUew" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wGa2EookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wGcEMIokEeSkH97cUQxLGA" name="getCurrentSmokingStatus2s" bodyCondition="_wGcrQYokEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wGcrQYokEeSkH97cUQxLGA" name="body" constrainedElement="_wGcEMIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wGcrQookEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::CurrentSmokingStatus2)).oclAsType(consol::CurrentSmokingStatus2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wGcEMYokEeSkH97cUQxLGA" type="_Hl3ScLk0EeODDJAC5t5vpw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wGcrQIokEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wGdSUIokEeSkH97cUQxLGA" name="getEncounterDiagnosis2s" bodyCondition="_wGdSU4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wGdSU4okEeSkH97cUQxLGA" name="body" constrainedElement="_wGdSUIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wGdSVIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::EncounterDiagnosis2)).oclAsType(consol::EncounterDiagnosis2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wGdSUYokEeSkH97cUQxLGA" type="_jH6CcMzNEeO93sHu8pHB2g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wGdSUookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wGegcIokEeSkH97cUQxLGA" name="getFunctionalStatusObservation2s" bodyCondition="_wGfHgYokEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wGfHgYokEeSkH97cUQxLGA" name="body" constrainedElement="_wGegcIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wGfHgookEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::FunctionalStatusObservation2)).oclAsType(consol::FunctionalStatusObservation2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wGegcYokEeSkH97cUQxLGA" type="_3WqogMzSEeO93sHu8pHB2g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wGfHgIokEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wGfukIokEeSkH97cUQxLGA" name="getHospitalAdmissionDiagnosis2s" bodyCondition="_wGgVoookEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wGgVoookEeSkH97cUQxLGA" name="body" constrainedElement="_wGfukIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wGgVo4okEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::HospitalAdmissionDiagnosis2)).oclAsType(consol::HospitalAdmissionDiagnosis2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wGgVoIokEeSkH97cUQxLGA" type="_GM6icOEIEeOmBMTtnrPqww" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wGgVoYokEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wGhjwIokEeSkH97cUQxLGA" name="getPostprocedureDiagnosis2s" bodyCondition="_wGhjw4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wGhjw4okEeSkH97cUQxLGA" name="body" constrainedElement="_wGhjwIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wGhjxIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::PostprocedureDiagnosis2)).oclAsType(consol::PostprocedureDiagnosis2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wGhjwYokEeSkH97cUQxLGA" type="__SgUwOwuEeOqa975IP2wug" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wGhjwookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wGix4IokEeSkH97cUQxLGA" name="getPreoperativeDiagnosis2s" bodyCondition="_wGix44okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wGix44okEeSkH97cUQxLGA" name="body" constrainedElement="_wGix4IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wGix5IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::PreoperativeDiagnosis2)).oclAsType(consol::PreoperativeDiagnosis2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wGix4YokEeSkH97cUQxLGA" type="_5l3g0OzYEeOnE-G4kptBiw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wGix4ookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wGkAAIokEeSkH97cUQxLGA" name="getReactionObservation2s" bodyCondition="_wGkAA4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wGkAA4okEeSkH97cUQxLGA" name="body" constrainedElement="_wGkAAIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wGkABIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ReactionObservation2)).oclAsType(consol::ReactionObservation2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wGkAAYokEeSkH97cUQxLGA" type="_U3yosPDxEeOKPKE9au0oug" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wGkAAookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wGlOIIokEeSkH97cUQxLGA" name="getResultObservation2s" bodyCondition="_wGlOI4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wGlOI4okEeSkH97cUQxLGA" name="body" constrainedElement="_wGlOIIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wGlOJIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ResultObservation2)).oclAsType(consol::ResultObservation2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wGlOIYokEeSkH97cUQxLGA" type="_H85E0PF7EeOmsLWmq5fnqQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wGlOIookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wGmcQIokEeSkH97cUQxLGA" name="getSocialHistoryObservation2s" bodyCondition="_wGmcQ4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wGmcQ4okEeSkH97cUQxLGA" name="body" constrainedElement="_wGmcQIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wGmcRIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::SocialHistoryObservation2)).oclAsType(consol::SocialHistoryObservation2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wGmcQYokEeSkH97cUQxLGA" type="_b_iGIPJfEeO2NaSiicarcg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wGmcQookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wGnqYIokEeSkH97cUQxLGA" name="getSubstanceOrDeviceAllergyObservation2s" bodyCondition="_wGnqY4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wGnqY4okEeSkH97cUQxLGA" name="body" constrainedElement="_wGnqYIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wGnqZIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::SubstanceOrDeviceAllergyObservation2)).oclAsType(consol::SubstanceOrDeviceAllergyObservation2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wGnqYYokEeSkH97cUQxLGA" type="_K3M6IPKJEeOn7bMsPcStOw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wGnqYookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wGo4gIokEeSkH97cUQxLGA" name="getTobaccoUse2s" bodyCondition="_wGo4g4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wGo4g4okEeSkH97cUQxLGA" name="body" constrainedElement="_wGo4gIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wGo4hIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::TobaccoUse2)).oclAsType(consol::TobaccoUse2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wGo4gYokEeSkH97cUQxLGA" type="_qHUXwPMxEeOUvapeh9bVvQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wGo4gookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wGqGoIokEeSkH97cUQxLGA" name="getVitalSignObservation2s" bodyCondition="_wGqGo4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wGqGo4okEeSkH97cUQxLGA" name="body" constrainedElement="_wGqGoIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wGqGpIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::VitalSignObservation2)).oclAsType(consol::VitalSignObservation2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wGqGoYokEeSkH97cUQxLGA" type="__zeTcPM3EeOUvapeh9bVvQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wGqGoookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wGrUwIokEeSkH97cUQxLGA" name="getProblemObservation2Supports" bodyCondition="_wGrUw4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wGrUw4okEeSkH97cUQxLGA" name="body" constrainedElement="_wGrUwIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wGrUxIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProblemObservation2)).oclAsType(consol::ProblemObservation2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wGrUwYokEeSkH97cUQxLGA" type="_prDAkPDCEeOKPKE9au0oug" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wGrUwookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wGsi4IokEeSkH97cUQxLGA" name="getResultOrganizer2s" bodyCondition="_wGsi44okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wGsi44okEeSkH97cUQxLGA" name="body" constrainedElement="_wGsi4IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wGsi5IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getOrganizers()->select(organizer : cda::Organizer | not organizer.oclIsUndefined() and organizer.oclIsKindOf(consol::ResultOrganizer2)).oclAsType(consol::ResultOrganizer2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wGsi4YokEeSkH97cUQxLGA" type="_gU40UPGEEeOmsLWmq5fnqQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wGsi4ookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wGtxAIokEeSkH97cUQxLGA" name="getProblemConcernAct2s" bodyCondition="_wGtxA4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wGtxA4okEeSkH97cUQxLGA" name="body" constrainedElement="_wGtxAIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wGtxBIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::ProblemConcernAct2)).oclAsType(consol::ProblemConcernAct2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wGtxAYokEeSkH97cUQxLGA" type="_y5C8IOzbEeOnE-G4kptBiw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wGtxAookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_XD5vgJA8EeOZX935IVJfOg" name="InterventionAct">
      <ownedComment xmi:id="_nULqoJA9EeOZX935IVJfOg">
        <body>This template represents an Intervention Act. It is a wrapper for intervention-type activities considered to be parts of the same intervention. For example, an activity such as 'elevate head of bed' combined with 'provide humidified O2 per nasal cannula' may be the interventions planned for a health concern of 'respiratory insufficiency' in order to attempt to achieve a goal of 'pulse oximetry greater than 92%.' These intervention activities may be newly described or derived from a variety of sources within an EHR. &#xD;
Interventions are actions taken to address Health Concerns and increase the likelihood of achieving the patient's or providers' goals. An Intervention Act should contain a reference to a Goal Observation representing the reason for the intervention. &#xD;
Intervention Acts can be related to each other, (eg. an Intervention Act with moodCode of INT could be related to a series of Intervention Acts with moodCode of EVN each having an effectiveTime containing the time of the intervention.)</body>
      </ownedComment>
      <ownedRule xmi:id="_vfZSU4okEeSkH97cUQxLGA" name="InterventionActTemplateId" constrainedElement="_XD5vgJA8EeOZX935IVJfOg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vfZSVIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.131')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vfbHgIokEeSkH97cUQxLGA" name="InterventionActClassCode" constrainedElement="_XD5vgJA8EeOZX935IVJfOg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vfbHgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryAct::ACT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vfex4IokEeSkH97cUQxLGA" name="InterventionActMoodCodeP" constrainedElement="_XD5vgJA8EeOZX935IVJfOg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vfex4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vfc8sIokEeSkH97cUQxLGA" name="InterventionActMoodCode" constrainedElement="_XD5vgJA8EeOZX935IVJfOg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vfc8sYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.moodCode.oclIsUndefined() and self.moodCode.oclIsKindOf(vocab::x_DocumentActMood) and &#xD;
let value : vocab::x_DocumentActMood = self.moodCode.oclAsType(vocab::x_DocumentActMood) in &#xD;
value = vocab::x_DocumentActMood::APT or value = vocab::x_DocumentActMood::ARQ or value = vocab::x_DocumentActMood::EVN or value = vocab::x_DocumentActMood::INT or value = vocab::x_DocumentActMood::PRMS or value = vocab::x_DocumentActMood::PRP or value = vocab::x_DocumentActMood::RQO</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vfhOIIokEeSkH97cUQxLGA" name="InterventionActId" constrainedElement="_XD5vgJA8EeOZX935IVJfOg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vfhOIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (self.id->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vflfkIokEeSkH97cUQxLGA" name="InterventionActCodeP" constrainedElement="_XD5vgJA8EeOZX935IVJfOg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vflfkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vfjDUIokEeSkH97cUQxLGA" name="InterventionActCode" constrainedElement="_XD5vgJA8EeOZX935IVJfOg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vfjDUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '362956003' and value.codeSystem = '2.16.840.1.113883.6.96')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vfoi4IokEeSkH97cUQxLGA" name="InterventionActStatusCode" constrainedElement="_XD5vgJA8EeOZX935IVJfOg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vfoi4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vfpxAIokEeSkH97cUQxLGA" name="InterventionActEffectiveTime" constrainedElement="_XD5vgJA8EeOZX935IVJfOg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vfpxAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vfsNQIokEeSkH97cUQxLGA" name="InterventionActGoalObservation" constrainedElement="_XD5vgJA8EeOZX935IVJfOg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vfsNQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::GoalObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::RSON)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vfuCcIokEeSkH97cUQxLGA" name="InterventionAct" constrainedElement="_XD5vgJA8EeOZX935IVJfOg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vfuCcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(consol::InterventionAct) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vfv3oIokEeSkH97cUQxLGA" name="InterventionActNutritionRecommendations" constrainedElement="_XD5vgJA8EeOZX935IVJfOg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vfv3oYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(consol::NutritionRecommendations))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vfxFwIokEeSkH97cUQxLGA" name="InterventionActActReference" constrainedElement="_XD5vgJA8EeOZX935IVJfOg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vfxFwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(consol::ActReference) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vfyT4IokEeSkH97cUQxLGA" name="InterventionActActReferenceGoal" constrainedElement="_XD5vgJA8EeOZX935IVJfOg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vfyT4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(consol::ActReference) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::GEVL)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vrIBNYokEeSkH97cUQxLGA" name="InterventionActAuthorParticipation" constrainedElement="_XD5vgJA8EeOZX935IVJfOg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vrIBNookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->exists(author : cda::Author | not author.oclIsUndefined() and author.oclIsKindOf(consol::AuthorParticipation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vrJPUIokEeSkH97cUQxLGA" name="InterventionActExternalDocumentReference" constrainedElement="_XD5vgJA8EeOZX935IVJfOg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vrJPUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(consol::ExternalDocumentReference) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wGuYEIokEeSkH97cUQxLGA" name="InterventionActAdvanceDirectiveObservation2" constrainedElement="_XD5vgJA8EeOZX935IVJfOg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wGuYEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::AdvanceDirectiveObservation2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wGu_JYokEeSkH97cUQxLGA" name="InterventionActImmunizationActivity2" constrainedElement="_XD5vgJA8EeOZX935IVJfOg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wGvmMIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.substanceAdministration.oclIsUndefined() and entryRelationship.substanceAdministration.oclIsKindOf(consol::ImmunizationActivity2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wGwNRYokEeSkH97cUQxLGA" name="InterventionActMedicationActivity2" constrainedElement="_XD5vgJA8EeOZX935IVJfOg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wGwNRookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.substanceAdministration.oclIsUndefined() and entryRelationship.substanceAdministration.oclIsKindOf(consol::MedicationActivity2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wGxbZIokEeSkH97cUQxLGA" name="InterventionActProcedureActivityAct2" constrainedElement="_XD5vgJA8EeOZX935IVJfOg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wGxbZYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(consol::ProcedureActivityAct2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wGyphIokEeSkH97cUQxLGA" name="InterventionActProcedureActivityObservation2" constrainedElement="_XD5vgJA8EeOZX935IVJfOg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wGyphYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::ProcedureActivityObservation2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wG0esIokEeSkH97cUQxLGA" name="InterventionActProcedureActivityProcedure2" constrainedElement="_XD5vgJA8EeOZX935IVJfOg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wG0esYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.procedure.oclIsUndefined() and entryRelationship.procedure.oclIsKindOf(consol::ProcedureActivityProcedure2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wG1FxYokEeSkH97cUQxLGA" name="InterventionActEncounterActivity2" constrainedElement="_XD5vgJA8EeOZX935IVJfOg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wG1FxookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.encounter.oclIsUndefined() and entryRelationship.encounter.oclIsKindOf(consol::EncounterActivity2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wG2T5YokEeSkH97cUQxLGA" name="InterventionActNonMedicinalSupplyActivity2" constrainedElement="_XD5vgJA8EeOZX935IVJfOg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wG2T5ookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.supply.oclIsUndefined() and entryRelationship.supply.oclIsKindOf(consol::NonMedicinalSupplyActivity2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wG3iAYokEeSkH97cUQxLGA" name="InterventionActInstruction2" constrainedElement="_XD5vgJA8EeOZX935IVJfOg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wG3iAookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(consol::Instruction2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wG4wIYokEeSkH97cUQxLGA" name="InterventionActPlannedAct2" constrainedElement="_XD5vgJA8EeOZX935IVJfOg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wG4wIookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(consol::PlannedAct2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wG5-QIokEeSkH97cUQxLGA" name="InterventionActPlannedEncounter2" constrainedElement="_XD5vgJA8EeOZX935IVJfOg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wG5-QYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.encounter.oclIsUndefined() and entryRelationship.encounter.oclIsKindOf(consol::PlannedEncounter2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wG7MYIokEeSkH97cUQxLGA" name="InterventionActPlannedObservation2" constrainedElement="_XD5vgJA8EeOZX935IVJfOg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wG7MYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::PlannedObservation2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wG8agIokEeSkH97cUQxLGA" name="InterventionActPlannedProcedure2" constrainedElement="_XD5vgJA8EeOZX935IVJfOg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wG8agYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.procedure.oclIsUndefined() and entryRelationship.procedure.oclIsKindOf(consol::PlannedProcedure2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wG9ooIokEeSkH97cUQxLGA" name="InterventionActPlannedMedicationActivity2" constrainedElement="_XD5vgJA8EeOZX935IVJfOg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wG9ooYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.substanceAdministration.oclIsUndefined() and entryRelationship.substanceAdministration.oclIsKindOf(consol::PlannedMedicationActivity2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wG-2wIokEeSkH97cUQxLGA" name="InterventionActPlannedSupply2" constrainedElement="_XD5vgJA8EeOZX935IVJfOg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wG-2wYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.supply.oclIsUndefined() and entryRelationship.supply.oclIsKindOf(consol::PlannedSupply2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_XENRgJA8EeOZX935IVJfOg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_vftbYIokEeSkH97cUQxLGA" name="getGoalObservations" bodyCondition="_vftbY4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vftbY4okEeSkH97cUQxLGA" name="body" constrainedElement="_vftbYIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vftbZIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::GoalObservation)).oclAsType(consol::GoalObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vftbYYokEeSkH97cUQxLGA" type="_-miMII9TEeOB0eBUISUB4Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vftbYookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vfvQkIokEeSkH97cUQxLGA" name="getInterventionActs" bodyCondition="_vfvQk4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vfvQk4okEeSkH97cUQxLGA" name="body" constrainedElement="_vfvQkIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vfvQlIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::InterventionAct)).oclAsType(consol::InterventionAct)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vfvQkYokEeSkH97cUQxLGA" type="_XD5vgJA8EeOZX935IVJfOg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vfvQkookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vfwesIokEeSkH97cUQxLGA" name="getNutritionRecommendationss" bodyCondition="_vfwes4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vfwes4okEeSkH97cUQxLGA" name="body" constrainedElement="_vfwesIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vfwetIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::NutritionRecommendations)).oclAsType(consol::NutritionRecommendations)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vfwesYokEeSkH97cUQxLGA" type="_FhAIMI3FEeOB0eBUISUB4Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vfwesookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vfxs0IokEeSkH97cUQxLGA" name="getActReferences" bodyCondition="_vfxs04okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vfxs04okEeSkH97cUQxLGA" name="body" constrainedElement="_vfxs0IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vfxs1IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::ActReference)).oclAsType(consol::ActReference)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vfxs0YokEeSkH97cUQxLGA" type="_u_keoIkOEeOJGtGyq_dBbA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vfxs0ookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vfy68IokEeSkH97cUQxLGA" name="getActReferenceGoals" bodyCondition="_vfy684okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vfy684okEeSkH97cUQxLGA" name="body" constrainedElement="_vfy68IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vfy69IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::ActReference)).oclAsType(consol::ActReference)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vfy68YokEeSkH97cUQxLGA" type="_u_keoIkOEeOJGtGyq_dBbA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vfy68ookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vrJ2YIokEeSkH97cUQxLGA" name="getExternalDocumentReferences" bodyCondition="_vrJ2Y4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vrJ2Y4okEeSkH97cUQxLGA" name="body" constrainedElement="_vrJ2YIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vrJ2ZIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::ExternalDocumentReference)).oclAsType(consol::ExternalDocumentReference)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vrJ2YYokEeSkH97cUQxLGA" type="_QcUL8JBGEeOZX935IVJfOg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vrJ2YookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wGu_IIokEeSkH97cUQxLGA" name="getAdvanceDirectiveObservation2s" bodyCondition="_wGu_I4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wGu_I4okEeSkH97cUQxLGA" name="body" constrainedElement="_wGu_IIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wGu_JIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::AdvanceDirectiveObservation2)).oclAsType(consol::AdvanceDirectiveObservation2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wGu_IYokEeSkH97cUQxLGA" type="_GnllUK-9EeO8duI_7f6kZw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wGu_IookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wGwNQIokEeSkH97cUQxLGA" name="getImmunizationActivity2s" bodyCondition="_wGwNQ4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wGwNQ4okEeSkH97cUQxLGA" name="body" constrainedElement="_wGwNQIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wGwNRIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(consol::ImmunizationActivity2)).oclAsType(consol::ImmunizationActivity2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wGwNQYokEeSkH97cUQxLGA" type="_zI6vcOE7EeOTq9XEMvvkWw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wGwNQookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wGw0UIokEeSkH97cUQxLGA" name="getMedicationActivity2s" bodyCondition="_wGxbYookEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wGxbYookEeSkH97cUQxLGA" name="body" constrainedElement="_wGw0UIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wGxbY4okEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(consol::MedicationActivity2)).oclAsType(consol::MedicationActivity2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wGxbYIokEeSkH97cUQxLGA" type="_WnSCMOLAEeOc7-TVP7Wi6w" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wGxbYYokEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wGyCcIokEeSkH97cUQxLGA" name="getProcedureActivityAct2s" bodyCondition="_wGypgookEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wGypgookEeSkH97cUQxLGA" name="body" constrainedElement="_wGyCcIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wGypg4okEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::ProcedureActivityAct2)).oclAsType(consol::ProcedureActivityAct2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wGypgIokEeSkH97cUQxLGA" type="_CFMuYPDbEeOKPKE9au0oug" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wGypgYokEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wGz3oIokEeSkH97cUQxLGA" name="getProcedureActivityObservation2s" bodyCondition="_wGz3o4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wGz3o4okEeSkH97cUQxLGA" name="body" constrainedElement="_wGz3oIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wGz3pIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProcedureActivityObservation2)).oclAsType(consol::ProcedureActivityObservation2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wGz3oYokEeSkH97cUQxLGA" type="_QoLWAPDjEeOKPKE9au0oug" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wGz3oookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wG1FwIokEeSkH97cUQxLGA" name="getProcedureActivityProcedure2s" bodyCondition="_wG1Fw4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wG1Fw4okEeSkH97cUQxLGA" name="body" constrainedElement="_wG1FwIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wG1FxIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getProcedures()->select(procedure : cda::Procedure | not procedure.oclIsUndefined() and procedure.oclIsKindOf(consol::ProcedureActivityProcedure2)).oclAsType(consol::ProcedureActivityProcedure2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wG1FwYokEeSkH97cUQxLGA" type="_fCVOQPDqEeOKPKE9au0oug" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wG1FwookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wG2T4IokEeSkH97cUQxLGA" name="getEncounterActivity2s" bodyCondition="_wG2T44okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wG2T44okEeSkH97cUQxLGA" name="body" constrainedElement="_wG2T4IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wG2T5IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getEncounters()->select(encounter : cda::Encounter | not encounter.oclIsUndefined() and encounter.oclIsKindOf(consol::EncounterActivity2)).oclAsType(consol::EncounterActivity2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wG2T4YokEeSkH97cUQxLGA" type="_RGU34MzDEeO93sHu8pHB2g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wG2T4ookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wG268IokEeSkH97cUQxLGA" name="getNonMedicinalSupplyActivity2s" bodyCondition="_wG2684okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wG2684okEeSkH97cUQxLGA" name="body" constrainedElement="_wG268IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wG3iAIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getSupplies()->select(supply : cda::Supply | not supply.oclIsUndefined() and supply.oclIsKindOf(consol::NonMedicinalSupplyActivity2)).oclAsType(consol::NonMedicinalSupplyActivity2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wG268YokEeSkH97cUQxLGA" type="_k_C20OaCEeOmzetP5oaH3A" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wG268ookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wG4JEIokEeSkH97cUQxLGA" name="getInstruction2s" bodyCondition="_wG4JE4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wG4JE4okEeSkH97cUQxLGA" name="body" constrainedElement="_wG4JEIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wG4wIIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::Instruction2)).oclAsType(consol::Instruction2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wG4JEYokEeSkH97cUQxLGA" type="_D62NwOH7EeO04sHNODkHmQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wG4JEookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wG5XMIokEeSkH97cUQxLGA" name="getPlannedAct2s" bodyCondition="_wG5XM4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wG5XM4okEeSkH97cUQxLGA" name="body" constrainedElement="_wG5XMIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wG5XNIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::PlannedAct2)).oclAsType(consol::PlannedAct2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wG5XMYokEeSkH97cUQxLGA" type="_lLnRMOaYEeOmzetP5oaH3A" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wG5XMookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wG6lUIokEeSkH97cUQxLGA" name="getPlannedEncounter2s" bodyCondition="_wG6lU4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wG6lU4okEeSkH97cUQxLGA" name="body" constrainedElement="_wG6lUIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wG6lVIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getEncounters()->select(encounter : cda::Encounter | not encounter.oclIsUndefined() and encounter.oclIsKindOf(consol::PlannedEncounter2)).oclAsType(consol::PlannedEncounter2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wG6lUYokEeSkH97cUQxLGA" type="_bDPFMOdXEeOqBOMhgDlycQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wG6lUookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wG7zcIokEeSkH97cUQxLGA" name="getPlannedObservation2s" bodyCondition="_wG7zc4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wG7zc4okEeSkH97cUQxLGA" name="body" constrainedElement="_wG7zcIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wG7zdIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::PlannedObservation2)).oclAsType(consol::PlannedObservation2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wG7zcYokEeSkH97cUQxLGA" type="_jKZssOdvEeOqBOMhgDlycQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wG7zcookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wG9BkIokEeSkH97cUQxLGA" name="getPlannedProcedure2s" bodyCondition="_wG9Bk4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wG9Bk4okEeSkH97cUQxLGA" name="body" constrainedElement="_wG9BkIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wG9BlIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getProcedures()->select(procedure : cda::Procedure | not procedure.oclIsUndefined() and procedure.oclIsKindOf(consol::PlannedProcedure2)).oclAsType(consol::PlannedProcedure2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wG9BkYokEeSkH97cUQxLGA" type="_cs0YsOeEEeOqBOMhgDlycQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wG9BkookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wG-PsIokEeSkH97cUQxLGA" name="getPlannedMedicationActivity2s" bodyCondition="_wG-Ps4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wG-Ps4okEeSkH97cUQxLGA" name="body" constrainedElement="_wG-PsIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wG-PtIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(consol::PlannedMedicationActivity2)).oclAsType(consol::PlannedMedicationActivity2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wG-PsYokEeSkH97cUQxLGA" type="_Yj45YOgREeO-iJTuAv7BKQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wG-PsookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wG_d0IokEeSkH97cUQxLGA" name="getPlannedSupply2s" bodyCondition="_wG_d04okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wG_d04okEeSkH97cUQxLGA" name="body" constrainedElement="_wG_d0IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wG_d1IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getSupplies()->select(supply : cda::Supply | not supply.oclIsUndefined() and supply.oclIsKindOf(consol::PlannedSupply2)).oclAsType(consol::PlannedSupply2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wG_d0YokEeSkH97cUQxLGA" type="_vEd1cOg0EeO-iJTuAv7BKQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wG_d0ookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_QcUL8JBGEeOZX935IVJfOg" name="ExternalDocumentReference">
      <ownedComment xmi:id="_v3YrsJBGEeOZX935IVJfOg">
        <body>Where it is necessary to reference an external clinical document, the External Document Reference template can be used to reference this external document.Â Â However, if the containing document is replacing or appending to another document in the same set, that relationship is set in the header, using ClinicalDocument/relatedDocument.</body>
      </ownedComment>
      <ownedRule xmi:id="_vfziAIokEeSkH97cUQxLGA" name="ExternalDocumentReferenceTemplateId" constrainedElement="_QcUL8JBGEeOZX935IVJfOg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vfziAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.115')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vf0wIIokEeSkH97cUQxLGA" name="ExternalDocumentReferenceClassCode" constrainedElement="_QcUL8JBGEeOZX935IVJfOg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vf0wIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>isDefined('classCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vf1-QIokEeSkH97cUQxLGA" name="ExternalDocumentReferenceMoodCode" constrainedElement="_QcUL8JBGEeOZX935IVJfOg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vf1-QYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vf5ooIokEeSkH97cUQxLGA" name="ExternalDocumentReferenceCodeP" constrainedElement="_QcUL8JBGEeOZX935IVJfOg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vf6PsIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vf3zcIokEeSkH97cUQxLGA" name="ExternalDocumentReferenceCode" constrainedElement="_QcUL8JBGEeOZX935IVJfOg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vf3zcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = 'DOCCLIN' and value.codeSystem = '2.16.840.1.113883.5.6')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vgF14IokEeSkH97cUQxLGA" name="ExternalDocumentReferenceReference" constrainedElement="_QcUL8JBGEeOZX935IVJfOg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vgF14YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.reference->one(reference : cda::Reference | not reference.oclIsUndefined() and reference.oclIsKindOf(cda::Reference))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wU8aQIokEeSkH97cUQxLGA" name="ExternalDocumentReferenceReferenceExternalDocumentClassCode" constrainedElement="_QcUL8JBGEeOZX935IVJfOg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wU8aQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.reference->excluding(null).externalDocument->excluding(null)->reject(classCode=vocab::ActClassDocument::DOCCLIN)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wU9BUIokEeSkH97cUQxLGA" name="ExternalDocumentReferenceReferenceExternalDocumentMoodCode" constrainedElement="_QcUL8JBGEeOZX935IVJfOg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wU9BUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.reference->excluding(null).externalDocument->excluding(null)->reject(isDefined('moodCode') and moodCode=vocab::ActMood::EVN)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wU9BUookEeSkH97cUQxLGA" name="ExternalDocumentReferenceReferenceExternalDocumentId" constrainedElement="_QcUL8JBGEeOZX935IVJfOg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wU9BU4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.reference->excluding(null).externalDocument->excluding(null)->reject((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (id->size() = 1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wU9oYIokEeSkH97cUQxLGA" name="ExternalDocumentReferenceReferenceExternalDocumentCode" constrainedElement="_QcUL8JBGEeOZX935IVJfOg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wU9oYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.reference->excluding(null).externalDocument->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wU-PcIokEeSkH97cUQxLGA" name="ExternalDocumentReferenceReferenceExternalDocumentSetId" constrainedElement="_QcUL8JBGEeOZX935IVJfOg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wU-PcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.reference->excluding(null).externalDocument->excluding(null)->reject((setId.oclIsUndefined() or setId.isNullFlavorUndefined()) implies (not setId.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wU-PcookEeSkH97cUQxLGA" name="ExternalDocumentReferenceReferenceExternalDocumentVersionNumber" constrainedElement="_QcUL8JBGEeOZX935IVJfOg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wU-Pc4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.reference->excluding(null).externalDocument->excluding(null)->reject((versionNumber.oclIsUndefined() or versionNumber.isNullFlavorUndefined()) implies (not versionNumber.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wU-2gIokEeSkH97cUQxLGA" name="ExternalDocumentReferenceReferenceTypeCode" constrainedElement="_QcUL8JBGEeOZX935IVJfOg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wU-2gYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.reference->excluding(null)->reject(typeCode=vocab::x_ActRelationshipExternalReference::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wU_dkIokEeSkH97cUQxLGA" name="ExternalDocumentReferenceReferenceExternalDocument" constrainedElement="_QcUL8JBGEeOZX935IVJfOg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wU_dkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.reference->excluding(null)->reject(externalDocument->one(externalDocument : cda::ExternalDocument | not externalDocument.oclIsUndefined() and externalDocument.oclIsKindOf(cda::ExternalDocument)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_QcUL8ZBGEeOZX935IVJfOg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_KRcPwJXFEeOgXcDbh8Igkw" name="PlannedImmunizationActivity">
      <ownedComment xmi:id="_tvCUUJXGEeOgXcDbh8Igkw">
        <body>This template represents planned immunizations. Planned Immunization Activity is very similar to Planned Medication Activity with some key differences, for example, the drug code system is constrained to CVX codes. &#xD;
The priority of the immunization activity to the patient and provider is communicated through Patient Priority Preference and Provider Priority Preference. The effectiveTime indicates the time when the immunization activity is intended to take place and authorTime indicates when the documentation of the plan occurred.</body>
      </ownedComment>
      <ownedRule xmi:id="_vgHrEIokEeSkH97cUQxLGA" name="PlannedImmunizationActivityTemplateId" constrainedElement="_KRcPwJXFEeOgXcDbh8Igkw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vgISIIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.120')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vgKuYIokEeSkH97cUQxLGA" name="PlannedImmunizationActivityClassCode" constrainedElement="_KRcPwJXFEeOgXcDbh8Igkw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vgKuYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClass::SBADM</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vgQ1AIokEeSkH97cUQxLGA" name="PlannedImmunizationActivityMoodCodeP" constrainedElement="_KRcPwJXFEeOgXcDbh8Igkw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vgQ1AYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vgNxsIokEeSkH97cUQxLGA" name="PlannedImmunizationActivityMoodCode" constrainedElement="_KRcPwJXFEeOgXcDbh8Igkw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vgNxsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.moodCode.oclIsUndefined() and self.moodCode.oclIsKindOf(vocab::x_DocumentSubstanceMood) and &#xD;
let value : vocab::x_DocumentSubstanceMood = self.moodCode.oclAsType(vocab::x_DocumentSubstanceMood) in &#xD;
value = vocab::x_DocumentSubstanceMood::INT or value = vocab::x_DocumentSubstanceMood::PRMS or value = vocab::x_DocumentSubstanceMood::PRP or value = vocab::x_DocumentSubstanceMood::RQO</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vgT4UIokEeSkH97cUQxLGA" name="PlannedImmunizationActivityId" constrainedElement="_KRcPwJXFEeOgXcDbh8Igkw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vgT4UYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vgWUkIokEeSkH97cUQxLGA" name="PlannedImmunizationActivityStatusCode" constrainedElement="_KRcPwJXFEeOgXcDbh8Igkw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vgWUkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'active')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vgYw0IokEeSkH97cUQxLGA" name="PlannedImmunizationActivityStatusCodeP" constrainedElement="_KRcPwJXFEeOgXcDbh8Igkw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vgYw0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vgb0IIokEeSkH97cUQxLGA" name="PlannedImmunizationActivityEffectiveTime" constrainedElement="_KRcPwJXFEeOgXcDbh8Igkw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vgb0IYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.effectiveTime->isEmpty() or self.effectiveTime->exists(element | element.isNullFlavorUndefined())) implies (not self.effectiveTime->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vgdCQIokEeSkH97cUQxLGA" name="PlannedImmunizationActivityRepeatNumber" constrainedElement="_KRcPwJXFEeOgXcDbh8Igkw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vgdCQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.repeatNumber.oclIsUndefined() or self.repeatNumber.isNullFlavorUndefined()) implies (not self.repeatNumber.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vghTsIokEeSkH97cUQxLGA" name="PlannedImmunizationActivityRouteCodeP" constrainedElement="_KRcPwJXFEeOgXcDbh8Igkw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vghTsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.routeCode.oclIsUndefined() or self.routeCode.isNullFlavorUndefined()) implies (not self.routeCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vgfegIokEeSkH97cUQxLGA" name="PlannedImmunizationActivityRouteCode" constrainedElement="_KRcPwJXFEeOgXcDbh8Igkw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vgfegYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.routeCode.oclIsUndefined() or self.routeCode.isNullFlavorUndefined()) implies (not self.routeCode.oclIsUndefined() and self.routeCode.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.routeCode.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and (value.code = 'C38192' or value.code = 'C38193' or value.code = 'C38194' or value.code = 'C38675' or value.code = 'C38197' or value.code = 'C38633' or value.code = 'C38205' or value.code = 'C38206' or value.code = 'C38208' or value.code = 'C38209' or value.code = 'C38210' or value.code = 'C38211' or value.code = 'C38212' or value.code = 'C38200' or value.code = 'C38215' or value.code = 'C38219' or value.code = 'C38220' or value.code = 'C38221' or value.code = 'C38222' or value.code = 'C38223' or value.code = 'C38224' or value.code = 'C38225' or value.code = 'C38226' or value.code = 'C38227' or value.code = 'C38228' or value.code = 'C38229' or value.code = 'C38230' or value.code = 'C38231' or value.code = 'C38232' or value.code = 'C38233' or value.code = 'C38234' or value.code = 'C38217' or value.code = 'C38218' or value.code = 'C38235' or value.code = 'C38238' or value.code = 'C38239' or value.code = 'C38240' or value.code = 'C38241' or value.code = 'C38242' or value.code = 'C38243' or value.code = 'C38245' or value.code = 'C38246' or value.code = 'C38247' or value.code = 'C38249' or value.code = 'C38250' or value.code = 'C38251' or value.code = 'C38252' or value.code = 'C38253' or value.code = 'C38254' or value.code = 'C28161' or value.code = 'C38255' or value.code = 'C38256' or value.code = 'C38257' or value.code = 'C38258' or value.code = 'C38259' or value.code = 'C38260' or value.code = 'C38261' or value.code = 'C38262' or value.code = 'C38263' or value.code = 'C38264' or value.code = 'C38265' or value.code = 'C38266' or value.code = 'C38267' or value.code = 'C38207' or value.code = 'C38268' or value.code = 'C38269' or value.code = 'C38270' or value.code = 'C38272' or value.code = 'C38273' or value.code = 'C38276' or value.code = 'C38277' or value.code = 'C38278' or value.code = 'C38280' or value.code = 'C38203' or value.code = 'C38281' or value.code = 'C38282' or value.code = 'C38284' or value.code = 'C38285' or value.code = 'C48623' or value.code = 'C38286' or value.code = 'C38287' or value.code = 'C38288' or value.code = 'C38289' or value.code = 'C38291' or value.code = 'C38676' or value.code = 'C38292' or value.code = 'C38677' or value.code = 'C38293' or value.code = 'C38294' or value.code = 'C38295' or value.code = 'C38216' or value.code = 'C38296' or value.code = 'C38198' or value.code = 'C38297' or value.code = 'C38298' or value.code = 'C38299' or value.code = 'C38300' or value.code = 'C38301' or value.code = 'C38304' or value.code = 'C38305' or value.code = 'C38283' or value.code = 'C38307' or value.code = 'C38308' or value.code = 'C38309' or value.code = 'C38312' or value.code = 'C38271'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vgkXAIokEeSkH97cUQxLGA" name="PlannedImmunizationActivityApproachSiteCode" constrainedElement="_KRcPwJXFEeOgXcDbh8Igkw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vgkXAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.approachSiteCode->isEmpty() or self.approachSiteCode->exists(element | element.isNullFlavorUndefined())) implies (not self.approachSiteCode->isEmpty() and self.approachSiteCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.96' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vgmMMIokEeSkH97cUQxLGA" name="PlannedImmunizationActivityApproachSiteCodeP" constrainedElement="_KRcPwJXFEeOgXcDbh8Igkw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vgmMMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.approachSiteCode->isEmpty() or self.approachSiteCode->exists(element | element.isNullFlavorUndefined())) implies (not self.approachSiteCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vgoBYIokEeSkH97cUQxLGA" name="PlannedImmunizationActivityDoseQuantity" constrainedElement="_KRcPwJXFEeOgXcDbh8Igkw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vgoBYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.doseQuantity.oclIsUndefined() or self.doseQuantity.isNullFlavorUndefined()) implies (not self.doseQuantity.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vgs54IokEeSkH97cUQxLGA" name="PlannedImmunizationActivityPerformer" constrainedElement="_KRcPwJXFEeOgXcDbh8Igkw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vgs54YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->exists(performer : cda::Performer2 | not performer.oclIsUndefined() and performer.oclIsKindOf(rim::Participation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vguIAIokEeSkH97cUQxLGA" name="PlannedImmunizationActivityPatientPriorityPreference" constrainedElement="_KRcPwJXFEeOgXcDbh8Igkw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vguIAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::PatientPriorityPreference) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vrTnYIokEeSkH97cUQxLGA" name="PlannedImmunizationActivityAuthorParticipation" constrainedElement="_KRcPwJXFEeOgXcDbh8Igkw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vrTnYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->exists(author : cda::Author | not author.oclIsUndefined() and author.oclIsKindOf(consol::AuthorParticipation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vrU1gIokEeSkH97cUQxLGA" name="PlannedImmunizationActivityProviderPriorityPreference" constrainedElement="_KRcPwJXFEeOgXcDbh8Igkw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vrU1gYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::ProviderPriorityPreference) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wHAr8IokEeSkH97cUQxLGA" name="PlannedImmunizationActivityIndication2" constrainedElement="_KRcPwJXFEeOgXcDbh8Igkw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHAr8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::Indication2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::RSON)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wHB6EIokEeSkH97cUQxLGA" name="PlannedImmunizationActivityInstruction2" constrainedElement="_KRcPwJXFEeOgXcDbh8Igkw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHB6EYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(consol::Instruction2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wHDIMIokEeSkH97cUQxLGA" name="PlannedImmunizationActivityPrecondition" constrainedElement="_KRcPwJXFEeOgXcDbh8Igkw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHDIMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.precondition->exists(precondition : cda::Precondition | not precondition.oclIsUndefined() and precondition.oclIsKindOf(cda::Precondition))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wHEWUIokEeSkH97cUQxLGA" name="PlannedImmunizationActivityConsumable" constrainedElement="_KRcPwJXFEeOgXcDbh8Igkw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHEWUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.consumable->one(consumable : cda::Consumable | not consumable.oclIsUndefined() and consumable.oclIsKindOf(cda::Consumable))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wVCg4IokEeSkH97cUQxLGA" name="PlannedImmunizationActivityIVLPQUnit" constrainedElement="_KRcPwJXFEeOgXcDbh8Igkw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wVCg4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.doseQuantity->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies (not unit.oclIsUndefined() )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wVDH8IokEeSkH97cUQxLGA" name="PlannedImmunizationActivityConsumableImmunizationMedicationInformation2" constrainedElement="_KRcPwJXFEeOgXcDbh8Igkw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wVDH8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.consumable->excluding(null)->reject(manufacturedProduct->one(manufacturedProduct : cda::ManufacturedProduct | not manufacturedProduct.oclIsUndefined() and manufacturedProduct.oclIsKindOf(consol::ImmunizationMedicationInformation2)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wVEWEIokEeSkH97cUQxLGA" name="PlannedImmunizationActivityPreconditionTypeCode" constrainedElement="_KRcPwJXFEeOgXcDbh8Igkw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wVEWEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.precondition->excluding(null)->reject(isDefined('typeCode') and typeCode=vocab::ActRelationshipType::PRCN)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wVE9IIokEeSkH97cUQxLGA" name="PlannedImmunizationActivityPreconditionPreconditionForSubstanceAdministration2" constrainedElement="_KRcPwJXFEeOgXcDbh8Igkw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wVE9IYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.precondition->excluding(null)->reject(criterion->one(criterion : cda::Criterion | not criterion.oclIsUndefined() and criterion.oclIsKindOf(consol::PreconditionForSubstanceAdministration2)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_KResAJXFEeOgXcDbh8Igkw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_nazskEbuEd6besF9iFIJkQ"/>
      </generalization>
      <ownedOperation xmi:id="_vguvEIokEeSkH97cUQxLGA" name="getPatientPriorityPreferences" bodyCondition="_vguvE4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vguvE4okEeSkH97cUQxLGA" name="body" constrainedElement="_vguvEIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vguvFIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::PatientPriorityPreference)).oclAsType(consol::PatientPriorityPreference)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vguvEYokEeSkH97cUQxLGA" type="_UqXAAI6hEeOB0eBUISUB4Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vguvEookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vrVckIokEeSkH97cUQxLGA" name="getProviderPriorityPreferences" bodyCondition="_vrVck4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vrVck4okEeSkH97cUQxLGA" name="body" constrainedElement="_vrVckIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vrVclIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProviderPriorityPreference)).oclAsType(consol::ProviderPriorityPreference)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vrVckYokEeSkH97cUQxLGA" type="_ncafYJmaEeOLJeQez13EkQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vrVckookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wHBTAIokEeSkH97cUQxLGA" name="getIndication2s" bodyCondition="_wHBTA4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wHBTA4okEeSkH97cUQxLGA" name="body" constrainedElement="_wHBTAIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHBTBIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::Indication2)).oclAsType(consol::Indication2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wHBTAYokEeSkH97cUQxLGA" type="_PrEOIOHoEeO04sHNODkHmQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wHBTAookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wHChIIokEeSkH97cUQxLGA" name="getInstruction2s" bodyCondition="_wHChI4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wHChI4okEeSkH97cUQxLGA" name="body" constrainedElement="_wHChIIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHChJIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::Instruction2)).oclAsType(consol::Instruction2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wHChIYokEeSkH97cUQxLGA" type="_D62NwOH7EeO04sHNODkHmQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wHChIookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_GXlxYJmLEeOeSLwbllPCyw" name="PrognosisObservation">
      <ownedComment xmi:id="_RUa14JmMEeOeSLwbllPCyw">
        <body>This template represents the patient's prognosis, which must be associated with a problem observation. It may serve as an alert to scope intervention plans. &#xD;
The effectiveTime represents the clinically relevant time of the observation. The observation/value is not constrained and can represent the expected life duration in PQ, an anticipated course of the disease in text, or coded term.</body>
      </ownedComment>
      <ownedRule xmi:id="_vguvFYokEeSkH97cUQxLGA" name="PrognosisObservationTemplateId" constrainedElement="_GXlxYJmLEeOeSLwbllPCyw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vgvWIIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.113')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vgwkQIokEeSkH97cUQxLGA" name="PrognosisObservationClassCode" constrainedElement="_GXlxYJmLEeOeSLwbllPCyw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vgwkQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vgxyYIokEeSkH97cUQxLGA" name="PrognosisObservationMoodCode" constrainedElement="_GXlxYJmLEeOeSLwbllPCyw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vgxyYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vg1cwIokEeSkH97cUQxLGA" name="PrognosisObservationCodeP" constrainedElement="_GXlxYJmLEeOeSLwbllPCyw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vg1cwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vgznkIokEeSkH97cUQxLGA" name="PrognosisObservationCode" constrainedElement="_GXlxYJmLEeOeSLwbllPCyw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vgznkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '170967006' and value.codeSystem = '2.16.840.1.113883.6.96')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vg35AIokEeSkH97cUQxLGA" name="PrognosisObservationStatusCode" constrainedElement="_GXlxYJmLEeOeSLwbllPCyw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vg35AYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vg6VQIokEeSkH97cUQxLGA" name="PrognosisObservationStatusCodeP" constrainedElement="_GXlxYJmLEeOeSLwbllPCyw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vg6VQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vg7jYIokEeSkH97cUQxLGA" name="PrognosisObservationEffectiveTime" constrainedElement="_GXlxYJmLEeOeSLwbllPCyw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vg7jYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vg8xgIokEeSkH97cUQxLGA" name="PrognosisObservationValue" constrainedElement="_GXlxYJmLEeOeSLwbllPCyw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vg8xgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_GXoNoJmLEeOeSLwbllPCyw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_0NewYJmVEeOLJeQez13EkQ" name="ProgressTowardGoalObservation">
      <ownedComment xmi:id="_MXrDgJmWEeOLJeQez13EkQ">
        <body>This template represents a patient's progress toward a goal. It can describe whether a goal has been achieved or not and can also describe movement a patient is making toward the achievement of a goal (eg. &quot;Goal not achieved - no discernible change&quot;, &quot;Goal not achieved - progressing toward goal&quot;, &quot;Goal not achieved - declining from goal&quot;).</body>
      </ownedComment>
      <ownedRule xmi:id="_vg9_oIokEeSkH97cUQxLGA" name="ProgressTowardGoalObservationTemplateId" constrainedElement="_0NewYJmVEeOLJeQez13EkQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vg9_oYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.110')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vg_NwIokEeSkH97cUQxLGA" name="ProgressTowardGoalObservationClassCode" constrainedElement="_0NewYJmVEeOLJeQez13EkQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vg_NwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vhAb4IokEeSkH97cUQxLGA" name="ProgressTowardGoalObservationMoodCode" constrainedElement="_0NewYJmVEeOLJeQez13EkQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vhAb4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vhBqAIokEeSkH97cUQxLGA" name="ProgressTowardGoalObservationId" constrainedElement="_0NewYJmVEeOLJeQez13EkQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vhBqAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (self.id->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vhFUYIokEeSkH97cUQxLGA" name="ProgressTowardGoalObservationCodeP" constrainedElement="_0NewYJmVEeOLJeQez13EkQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vhFUYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vhDfMIokEeSkH97cUQxLGA" name="ProgressTowardGoalObservationCode" constrainedElement="_0NewYJmVEeOLJeQez13EkQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vhDfMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = 'ASSERTION' and value.codeSystem = '2.16.840.1.113883.5.4')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vhIXsIokEeSkH97cUQxLGA" name="ProgressTowardGoalObservationStatusCode" constrainedElement="_0NewYJmVEeOLJeQez13EkQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vhIXsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vhKM4IokEeSkH97cUQxLGA" name="ProgressTowardGoalObservationStatusCodeP" constrainedElement="_0NewYJmVEeOLJeQez13EkQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vhKM4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vhMpIIokEeSkH97cUQxLGA" name="ProgressTowardGoalObservationValue" constrainedElement="_0NewYJmVEeOLJeQez13EkQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vhMpIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.96' and (value.code = '390802008' or value.code = '390801001' or value.code = '260388006' or value.code = '385634002' or value.code = '385633008')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vhPFYIokEeSkH97cUQxLGA" name="ProgressTowardGoalObservationValueP" constrainedElement="_0NewYJmVEeOLJeQez13EkQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vhPFYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_0NewYZmVEeOLJeQez13EkQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_ncafYJmaEeOLJeQez13EkQ" name="ProviderPriorityPreference">
      <ownedComment xmi:id="_zPCY4JmaEeOLJeQez13EkQ">
        <body>This template represents a provider priority preference. Provider priority preferences are choices made by care providers relative to options for care or treatment and the prioritization of concerns and problems</body>
      </ownedComment>
      <ownedRule xmi:id="_vhQ6kIokEeSkH97cUQxLGA" name="ProviderPriorityPreferenceTemplateId" constrainedElement="_ncafYJmaEeOLJeQez13EkQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vhQ6kYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.143')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vhSvwIokEeSkH97cUQxLGA" name="ProviderPriorityPreferenceClassCode" constrainedElement="_ncafYJmaEeOLJeQez13EkQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vhSvwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vhT94IokEeSkH97cUQxLGA" name="ProviderPriorityPreferenceMoodCode" constrainedElement="_ncafYJmaEeOLJeQez13EkQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vhT94YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vhUk8IokEeSkH97cUQxLGA" name="ProviderPriorityPreferenceId" constrainedElement="_ncafYJmaEeOLJeQez13EkQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vhVMAIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (self.id->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vhY2YIokEeSkH97cUQxLGA" name="ProviderPriorityPreferenceCodeP" constrainedElement="_ncafYJmaEeOLJeQez13EkQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vhY2YYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vhXBMIokEeSkH97cUQxLGA" name="ProviderPriorityPreferenceCode" constrainedElement="_ncafYJmaEeOLJeQez13EkQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vhXBMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '103323008' and value.codeSystem = '2.16.840.1.113883.6.96')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vhdH0IokEeSkH97cUQxLGA" name="ProviderPriorityPreferencePriorityCodeP" constrainedElement="_ncafYJmaEeOLJeQez13EkQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vhdH0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.priorityCode.oclIsUndefined() or self.priorityCode.isNullFlavorUndefined()) implies (not self.priorityCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vhbSoIokEeSkH97cUQxLGA" name="ProviderPriorityPreferencePriorityCode" constrainedElement="_ncafYJmaEeOLJeQez13EkQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vhbSoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.priorityCode.oclIsUndefined() or self.priorityCode.isNullFlavorUndefined()) implies (not self.priorityCode.oclIsUndefined() and self.priorityCode.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.priorityCode.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.96' and (value.code = '255216001' or value.code = '81170007' or value.code = '70905002' or value.code = '29970001' or value.code = '32088001' or value.code = '53046009' or value.code = '86777004' or value.code = '51601003' or value.code = '58584009' or value.code = '28226006' or value.code = '40397004' or value.code = '46213005'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vhgLIIokEeSkH97cUQxLGA" name="ProviderPriorityPreferenceValue" constrainedElement="_ncafYJmaEeOLJeQez13EkQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vhgLIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.96' and (value.code = '394849002' or value.code = '394848005' or value.code = '441808003')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vhiAUIokEeSkH97cUQxLGA" name="ProviderPriorityPreferenceValueP" constrainedElement="_ncafYJmaEeOLJeQez13EkQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vhiAUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vrWDoIokEeSkH97cUQxLGA" name="ProviderPriorityPreferenceAuthorParticipation" constrainedElement="_ncafYJmaEeOLJeQez13EkQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vrWDoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->exists(author : cda::Author | not author.oclIsUndefined() and author.oclIsKindOf(consol::AuthorParticipation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_ncbGcJmaEeOLJeQez13EkQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_nC0xUJmzEeOLJeQez13EkQ" name="SelfCareActivities">
      <ownedComment xmi:id="_LAG4AJm0EeOLJeQez13EkQ">
        <body>This template represents an adult patient's daily self-care ability. These activities are called Activities of Daily Living (ADL) and Instrumental Activities of Daily Living (IADL).  ADLs involve caring for and moving of the body (e.g. dressing, bathing, eating). IADLs support an independent life style (e.g. cooking, managing medications, driving, shopping).</body>
      </ownedComment>
      <ownedRule xmi:id="_vhj1gIokEeSkH97cUQxLGA" name="SelfCareActivitiesTemplateId" constrainedElement="_nC0xUJmzEeOLJeQez13EkQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vhkckIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.128')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vhlqsIokEeSkH97cUQxLGA" name="SelfCareActivitiesClassCode" constrainedElement="_nC0xUJmzEeOLJeQez13EkQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vhlqsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vhm40IokEeSkH97cUQxLGA" name="SelfCareActivitiesMoodCode" constrainedElement="_nC0xUJmzEeOLJeQez13EkQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vhm40YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vhrKQIokEeSkH97cUQxLGA" name="SelfCareActivitiesCodeP" constrainedElement="_nC0xUJmzEeOLJeQez13EkQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vhrKQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vhouAIokEeSkH97cUQxLGA" name="SelfCareActivitiesCode" constrainedElement="_nC0xUJmzEeOLJeQez13EkQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vhouAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = '46008-9' or value.code = '28409-1' or value.code = '28408-3' or value.code = '46484-2' or value.code = '46482-6' or value.code = '28413-3' or value.code = '45618-6' or value.code = '45619-4'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vhtmgIokEeSkH97cUQxLGA" name="SelfCareActivitiesValue" constrainedElement="_nC0xUJmzEeOLJeQez13EkQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vhtmgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.96' and (value.code = '371153006' or value.code = '371154000' or value.code = '371152001')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vhwCwIokEeSkH97cUQxLGA" name="SelfCareActivitiesValueP" constrainedElement="_nC0xUJmzEeOLJeQez13EkQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vhwCwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_nC1YYJmzEeOLJeQez13EkQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_kyeGAJm4EeOLJeQez13EkQ" name="SensoryAndSpeechStatus">
      <ownedComment xmi:id="_LirAQJm5EeOLJeQez13EkQ">
        <body>This template represents a patient's sensory or speech ability. It may contain an assessment scale observations related to the sensory or speech ability.</body>
      </ownedComment>
      <ownedRule xmi:id="_vhxQ4IokEeSkH97cUQxLGA" name="SensoryAndSpeechStatusTemplateId" constrainedElement="_kyeGAJm4EeOLJeQez13EkQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vhx38IokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.127')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vhzGEIokEeSkH97cUQxLGA" name="SensoryAndSpeechStatusClassCode" constrainedElement="_kyeGAJm4EeOLJeQez13EkQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vhzGEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vh0UMIokEeSkH97cUQxLGA" name="SensoryAndSpeechStatusMoodCode" constrainedElement="_kyeGAJm4EeOLJeQez13EkQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vh0UMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vh3-kIokEeSkH97cUQxLGA" name="SensoryAndSpeechStatusCodeP" constrainedElement="_kyeGAJm4EeOLJeQez13EkQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vh3-kYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vh2JYIokEeSkH97cUQxLGA" name="SensoryAndSpeechStatusCode" constrainedElement="_kyeGAJm4EeOLJeQez13EkQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vh2JYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.96' and (value.code = '47078008' or value.code = '405183003' or value.code = '373713005' or value.code = '397627001' or value.code = '397686008'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vh6a0IokEeSkH97cUQxLGA" name="SensoryAndSpeechStatusStatusCode" constrainedElement="_kyeGAJm4EeOLJeQez13EkQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vh6a0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vh83EIokEeSkH97cUQxLGA" name="SensoryAndSpeechStatusStatusCodeP" constrainedElement="_kyeGAJm4EeOLJeQez13EkQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vh83EYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vh-FMIokEeSkH97cUQxLGA" name="SensoryAndSpeechStatusEffectiveTime" constrainedElement="_kyeGAJm4EeOLJeQez13EkQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vh-FMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_viAhcIokEeSkH97cUQxLGA" name="SensoryAndSpeechStatusValue" constrainedElement="_kyeGAJm4EeOLJeQez13EkQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_viAhcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.96' and (value.code = '11163003' or value.code = '260379002')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_viCWoIokEeSkH97cUQxLGA" name="SensoryAndSpeechStatusValueP" constrainedElement="_kyeGAJm4EeOLJeQez13EkQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_viCWoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_viFZ8YokEeSkH97cUQxLGA" name="SensoryAndSpeechStatusAuthor" constrainedElement="_kyeGAJm4EeOLJeQez13EkQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_viFZ8ookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->one(author : cda::Author | not author.oclIsUndefined() and author.oclIsKindOf(cda::Author))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_viGoEIokEeSkH97cUQxLGA" name="SensoryAndSpeechStatusAssessmentScaleObservation" constrainedElement="_kyeGAJm4EeOLJeQez13EkQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_viGoEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::AssessmentScaleObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wVGLQIokEeSkH97cUQxLGA" name="SensoryAndSpeechStatusAuthorTime" constrainedElement="_kyeGAJm4EeOLJeQez13EkQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wVGLQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->excluding(null)->reject((time.oclIsUndefined() or time.isNullFlavorUndefined()) implies (not time.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_kyeGAZm4EeOLJeQez13EkQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_viHPIIokEeSkH97cUQxLGA" name="getAssessmentScaleObservations" bodyCondition="_viHPI4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_viHPI4okEeSkH97cUQxLGA" name="body" constrainedElement="_viHPIIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_viHPJIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::AssessmentScaleObservation)).oclAsType(consol::AssessmentScaleObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_viHPIYokEeSkH97cUQxLGA" type="_Zi33YOYxEeGINOJ_SD9_dA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_viHPIookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_KTrEAJpdEeOK6dzbL4VoTA" name="SubstanceAdministeredAct">
      <ownedComment xmi:id="_tU2HwJpdEeOK6dzbL4VoTA">
        <body>This template, like the Medication Administered template in QRDA, is used where there is a need to group a number of administrations into a larger act (e.g. to group all of the immunizations that are part of a series). The relationship between this template and component substance administrations can include a sequenceNumber, to indicate the component administration's ordering in the series.</body>
      </ownedComment>
      <ownedRule xmi:id="_viHPJYokEeSkH97cUQxLGA" name="SubstanceAdministeredActTemplateId" constrainedElement="_KTrEAJpdEeOK6dzbL4VoTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_viH2MIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.118')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_viJEUIokEeSkH97cUQxLGA" name="SubstanceAdministeredActClassCode" constrainedElement="_KTrEAJpdEeOK6dzbL4VoTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_viJEUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryAct::ACT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_viKScIokEeSkH97cUQxLGA" name="SubstanceAdministeredActMoodCode" constrainedElement="_KTrEAJpdEeOK6dzbL4VoTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_viKScYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_viLgkIokEeSkH97cUQxLGA" name="SubstanceAdministeredActId" constrainedElement="_KTrEAJpdEeOK6dzbL4VoTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_viLgkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_viPyAIokEeSkH97cUQxLGA" name="SubstanceAdministeredActCodeP" constrainedElement="_KTrEAJpdEeOK6dzbL4VoTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_viPyAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_viNVwIokEeSkH97cUQxLGA" name="SubstanceAdministeredActCode" constrainedElement="_KTrEAJpdEeOK6dzbL4VoTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_viNVwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '416118004' and value.codeSystem = '2.16.840.1.113883.6.96')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_viSOQIokEeSkH97cUQxLGA" name="SubstanceAdministeredActStatusCode" constrainedElement="_KTrEAJpdEeOK6dzbL4VoTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_viSOQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_viV4oIokEeSkH97cUQxLGA" name="SubstanceAdministeredActStatusCodeP" constrainedElement="_KTrEAJpdEeOK6dzbL4VoTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_viV4oYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_viXt0IokEeSkH97cUQxLGA" name="SubstanceAdministeredActEffectiveTime" constrainedElement="_KTrEAJpdEeOK6dzbL4VoTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_viXt0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_KTtgQJpdEeOK6dzbL4VoTA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_D6Lm0JpnEeOK6dzbL4VoTA" name="WoundCharacteristics">
      <ownedComment xmi:id="_eeKb0JpnEeOK6dzbL4VoTA">
        <body>This template represents characteristics of a wound (e.g., integrity of suture line, odor, erythema).</body>
      </ownedComment>
      <ownedRule xmi:id="_viZjAIokEeSkH97cUQxLGA" name="WoundCharacteristicsTemplateId" constrainedElement="_D6Lm0JpnEeOK6dzbL4VoTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_viZjAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.134')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vibYMIokEeSkH97cUQxLGA" name="WoundCharacteristicsClassCode" constrainedElement="_D6Lm0JpnEeOK6dzbL4VoTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vibYMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vicmUIokEeSkH97cUQxLGA" name="WoundCharacteristicsMoodCode" constrainedElement="_D6Lm0JpnEeOK6dzbL4VoTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vicmUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vid0cIokEeSkH97cUQxLGA" name="WoundCharacteristicsId" constrainedElement="_D6Lm0JpnEeOK6dzbL4VoTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vid0cYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_viis8IokEeSkH97cUQxLGA" name="WoundCharacteristicsCodeP" constrainedElement="_D6Lm0JpnEeOK6dzbL4VoTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_viis8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vigQsIokEeSkH97cUQxLGA" name="WoundCharacteristicsCode" constrainedElement="_D6Lm0JpnEeOK6dzbL4VoTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vigQsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = 'ASSERTION')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vimXUIokEeSkH97cUQxLGA" name="WoundCharacteristicsStatusCode" constrainedElement="_D6Lm0JpnEeOK6dzbL4VoTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vimXUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vioMgIokEeSkH97cUQxLGA" name="WoundCharacteristicsStatusCodeP" constrainedElement="_D6Lm0JpnEeOK6dzbL4VoTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vioMgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_viqBsIokEeSkH97cUQxLGA" name="WoundCharacteristicsEffectiveTime" constrainedElement="_D6Lm0JpnEeOK6dzbL4VoTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_viqBsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vir24IokEeSkH97cUQxLGA" name="WoundCharacteristicsValue" constrainedElement="_D6Lm0JpnEeOK6dzbL4VoTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_visd8IokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.96' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_viuTIIokEeSkH97cUQxLGA" name="WoundCharacteristicsValueP" constrainedElement="_D6Lm0JpnEeOK6dzbL4VoTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_viuTIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wVIngIokEeSkH97cUQxLGA" name="WoundCharacteristicsCDCodeSystem" constrainedElement="_D6Lm0JpnEeOK6dzbL4VoTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wVIngYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.code->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies (not codeSystem.oclIsUndefined() )))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_D6Lm0ZpnEeOK6dzbL4VoTA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_94MpsJp7EeOK6dzbL4VoTA" name="WoundMeasurementObservation">
      <ownedComment xmi:id="_Ul6XwJp8EeOK6dzbL4VoTA">
        <body>This template represents the Wound Measurement Observations of wound width, depth and length.</body>
      </ownedComment>
      <ownedRule xmi:id="_vixWcIokEeSkH97cUQxLGA" name="WoundMeasurementObservationTemplateId" constrainedElement="_94MpsJp7EeOK6dzbL4VoTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vixWcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.133')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_viykkIokEeSkH97cUQxLGA" name="WoundMeasurementObservationClassCode" constrainedElement="_94MpsJp7EeOK6dzbL4VoTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_viykkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vizysIokEeSkH97cUQxLGA" name="WoundMeasurementObservationMoodCode" constrainedElement="_94MpsJp7EeOK6dzbL4VoTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vizysYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vi1A0IokEeSkH97cUQxLGA" name="WoundMeasurementObservationId" constrainedElement="_94MpsJp7EeOK6dzbL4VoTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vi1A0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vi4rMIokEeSkH97cUQxLGA" name="WoundMeasurementObservationCodeP" constrainedElement="_94MpsJp7EeOK6dzbL4VoTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vi4rMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vi22AIokEeSkH97cUQxLGA" name="WoundMeasurementObservationCode" constrainedElement="_94MpsJp7EeOK6dzbL4VoTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vi22AYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.96' and (value.code = '401239006' or value.code = '401238003' or value.code = '425094009'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vi7ugIokEeSkH97cUQxLGA" name="WoundMeasurementObservationStatusCode" constrainedElement="_94MpsJp7EeOK6dzbL4VoTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vi7ugYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vi9jsIokEeSkH97cUQxLGA" name="WoundMeasurementObservationStatusCodeP" constrainedElement="_94MpsJp7EeOK6dzbL4VoTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vi9jsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vi_Y4IokEeSkH97cUQxLGA" name="WoundMeasurementObservationEffectiveTime" constrainedElement="_94MpsJp7EeOK6dzbL4VoTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vi_Y4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vjAnAIokEeSkH97cUQxLGA" name="WoundMeasurementObservationValue" constrainedElement="_94MpsJp7EeOK6dzbL4VoTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vjAnAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::PQ)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_94MpsZp7EeOK6dzbL4VoTA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_09uFMJp_EeOK6dzbL4VoTA" name="WoundObservation">
      <ownedComment xmi:id="_bkc6YJqAEeOK6dzbL4VoTA">
        <body>This template represents acquired or surgical wounds commonly found in the long term care population. It is not intended to encompass all wound types. The template includes the general type of wound (e.g., pressure ulcers, surgical incisions, deep tissue injury wounds) and may include wound measurements and wound characteristics.</body>
      </ownedComment>
      <ownedRule xmi:id="_vjB1IYokEeSkH97cUQxLGA" name="ProblemObservationTemplateId" constrainedElement="_09uFMJp_EeOK6dzbL4VoTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vjCcMIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.114')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vjDqUIokEeSkH97cUQxLGA" name="WoundObservationClassCode" constrainedElement="_09uFMJp_EeOK6dzbL4VoTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vjDqUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vjE4cIokEeSkH97cUQxLGA" name="WoundObservationMoodCode" constrainedElement="_09uFMJp_EeOK6dzbL4VoTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vjE4cYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vjJw8IokEeSkH97cUQxLGA" name="WoundObservationCodeP" constrainedElement="_09uFMJp_EeOK6dzbL4VoTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vjJw8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vjGtoIokEeSkH97cUQxLGA" name="WoundObservationCode" constrainedElement="_09uFMJp_EeOK6dzbL4VoTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vjGtoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = 'ASSERTION' and value.codeSystem = '2.16.840.1.113883.5.4')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vjPQgIokEeSkH97cUQxLGA" name="WoundObservationValueP" constrainedElement="_09uFMJp_EeOK6dzbL4VoTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vjPQgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vjM0QIokEeSkH97cUQxLGA" name="WoundObservationValue" constrainedElement="_09uFMJp_EeOK6dzbL4VoTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vjM0QYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.96' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vjXzYIokEeSkH97cUQxLGA" name="WoundObservationTargetSiteCodeP" constrainedElement="_09uFMJp_EeOK6dzbL4VoTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vjXzYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (not self.targetSiteCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vjST0IokEeSkH97cUQxLGA" name="WoundObservationTargetSiteCode" constrainedElement="_09uFMJp_EeOK6dzbL4VoTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vjST0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.targetSiteCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.96' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vjnrAIokEeSkH97cUQxLGA" name="WoundObservationWoundMeasurementObservation" constrainedElement="_09uFMJp_EeOK6dzbL4VoTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vjnrAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::WoundMeasurementObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vjo5IIokEeSkH97cUQxLGA" name="WoundObservationWoundCharacteristics" constrainedElement="_09uFMJp_EeOK6dzbL4VoTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vjo5IYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::WoundCharacteristics) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vjqHQIokEeSkH97cUQxLGA" name="WoundObservationHighestPressureUlcerStage" constrainedElement="_09uFMJp_EeOK6dzbL4VoTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vjqHQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::HighestPressureUlcerStage) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vrWqsIokEeSkH97cUQxLGA" name="WoundObservationAuthorParticipation" constrainedElement="_09uFMJp_EeOK6dzbL4VoTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vrWqsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->exists(author : cda::Author | not author.oclIsUndefined() and author.oclIsKindOf(consol::AuthorParticipation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wImAUIokEeSkH97cUQxLGA" name="WoundObservationNumberOfPressureUlcersObservation2" constrainedElement="_09uFMJp_EeOK6dzbL4VoTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wImAUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::NumberOfPressureUlcersObservation2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wVSYgIokEeSkH97cUQxLGA" name="WoundObservationCDCRCDCode" constrainedElement="_09uFMJp_EeOK6dzbL4VoTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wVSYgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.code->excluding(null)->select(isNullFlavorUndefined()).qualifier->excluding(null)->select(isNullFlavorUndefined()).value->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies (not code.oclIsUndefined() )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wVSYgookEeSkH97cUQxLGA" name="WoundObservationCDCRName" constrainedElement="_09uFMJp_EeOK6dzbL4VoTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wVS_kIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.code->excluding(null)->select(isNullFlavorUndefined()).qualifier->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((name.oclIsUndefined() or name.isNullFlavorUndefined()) implies (not name.oclIsUndefined() and name.oclIsKindOf(datatypes::CV) and &#xD;
let value : datatypes::CV = name.oclAsType(datatypes::CV) in &#xD;
value.code = '272741003' and value.codeSystem = '2.16.840.1.113883.6.96') )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wVS_kYokEeSkH97cUQxLGA" name="WoundObservationCDCRNameP" constrainedElement="_09uFMJp_EeOK6dzbL4VoTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wVS_kookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.code->excluding(null)->select(isNullFlavorUndefined()).qualifier->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((name.oclIsUndefined() or name.isNullFlavorUndefined()) implies (not name.oclIsUndefined()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wVTmoIokEeSkH97cUQxLGA" name="WoundObservationCDCRValue" constrainedElement="_09uFMJp_EeOK6dzbL4VoTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wVTmoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.code->excluding(null)->select(isNullFlavorUndefined()).qualifier->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((value.oclIsUndefined() or value.isNullFlavorUndefined()) implies (not value.oclIsUndefined()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wVTmoookEeSkH97cUQxLGA" name="WoundObservationCDQualifier" constrainedElement="_09uFMJp_EeOK6dzbL4VoTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wVTmo4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.code->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((qualifier->isEmpty() or qualifier->exists(element | element.isNullFlavorUndefined())) implies (not qualifier->isEmpty()) )))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_09uFMZp_EeOK6dzbL4VoTA" general="_prDAkPDCEeOKPKE9au0oug"/>
      <ownedOperation xmi:id="_vjoSEIokEeSkH97cUQxLGA" name="getWoundMeasurementObservations" bodyCondition="_vjoSE4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vjoSE4okEeSkH97cUQxLGA" name="body" constrainedElement="_vjoSEIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vjoSFIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::WoundMeasurementObservation)).oclAsType(consol::WoundMeasurementObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vjoSEYokEeSkH97cUQxLGA" type="_94MpsJp7EeOK6dzbL4VoTA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vjoSEookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vjpgMIokEeSkH97cUQxLGA" name="getWoundCharacteristicss" bodyCondition="_vjpgM4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vjpgM4okEeSkH97cUQxLGA" name="body" constrainedElement="_vjpgMIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vjpgNIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::WoundCharacteristics)).oclAsType(consol::WoundCharacteristics)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vjpgMYokEeSkH97cUQxLGA" type="_D6Lm0JpnEeOK6dzbL4VoTA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vjpgMookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vjquUIokEeSkH97cUQxLGA" name="getHighestPressureUlcerStage" bodyCondition="_vjquU4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vjquU4okEeSkH97cUQxLGA" name="body" constrainedElement="_vjquUIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vjquVIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::HighestPressureUlcerStage))->asSequence()->any(true).oclAsType(consol::HighestPressureUlcerStage)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vjquUYokEeSkH97cUQxLGA" type="_4YgVsOZbEeGINOJ_SD9_dA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vjquUookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wImnYIokEeSkH97cUQxLGA" name="getNumberOfPressureUlcersObservation2s" bodyCondition="_wImnY4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wImnY4okEeSkH97cUQxLGA" name="body" constrainedElement="_wImnYIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wImnZIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::NumberOfPressureUlcersObservation2)).oclAsType(consol::NumberOfPressureUlcersObservation2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wImnYYokEeSkH97cUQxLGA" type="_YYgjwIC3EeS108flGLVEBA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wImnYookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_YPOXoJ14EeORR8_YW0n_jQ" name="GoalsSection">
      <ownedComment xmi:id="_k_kdoJ14EeORR8_YW0n_jQ">
        <body>This template represents patient Goals.  A goal is a defined outcome or condition to be achieved in the process of patient care. Goals include patient-defined goals (e.g., alleviation of health concerns, positive outcomes from interventions, longevity, function, symptom management, comfort) and clinician-specific goals to achieve desired and agreed upon outcomes.</body>
      </ownedComment>
      <ownedRule xmi:id="_vjquVYokEeSkH97cUQxLGA" name="GoalsSectionTemplateId" constrainedElement="_YPOXoJ14EeORR8_YW0n_jQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vjquVookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.60')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vjtKkIokEeSkH97cUQxLGA" name="GoalsSectionCode" constrainedElement="_YPOXoJ14EeORR8_YW0n_jQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vjtKkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '61146-7' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vju_wIokEeSkH97cUQxLGA" name="GoalsSectionCodeP" constrainedElement="_YPOXoJ14EeORR8_YW0n_jQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vju_wYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vjw08IokEeSkH97cUQxLGA" name="GoalsSectionTitle" constrainedElement="_YPOXoJ14EeORR8_YW0n_jQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vjw08YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vjyDEIokEeSkH97cUQxLGA" name="GoalsSectionText" constrainedElement="_YPOXoJ14EeORR8_YW0n_jQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vjyDEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vjz4QIokEeSkH97cUQxLGA" name="GoalsSectionGoalObservation" constrainedElement="_YPOXoJ14EeORR8_YW0n_jQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vjz4QYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::GoalObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_YPQM0J14EeORR8_YW0n_jQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_vj0fUIokEeSkH97cUQxLGA" name="getGoalObservations" bodyCondition="_vj0fU4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vj0fU4okEeSkH97cUQxLGA" name="body" constrainedElement="_vj0fUIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vj0fVIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::GoalObservation)).oclAsType(consol::GoalObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vj0fUYokEeSkH97cUQxLGA" type="_-miMII9TEeOB0eBUISUB4Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vj0fUookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2umuYJ18EeORR8_YW0n_jQ" name="HealthConcernsSection">
      <ownedComment xmi:id="_iK49QJ19EeORR8_YW0n_jQ">
        <body>This section contains data describing an interest or worry about a health state or process that could possibly require attention, intervention, or management.</body>
      </ownedComment>
      <ownedRule xmi:id="_vj0fVYokEeSkH97cUQxLGA" name="HealthConcernsSectionTemplateId" constrainedElement="_2umuYJ18EeORR8_YW0n_jQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vj0fVookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.58')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vj27kIokEeSkH97cUQxLGA" name="HealthConcernsSectionCode" constrainedElement="_2umuYJ18EeORR8_YW0n_jQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vj27kYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '46030-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vj4wwIokEeSkH97cUQxLGA" name="HealthConcernsSectionCodeP" constrainedElement="_2umuYJ18EeORR8_YW0n_jQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vj4wwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vj6l8IokEeSkH97cUQxLGA" name="HealthConcernsSectionTitle" constrainedElement="_2umuYJ18EeORR8_YW0n_jQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vj6l8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vj70EIokEeSkH97cUQxLGA" name="HealthConcernsSectionText" constrainedElement="_2umuYJ18EeORR8_YW0n_jQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vj70EYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vj9CMIokEeSkH97cUQxLGA" name="HealthConcernsSectionHealthConcernAct" constrainedElement="_2umuYJ18EeORR8_YW0n_jQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vj9CMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::HealthConcernAct))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wHGLgIokEeSkH97cUQxLGA" name="HealthConcernsSectionHealthStatusObservation2" constrainedElement="_2umuYJ18EeORR8_YW0n_jQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHGLgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::HealthStatusObservation2))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2unVcJ18EeORR8_YW0n_jQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_vj-QUIokEeSkH97cUQxLGA" name="getHealthConcernActs" bodyCondition="_vj-QU4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vj-QU4okEeSkH97cUQxLGA" name="body" constrainedElement="_vj-QUIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vj-QVIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::HealthConcernAct)).oclAsType(consol::HealthConcernAct)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vj-QUYokEeSkH97cUQxLGA" type="_An8P8I9kEeOB0eBUISUB4Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vj-QUookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wHGykIokEeSkH97cUQxLGA" name="getHealthStatusObservation2" bodyCondition="_wHGyk4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wHGyk4okEeSkH97cUQxLGA" name="body" constrainedElement="_wHGykIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHGylIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::HealthStatusObservation2))->asSequence()->any(true).oclAsType(consol::HealthStatusObservation2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wHGykYokEeSkH97cUQxLGA" type="_DMvdYOEFEeOmBMTtnrPqww" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wHGykookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_EHgh0J2AEeORR8_YW0n_jQ" name="HealthStatusEvaluationsOutcomesSection">
      <ownedComment xmi:id="_1oCLEJ2AEeORR8_YW0n_jQ">
        <body>This template represents observations regarding the outcome of care from the interventions used to treat the patient. These observations represent status, at points in time, related to established care plan goals and/or interventions.</body>
      </ownedComment>
      <ownedRule xmi:id="_vj-QVYokEeSkH97cUQxLGA" name="HealthStatusEvaluationsOutcomesSectionTemplateId" constrainedElement="_EHgh0J2AEeORR8_YW0n_jQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vj-QVookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.61')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vkAskIokEeSkH97cUQxLGA" name="HealthStatusEvaluationsOutcomesSectionCode" constrainedElement="_EHgh0J2AEeORR8_YW0n_jQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vkAskYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '11383-7' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vkChwIokEeSkH97cUQxLGA" name="HealthStatusEvaluationsOutcomesSectionCodeP" constrainedElement="_EHgh0J2AEeORR8_YW0n_jQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vkChwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vkEW8IokEeSkH97cUQxLGA" name="HealthStatusEvaluationsOutcomesSectionTitle" constrainedElement="_EHgh0J2AEeORR8_YW0n_jQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vkEW8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vkFlEIokEeSkH97cUQxLGA" name="HealthStatusEvaluationsOutcomesSectionText" constrainedElement="_EHgh0J2AEeORR8_YW0n_jQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vkFlEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vkHaQIokEeSkH97cUQxLGA" name="HealthStatusEvaluationsOutcomesSectionOutcomeObservation" constrainedElement="_EHgh0J2AEeORR8_YW0n_jQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vkHaQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::OutcomeObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_EHgh0Z2AEeORR8_YW0n_jQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_vkIBUIokEeSkH97cUQxLGA" name="getOutcomeObservations" bodyCondition="_vkIBU4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vkIBU4okEeSkH97cUQxLGA" name="body" constrainedElement="_vkIBUIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vkIBVIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::OutcomeObservation)).oclAsType(consol::OutcomeObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vkIBUYokEeSkH97cUQxLGA" type="_ihaWkI55EeOB0eBUISUB4Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vkIBUookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_4tfOMJ2CEeORR8_YW0n_jQ" name="MentalStatusSection">
      <ownedComment xmi:id="_HxweoJ2DEeORR8_YW0n_jQ">
        <body>The Mental Status Section contains observation and evaluations related to patient's psychological and mental competency and deficits including cognitive functioning (e.g., mood, anxiety, perceptual disturbances) and cognitive ability (e.g., concentration, intellect, visual-spatial perception).</body>
      </ownedComment>
      <ownedRule xmi:id="_vkIBVYokEeSkH97cUQxLGA" name="MentalStatusSectionTemplateId" constrainedElement="_4tfOMJ2CEeORR8_YW0n_jQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vkIoYIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.56')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vkKdkIokEeSkH97cUQxLGA" name="MentalStatusSectionCode" constrainedElement="_4tfOMJ2CEeORR8_YW0n_jQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vkKdkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '10190-7' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vkMSwIokEeSkH97cUQxLGA" name="MentalStatusSectionCodeP" constrainedElement="_4tfOMJ2CEeORR8_YW0n_jQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vkMSwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vkOH8IokEeSkH97cUQxLGA" name="MentalStatusSectionTitle" constrainedElement="_4tfOMJ2CEeORR8_YW0n_jQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vkOH8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vkPWEIokEeSkH97cUQxLGA" name="MentalStatusSectionText" constrainedElement="_4tfOMJ2CEeORR8_YW0n_jQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vkPWEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vkQkMIokEeSkH97cUQxLGA" name="MentalStatusSectionCaregiverCharacteristics" constrainedElement="_4tfOMJ2CEeORR8_YW0n_jQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vkQkMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::CaregiverCharacteristics))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vkSZYIokEeSkH97cUQxLGA" name="MentalStatusSectionAssessmentScaleObservation" constrainedElement="_4tfOMJ2CEeORR8_YW0n_jQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vkSZYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::AssessmentScaleObservation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vkTAdYokEeSkH97cUQxLGA" name="MentalStatusSectionCognitiveAbilitiesObservation" constrainedElement="_4tfOMJ2CEeORR8_YW0n_jQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vkTAdookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::CognitiveAbilitiesObservation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vkUOlYokEeSkH97cUQxLGA" name="MentalStatusSectionMentalStatusObservation" constrainedElement="_4tfOMJ2CEeORR8_YW0n_jQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vkUOlookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::MentalStatusObservation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wHHZoIokEeSkH97cUQxLGA" name="MentalStatusSectionCognitiveStatusOrganizer2" constrainedElement="_4tfOMJ2CEeORR8_YW0n_jQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHHZoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(consol::CognitiveStatusOrganizer2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wHJO0IokEeSkH97cUQxLGA" name="MentalStatusSectionCognitiveStatusObservation2" constrainedElement="_4tfOMJ2CEeORR8_YW0n_jQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHJO0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::CognitiveStatusObservation2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wHKc8IokEeSkH97cUQxLGA" name="MentalStatusSectionNonMedicinalSupplyActivity2" constrainedElement="_4tfOMJ2CEeORR8_YW0n_jQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHKc8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.supply.oclIsUndefined() and entry.supply.oclIsKindOf(consol::NonMedicinalSupplyActivity2))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_4tf1QJ2CEeORR8_YW0n_jQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_vkRyUIokEeSkH97cUQxLGA" name="getCaregiverCharacteristicss" bodyCondition="_vkRyU4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vkRyU4okEeSkH97cUQxLGA" name="body" constrainedElement="_vkRyUIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vkRyVIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::CaregiverCharacteristics)).oclAsType(consol::CaregiverCharacteristics)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vkRyUYokEeSkH97cUQxLGA" type="__pNCUOY-EeGINOJ_SD9_dA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vkRyUookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vkTAcIokEeSkH97cUQxLGA" name="getAssessmentScaleObservations" bodyCondition="_vkTAc4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vkTAc4okEeSkH97cUQxLGA" name="body" constrainedElement="_vkTAcIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vkTAdIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::AssessmentScaleObservation)).oclAsType(consol::AssessmentScaleObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vkTAcYokEeSkH97cUQxLGA" type="_Zi33YOYxEeGINOJ_SD9_dA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vkTAcookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vkUOkIokEeSkH97cUQxLGA" name="getCognitiveAbilitiesObservations" bodyCondition="_vkUOk4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vkUOk4okEeSkH97cUQxLGA" name="body" constrainedElement="_vkUOkIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vkUOlIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::CognitiveAbilitiesObservation)).oclAsType(consol::CognitiveAbilitiesObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vkUOkYokEeSkH97cUQxLGA" type="_Y_oGkIoAEeOoMZgUoTghIg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vkUOkookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vkVcsIokEeSkH97cUQxLGA" name="getMentalStatusObservations" bodyCondition="_vkVcs4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vkVcs4okEeSkH97cUQxLGA" name="body" constrainedElement="_vkVcsIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vkVctIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::MentalStatusObservation)).oclAsType(consol::MentalStatusObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vkVcsYokEeSkH97cUQxLGA" type="_-lJmEI0kEeOB0eBUISUB4Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vkVcsookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wHIAsIokEeSkH97cUQxLGA" name="getCognitiveStatusOrganizer2s" bodyCondition="_wHInwookEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wHInwookEeSkH97cUQxLGA" name="body" constrainedElement="_wHIAsIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHInw4okEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getOrganizers()->select(organizer : cda::Organizer | not organizer.oclIsUndefined() and organizer.oclIsKindOf(consol::CognitiveStatusOrganizer2)).oclAsType(consol::CognitiveStatusOrganizer2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wHInwIokEeSkH97cUQxLGA" type="_6LYrULkoEeODDJAC5t5vpw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wHInwYokEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wHJ14IokEeSkH97cUQxLGA" name="getCognitiveStatusObservation2s" bodyCondition="_wHJ144okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wHJ144okEeSkH97cUQxLGA" name="body" constrainedElement="_wHJ14IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHJ15IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::CognitiveStatusObservation2)).oclAsType(consol::CognitiveStatusObservation2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wHJ14YokEeSkH97cUQxLGA" type="_ze150PitEeOXlK95I8tUew" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wHJ14ookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wHLEAIokEeSkH97cUQxLGA" name="getNonMedicinalSupplyActivity2s" bodyCondition="_wHLEA4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wHLEA4okEeSkH97cUQxLGA" name="body" constrainedElement="_wHLEAIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHLEBIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getSupplies()->select(supply : cda::Supply | not supply.oclIsUndefined() and supply.oclIsKindOf(consol::NonMedicinalSupplyActivity2)).oclAsType(consol::NonMedicinalSupplyActivity2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wHLEAYokEeSkH97cUQxLGA" type="_k_C20OaCEeOmzetP5oaH3A" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wHLEAookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_MlM4IJ2GEeORR8_YW0n_jQ" name="NutritionSection">
      <ownedComment xmi:id="_bshckJ2GEeORR8_YW0n_jQ">
        <body>The Nutrition Section represents diet and nutrition information including special diet requirements and restrictions (e.g. soft mechanical diet, liquids only, enteral feeding). It also represents the overall nutritional status of the patient, nutrition assessment findings, and diet recommendations.&#xD;
USE THIS SECTION INSTEAD OF DISCHARGE DIET SECTION (DEPRECATED) template id:1.3.6.1.4.1.19376.1.5.3.1.3.33.2</body>
      </ownedComment>
      <ownedRule xmi:id="_vkVctYokEeSkH97cUQxLGA" name="NutritionSectionTemplateId" constrainedElement="_MlM4IJ2GEeORR8_YW0n_jQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vkVctookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.57')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vkXR4IokEeSkH97cUQxLGA" name="NutritionSectionCode" constrainedElement="_MlM4IJ2GEeORR8_YW0n_jQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vkXR4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '61144-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vkZuIIokEeSkH97cUQxLGA" name="NutritionSectionCodeP" constrainedElement="_MlM4IJ2GEeORR8_YW0n_jQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vkZuIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vkbjUIokEeSkH97cUQxLGA" name="NutritionSectionTitle" constrainedElement="_MlM4IJ2GEeORR8_YW0n_jQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vkbjUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vkcKYIokEeSkH97cUQxLGA" name="NutritionSectionText" constrainedElement="_MlM4IJ2GEeORR8_YW0n_jQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vkcKYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vkd_kIokEeSkH97cUQxLGA" name="NutritionSectionNutritionalStatusObservation" constrainedElement="_MlM4IJ2GEeORR8_YW0n_jQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vkd_kYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::NutritionalStatusObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_MlM4IZ2GEeORR8_YW0n_jQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_vkemoIokEeSkH97cUQxLGA" name="getNutritionalStatusObservations" bodyCondition="_vkemo4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vkemo4okEeSkH97cUQxLGA" name="body" constrainedElement="_vkemoIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vkempIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::NutritionalStatusObservation)).oclAsType(consol::NutritionalStatusObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vkemoYokEeSkH97cUQxLGA" type="_T1dcwI37EeOB0eBUISUB4Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vkemoookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_CDn9gJ2LEeORR8_YW0n_jQ" name="PhysicalFindingsOfSkinSection">
      <ownedComment xmi:id="_VjDKoJ2LEeORR8_YW0n_jQ">
        <body>The Skin Physical Exam section includes direct observations made by the clinician. This section includes only observations made by the examining clinician using inspection and palpation; it does not include laboratory or imaging findings. The examination may be reported as a collection of random clinical statements or it may be reported categorically.</body>
      </ownedComment>
      <ownedRule xmi:id="_vkempYokEeSkH97cUQxLGA" name="PhysicalFindingsOfSkinSectionTemplateId" constrainedElement="_CDn9gJ2LEeORR8_YW0n_jQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vkfNsIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.62')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vkhC4IokEeSkH97cUQxLGA" name="PhysicalFindingsOfSkinSectionCode" constrainedElement="_CDn9gJ2LEeORR8_YW0n_jQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vkhC4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '10206-1' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vki4EIokEeSkH97cUQxLGA" name="PhysicalFindingsOfSkinSectionCodeP" constrainedElement="_CDn9gJ2LEeORR8_YW0n_jQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vki4EYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vkktQIokEeSkH97cUQxLGA" name="PhysicalFindingsOfSkinSectionTitle" constrainedElement="_CDn9gJ2LEeORR8_YW0n_jQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vkktQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vkl7YIokEeSkH97cUQxLGA" name="PhysicalFindingsOfSkinSectionText" constrainedElement="_CDn9gJ2LEeORR8_YW0n_jQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vkl7YYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vknJgIokEeSkH97cUQxLGA" name="PhysicalFindingsOfSkinSectionWoundObservation" constrainedElement="_CDn9gJ2LEeORR8_YW0n_jQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vknJgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::WoundObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_CDn9gZ2LEeORR8_YW0n_jQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_vknwkIokEeSkH97cUQxLGA" name="getWoundObservations" bodyCondition="_vkoXoYokEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vkoXoYokEeSkH97cUQxLGA" name="body" constrainedElement="_vknwkIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vkoXoookEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::WoundObservation)).oclAsType(consol::WoundObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vknwkYokEeSkH97cUQxLGA" type="_09uFMJp_EeOK6dzbL4VoTA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vkoXoIokEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_dduXkJ5OEeOr4eM3k36wAg" name="USRealmHeader2">
      <ownedComment xmi:id="_B-WxAJ5REeOr4eM3k36wAg">
        <body>This template defines constraints that represent common administrative and demographic concepts for US Realm CDA documents. Further specification, such as documentCode, are provided in document templates that conform to this template.</body>
      </ownedComment>
      <ownedRule xmi:id="_vkoXo4okEeSkH97cUQxLGA" name="GeneralHeaderConstraintsTemplateId" constrainedElement="_dduXkJ5OEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vko-sIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.1.1' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vkqz4IokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsTitle" constrainedElement="_dduXkJ5OEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vkqz4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vkspEIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRealmCode" constrainedElement="_dduXkJ5OEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vkspEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.realmCode->isEmpty() or self.realmCode->exists(element | element.isNullFlavorUndefined())) implies (self.realmCode->size() = 1 and self.realmCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = element.oclAsType(datatypes::CS) in &#xD;
value.code = 'US'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v-BIAIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsRecordTarget" constrainedElement="_dduXkJ5OEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v-BIAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->exists(recordTarget : cda::RecordTarget | not recordTarget.oclIsUndefined() and recordTarget.oclIsKindOf(cda::RecordTarget))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v-GnkIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsDataEnterer" constrainedElement="_dduXkJ5OEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v-GnkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.dataEnterer->one(dataEnterer : cda::DataEnterer | not dataEnterer.oclIsUndefined() and dataEnterer.oclIsKindOf(cda::DataEnterer))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v-HOoIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsAuthor" constrainedElement="_dduXkJ5OEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v-H1sIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->exists(author : cda::Author | not author.oclIsUndefined() and author.oclIsKindOf(cda::Author))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v-JD0IokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsCustodian" constrainedElement="_dduXkJ5OEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v-JD0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.custodian->one(custodian : cda::Custodian | not custodian.oclIsUndefined() and custodian.oclIsKindOf(cda::Custodian))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v-Jq4IokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsInformationRecipient" constrainedElement="_dduXkJ5OEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v-Jq4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.informationRecipient->exists(informationRecipient : cda::InformationRecipient | not informationRecipient.oclIsUndefined() and informationRecipient.oclIsKindOf(cda::InformationRecipient))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v-K5AIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsLegalAuthenticator" constrainedElement="_dduXkJ5OEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v-K5AYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.legalAuthenticator->one(legalAuthenticator : cda::LegalAuthenticator | not legalAuthenticator.oclIsUndefined() and legalAuthenticator.oclIsKindOf(cda::LegalAuthenticator))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v-MHIIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsAuthenticator" constrainedElement="_dduXkJ5OEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v-MHIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.authenticator->exists(authenticator : cda::Authenticator | not authenticator.oclIsUndefined() and authenticator.oclIsKindOf(cda::Authenticator))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v-NVQIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsInformant" constrainedElement="_dduXkJ5OEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v-NVQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.informant->exists(informant : cda::Informant12 | not informant.oclIsUndefined() and informant.oclIsKindOf(cda::Informant12))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v-OjYIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsInFulfillmentOf" constrainedElement="_dduXkJ5OEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v-OjYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.inFulfillmentOf->exists(inFulfillmentOf : cda::InFulfillmentOf | not inFulfillmentOf.oclIsUndefined() and inFulfillmentOf.oclIsKindOf(cda::InFulfillmentOf))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v-PxgIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsComponentOf" constrainedElement="_dduXkJ5OEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v-PxgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->one(componentOf : cda::Component1 | not componentOf.oclIsUndefined() and componentOf.oclIsKindOf(cda::Component1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v-Q_oYokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsSupportParticipant" constrainedElement="_dduXkJ5OEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v-Q_oookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->exists(participant : cda::Participant1 | not participant.oclIsUndefined() and participant.oclIsKindOf(cda::Participant1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v-SNwIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsDocumentationOf" constrainedElement="_dduXkJ5OEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v-SNwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->exists(documentationOf : cda::DocumentationOf | not documentationOf.oclIsUndefined() and documentationOf.oclIsKindOf(cda::DocumentationOf))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v-WfMIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsAuthorization" constrainedElement="_dduXkJ5OEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v-WfMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.authorization->exists(authorization : cda::Authorization | not authorization.oclIsUndefined() and authorization.oclIsKindOf(cda::Authorization))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wVd-sIokEeSkH97cUQxLGA" name="USRealmHeader2RecordTargetPatientRolePatientGuardianCodeFromPersonalRelationshipOrResponsibleParty" constrainedElement="_dduXkJ5OEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wVelwIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null).guardian->excluding(null)->reject(true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wVelwYokEeSkH97cUQxLGA" name="USRealmHeader2RecordTargetPatientRolePatientGeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianCodeP" constrainedElement="_dduXkJ5OEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wVelwookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null).guardian->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wVfM0IokEeSkH97cUQxLGA" name="USRealmHeader2RecordTargetPatientRolePatientGeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianCode" constrainedElement="_dduXkJ5OEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wVfM0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null).guardian->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined() and code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = code.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.5.111' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wVfz4IokEeSkH97cUQxLGA" name="USRealmHeader2RecordTargetPatientRolePatientGeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationLanguageCode" constrainedElement="_dduXkJ5OEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wVfz4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null).languageCommunication->excluding(null)->reject((languageCode.oclIsUndefined() or languageCode.isNullFlavorUndefined()) implies (not languageCode.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wVga8IokEeSkH97cUQxLGA" name="USRealmHeader2RecordTargetPatientRolePatientGeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationPreferenceInd" constrainedElement="_dduXkJ5OEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wVga8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null).languageCommunication->excluding(null)->reject((preferenceInd.oclIsUndefined() or preferenceInd.isNullFlavorUndefined()) implies (not preferenceInd.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wVhCAIokEeSkH97cUQxLGA" name="USRealmHeader2RecordTargetPatientRoleGeneralHeaderConstraintsRecordTargetPatientRolePatientRaceCodeP" constrainedElement="_dduXkJ5OEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wVhCAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null)->reject((raceCode.oclIsUndefined() or raceCode.isNullFlavorUndefined()) implies (not raceCode.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wVhCAookEeSkH97cUQxLGA" name="USRealmHeader2RecordTargetPatientRoleGeneralHeaderConstraintsRecordTargetPatientRolePatientRaceCode" constrainedElement="_dduXkJ5OEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wVhCA4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null)->reject((raceCode.oclIsUndefined() or raceCode.isNullFlavorUndefined()) implies (not raceCode.oclIsUndefined() and raceCode.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = raceCode.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.238' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wVhpEIokEeSkH97cUQxLGA" name="USRealmHeader2RecordTargetPatientRoleGeneralHeaderConstraintsRecordTargetPatientRolePatientEthnicGroupCodeP" constrainedElement="_dduXkJ5OEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wVhpEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null)->reject((ethnicGroupCode.oclIsUndefined() or ethnicGroupCode.isNullFlavorUndefined()) implies (not ethnicGroupCode.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wViQIIokEeSkH97cUQxLGA" name="USRealmHeader2RecordTargetPatientRoleGeneralHeaderConstraintsRecordTargetPatientRolePatientEthnicGroupCode" constrainedElement="_dduXkJ5OEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wViQIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null)->reject((ethnicGroupCode.oclIsUndefined() or ethnicGroupCode.isNullFlavorUndefined()) implies (not ethnicGroupCode.oclIsUndefined() and ethnicGroupCode.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = ethnicGroupCode.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.238' and (value.code = '2135-2' or value.code = '2186-5')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wViQIookEeSkH97cUQxLGA" name="USRealmHeader2RecordTargetPatientRoleGeneralHeaderConstraintsRecordTargetPatientRolePatientGuardian" constrainedElement="_dduXkJ5OEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wViQI4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null)->reject(guardian->exists(guardian : cda::Guardian | not guardian.oclIsUndefined() and guardian.oclIsKindOf(cda::Guardian)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wVi3MIokEeSkH97cUQxLGA" name="USRealmHeader2RecordTargetPatientRoleGeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunication" constrainedElement="_dduXkJ5OEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wVi3MYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null)->reject(languageCommunication->exists(languageCommunication : cda::LanguageCommunication | not languageCommunication.oclIsUndefined() and languageCommunication.oclIsKindOf(cda::LanguageCommunication)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wVi3MookEeSkH97cUQxLGA" name="USRealmHeader2RecordTargetGeneralHeaderConstraintsRecordTargetPatientRolePatient" constrainedElement="_dduXkJ5OEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wVi3M4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null)->reject(patient->one(patient : cda::Patient | not patient.oclIsUndefined() and patient.oclIsKindOf(cda::Patient)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wVjeQIokEeSkH97cUQxLGA" name="USRealmHeader2GeneralHeaderConstraintsRecordTargetPatientRole" constrainedElement="_dduXkJ5OEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wVjeQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null)->reject(patientRole->one(patientRole : cda::PatientRole | not patientRole.oclIsUndefined() and patientRole.oclIsKindOf(cda::PatientRole)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wVl6gIokEeSkH97cUQxLGA" name="USRealmHeader2LegalAuthenticatorSDTCSignatureText" constrainedElement="_dduXkJ5OEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wVl6gYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.legalAuthenticator->excluding(null)->reject((sDTCSignatureText.oclIsUndefined() or sDTCSignatureText.isNullFlavorUndefined()) implies (not sDTCSignatureText.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wVnIoIokEeSkH97cUQxLGA" name="USRealmHeader2AuthenticatorSDTCSignatureText" constrainedElement="_dduXkJ5OEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wVnIoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.authenticator->excluding(null)->reject((sDTCSignatureText.oclIsUndefined() or sDTCSignatureText.isNullFlavorUndefined()) implies (not sDTCSignatureText.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wVnvsIokEeSkH97cUQxLGA" name="USRealmHeader2InformantHasAssignedEntityOrRelatedEntity" constrainedElement="_dduXkJ5OEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wVnvsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.informant->excluding(null)->reject(assignedEntity.oclIsUndefined() xor relatedEntity.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wVpk4IokEeSkH97cUQxLGA" name="USRealmHeader2GeneralHeaderConstraintsComponentOfEncompassingEncounter" constrainedElement="_dduXkJ5OEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wVpk4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null)->reject(encompassingEncounter->one(encompassingEncounter : cda::EncompassingEncounter | not encompassingEncounter.oclIsUndefined() and encompassingEncounter.oclIsKindOf(cda::EncompassingEncounter)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wVqL8IokEeSkH97cUQxLGA" name="USRealmHeader2ParticipantSupportAssociatedEntityHasAssociatedPersonOrScopingOrganization" constrainedElement="_dduXkJ5OEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wVqL8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->reject((not associatedEntity.associatedPerson.oclIsUndefined()) or (not associatedEntity.scopingOrganization.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wVsoMIokEeSkH97cUQxLGA" name="USRealmHeader2DocumentationOfGeneralHeaderConstraintsDocumentationOfServiceEventPerformer" constrainedElement="_dduXkJ5OEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wVsoMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject(performer->exists(performer : cda::Performer1 | not performer.oclIsUndefined() and performer.oclIsKindOf(cda::Performer1)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wVtPQIokEeSkH97cUQxLGA" name="USRealmHeader2GeneralHeaderConstraintsDocumentationOfServiceEvent" constrainedElement="_dduXkJ5OEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wVtPQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null)->reject(serviceEvent->one(serviceEvent : cda::ServiceEvent | not serviceEvent.oclIsUndefined() and serviceEvent.oclIsKindOf(cda::ServiceEvent)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_ddxa4J5OEeOr4eM3k36wAg" general="_2DNRcBSVEeGGzu7fmW9pXw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2jWfwJ5wEeOr4eM3k36wAg" name="CarePlan">
      <ownedComment xmi:id="_hOzuoJ5xEeOr4eM3k36wAg">
        <body>CARE PLAN FRAMEWORK&#xD;
A Care Plan is a consensus-driven dynamic plan that represents all of a patient's and Care Team Members' prioritized concerns, goals, and planned interventions. It serves as a blueprint shared by all Care Team Members, including the patient, to guide the Care Team Members (including Patients, their caregivers, providers and patient's care. A Care Plan integrates multiple interventions proposed by multiple providers and disciplines for multiple conditions.&#xD;
A Care Plan represents one or more Plan(s) of Care and serves to reconcile and resolve conflicts between the various Plans of Care developed for a specific patient by different providers. While both a plan of care and a care plan include the patient's life goals and require Care Team Members (including patients) to prioritize goals and interventions, the reconciliation process becomes more complex as the number of plans of care increases. The Care Plan also serves to enable longitudinal coordination of care.&#xD;
The CDA Care Plan represents an instance of this dynamic Care Plan at a point in time. The CDA document itself is NOT dynamic.&#xD;
Key differentiators between a Care Plan CDA and CCD (another &quot;snapshot in time&quot; document):&#xD;
•  Requires relationships between various acts:&#xD;
        o  Health Concerns&#xD;
        o  Problems&#xD;
        o  Interventions&#xD;
        o  Goals&#xD;
        o  Outcomes&#xD;
•  Provides the ability to identify patient and provider priorities with each act&#xD;
•  Provides a header participant to indicate occurrences of Care Plan review&#xD;
Please see: Appendix E in Volume 1 of this guide to view Care Plan Relationship Diagrams and story board.</body>
      </ownedComment>
      <ownedRule xmi:id="_qk9kcJ8bEeOr4eM3k36wAg" name="CarePlanDoesNotHavePlanOfTreatmentSectionV2" constrainedElement="_2jWfwJ5wEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_zdJGEJ8bEeOr4eM3k36wAg">
          <language>OCL</language>
          <body>self.getAllSections()->exists(s : cda::Section | not s.oclIsTypeOf(consol::PlanOfTreatmentSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vmTLkIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsTemplateId" constrainedElement="_2jWfwJ5wEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vmTLkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.1.15')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vmVn0IokEeSkH97cUQxLGA" name="CarePlanId" constrainedElement="_2jWfwJ5wEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vmVn0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id.oclIsUndefined() or self.id.isNullFlavorUndefined()) implies (not self.id.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vmbHYIokEeSkH97cUQxLGA" name="CarePlanCodeP" constrainedElement="_2jWfwJ5wEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vmbHYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vmYrIIokEeSkH97cUQxLGA" name="CarePlanCode" constrainedElement="_2jWfwJ5wEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vmYrIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = 'CarePlan-X' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vmc8kIokEeSkH97cUQxLGA" name="CarePlanTitle" constrainedElement="_2jWfwJ5wEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vmc8kYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vnllAIokEeSkH97cUQxLGA" name="CarePlanInformationRecipient" constrainedElement="_2jWfwJ5wEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vnllAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.informationRecipient->exists(informationRecipient : cda::InformationRecipient | not informationRecipient.oclIsUndefined() and informationRecipient.oclIsKindOf(cda::InformationRecipient))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vnmMEIokEeSkH97cUQxLGA" name="CarePlanAuthenticator" constrainedElement="_2jWfwJ5wEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vnmMEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.authenticator->one(authenticator : cda::Authenticator | not authenticator.oclIsUndefined() and authenticator.oclIsKindOf(cda::Authenticator))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vnoBQIokEeSkH97cUQxLGA" name="CarePlanParticipantCarePlanReview" constrainedElement="_2jWfwJ5wEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vnoBQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->exists(participant : cda::Participant1 | not participant.oclIsUndefined() and participant.oclIsKindOf(cda::Participant1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vnpPYIokEeSkH97cUQxLGA" name="CarePlanParticipantCaregiver" constrainedElement="_2jWfwJ5wEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vnpPYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->exists(participant : cda::Participant1 | not participant.oclIsUndefined() and participant.oclIsKindOf(cda::Participant1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vnrEkIokEeSkH97cUQxLGA" name="CarePlanDocumentationOf" constrainedElement="_2jWfwJ5wEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vnrEkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->one(documentationOf : cda::DocumentationOf | not documentationOf.oclIsUndefined() and documentationOf.oclIsKindOf(cda::DocumentationOf))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vntg0IokEeSkH97cUQxLGA" name="CarePlanRelatedDocument" constrainedElement="_2jWfwJ5wEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vntg0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.relatedDocument->exists(relatedDocument : cda::RelatedDocument | not relatedDocument.oclIsUndefined() and relatedDocument.oclIsKindOf(cda::RelatedDocument))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vnuu8IokEeSkH97cUQxLGA" name="CarePlanComponentOf" constrainedElement="_2jWfwJ5wEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vnuu8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->exists(componentOf : cda::Component1 | not componentOf.oclIsUndefined() and componentOf.oclIsKindOf(cda::Component1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vnv9EIokEeSkH97cUQxLGA" name="CarePlanHealthConcernsSection" constrainedElement="_2jWfwJ5wEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vnv9EYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HealthConcernsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vnxLMYokEeSkH97cUQxLGA" name="CarePlanGoalsSection" constrainedElement="_2jWfwJ5wEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vnxLMookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::GoalsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vnyZUIokEeSkH97cUQxLGA" name="CarePlanHealthStatusEvaluationsOutcomesSection" constrainedElement="_2jWfwJ5wEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vnyZUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HealthStatusEvaluationsOutcomesSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wHLrEIokEeSkH97cUQxLGA" name="CarePlanInterventionsSection2" constrainedElement="_2jWfwJ5wEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHLrEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::InterventionsSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wVvrgIokEeSkH97cUQxLGA" name="CarePlanIIRoot" constrainedElement="_2jWfwJ5wEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wVvrgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies (not root.oclIsUndefined() )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wVxgsIokEeSkH97cUQxLGA" name="CarePlanInformationRecipientIntendedRecipientInformationRecipientName" constrainedElement="_2jWfwJ5wEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wVxgsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.informationRecipient->excluding(null).intendedRecipient->excluding(null).informationRecipient->excluding(null)->reject((name->isEmpty() or name->exists(element | element.isNullFlavorUndefined())) implies (name->size() = 1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wVyu0IokEeSkH97cUQxLGA" name="CarePlanInformationRecipientIntendedRecipientReceivedOrganizationId" constrainedElement="_2jWfwJ5wEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wVyu0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.informationRecipient->excluding(null).intendedRecipient->excluding(null).receivedOrganization->excluding(null)->reject((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wVyu0ookEeSkH97cUQxLGA" name="CarePlanInformationRecipientIntendedRecipientReceivedOrganizationName" constrainedElement="_2jWfwJ5wEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wVyu04okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.informationRecipient->excluding(null).intendedRecipient->excluding(null).receivedOrganization->excluding(null)->reject((name->isEmpty() or name->exists(element | element.isNullFlavorUndefined())) implies (not name->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wVzV4IokEeSkH97cUQxLGA" name="CarePlanInformationRecipientIntendedRecipientReceivedOrganizationStandardIndustryClassCodeP" constrainedElement="_2jWfwJ5wEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wVzV4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.informationRecipient->excluding(null).intendedRecipient->excluding(null).receivedOrganization->excluding(null)->reject((standardIndustryClassCode.oclIsUndefined() or standardIndustryClassCode.isNullFlavorUndefined()) implies (not standardIndustryClassCode.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wVzV4ookEeSkH97cUQxLGA" name="CarePlanInformationRecipientIntendedRecipientReceivedOrganizationStandardIndustryClassCode" constrainedElement="_2jWfwJ5wEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wVzV44okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.informationRecipient->excluding(null).intendedRecipient->excluding(null).receivedOrganization->excluding(null)->reject((standardIndustryClassCode.oclIsUndefined() or standardIndustryClassCode.isNullFlavorUndefined()) implies (not standardIndustryClassCode.oclIsUndefined() and standardIndustryClassCode.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = standardIndustryClassCode.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.101' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wVz88IokEeSkH97cUQxLGA" name="CarePlanInformationRecipientIntendedRecipientId" constrainedElement="_2jWfwJ5wEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wVz88YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.informationRecipient->excluding(null).intendedRecipient->excluding(null)->reject((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wV0kAIokEeSkH97cUQxLGA" name="CarePlanInformationRecipientIntendedRecipientAddr" constrainedElement="_2jWfwJ5wEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wV0kAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.informationRecipient->excluding(null).intendedRecipient->excluding(null)->reject((addr->isEmpty() or addr->exists(element | element.isNullFlavorUndefined())) implies (not addr->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wV0kAookEeSkH97cUQxLGA" name="CarePlanInformationRecipientIntendedRecipientTelecom" constrainedElement="_2jWfwJ5wEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wV0kA4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.informationRecipient->excluding(null).intendedRecipient->excluding(null)->reject((telecom->isEmpty() or telecom->exists(element | element.isNullFlavorUndefined())) implies (not telecom->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wV1LEIokEeSkH97cUQxLGA" name="CarePlanInformationRecipientIntendedRecipientInformationRecipient" constrainedElement="_2jWfwJ5wEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wV1LEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.informationRecipient->excluding(null).intendedRecipient->excluding(null)->reject(informationRecipient->one(informationRecipient : cda::Person | not informationRecipient.oclIsUndefined() and informationRecipient.oclIsKindOf(cda::Person)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wV1LEookEeSkH97cUQxLGA" name="CarePlanInformationRecipientIntendedRecipientReceivedOrganization" constrainedElement="_2jWfwJ5wEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wV1LE4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.informationRecipient->excluding(null).intendedRecipient->excluding(null)->reject(receivedOrganization->one(receivedOrganization : cda::Organization | not receivedOrganization.oclIsUndefined() and receivedOrganization.oclIsKindOf(cda::Organization)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wV1yIIokEeSkH97cUQxLGA" name="CarePlanInformationRecipientIntendedRecipient" constrainedElement="_2jWfwJ5wEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wV1yIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.informationRecipient->excluding(null)->reject(intendedRecipient->one(intendedRecipient : cda::IntendedRecipient | not intendedRecipient.oclIsUndefined() and intendedRecipient.oclIsKindOf(cda::IntendedRecipient)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wV3AQIokEeSkH97cUQxLGA" name="CarePlanAuthenticatorAssignedEntityId" constrainedElement="_2jWfwJ5wEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wV3AQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.authenticator->excluding(null).assignedEntity->excluding(null)->reject((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wV3nUIokEeSkH97cUQxLGA" name="CarePlanAuthenticatorAssignedEntityCode" constrainedElement="_2jWfwJ5wEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wV3nUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.authenticator->excluding(null).assignedEntity->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined() and code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = code.oclAsType(datatypes::CE) in &#xD;
value.code = 'SELF' and value.codeSystem = '2.16.840.1.113883.5.111'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wV3nUookEeSkH97cUQxLGA" name="CarePlanAuthenticatorAssignedEntityCodeP" constrainedElement="_2jWfwJ5wEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wV3nU4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.authenticator->excluding(null).assignedEntity->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wV4OYIokEeSkH97cUQxLGA" name="CarePlanAuthenticatorTime" constrainedElement="_2jWfwJ5wEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wV4OYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.authenticator->excluding(null)->reject((time.oclIsUndefined() or time.isNullFlavorUndefined()) implies (not time.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wV41cIokEeSkH97cUQxLGA" name="CarePlanAuthenticatorSignatureCode" constrainedElement="_2jWfwJ5wEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wV41cYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.authenticator->excluding(null)->reject((signatureCode.oclIsUndefined() or signatureCode.isNullFlavorUndefined()) implies (not signatureCode.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wV41cookEeSkH97cUQxLGA" name="CarePlanAuthenticatorSDTCSignatureText" constrainedElement="_2jWfwJ5wEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wV41c4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.authenticator->excluding(null)->reject((sDTCSignatureText.oclIsUndefined() or sDTCSignatureText.isNullFlavorUndefined()) implies (not sDTCSignatureText.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wV5cgIokEeSkH97cUQxLGA" name="CarePlanAuthenticatorAssignedEntity" constrainedElement="_2jWfwJ5wEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wV5cgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.authenticator->excluding(null)->reject(assignedEntity->one(assignedEntity : cda::AssignedEntity | not assignedEntity.oclIsUndefined() and assignedEntity.oclIsKindOf(cda::AssignedEntity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wV6qoIokEeSkH97cUQxLGA" name="CarePlanParticipantCarePlanReviewAssociatedEntityClassCode" constrainedElement="_2jWfwJ5wEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wV6qoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).associatedEntity->excluding(null)->reject(isDefined('classCode'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wV7RsIokEeSkH97cUQxLGA" name="CarePlanParticipantCarePlanReviewAssociatedEntityId" constrainedElement="_2jWfwJ5wEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wV7RsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).associatedEntity->excluding(null)->reject((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wV7RsookEeSkH97cUQxLGA" name="CarePlanParticipantCarePlanReviewAssociatedEntityCodeP" constrainedElement="_2jWfwJ5wEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wV7Rs4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).associatedEntity->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wV74wIokEeSkH97cUQxLGA" name="CarePlanParticipantCarePlanReviewAssociatedEntityCode" constrainedElement="_2jWfwJ5wEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wV74wYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).associatedEntity->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined() and code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = code.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.5.111' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wV8f0IokEeSkH97cUQxLGA" name="CarePlanParticipantCarePlanReviewTypeCode" constrainedElement="_2jWfwJ5wEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wV8f0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->reject(typeCode=vocab::ParticipationType::IND)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wV8f0ookEeSkH97cUQxLGA" name="CarePlanParticipantCarePlanReviewFunctionCode" constrainedElement="_2jWfwJ5wEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wV8f04okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->reject((functionCode.oclIsUndefined() or functionCode.isNullFlavorUndefined()) implies (not functionCode.oclIsUndefined() and functionCode.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = functionCode.oclAsType(datatypes::CE) in &#xD;
value.code = '425268008' and value.codeSystem = '2.16.840.1.113883.6.96'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wV9G4IokEeSkH97cUQxLGA" name="CarePlanParticipantCarePlanReviewFunctionCodeP" constrainedElement="_2jWfwJ5wEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wV9G4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->reject((functionCode.oclIsUndefined() or functionCode.isNullFlavorUndefined()) implies (not functionCode.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wV9G4ookEeSkH97cUQxLGA" name="CarePlanParticipantCarePlanReviewTime" constrainedElement="_2jWfwJ5wEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wV9G44okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->reject((time.oclIsUndefined() or time.isNullFlavorUndefined()) implies (not time.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wV9t8IokEeSkH97cUQxLGA" name="CarePlanParticipantCarePlanReviewAssociatedEntity" constrainedElement="_2jWfwJ5wEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wV9t8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->reject(associatedEntity->one(associatedEntity : cda::AssociatedEntity | not associatedEntity.oclIsUndefined() and associatedEntity.oclIsKindOf(cda::AssociatedEntity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wV_jIIokEeSkH97cUQxLGA" name="CarePlanParticipantCaregiverAssociatedEntityAssociatedPersonName" constrainedElement="_2jWfwJ5wEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wV_jIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).associatedEntity->excluding(null).associatedPerson->excluding(null)->reject((name->isEmpty() or name->exists(element | element.isNullFlavorUndefined())) implies (not name->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wWAKMIokEeSkH97cUQxLGA" name="CarePlanParticipantCaregiverAssociatedEntityClassCodeP" constrainedElement="_2jWfwJ5wEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wWAKMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).associatedEntity->excluding(null)->reject(isDefined('classCode'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wWAKMookEeSkH97cUQxLGA" name="CarePlanParticipantCaregiverAssociatedEntityClassCode" constrainedElement="_2jWfwJ5wEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wWAKM4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).associatedEntity->excluding(null)->reject(not classCode.oclIsUndefined() and classCode.oclIsKindOf(vocab::RoleClassAssociative) and &#xD;
let value : vocab::RoleClassAssociative = classCode.oclAsType(vocab::RoleClassAssociative) in &#xD;
value = vocab::RoleClassAssociative::PRS or value = vocab::RoleClassAssociative::NOK or value = vocab::RoleClassAssociative::CAREGIVER or value = vocab::RoleClassAssociative::AGNT or value = vocab::RoleClassAssociative::GUAR or value = vocab::RoleClassAssociative::ECON)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wWAxQIokEeSkH97cUQxLGA" name="CarePlanParticipantCaregiverAssociatedEntityAssociatedPerson" constrainedElement="_2jWfwJ5wEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wWAxQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).associatedEntity->excluding(null)->reject(associatedPerson->one(associatedPerson : cda::Person | not associatedPerson.oclIsUndefined() and associatedPerson.oclIsKindOf(cda::Person)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wWBYUIokEeSkH97cUQxLGA" name="CarePlanParticipantCaregiverTypeCode" constrainedElement="_2jWfwJ5wEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wWBYUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->reject(typeCode=vocab::ParticipationType::IND)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wWBYUookEeSkH97cUQxLGA" name="CarePlanParticipantCaregiverAssociatedEntity" constrainedElement="_2jWfwJ5wEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wWBYU4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->reject(associatedEntity->one(associatedEntity : cda::AssociatedEntity | not associatedEntity.oclIsUndefined() and associatedEntity.oclIsKindOf(cda::AssociatedEntity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wWEboIokEeSkH97cUQxLGA" name="CarePlanDocumentationOfServiceEventPerformerAssignedEntityId" constrainedElement="_2jWfwJ5wEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wWEboYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null).performer->excluding(null).assignedEntity->excluding(null)->reject((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wWFCsIokEeSkH97cUQxLGA" name="CarePlanDocumentationOfServiceEventPerformerAssignedEntityCode" constrainedElement="_2jWfwJ5wEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wWFCsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null).performer->excluding(null).assignedEntity->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wWFpwIokEeSkH97cUQxLGA" name="CarePlanDocumentationOfServiceEventPerformerTypeCode" constrainedElement="_2jWfwJ5wEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wWFpwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null).performer->excluding(null)->reject(typeCode=vocab::x_ServiceEventPerformer::PRF)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wWGQ0IokEeSkH97cUQxLGA" name="CarePlanDocumentationOfServiceEventPerformerAssignedEntity" constrainedElement="_2jWfwJ5wEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wWGQ0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null).performer->excluding(null)->reject(assignedEntity->one(assignedEntity : cda::AssignedEntity | not assignedEntity.oclIsUndefined() and assignedEntity.oclIsKindOf(cda::AssignedEntity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wWGQ0ookEeSkH97cUQxLGA" name="CarePlanDocumentationOfServiceEventClassCode" constrainedElement="_2jWfwJ5wEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wWG34IokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject(isDefined('classCode') and classCode=vocab::ActClassRoot::PCPR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wWG34YokEeSkH97cUQxLGA" name="CarePlanDocumentationOfServiceEventEffectiveTime" constrainedElement="_2jWfwJ5wEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wWG34ookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject((effectiveTime.oclIsUndefined() or effectiveTime.isNullFlavorUndefined()) implies (not effectiveTime.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wWHe8IokEeSkH97cUQxLGA" name="CarePlanDocumentationOfServiceEventPerformer1" constrainedElement="_2jWfwJ5wEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wWHe8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject(performer->exists(performer : cda::Performer1 | not performer.oclIsUndefined() and performer.oclIsKindOf(cda::Performer1)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wWIGAIokEeSkH97cUQxLGA" name="CarePlanDocumentationOfServiceEvent" constrainedElement="_2jWfwJ5wEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wWIGAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null)->reject(serviceEvent->one(serviceEvent : cda::ServiceEvent | not serviceEvent.oclIsUndefined() and serviceEvent.oclIsKindOf(cda::ServiceEvent)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wWJ7MIokEeSkH97cUQxLGA" name="CarePlanRelatedDocumentParentDocumentSetId" constrainedElement="_2jWfwJ5wEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wWJ7MYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.relatedDocument->excluding(null).parentDocument->excluding(null)->reject((setId.oclIsUndefined() or setId.isNullFlavorUndefined()) implies (not setId.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wWKiQIokEeSkH97cUQxLGA" name="CarePlanRelatedDocumentParentDocumentVersionNumber" constrainedElement="_2jWfwJ5wEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wWKiQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.relatedDocument->excluding(null).parentDocument->excluding(null)->reject((versionNumber.oclIsUndefined() or versionNumber.isNullFlavorUndefined()) implies (not versionNumber.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wWLJUIokEeSkH97cUQxLGA" name="CarePlanRelatedDocumentTypeCodeP" constrainedElement="_2jWfwJ5wEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wWLJUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.relatedDocument->excluding(null)->reject(isDefined('typeCode'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wWLwYIokEeSkH97cUQxLGA" name="CarePlanRelatedDocumentTypeCode" constrainedElement="_2jWfwJ5wEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wWLwYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.relatedDocument->excluding(null)->reject(not typeCode.oclIsUndefined() and typeCode.oclIsKindOf(vocab::x_ActRelationshipDocument) and &#xD;
let value : vocab::x_ActRelationshipDocument = typeCode.oclAsType(vocab::x_ActRelationshipDocument) in &#xD;
value = vocab::x_ActRelationshipDocument::APND or value = vocab::x_ActRelationshipDocument::RPLC)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wWMXcIokEeSkH97cUQxLGA" name="CarePlanRelatedDocumentParentDocument" constrainedElement="_2jWfwJ5wEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wWMXcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.relatedDocument->excluding(null)->reject(parentDocument->one(parentDocument : cda::ParentDocument | not parentDocument.oclIsUndefined() and parentDocument.oclIsKindOf(cda::ParentDocument)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wWOzsIokEeSkH97cUQxLGA" name="CarePlanComponentOfEncompassingEncounterCode" constrainedElement="_2jWfwJ5wEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wWOzsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wWPawIokEeSkH97cUQxLGA" name="CarePlanComponentOfEncompassingEncounterEffectiveTime" constrainedElement="_2jWfwJ5wEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wWPawYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject((effectiveTime.oclIsUndefined() or effectiveTime.isNullFlavorUndefined()) implies (not effectiveTime.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wWQB0IokEeSkH97cUQxLGA" name="CarePlanComponentOfEncompassingEncounter" constrainedElement="_2jWfwJ5wEeOr4eM3k36wAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wWQB0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null)->reject(encompassingEncounter->one(encompassingEncounter : cda::EncompassingEncounter | not encompassingEncounter.oclIsUndefined() and encompassingEncounter.oclIsKindOf(cda::EncompassingEncounter)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2jWfwZ5wEeOr4eM3k36wAg" general="_dduXkJ5OEeOr4eM3k36wAg"/>
      <ownedOperation xmi:id="_vnwkIIokEeSkH97cUQxLGA" name="getHealthConcernsSection" bodyCondition="_vnwkI4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vnwkI4okEeSkH97cUQxLGA" name="body" constrainedElement="_vnwkIIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vnxLMIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HealthConcernsSection))->asSequence()->any(true).oclAsType(consol::HealthConcernsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vnwkIYokEeSkH97cUQxLGA" type="_2umuYJ18EeORR8_YW0n_jQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vnwkIookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vnxyQIokEeSkH97cUQxLGA" name="getGoalsSection" bodyCondition="_vnxyQ4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vnxyQ4okEeSkH97cUQxLGA" name="body" constrainedElement="_vnxyQIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vnxyRIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::GoalsSection))->asSequence()->any(true).oclAsType(consol::GoalsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vnxyQYokEeSkH97cUQxLGA" type="_YPOXoJ14EeORR8_YW0n_jQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vnxyQookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vnzAYIokEeSkH97cUQxLGA" name="getHealthStatusEvaluationsOutcomesSection" bodyCondition="_vnzAY4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vnzAY4okEeSkH97cUQxLGA" name="body" constrainedElement="_vnzAYIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vnzAZIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HealthStatusEvaluationsOutcomesSection))->asSequence()->any(true).oclAsType(consol::HealthStatusEvaluationsOutcomesSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vnzAYYokEeSkH97cUQxLGA" type="_EHgh0J2AEeORR8_YW0n_jQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vnzAYookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wHMSIIokEeSkH97cUQxLGA" name="getInterventionsSection2" bodyCondition="_wHMSI4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wHMSI4okEeSkH97cUQxLGA" name="body" constrainedElement="_wHMSIIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHMSJIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::InterventionsSection2))->asSequence()->any(true).oclAsType(consol::InterventionsSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wHMSIYokEeSkH97cUQxLGA" type="_YCS1AP1WEeOW-qBXb0kbTA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wHMSIookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_itRPkKAEEeOQs7VC4HptuQ" name="ReferralNote">
      <ownedComment xmi:id="_3p_hIKAEEeOQs7VC4HptuQ">
        <body>This document communicates pertinent patient information to the consulting provider from a referring provider. The information in this document includes the reason for the referral and additional medical information that would augment care delivery. &#xD;
Examples of referral situations are when a patient is referred from a family physician to a cardiologist for follow up for a cardiac condition or a when patient is sent by a primary care provider to an emergency department.</body>
      </ownedComment>
      <ownedRule xmi:id="_Y-s94KAXEeOQs7VC4HptuQ" name="ReferralNoteHasAnAssementAndPlanSection2OrBothAssementSectionAndPlanOfTreatmentSection2" constrainedElement="_itRPkKAEEeOQs7VC4HptuQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_3CkaIKAXEeOQs7VC4HptuQ">
          <language>OCL</language>
          <body>(self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfTreatmentSection2)) and  self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentSection))) xor self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentAndPlanSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_8wCTQKAXEeOQs7VC4HptuQ" name="ReferralNoteDoesNotHaveAssementAndPlanSection2WhenAssementAndPlanOfTreatment2ArePresent" constrainedElement="_itRPkKAEEeOQs7VC4HptuQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Dun2AKAYEeOQs7VC4HptuQ">
          <language>OCL</language>
          <body>(self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfTreatmentSection2)) or  self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentSection))) xor self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentAndPlanSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vn0OgIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsTemplateId" constrainedElement="_itRPkKAEEeOQs7VC4HptuQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vn0OgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.1.14')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vn5uEIokEeSkH97cUQxLGA" name="ReferralNoteCodeP" constrainedElement="_itRPkKAEEeOQs7VC4HptuQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vn5uEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vn3R0IokEeSkH97cUQxLGA" name="ReferralNoteCode" constrainedElement="_itRPkKAEEeOQs7VC4HptuQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vn3R0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and not value.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vn8KUIokEeSkH97cUQxLGA" name="ReferralNoteTitle" constrainedElement="_itRPkKAEEeOQs7VC4HptuQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vn8KUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_voT9wIokEeSkH97cUQxLGA" name="ReferralNoteInformationRecipient" constrainedElement="_itRPkKAEEeOQs7VC4HptuQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_voT9wYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.informationRecipient->one(informationRecipient : cda::InformationRecipient | not informationRecipient.oclIsUndefined() and informationRecipient.oclIsKindOf(cda::InformationRecipient))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_voVy8IokEeSkH97cUQxLGA" name="ReferralNoteParticipantCaregiver" constrainedElement="_itRPkKAEEeOQs7VC4HptuQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_voVy8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->exists(participant : cda::Participant1 | not participant.oclIsUndefined() and participant.oclIsKindOf(cda::Participant1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_voXoIIokEeSkH97cUQxLGA" name="ReferralNoteParticipantCallbackContact" constrainedElement="_itRPkKAEEeOQs7VC4HptuQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_voXoIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->exists(participant : cda::Participant1 | not participant.oclIsUndefined() and participant.oclIsKindOf(cda::Participant1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_voaEYIokEeSkH97cUQxLGA" name="ReferralNoteChiefComplaintSection" constrainedElement="_itRPkKAEEeOQs7VC4HptuQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_voaEYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->exists(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vobShYokEeSkH97cUQxLGA" name="ReferralNoteChiefComplaintAndReasonForVisitSection" constrainedElement="_itRPkKAEEeOQs7VC4HptuQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vobShookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wHM5MIokEeSkH97cUQxLGA" name="ReferralNotePlanOfTreatmentSection2" constrainedElement="_itRPkKAEEeOQs7VC4HptuQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHM5MYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfTreatmentSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wHOHUIokEeSkH97cUQxLGA" name="ReferralNoteAdvanceDirectivesSectionEntriesOptional2" constrainedElement="_itRPkKAEEeOQs7VC4HptuQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHOHUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AdvanceDirectivesSectionEntriesOptional2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wHPVcIokEeSkH97cUQxLGA" name="ReferralNoteHistoryOfPresentIllnessSection" constrainedElement="_itRPkKAEEeOQs7VC4HptuQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHPVcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HistoryOfPresentIllnessSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wHQjkIokEeSkH97cUQxLGA" name="ReferralNoteFamilyHistorySection" constrainedElement="_itRPkKAEEeOQs7VC4HptuQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHQjkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::FamilyHistorySection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wHRKpYokEeSkH97cUQxLGA" name="ReferralNoteImmunizationsSection2" constrainedElement="_itRPkKAEEeOQs7VC4HptuQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHRKpookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ImmunizationsSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wHS_0IokEeSkH97cUQxLGA" name="ReferralNoteProblemSection2" constrainedElement="_itRPkKAEEeOQs7VC4HptuQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHS_0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wHTm5YokEeSkH97cUQxLGA" name="ReferralNoteProceduresSectionEntriesOptional2" constrainedElement="_itRPkKAEEeOQs7VC4HptuQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHTm5ookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSectionEntriesOptional2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wHU1BYokEeSkH97cUQxLGA" name="ReferralNoteResultsSection2" constrainedElement="_itRPkKAEEeOQs7VC4HptuQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHU1BookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ResultsSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wHWDJYokEeSkH97cUQxLGA" name="ReferralNoteReviewOfSystemsSection" constrainedElement="_itRPkKAEEeOQs7VC4HptuQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHWDJookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReviewOfSystemsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wHX4UIokEeSkH97cUQxLGA" name="ReferralNoteSocialHistorySection2" constrainedElement="_itRPkKAEEeOQs7VC4HptuQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHX4UYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::SocialHistorySection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wHZGcIokEeSkH97cUQxLGA" name="ReferralNoteVitalSignsSection2" constrainedElement="_itRPkKAEEeOQs7VC4HptuQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHZGcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wHaUkIokEeSkH97cUQxLGA" name="ReferralNoteFunctionalStatusSection2" constrainedElement="_itRPkKAEEeOQs7VC4HptuQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHaUkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::FunctionalStatusSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wHbisIokEeSkH97cUQxLGA" name="ReferralNotePhysicalExamSection2" constrainedElement="_itRPkKAEEeOQs7VC4HptuQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHbisYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PhysicalExamSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wHcw0IokEeSkH97cUQxLGA" name="ReferralNoteAdvanceDirectivesSectionEntriesOptional22" constrainedElement="_itRPkKAEEeOQs7VC4HptuQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHcw0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AdvanceDirectivesSectionEntriesOptional2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wHd-8IokEeSkH97cUQxLGA" name="ReferralNoteNutritionSection" constrainedElement="_itRPkKAEEeOQs7VC4HptuQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHd-8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::NutritionSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wHfNEIokEeSkH97cUQxLGA" name="ReferralNoteMentalStatusSection" constrainedElement="_itRPkKAEEeOQs7VC4HptuQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHfNEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MentalStatusSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wHgbMIokEeSkH97cUQxLGA" name="ReferralNoteMedicalEquipmentSection2" constrainedElement="_itRPkKAEEeOQs7VC4HptuQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHgbMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicalEquipmentSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wHhpUIokEeSkH97cUQxLGA" name="ReferralNoteAllergiesSection2" constrainedElement="_itRPkKAEEeOQs7VC4HptuQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHhpUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wHiQZYokEeSkH97cUQxLGA" name="ReferralNoteAssessmentSection" constrainedElement="_itRPkKAEEeOQs7VC4HptuQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHiQZookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wHjehYokEeSkH97cUQxLGA" name="ReferralNoteAssessmentAndPlanSection2" constrainedElement="_itRPkKAEEeOQs7VC4HptuQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHkFkIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentAndPlanSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wHkspYokEeSkH97cUQxLGA" name="ReferralNoteHistoryOfPastIllnessSection2" constrainedElement="_itRPkKAEEeOQs7VC4HptuQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHkspookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HistoryOfPastIllnessSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wHl6xYokEeSkH97cUQxLGA" name="ReferralNoteGeneralStatusSection" constrainedElement="_itRPkKAEEeOQs7VC4HptuQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHl6xookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::GeneralStatusSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wHnI5YokEeSkH97cUQxLGA" name="ReferralNoteMedicationsSection2" constrainedElement="_itRPkKAEEeOQs7VC4HptuQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHnI5ookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wHoXBYokEeSkH97cUQxLGA" name="ReferralNoteReasonForReferralSection2" constrainedElement="_itRPkKAEEeOQs7VC4HptuQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHoXBookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForReferralSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wWVhYIokEeSkH97cUQxLGA" name="ReferralNoteInformationRecipientIntendedRecipientPersonPNFamily" constrainedElement="_itRPkKAEEeOQs7VC4HptuQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wWVhYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.informationRecipient->excluding(null).intendedRecipient->excluding(null).informationRecipient->excluding(null).name->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((family->isEmpty() or family->exists(element | element.isNullFlavorUndefined())) implies (family->size() = 1) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wWVhYookEeSkH97cUQxLGA" name="ReferralNoteInformationRecipientIntendedRecipientPersonPNGiven" constrainedElement="_itRPkKAEEeOQs7VC4HptuQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wWVhY4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.informationRecipient->excluding(null).intendedRecipient->excluding(null).informationRecipient->excluding(null).name->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((given->isEmpty() or given->exists(element | element.isNullFlavorUndefined())) implies (given->size() = 1) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wWWIcIokEeSkH97cUQxLGA" name="ReferralNoteInformationRecipientIntendedRecipientPersonName" constrainedElement="_itRPkKAEEeOQs7VC4HptuQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wWWIcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.informationRecipient->excluding(null).intendedRecipient->excluding(null).informationRecipient->excluding(null)->reject((name->isEmpty() or name->exists(element | element.isNullFlavorUndefined())) implies (name->size() = 1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wWWvgIokEeSkH97cUQxLGA" name="ReferralNoteInformationRecipientIntendedRecipientAddr" constrainedElement="_itRPkKAEEeOQs7VC4HptuQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wWWvgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.informationRecipient->excluding(null).intendedRecipient->excluding(null)->reject((addr->isEmpty() or addr->exists(element | element.isNullFlavorUndefined())) implies (not addr->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wWXWkIokEeSkH97cUQxLGA" name="ReferralNoteInformationRecipientIntendedRecipientTelecom" constrainedElement="_itRPkKAEEeOQs7VC4HptuQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wWXWkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.informationRecipient->excluding(null).intendedRecipient->excluding(null)->reject((telecom->isEmpty() or telecom->exists(element | element.isNullFlavorUndefined())) implies (not telecom->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wWXWkookEeSkH97cUQxLGA" name="ReferralNoteInformationRecipientIntendedRecipientReceivedOrganization" constrainedElement="_itRPkKAEEeOQs7VC4HptuQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wWXWk4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.informationRecipient->excluding(null).intendedRecipient->excluding(null)->reject(receivedOrganization->one(receivedOrganization : cda::Organization | not receivedOrganization.oclIsUndefined() and receivedOrganization.oclIsKindOf(rim::Entity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wWX9oIokEeSkH97cUQxLGA" name="ReferralNoteInformationRecipientIntendedRecipientInformationRecipient" constrainedElement="_itRPkKAEEeOQs7VC4HptuQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wWX9oYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.informationRecipient->excluding(null).intendedRecipient->excluding(null)->reject(informationRecipient->one(informationRecipient : cda::Person | not informationRecipient.oclIsUndefined() and informationRecipient.oclIsKindOf(cda::Person)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wWYksIokEeSkH97cUQxLGA" name="ReferralNoteInformationRecipientIntendedRecipient" constrainedElement="_itRPkKAEEeOQs7VC4HptuQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wWYksYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.informationRecipient->excluding(null)->reject(intendedRecipient->one(intendedRecipient : cda::IntendedRecipient | not intendedRecipient.oclIsUndefined() and intendedRecipient.oclIsKindOf(cda::IntendedRecipient)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wWaZ4IokEeSkH97cUQxLGA" name="ReferralNoteParticipantCaregiverAssociatedEntityAssociatedPersonName" constrainedElement="_itRPkKAEEeOQs7VC4HptuQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wWaZ4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).associatedEntity->excluding(null).associatedPerson->excluding(null)->reject((name->isEmpty() or name->exists(element | element.isNullFlavorUndefined())) implies (name->size() = 1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wWbA8IokEeSkH97cUQxLGA" name="ReferralNoteParticipantCaregiverAssociatedEntityClassCodeP" constrainedElement="_itRPkKAEEeOQs7VC4HptuQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wWbA8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).associatedEntity->excluding(null)->reject(isDefined('classCode'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wWboAIokEeSkH97cUQxLGA" name="ReferralNoteParticipantCaregiverAssociatedEntityClassCode" constrainedElement="_itRPkKAEEeOQs7VC4HptuQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wWboAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).associatedEntity->excluding(null)->reject(not classCode.oclIsUndefined() and classCode.oclIsKindOf(vocab::RoleClassAssociative) and &#xD;
let value : vocab::RoleClassAssociative = classCode.oclAsType(vocab::RoleClassAssociative) in &#xD;
value = vocab::RoleClassAssociative::PRS or value = vocab::RoleClassAssociative::NOK or value = vocab::RoleClassAssociative::CAREGIVER or value = vocab::RoleClassAssociative::AGNT or value = vocab::RoleClassAssociative::GUAR or value = vocab::RoleClassAssociative::ECON)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wWboAookEeSkH97cUQxLGA" name="ReferralNoteParticipantCaregiverAssociatedEntityAssociatedPerson" constrainedElement="_itRPkKAEEeOQs7VC4HptuQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wWcPEIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).associatedEntity->excluding(null)->reject(associatedPerson->one(associatedPerson : cda::Person | not associatedPerson.oclIsUndefined() and associatedPerson.oclIsKindOf(cda::Person)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wWcPEYokEeSkH97cUQxLGA" name="ReferralNoteParticipantCaregiverNullFlavor" constrainedElement="_itRPkKAEEeOQs7VC4HptuQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wWcPEookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->reject(isDefined('nullFlavor'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wWc2IIokEeSkH97cUQxLGA" name="ReferralNoteParticipantCaregiverAssociatedEntity" constrainedElement="_itRPkKAEEeOQs7VC4HptuQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wWc2IYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->reject(associatedEntity->one(associatedEntity : cda::AssociatedEntity | not associatedEntity.oclIsUndefined() and associatedEntity.oclIsKindOf(cda::AssociatedEntity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wWerUIokEeSkH97cUQxLGA" name="ReferralNoteParticipantCallbackContactAssociatedEntityAssociatedPersonName" constrainedElement="_itRPkKAEEeOQs7VC4HptuQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wWerUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).associatedEntity->excluding(null).associatedPerson->excluding(null)->reject((name->isEmpty() or name->exists(element | element.isNullFlavorUndefined())) implies (not name->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wWerUookEeSkH97cUQxLGA" name="ReferralNoteParticipantCallbackContactAssociatedEntityId" constrainedElement="_itRPkKAEEeOQs7VC4HptuQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wWerU4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).associatedEntity->excluding(null)->reject((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wWfSYIokEeSkH97cUQxLGA" name="ReferralNoteParticipantCallbackContactAssociatedEntityAddr" constrainedElement="_itRPkKAEEeOQs7VC4HptuQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wWfSYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).associatedEntity->excluding(null)->reject((addr->isEmpty() or addr->exists(element | element.isNullFlavorUndefined())) implies (not addr->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wWf5cIokEeSkH97cUQxLGA" name="ReferralNoteParticipantCallbackContactAssociatedEntityTelecom" constrainedElement="_itRPkKAEEeOQs7VC4HptuQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wWf5cYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).associatedEntity->excluding(null)->reject((telecom->isEmpty() or telecom->exists(element | element.isNullFlavorUndefined())) implies (not telecom->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wWf5cookEeSkH97cUQxLGA" name="ReferralNoteParticipantCallbackContactAssociatedEntityAssociatedPerson" constrainedElement="_itRPkKAEEeOQs7VC4HptuQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wWf5c4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).associatedEntity->excluding(null)->reject(associatedPerson->one(associatedPerson : cda::Person | not associatedPerson.oclIsUndefined() and associatedPerson.oclIsKindOf(cda::Person)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wWgggIokEeSkH97cUQxLGA" name="ReferralNoteParticipantCallbackContactAssociatedEntityScopingOrganization" constrainedElement="_itRPkKAEEeOQs7VC4HptuQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wWgggYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).associatedEntity->excluding(null)->reject(scopingOrganization->one(scopingOrganization : cda::Organization | not scopingOrganization.oclIsUndefined() and scopingOrganization.oclIsKindOf(rim::Entity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wWgggookEeSkH97cUQxLGA" name="ReferralNoteParticipantCallbackContactTypeCode" constrainedElement="_itRPkKAEEeOQs7VC4HptuQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wWggg4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->reject(typeCode=vocab::ParticipationType::CALLBCK)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wWhHkIokEeSkH97cUQxLGA" name="ReferralNoteParticipantCallbackContactAssociatedEntity" constrainedElement="_itRPkKAEEeOQs7VC4HptuQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wWhHkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->reject(associatedEntity->one(associatedEntity : cda::AssociatedEntity | not associatedEntity.oclIsUndefined() and associatedEntity.oclIsKindOf(cda::AssociatedEntity)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_itUS4KAEEeOQs7VC4HptuQ" general="_dduXkJ5OEeOr4eM3k36wAg"/>
      <ownedOperation xmi:id="_vobSgIokEeSkH97cUQxLGA" name="getChiefComplaintSections" bodyCondition="_vobSg4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vobSg4okEeSkH97cUQxLGA" name="body" constrainedElement="_vobSgIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vobShIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection)).oclAsType(consol::ChiefComplaintSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vobSgYokEeSkH97cUQxLGA" type="_2PWQCBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vobSgookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vocgoIokEeSkH97cUQxLGA" name="getChiefComplaintAndReasonForVisitSection" bodyCondition="_vocgo4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vocgo4okEeSkH97cUQxLGA" name="body" constrainedElement="_vocgoIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vocgpIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))->asSequence()->any(true).oclAsType(consol::ChiefComplaintAndReasonForVisitSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vocgoYokEeSkH97cUQxLGA" type="_oI7CQCsaEeGHF88-qhhUMA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vocgoookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wHNgQIokEeSkH97cUQxLGA" name="getPlanOfTreatmentSection2" bodyCondition="_wHNgQ4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wHNgQ4okEeSkH97cUQxLGA" name="body" constrainedElement="_wHNgQIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHNgRIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfTreatmentSection2))->asSequence()->any(true).oclAsType(consol::PlanOfTreatmentSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wHNgQYokEeSkH97cUQxLGA" type="_bwml0P4yEeO_Yb9cO8w3bA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wHNgQookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wHOuYIokEeSkH97cUQxLGA" name="getAdvanceDirectivesSectionEntriesOptional2" bodyCondition="_wHOuY4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wHOuY4okEeSkH97cUQxLGA" name="body" constrainedElement="_wHOuYIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHOuZIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AdvanceDirectivesSectionEntriesOptional2))->asSequence()->any(true).oclAsType(consol::AdvanceDirectivesSectionEntriesOptional2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wHOuYYokEeSkH97cUQxLGA" type="_jsKhYAFXEeSLIY0bHb-fFQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wHOuYookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wHP8gIokEeSkH97cUQxLGA" name="getHistoryOfPresentIllnessSection" bodyCondition="_wHP8g4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wHP8g4okEeSkH97cUQxLGA" name="body" constrainedElement="_wHP8gIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHP8hIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HistoryOfPresentIllnessSection))->asSequence()->any(true).oclAsType(consol::HistoryOfPresentIllnessSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wHP8gYokEeSkH97cUQxLGA" type="_2PcWsRSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wHP8gookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wHRKoIokEeSkH97cUQxLGA" name="getFamilyHistorySection" bodyCondition="_wHRKo4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wHRKo4okEeSkH97cUQxLGA" name="body" constrainedElement="_wHRKoIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHRKpIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::FamilyHistorySection))->asSequence()->any(true).oclAsType(consol::FamilyHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wHRKoYokEeSkH97cUQxLGA" type="_2IWQIxSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wHRKoookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wHSYwIokEeSkH97cUQxLGA" name="getImmunizationsSection2" bodyCondition="_wHSYw4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wHSYw4okEeSkH97cUQxLGA" name="body" constrainedElement="_wHSYwIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHSYxIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ImmunizationsSection2))->asSequence()->any(true).oclAsType(consol::ImmunizationsSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wHSYwYokEeSkH97cUQxLGA" type="_14bikALNEeSIPYXg7AgJzw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wHSYwookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wHTm4IokEeSkH97cUQxLGA" name="getProblemSection2" bodyCondition="_wHTm44okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wHTm44okEeSkH97cUQxLGA" name="body" constrainedElement="_wHTm4IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHTm5IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSection2))->asSequence()->any(true).oclAsType(consol::ProblemSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wHTm4YokEeSkH97cUQxLGA" type="_IXrA4ALVEeSyydFGYJajGA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wHTm4ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wHU1AIokEeSkH97cUQxLGA" name="getProceduresSectionEntriesOptional2" bodyCondition="_wHU1A4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wHU1A4okEeSkH97cUQxLGA" name="body" constrainedElement="_wHU1AIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHU1BIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSectionEntriesOptional2))->asSequence()->any(true).oclAsType(consol::ProceduresSectionEntriesOptional2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wHU1AYokEeSkH97cUQxLGA" type="_80dMoAB0EeSLOb2O6vSPzg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wHU1AookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wHWDIIokEeSkH97cUQxLGA" name="getResultsSection2" bodyCondition="_wHWDI4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wHWDI4okEeSkH97cUQxLGA" name="body" constrainedElement="_wHWDIIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHWDJIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ResultsSection2))->asSequence()->any(true).oclAsType(consol::ResultsSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wHWDIYokEeSkH97cUQxLGA" type="_bAAhEALtEeSueJWOLw5iaQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wHWDIookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wHXRQIokEeSkH97cUQxLGA" name="getReviewOfSystemsSection" bodyCondition="_wHXRQ4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wHXRQ4okEeSkH97cUQxLGA" name="body" constrainedElement="_wHXRQIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHXRRIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReviewOfSystemsSection))->asSequence()->any(true).oclAsType(consol::ReviewOfSystemsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wHXRQYokEeSkH97cUQxLGA" type="_2RqkMBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wHXRQookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wHYfYIokEeSkH97cUQxLGA" name="getSocialHistorySection2" bodyCondition="_wHYfY4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wHYfY4okEeSkH97cUQxLGA" name="body" constrainedElement="_wHYfYIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHYfZIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::SocialHistorySection2))->asSequence()->any(true).oclAsType(consol::SocialHistorySection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wHYfYYokEeSkH97cUQxLGA" type="_wLWZMAFHEeSG_MJH-zNFRw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wHYfYookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wHZtgIokEeSkH97cUQxLGA" name="getVitalSignsSection2" bodyCondition="_wHZtg4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wHZtg4okEeSkH97cUQxLGA" name="body" constrainedElement="_wHZtgIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHZthIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSection2))->asSequence()->any(true).oclAsType(consol::VitalSignsSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wHZtgYokEeSkH97cUQxLGA" type="_D3010ALzEeSM0Jd2D1FgKw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wHZtgookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wHa7oIokEeSkH97cUQxLGA" name="getFunctionalStatusSection2" bodyCondition="_wHa7o4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wHa7o4okEeSkH97cUQxLGA" name="body" constrainedElement="_wHa7oIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHa7pIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::FunctionalStatusSection2))->asSequence()->any(true).oclAsType(consol::FunctionalStatusSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wHa7oYokEeSkH97cUQxLGA" type="_8rMFkPyHEeOozpLKXSm5NA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wHa7oookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wHcJwIokEeSkH97cUQxLGA" name="getPhysicalExamSection2" bodyCondition="_wHcJw4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wHcJw4okEeSkH97cUQxLGA" name="body" constrainedElement="_wHcJwIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHcJxIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PhysicalExamSection2))->asSequence()->any(true).oclAsType(consol::PhysicalExamSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wHcJwYokEeSkH97cUQxLGA" type="_-nZiYP4uEeObaveuCI77uA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wHcJwookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wHdX4IokEeSkH97cUQxLGA" name="getAdvanceDirectivesSectionEntriesOptional22" bodyCondition="_wHdX44okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wHdX44okEeSkH97cUQxLGA" name="body" constrainedElement="_wHdX4IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHdX5IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AdvanceDirectivesSectionEntriesOptional2))->asSequence()->any(true).oclAsType(consol::AdvanceDirectivesSectionEntriesOptional2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wHdX4YokEeSkH97cUQxLGA" type="_jsKhYAFXEeSLIY0bHb-fFQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wHdX4ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wHemAIokEeSkH97cUQxLGA" name="getNutritionSection" bodyCondition="_wHemA4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wHemA4okEeSkH97cUQxLGA" name="body" constrainedElement="_wHemAIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHemBIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::NutritionSection))->asSequence()->any(true).oclAsType(consol::NutritionSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wHemAYokEeSkH97cUQxLGA" type="_MlM4IJ2GEeORR8_YW0n_jQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wHemAookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wHf0IIokEeSkH97cUQxLGA" name="getMentalStatusSection" bodyCondition="_wHf0I4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wHf0I4okEeSkH97cUQxLGA" name="body" constrainedElement="_wHf0IIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHf0JIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MentalStatusSection))->asSequence()->any(true).oclAsType(consol::MentalStatusSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wHf0IYokEeSkH97cUQxLGA" type="_4tfOMJ2CEeORR8_YW0n_jQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wHf0IookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wHhCQIokEeSkH97cUQxLGA" name="getMedicalEquipmentSection2" bodyCondition="_wHhCQ4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wHhCQ4okEeSkH97cUQxLGA" name="body" constrainedElement="_wHhCQIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHhCRIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicalEquipmentSection2))->asSequence()->any(true).oclAsType(consol::MedicalEquipmentSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wHhCQYokEeSkH97cUQxLGA" type="_5OKxwP1bEeO5Hq-yrsJSmg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wHhCQookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wHiQYIokEeSkH97cUQxLGA" name="getAllergiesSection2" bodyCondition="_wHiQY4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wHiQY4okEeSkH97cUQxLGA" name="body" constrainedElement="_wHiQYIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHiQZIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSection2))->asSequence()->any(true).oclAsType(consol::AllergiesSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wHiQYYokEeSkH97cUQxLGA" type="_EONPMAInEeSr1aKUYorURA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wHiQYookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wHjegIokEeSkH97cUQxLGA" name="getAssessmentSection" bodyCondition="_wHjeg4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wHjeg4okEeSkH97cUQxLGA" name="body" constrainedElement="_wHjegIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHjehIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentSection))->asSequence()->any(true).oclAsType(consol::AssessmentSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wHjegYokEeSkH97cUQxLGA" type="_W8pI4DszEeGvzMYhXuqAEA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wHjegookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wHksoIokEeSkH97cUQxLGA" name="getAssessmentAndPlanSection2" bodyCondition="_wHkso4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wHkso4okEeSkH97cUQxLGA" name="body" constrainedElement="_wHksoIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHkspIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentAndPlanSection2))->asSequence()->any(true).oclAsType(consol::AssessmentAndPlanSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wHksoYokEeSkH97cUQxLGA" type="_q_8twPvVEeOvZJBdQKQrqQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wHksoookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wHl6wIokEeSkH97cUQxLGA" name="getHistoryOfPastIllnessSection2" bodyCondition="_wHl6w4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wHl6w4okEeSkH97cUQxLGA" name="body" constrainedElement="_wHl6wIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHl6xIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HistoryOfPastIllnessSection2))->asSequence()->any(true).oclAsType(consol::HistoryOfPastIllnessSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wHl6wYokEeSkH97cUQxLGA" type="_sZlggPyhEeOC19UEcu7MOw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wHl6wookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wHnI4IokEeSkH97cUQxLGA" name="getGeneralStatusSection" bodyCondition="_wHnI44okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wHnI44okEeSkH97cUQxLGA" name="body" constrainedElement="_wHnI4IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHnI5IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::GeneralStatusSection))->asSequence()->any(true).oclAsType(consol::GeneralStatusSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wHnI4YokEeSkH97cUQxLGA" type="_2Pxt6xSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wHnI4ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wHoXAIokEeSkH97cUQxLGA" name="getMedicationsSection2" bodyCondition="_wHoXA4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wHoXA4okEeSkH97cUQxLGA" name="body" constrainedElement="_wHoXAIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHoXBIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsSection2))->asSequence()->any(true).oclAsType(consol::MedicationsSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wHoXAYokEeSkH97cUQxLGA" type="_P2mp4ALQEeS0YMHMf4rRtQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wHoXAookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wHplIIokEeSkH97cUQxLGA" name="getReasonForReferralSection2" bodyCondition="_wHplI4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wHplI4okEeSkH97cUQxLGA" name="body" constrainedElement="_wHplIIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHplJIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForReferralSection2))->asSequence()->any(true).oclAsType(consol::ReasonForReferralSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wHplIYokEeSkH97cUQxLGA" type="_Ya0H0AB5EeS20Pddu0dxVw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wHplIookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_mgnrsKDQEeOPqKnBFQcY_A" name="TransferSummary">
      <ownedComment xmi:id="_23t18KDQEeOPqKnBFQcY_A">
        <body>This document describes constraints on the Clinical Document Architecture (CDA) header and body elements for a Transfer Summary. The Transfer summary standardizes critical information for exchange of information between providers of care when a patient moves between health care settings. &#xD;
Standardization of information used in this form will promote interoperability; create information suitable for reuse in quality measurement, public health, research, and for reimbursement.</body>
      </ownedComment>
      <ownedRule xmi:id="_O78fQKWYEeOPqKnBFQcY_A" name="TransferSummaryHasAnAssementAndPlanSection2OrBothAssementSectionAndPlanOfTreatmentSection2" constrainedElement="_mgnrsKDQEeOPqKnBFQcY_A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_heAsQKWYEeOPqKnBFQcY_A">
          <language>OCL</language>
          <body>(self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfTreatmentSection2)) and  self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentSection))) xor self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentAndPlanSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_NBehMKWZEeOPqKnBFQcY_A" name="TransferSummaryDoesNotHaveAssementAndPlanSection2WhenAssementAndPlanOfTreatment2ArePresent" constrainedElement="_mgnrsKDQEeOPqKnBFQcY_A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_W5AnAKWZEeOPqKnBFQcY_A">
          <language>OCL</language>
          <body>(self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfTreatmentSection2)) or  self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentSection))) xor self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentAndPlanSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vodHsIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsTemplateId" constrainedElement="_mgnrsKDQEeOPqKnBFQcY_A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vodHsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.1.13')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vofj8IokEeSkH97cUQxLGA" name="TransferSummaryId" constrainedElement="_mgnrsKDQEeOPqKnBFQcY_A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vofj8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id.oclIsUndefined() or self.id.isNullFlavorUndefined()) implies (not self.id.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vokccIokEeSkH97cUQxLGA" name="TransferSummaryCodeP" constrainedElement="_mgnrsKDQEeOPqKnBFQcY_A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vokccYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_voiAMIokEeSkH97cUQxLGA" name="TransferSummaryCode" constrainedElement="_mgnrsKDQEeOPqKnBFQcY_A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_voiAMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and not value.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vom4sIokEeSkH97cUQxLGA" name="TransferSummaryTitle" constrainedElement="_mgnrsKDQEeOPqKnBFQcY_A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vom4sYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vo-sIIokEeSkH97cUQxLGA" name="TransferSummaryParticipantSupport" constrainedElement="_mgnrsKDQEeOPqKnBFQcY_A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vo-sIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->exists(participant : cda::Participant1 | not participant.oclIsUndefined() and participant.oclIsKindOf(cda::Participant1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vpBIYookEeSkH97cUQxLGA" name="TransferSummaryParticipantCallbackContact" constrainedElement="_mgnrsKDQEeOPqKnBFQcY_A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vpBvcIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->exists(participant : cda::Participant1 | not participant.oclIsUndefined() and participant.oclIsKindOf(cda::Participant1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vpELsIokEeSkH97cUQxLGA" name="TransferSummaryDocumentationOf" constrainedElement="_mgnrsKDQEeOPqKnBFQcY_A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vpELsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->one(documentationOf : cda::DocumentationOf | not documentationOf.oclIsUndefined() and documentationOf.oclIsKindOf(cda::DocumentationOf))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wHplJYokEeSkH97cUQxLGA" name="TransferSummaryAdvanceDirectivesSection2" constrainedElement="_mgnrsKDQEeOPqKnBFQcY_A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHplJookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AdvanceDirectivesSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wHqzRYokEeSkH97cUQxLGA" name="TransferSummaryAllergiesSection2" constrainedElement="_mgnrsKDQEeOPqKnBFQcY_A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHqzRookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wHsBZYokEeSkH97cUQxLGA" name="TransferSummaryPhysicalExamSection2" constrainedElement="_mgnrsKDQEeOPqKnBFQcY_A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHsBZookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PhysicalExamSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wHtPhYokEeSkH97cUQxLGA" name="TransferSummaryEncountersSection2" constrainedElement="_mgnrsKDQEeOPqKnBFQcY_A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHtPhookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::EncountersSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wHudoookEeSkH97cUQxLGA" name="TransferSummaryFamilyHistorySection" constrainedElement="_mgnrsKDQEeOPqKnBFQcY_A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHudo4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::FamilyHistorySection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wHvrwIokEeSkH97cUQxLGA" name="TransferSummaryFunctionalStatusSection2" constrainedElement="_mgnrsKDQEeOPqKnBFQcY_A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHvrwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::FunctionalStatusSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wHw54IokEeSkH97cUQxLGA" name="TransferSummaryHospitalDischargeDiagnosis2" constrainedElement="_mgnrsKDQEeOPqKnBFQcY_A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHw54YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::DischargeDiagnosisSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wHyIAIokEeSkH97cUQxLGA" name="TransferSummaryImmunizationsSectionEntriesOptional2" constrainedElement="_mgnrsKDQEeOPqKnBFQcY_A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHyIAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ImmunizationsSectionEntriesOptional2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wHzWIIokEeSkH97cUQxLGA" name="TransferSummaryMedicalEquipmentSection2" constrainedElement="_mgnrsKDQEeOPqKnBFQcY_A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHzWIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicalEquipmentSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wH0kQIokEeSkH97cUQxLGA" name="TransferSummaryMedicationsSection2" constrainedElement="_mgnrsKDQEeOPqKnBFQcY_A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wH0kQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wH1yYIokEeSkH97cUQxLGA" name="TransferSummaryPayersSection2" constrainedElement="_mgnrsKDQEeOPqKnBFQcY_A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wH1yYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PayersSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wH3AgookEeSkH97cUQxLGA" name="TransferSummaryPlanOfTreatmentSection2" constrainedElement="_mgnrsKDQEeOPqKnBFQcY_A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wH3Ag4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfTreatmentSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wH4OoIokEeSkH97cUQxLGA" name="TransferSummaryProblemSection2" constrainedElement="_mgnrsKDQEeOPqKnBFQcY_A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wH4OoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wH5cwIokEeSkH97cUQxLGA" name="TransferSummaryProceduresSection2" constrainedElement="_mgnrsKDQEeOPqKnBFQcY_A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wH5cwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wH6q4IokEeSkH97cUQxLGA" name="TransferSummaryResultsSection2" constrainedElement="_mgnrsKDQEeOPqKnBFQcY_A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wH6q4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ResultsSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wH75AIokEeSkH97cUQxLGA" name="TransferSummarySocialHistorySection2" constrainedElement="_mgnrsKDQEeOPqKnBFQcY_A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wH75AYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::SocialHistorySection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wH9HIIokEeSkH97cUQxLGA" name="TransferSummaryVitalSignsSection2" constrainedElement="_mgnrsKDQEeOPqKnBFQcY_A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wH9HIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wH-VQIokEeSkH97cUQxLGA" name="TransferSummaryMentalStatusSection" constrainedElement="_mgnrsKDQEeOPqKnBFQcY_A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wH-VQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MentalStatusSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wH_jYIokEeSkH97cUQxLGA" name="TransferSummaryGeneralStatusSection" constrainedElement="_mgnrsKDQEeOPqKnBFQcY_A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wH_jYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::GeneralStatusSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wIAxgIokEeSkH97cUQxLGA" name="TransferSummaryReviewOfSystemsSection" constrainedElement="_mgnrsKDQEeOPqKnBFQcY_A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wIAxgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReviewOfSystemsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wIB_oIokEeSkH97cUQxLGA" name="TransferSummaryNutritionSection" constrainedElement="_mgnrsKDQEeOPqKnBFQcY_A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wIB_oYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::NutritionSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wIDNwIokEeSkH97cUQxLGA" name="TransferSummaryReasonForReferralSection2" constrainedElement="_mgnrsKDQEeOPqKnBFQcY_A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wIDNwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForReferralSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wIEb4IokEeSkH97cUQxLGA" name="TransferSummaryHistoryOfPastIllnessSection2" constrainedElement="_mgnrsKDQEeOPqKnBFQcY_A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wIEb4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HistoryOfPastIllnessSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wIFqAIokEeSkH97cUQxLGA" name="TransferSummaryHistoryOfPresentIllnessSection" constrainedElement="_mgnrsKDQEeOPqKnBFQcY_A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wIFqAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HistoryOfPresentIllnessSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wIG4IIokEeSkH97cUQxLGA" name="TransferSummaryAssessmentAndPlanSection2" constrainedElement="_mgnrsKDQEeOPqKnBFQcY_A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wIG4IYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentAndPlanSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wIIGQIokEeSkH97cUQxLGA" name="TransferSummaryAssessmentSection" constrainedElement="_mgnrsKDQEeOPqKnBFQcY_A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wIIGQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wWnOMIokEeSkH97cUQxLGA" name="TransferSummaryIIRoot" constrainedElement="_mgnrsKDQEeOPqKnBFQcY_A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wWnOMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies (not root.oclIsUndefined() )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wWpqcIokEeSkH97cUQxLGA" name="TransferSummaryParticipantSupportAssociatedEntityAssociatedPersonName" constrainedElement="_mgnrsKDQEeOPqKnBFQcY_A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wWpqcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).associatedEntity->excluding(null).associatedPerson->excluding(null)->reject((name->isEmpty() or name->exists(element | element.isNullFlavorUndefined())) implies (not name->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wWpqcookEeSkH97cUQxLGA" name="TransferSummaryParticipantSupportAssociatedEntityClassCodeP" constrainedElement="_mgnrsKDQEeOPqKnBFQcY_A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wWpqc4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).associatedEntity->excluding(null)->reject(isDefined('classCode'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wWqRgIokEeSkH97cUQxLGA" name="TransferSummaryParticipantSupportAssociatedEntityClassCode" constrainedElement="_mgnrsKDQEeOPqKnBFQcY_A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wWqRgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).associatedEntity->excluding(null)->reject(not classCode.oclIsUndefined() and classCode.oclIsKindOf(vocab::RoleClassAssociative) and &#xD;
let value : vocab::RoleClassAssociative = classCode.oclAsType(vocab::RoleClassAssociative) in &#xD;
value = vocab::RoleClassAssociative::PRS or value = vocab::RoleClassAssociative::NOK or value = vocab::RoleClassAssociative::CAREGIVER or value = vocab::RoleClassAssociative::AGNT or value = vocab::RoleClassAssociative::GUAR or value = vocab::RoleClassAssociative::ECON)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wWq4kIokEeSkH97cUQxLGA" name="TransferSummaryParticipantSupportAssociatedEntityAssociatedPerson" constrainedElement="_mgnrsKDQEeOPqKnBFQcY_A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wWq4kYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).associatedEntity->excluding(null)->reject(associatedPerson->one(associatedPerson : cda::Person | not associatedPerson.oclIsUndefined() and associatedPerson.oclIsKindOf(cda::Person)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wWq4kookEeSkH97cUQxLGA" name="TransferSummaryParticipantSupportTypeCode" constrainedElement="_mgnrsKDQEeOPqKnBFQcY_A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wWq4k4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->reject(typeCode=vocab::ParticipationType::IND)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wWrfoIokEeSkH97cUQxLGA" name="TransferSummaryParticipantSupportAssociatedEntity" constrainedElement="_mgnrsKDQEeOPqKnBFQcY_A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wWrfoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->reject(associatedEntity->one(associatedEntity : cda::AssociatedEntity | not associatedEntity.oclIsUndefined() and associatedEntity.oclIsKindOf(cda::AssociatedEntity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wWtU0IokEeSkH97cUQxLGA" name="TransferSummaryParticipantCallbackContactAssociatedEntityAssociatedPersonName" constrainedElement="_mgnrsKDQEeOPqKnBFQcY_A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wWtU0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).associatedEntity->excluding(null).associatedPerson->excluding(null)->reject((name->isEmpty() or name->exists(element | element.isNullFlavorUndefined())) implies (not name->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wWt74IokEeSkH97cUQxLGA" name="TransferSummaryParticipantCallbackContactAssociatedEntityClassCode" constrainedElement="_mgnrsKDQEeOPqKnBFQcY_A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wWt74YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).associatedEntity->excluding(null)->reject(classCode=vocab::RoleClassAssociative::ASSIGNED)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wWui8IokEeSkH97cUQxLGA" name="TransferSummaryParticipantCallbackContactAssociatedEntityId" constrainedElement="_mgnrsKDQEeOPqKnBFQcY_A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wWui8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).associatedEntity->excluding(null)->reject((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wWvKAIokEeSkH97cUQxLGA" name="TransferSummaryParticipantCallbackContactAssociatedEntityAddr" constrainedElement="_mgnrsKDQEeOPqKnBFQcY_A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wWvKAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).associatedEntity->excluding(null)->reject((addr->isEmpty() or addr->exists(element | element.isNullFlavorUndefined())) implies (not addr->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wWvxEIokEeSkH97cUQxLGA" name="TransferSummaryParticipantCallbackContactAssociatedEntityTelecom" constrainedElement="_mgnrsKDQEeOPqKnBFQcY_A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wWvxEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).associatedEntity->excluding(null)->reject((telecom->isEmpty() or telecom->exists(element | element.isNullFlavorUndefined())) implies (not telecom->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wWwYIIokEeSkH97cUQxLGA" name="TransferSummaryParticipantCallbackContactAssociatedEntityAssociatedPerson" constrainedElement="_mgnrsKDQEeOPqKnBFQcY_A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wWwYIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).associatedEntity->excluding(null)->reject(associatedPerson->one(associatedPerson : cda::Person | not associatedPerson.oclIsUndefined() and associatedPerson.oclIsKindOf(cda::Person)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wWw_MIokEeSkH97cUQxLGA" name="TransferSummaryParticipantCallbackContactAssociatedEntityScopingOrganization" constrainedElement="_mgnrsKDQEeOPqKnBFQcY_A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wWw_MYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).associatedEntity->excluding(null)->reject(scopingOrganization->one(scopingOrganization : cda::Organization | not scopingOrganization.oclIsUndefined() and scopingOrganization.oclIsKindOf(rim::Entity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wWxmQIokEeSkH97cUQxLGA" name="TransferSummaryParticipantCallbackContactTypeCode" constrainedElement="_mgnrsKDQEeOPqKnBFQcY_A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wWxmQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->reject(isDefined('typeCode'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wWyNUIokEeSkH97cUQxLGA" name="TransferSummaryParticipantCallbackContactAssociatedEntity" constrainedElement="_mgnrsKDQEeOPqKnBFQcY_A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wWyNUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->reject(associatedEntity->one(associatedEntity : cda::AssociatedEntity | not associatedEntity.oclIsUndefined() and associatedEntity.oclIsKindOf(cda::AssociatedEntity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wW1QoIokEeSkH97cUQxLGA" name="TransferSummaryDocumentationOfServiceEventPerformerAssignedEntityId" constrainedElement="_mgnrsKDQEeOPqKnBFQcY_A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wW1QoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null).performer->excluding(null).assignedEntity->excluding(null)->reject((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wW13sIokEeSkH97cUQxLGA" name="TransferSummaryDocumentationOfServiceEventPerformerAssignedEntityCode" constrainedElement="_mgnrsKDQEeOPqKnBFQcY_A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wW13sYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null).performer->excluding(null).assignedEntity->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wW13sookEeSkH97cUQxLGA" name="TransferSummaryDocumentationOfServiceEventPerformerTypeCode" constrainedElement="_mgnrsKDQEeOPqKnBFQcY_A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wW13s4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null).performer->excluding(null)->reject(typeCode=vocab::x_ServiceEventPerformer::PRF)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wW2ewIokEeSkH97cUQxLGA" name="TransferSummaryDocumentationOfServiceEventPerformerAssignedEntity" constrainedElement="_mgnrsKDQEeOPqKnBFQcY_A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wW2ewYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null).performer->excluding(null)->reject(assignedEntity->one(assignedEntity : cda::AssignedEntity | not assignedEntity.oclIsUndefined() and assignedEntity.oclIsKindOf(cda::AssignedEntity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wW3F0IokEeSkH97cUQxLGA" name="TransferSummaryDocumentationOfServiceEventClassCode" constrainedElement="_mgnrsKDQEeOPqKnBFQcY_A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wW3F0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject(isDefined('classCode') and classCode=vocab::ActClassRoot::PCPR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wW3s4IokEeSkH97cUQxLGA" name="TransferSummaryDocumentationOfServiceEventEffectiveTime" constrainedElement="_mgnrsKDQEeOPqKnBFQcY_A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wW3s4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject((effectiveTime.oclIsUndefined() or effectiveTime.isNullFlavorUndefined()) implies (not effectiveTime.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wW4T8IokEeSkH97cUQxLGA" name="TransferSummaryDocumentationOfServiceEventPerformer1" constrainedElement="_mgnrsKDQEeOPqKnBFQcY_A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wW4T8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject(performer->exists(performer : cda::Performer1 | not performer.oclIsUndefined() and performer.oclIsKindOf(cda::Performer1)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wW4T8ookEeSkH97cUQxLGA" name="TransferSummaryDocumentationOfServiceEvent" constrainedElement="_mgnrsKDQEeOPqKnBFQcY_A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wW4T84okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null)->reject(serviceEvent->one(serviceEvent : cda::ServiceEvent | not serviceEvent.oclIsUndefined() and serviceEvent.oclIsKindOf(cda::ServiceEvent)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_mgoSwKDQEeOPqKnBFQcY_A" general="_dduXkJ5OEeOr4eM3k36wAg"/>
      <ownedOperation xmi:id="_wHqzQIokEeSkH97cUQxLGA" name="getAdvanceDirectivesSection2" bodyCondition="_wHqzQ4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wHqzQ4okEeSkH97cUQxLGA" name="body" constrainedElement="_wHqzQIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHqzRIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AdvanceDirectivesSection2))->asSequence()->any(true).oclAsType(consol::AdvanceDirectivesSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wHqzQYokEeSkH97cUQxLGA" type="_ZFbCkAIPEeS-F85KYVlDyA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wHqzQookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wHsBYIokEeSkH97cUQxLGA" name="getAllergiesSection2" bodyCondition="_wHsBY4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wHsBY4okEeSkH97cUQxLGA" name="body" constrainedElement="_wHsBYIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHsBZIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSection2))->asSequence()->any(true).oclAsType(consol::AllergiesSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wHsBYYokEeSkH97cUQxLGA" type="_EONPMAInEeSr1aKUYorURA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wHsBYookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wHtPgIokEeSkH97cUQxLGA" name="getPhysicalExamSection2" bodyCondition="_wHtPg4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wHtPg4okEeSkH97cUQxLGA" name="body" constrainedElement="_wHtPgIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHtPhIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PhysicalExamSection2))->asSequence()->any(true).oclAsType(consol::PhysicalExamSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wHtPgYokEeSkH97cUQxLGA" type="_-nZiYP4uEeObaveuCI77uA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wHtPgookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wHt2kIokEeSkH97cUQxLGA" name="getEncountersSection2" bodyCondition="_wHudoIokEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wHudoIokEeSkH97cUQxLGA" name="body" constrainedElement="_wHt2kIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHudoYokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::EncountersSection2))->asSequence()->any(true).oclAsType(consol::EncountersSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wHt2kYokEeSkH97cUQxLGA" type="_ogD-EAIvEeScubSeRE1upQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wHt2kookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wHvEsIokEeSkH97cUQxLGA" name="getFamilyHistorySection" bodyCondition="_wHvEs4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wHvEs4okEeSkH97cUQxLGA" name="body" constrainedElement="_wHvEsIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHvEtIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::FamilyHistorySection))->asSequence()->any(true).oclAsType(consol::FamilyHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wHvEsYokEeSkH97cUQxLGA" type="_2IWQIxSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wHvEsookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wHwS0IokEeSkH97cUQxLGA" name="getFunctionalStatusSection2" bodyCondition="_wHwS04okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wHwS04okEeSkH97cUQxLGA" name="body" constrainedElement="_wHwS0IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHwS1IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::FunctionalStatusSection2))->asSequence()->any(true).oclAsType(consol::FunctionalStatusSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wHwS0YokEeSkH97cUQxLGA" type="_8rMFkPyHEeOozpLKXSm5NA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wHwS0ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wHxg8IokEeSkH97cUQxLGA" name="getHospitalDischargeDiagnosis2" bodyCondition="_wHxg84okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wHxg84okEeSkH97cUQxLGA" name="body" constrainedElement="_wHxg8IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHxg9IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::DischargeDiagnosisSection2))->asSequence()->any(true).oclAsType(consol::DischargeDiagnosisSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wHxg8YokEeSkH97cUQxLGA" type="_jfuGYPytEeOmn53IDV99zw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wHxg8ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wHyvEIokEeSkH97cUQxLGA" name="getImmunizationsSectionEntriesOptional2" bodyCondition="_wHyvE4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wHyvE4okEeSkH97cUQxLGA" name="body" constrainedElement="_wHyvEIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHyvFIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ImmunizationsSectionEntriesOptional2))->asSequence()->any(true).oclAsType(consol::ImmunizationsSectionEntriesOptional2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wHyvEYokEeSkH97cUQxLGA" type="_kdQhIPy3EeO1SvUcmWeLDQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wHyvEookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wHz9MIokEeSkH97cUQxLGA" name="getMedicalEquipmentSection2" bodyCondition="_wHz9M4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wHz9M4okEeSkH97cUQxLGA" name="body" constrainedElement="_wHz9MIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wHz9NIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicalEquipmentSection2))->asSequence()->any(true).oclAsType(consol::MedicalEquipmentSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wHz9MYokEeSkH97cUQxLGA" type="_5OKxwP1bEeO5Hq-yrsJSmg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wHz9MookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wH1LUIokEeSkH97cUQxLGA" name="getMedicationsSection2" bodyCondition="_wH1LU4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wH1LU4okEeSkH97cUQxLGA" name="body" constrainedElement="_wH1LUIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wH1LVIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsSection2))->asSequence()->any(true).oclAsType(consol::MedicationsSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wH1LUYokEeSkH97cUQxLGA" type="_P2mp4ALQEeS0YMHMf4rRtQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wH1LUookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wH2ZcIokEeSkH97cUQxLGA" name="getPayersSection2" bodyCondition="_wH3AgIokEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wH3AgIokEeSkH97cUQxLGA" name="body" constrainedElement="_wH2ZcIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wH3AgYokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PayersSection2))->asSequence()->any(true).oclAsType(consol::PayersSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wH2ZcYokEeSkH97cUQxLGA" type="_twgM0P4lEeOzC5ykp-XCaA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wH2ZcookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wH3nkIokEeSkH97cUQxLGA" name="getPlanOfTreatmentSection2" bodyCondition="_wH3nk4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wH3nk4okEeSkH97cUQxLGA" name="body" constrainedElement="_wH3nkIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wH3nlIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfTreatmentSection2))->asSequence()->any(true).oclAsType(consol::PlanOfTreatmentSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wH3nkYokEeSkH97cUQxLGA" type="_bwml0P4yEeO_Yb9cO8w3bA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wH3nkookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wH41sIokEeSkH97cUQxLGA" name="getProblemSection2" bodyCondition="_wH41s4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wH41s4okEeSkH97cUQxLGA" name="body" constrainedElement="_wH41sIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wH41tIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSection2))->asSequence()->any(true).oclAsType(consol::ProblemSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wH41sYokEeSkH97cUQxLGA" type="_IXrA4ALVEeSyydFGYJajGA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wH41sookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wH6D0IokEeSkH97cUQxLGA" name="getProceduresSection2" bodyCondition="_wH6D04okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wH6D04okEeSkH97cUQxLGA" name="body" constrainedElement="_wH6D0IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wH6D1IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSection2))->asSequence()->any(true).oclAsType(consol::ProceduresSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wH6D0YokEeSkH97cUQxLGA" type="_N6wUUALoEeSBA9s7kRnaEg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wH6D0ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wH7R8IokEeSkH97cUQxLGA" name="getResultsSection2" bodyCondition="_wH7R84okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wH7R84okEeSkH97cUQxLGA" name="body" constrainedElement="_wH7R8IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wH7R9IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ResultsSection2))->asSequence()->any(true).oclAsType(consol::ResultsSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wH7R8YokEeSkH97cUQxLGA" type="_bAAhEALtEeSueJWOLw5iaQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wH7R8ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wH8gEIokEeSkH97cUQxLGA" name="getSocialHistorySection2" bodyCondition="_wH8gE4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wH8gE4okEeSkH97cUQxLGA" name="body" constrainedElement="_wH8gEIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wH8gFIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::SocialHistorySection2))->asSequence()->any(true).oclAsType(consol::SocialHistorySection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wH8gEYokEeSkH97cUQxLGA" type="_wLWZMAFHEeSG_MJH-zNFRw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wH8gEookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wH9uMIokEeSkH97cUQxLGA" name="getVitalSignsSection2" bodyCondition="_wH9uM4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wH9uM4okEeSkH97cUQxLGA" name="body" constrainedElement="_wH9uMIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wH9uNIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSection2))->asSequence()->any(true).oclAsType(consol::VitalSignsSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wH9uMYokEeSkH97cUQxLGA" type="_D3010ALzEeSM0Jd2D1FgKw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wH9uMookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wH-8UIokEeSkH97cUQxLGA" name="getMentalStatusSection" bodyCondition="_wH-8U4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wH-8U4okEeSkH97cUQxLGA" name="body" constrainedElement="_wH-8UIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wH-8VIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MentalStatusSection))->asSequence()->any(true).oclAsType(consol::MentalStatusSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wH-8UYokEeSkH97cUQxLGA" type="_4tfOMJ2CEeORR8_YW0n_jQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wH-8UookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wIAKcIokEeSkH97cUQxLGA" name="getGeneralStatusSection" bodyCondition="_wIAKc4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wIAKc4okEeSkH97cUQxLGA" name="body" constrainedElement="_wIAKcIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wIAKdIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::GeneralStatusSection))->asSequence()->any(true).oclAsType(consol::GeneralStatusSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wIAKcYokEeSkH97cUQxLGA" type="_2Pxt6xSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wIAKcookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wIBYkIokEeSkH97cUQxLGA" name="getReviewOfSystemsSection" bodyCondition="_wIBYk4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wIBYk4okEeSkH97cUQxLGA" name="body" constrainedElement="_wIBYkIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wIBYlIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReviewOfSystemsSection))->asSequence()->any(true).oclAsType(consol::ReviewOfSystemsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wIBYkYokEeSkH97cUQxLGA" type="_2RqkMBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wIBYkookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wICmsIokEeSkH97cUQxLGA" name="getNutritionSection" bodyCondition="_wICms4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wICms4okEeSkH97cUQxLGA" name="body" constrainedElement="_wICmsIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wICmtIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::NutritionSection))->asSequence()->any(true).oclAsType(consol::NutritionSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wICmsYokEeSkH97cUQxLGA" type="_MlM4IJ2GEeORR8_YW0n_jQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wICmsookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wID00IokEeSkH97cUQxLGA" name="getReasonForReferralSection2" bodyCondition="_wID004okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wID004okEeSkH97cUQxLGA" name="body" constrainedElement="_wID00IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wID01IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForReferralSection2))->asSequence()->any(true).oclAsType(consol::ReasonForReferralSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wID00YokEeSkH97cUQxLGA" type="_Ya0H0AB5EeS20Pddu0dxVw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wID00ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wIFC8IokEeSkH97cUQxLGA" name="getHistoryOfPastIllnessSection2" bodyCondition="_wIFC84okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wIFC84okEeSkH97cUQxLGA" name="body" constrainedElement="_wIFC8IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wIFC9IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HistoryOfPastIllnessSection2))->asSequence()->any(true).oclAsType(consol::HistoryOfPastIllnessSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wIFC8YokEeSkH97cUQxLGA" type="_sZlggPyhEeOC19UEcu7MOw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wIFC8ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wIGREIokEeSkH97cUQxLGA" name="getHistoryOfPresentIllnessSection" bodyCondition="_wIGRE4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wIGRE4okEeSkH97cUQxLGA" name="body" constrainedElement="_wIGREIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wIGRFIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HistoryOfPresentIllnessSection))->asSequence()->any(true).oclAsType(consol::HistoryOfPresentIllnessSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wIGREYokEeSkH97cUQxLGA" type="_2PcWsRSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wIGREookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wIHfMIokEeSkH97cUQxLGA" name="getAssessmentAndPlanSection2" bodyCondition="_wIHfM4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wIHfM4okEeSkH97cUQxLGA" name="body" constrainedElement="_wIHfMIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wIHfNIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentAndPlanSection2))->asSequence()->any(true).oclAsType(consol::AssessmentAndPlanSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wIHfMYokEeSkH97cUQxLGA" type="_q_8twPvVEeOvZJBdQKQrqQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wIHfMookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wIItUIokEeSkH97cUQxLGA" name="getAssessmentSection" bodyCondition="_wIItU4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wIItU4okEeSkH97cUQxLGA" name="body" constrainedElement="_wIItUIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wIItVIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentSection))->asSequence()->any(true).oclAsType(consol::AssessmentSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wIItUYokEeSkH97cUQxLGA" type="_W8pI4DszEeGvzMYhXuqAEA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wIItUookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_OA1xkKi8EeOTwZftO6CV5g" name="USRealmHeaderPatientGeneratedDocument">
      <ownedComment xmi:id="_YjwhQKi9EeOTwZftO6CV5g">
        <body>The US Realm Patient Generated Document header template must conform to the Universal Realm Patient Generated Document header template. This template is designed to be used in conjunction with the US C-CDA General Header. It includes additional conformances which further constrain the US C-CDA General Header.</body>
      </ownedComment>
      <ownedRule xmi:id="_vpHPAIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsTemplateId" constrainedElement="_OA1xkKi8EeOTwZftO6CV5g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vpHPAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.29.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vqUv8IokEeSkH97cUQxLGA" name="USRealmHeaderPatientGeneratedDocumentRecordTarget" constrainedElement="_OA1xkKi8EeOTwZftO6CV5g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vqUv8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->one(recordTarget : cda::RecordTarget | not recordTarget.oclIsUndefined() and recordTarget.oclIsKindOf(cda::RecordTarget))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vqYaUIokEeSkH97cUQxLGA" name="USRealmHeaderPatientGeneratedDocumentAuthor" constrainedElement="_OA1xkKi8EeOTwZftO6CV5g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vqYaUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->exists(author : cda::Author | not author.oclIsUndefined() and author.oclIsKindOf(cda::Author))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vqZocYokEeSkH97cUQxLGA" name="USRealmHeaderPatientGeneratedDocumentDataEnterer" constrainedElement="_OA1xkKi8EeOTwZftO6CV5g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vqZocookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.dataEnterer->one(dataEnterer : cda::DataEnterer | not dataEnterer.oclIsUndefined() and dataEnterer.oclIsKindOf(cda::DataEnterer))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vqbdoIokEeSkH97cUQxLGA" name="USRealmHeaderPatientGeneratedDocumentInformant" constrainedElement="_OA1xkKi8EeOTwZftO6CV5g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vqbdoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.informant->exists(informant : cda::Informant12 | not informant.oclIsUndefined() and informant.oclIsKindOf(cda::Informant12))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vqcrwIokEeSkH97cUQxLGA" name="USRealmHeaderPatientGeneratedDocumentCustodian" constrainedElement="_OA1xkKi8EeOTwZftO6CV5g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vqcrwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.custodian->one(custodian : cda::Custodian | not custodian.oclIsUndefined() and custodian.oclIsKindOf(cda::Custodian))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vqeg8YokEeSkH97cUQxLGA" name="USRealmHeaderPatientGeneratedDocumentInformationRecipient" constrainedElement="_OA1xkKi8EeOTwZftO6CV5g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vqeg8ookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.informationRecipient->exists(informationRecipient : cda::InformationRecipient | not informationRecipient.oclIsUndefined() and informationRecipient.oclIsKindOf(cda::InformationRecipient))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vqfvEYokEeSkH97cUQxLGA" name="USRealmHeaderPatientGeneratedDocumentLegalAuthenticator" constrainedElement="_OA1xkKi8EeOTwZftO6CV5g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vqfvEookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.legalAuthenticator->one(legalAuthenticator : cda::LegalAuthenticator | not legalAuthenticator.oclIsUndefined() and legalAuthenticator.oclIsKindOf(cda::LegalAuthenticator))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vqg9MYokEeSkH97cUQxLGA" name="USRealmHeaderPatientGeneratedDocumentAuthenticator" constrainedElement="_OA1xkKi8EeOTwZftO6CV5g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vqg9MookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.authenticator->exists(authenticator : cda::Authenticator | not authenticator.oclIsUndefined() and authenticator.oclIsKindOf(cda::Authenticator))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vqiyYIokEeSkH97cUQxLGA" name="USRealmHeaderPatientGeneratedDocumentParticipant" constrainedElement="_OA1xkKi8EeOTwZftO6CV5g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vqiyYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->exists(participant : cda::Participant1 | not participant.oclIsUndefined() and participant.oclIsKindOf(cda::Participant1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vqkAgIokEeSkH97cUQxLGA" name="USRealmHeaderPatientGeneratedDocumentInFulfillmentOf" constrainedElement="_OA1xkKi8EeOTwZftO6CV5g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vqkAgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.inFulfillmentOf->exists(inFulfillmentOf : cda::InFulfillmentOf | not inFulfillmentOf.oclIsUndefined() and inFulfillmentOf.oclIsKindOf(cda::InFulfillmentOf))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vqlOoYokEeSkH97cUQxLGA" name="USRealmHeaderPatientGeneratedDocumentDocumentationOf" constrainedElement="_OA1xkKi8EeOTwZftO6CV5g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vqlOoookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->exists(documentationOf : cda::DocumentationOf | not documentationOf.oclIsUndefined() and documentationOf.oclIsKindOf(cda::DocumentationOf))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wW9zgIokEeSkH97cUQxLGA" name="USRealmHeaderPatientGeneratedDocumentRecordTargetPatientRoleIIRoot" constrainedElement="_OA1xkKi8EeOTwZftO6CV5g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wW9zgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).id->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies (not root.oclIsUndefined() )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wW-akIokEeSkH97cUQxLGA" name="USRealmHeaderPatientGeneratedDocumentRecordTargetPatientRoleIIExtension" constrainedElement="_OA1xkKi8EeOTwZftO6CV5g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wW-akYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).id->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies (not extension.oclIsUndefined() )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wXD6IIokEeSkH97cUQxLGA" name="USRealmHeaderPatientGeneratedDocumentRecordTargetPatientRolePatientGuardianIIRoot" constrainedElement="_OA1xkKi8EeOTwZftO6CV5g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wXD6IYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null).guardian->excluding(null).id->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies (not root.oclIsUndefined() )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wXD6IookEeSkH97cUQxLGA" name="USRealmHeaderPatientGeneratedDocumentRecordTargetPatientRolePatientGuardianIIExtension" constrainedElement="_OA1xkKi8EeOTwZftO6CV5g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wXEhMIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null).guardian->excluding(null).id->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies (not extension.oclIsUndefined() )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wXEhMYokEeSkH97cUQxLGA" name="USRealmHeaderPatientGeneratedDocumentRecordTargetPatientRolePatientGuardianId" constrainedElement="_OA1xkKi8EeOTwZftO6CV5g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wXEhMookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null).guardian->excluding(null)->reject((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wXFIQIokEeSkH97cUQxLGA" name="USRealmHeaderPatientGeneratedDocumentRecordTargetPatientRolePatientGuardianCodeP" constrainedElement="_OA1xkKi8EeOTwZftO6CV5g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wXFIQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null).guardian->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wXFvUIokEeSkH97cUQxLGA" name="USRealmHeaderPatientGeneratedDocumentRecordTargetPatientRolePatientGuardianCode" constrainedElement="_OA1xkKi8EeOTwZftO6CV5g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wXFvUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null).guardian->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined() and code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = code.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.5.111' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wXG9cIokEeSkH97cUQxLGA" name="USRealmHeaderPatientGeneratedDocumentRecordTargetPatientRolePatientLanguageCommunicationPreferenceInd" constrainedElement="_OA1xkKi8EeOTwZftO6CV5g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wXG9cYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null).languageCommunication->excluding(null)->reject((preferenceInd.oclIsUndefined() or preferenceInd.isNullFlavorUndefined()) implies (not preferenceInd.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wXG9cookEeSkH97cUQxLGA" name="USRealmHeaderPatientGeneratedDocumentRecordTargetPatientRolePatientGuardian" constrainedElement="_OA1xkKi8EeOTwZftO6CV5g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wXHkgIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null)->reject(guardian->exists(guardian : cda::Guardian | not guardian.oclIsUndefined() and guardian.oclIsKindOf(cda::Guardian)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wXHkgYokEeSkH97cUQxLGA" name="USRealmHeaderPatientGeneratedDocumentRecordTargetPatientRolePatientLanguageCommunication" constrainedElement="_OA1xkKi8EeOTwZftO6CV5g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wXHkgookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null).patient->excluding(null)->reject(languageCommunication->exists(languageCommunication : cda::LanguageCommunication | not languageCommunication.oclIsUndefined() and languageCommunication.oclIsKindOf(cda::LanguageCommunication)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wXILkIokEeSkH97cUQxLGA" name="USRealmHeaderPatientGeneratedDocumentRecordTargetPatientRoleId" constrainedElement="_OA1xkKi8EeOTwZftO6CV5g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wXILkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null)->reject((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wXIyoIokEeSkH97cUQxLGA" name="USRealmHeaderPatientGeneratedDocumentRecordTargetPatientRolePatient" constrainedElement="_OA1xkKi8EeOTwZftO6CV5g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wXIyoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null)->reject(patient->one(patient : cda::Patient | not patient.oclIsUndefined() and patient.oclIsKindOf(cda::Patient)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wXIyoookEeSkH97cUQxLGA" name="USRealmHeaderPatientGeneratedDocumentRecordTargetPatientRoleProviderOrganization" constrainedElement="_OA1xkKi8EeOTwZftO6CV5g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wXIyo4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null)->reject(providerOrganization->one(providerOrganization : cda::Organization | not providerOrganization.oclIsUndefined() and providerOrganization.oclIsKindOf(rim::Entity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wXJZsIokEeSkH97cUQxLGA" name="USRealmHeaderPatientGeneratedDocumentRecordTargetPatientRole" constrainedElement="_OA1xkKi8EeOTwZftO6CV5g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wXJZsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null)->reject(patientRole->one(patientRole : cda::PatientRole | not patientRole.oclIsUndefined() and patientRole.oclIsKindOf(cda::PatientRole)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wXNEEIokEeSkH97cUQxLGA" name="USRealmHeaderPatientGeneratedDocumentAuthorAssignedAuthorIIRoot" constrainedElement="_OA1xkKi8EeOTwZftO6CV5g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wXNEEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->excluding(null).assignedAuthor->excluding(null).id->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies (not root.oclIsUndefined() )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wXQucIokEeSkH97cUQxLGA" name="USRealmHeaderPatientGeneratedDocumentAuthorAssignedAuthorCECode" constrainedElement="_OA1xkKi8EeOTwZftO6CV5g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wXQucYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->excluding(null).assignedAuthor->excluding(null).code->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies (not code.oclIsUndefined() )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wXRVgIokEeSkH97cUQxLGA" name="USRealmHeaderPatientGeneratedDocumentAuthorAssignedAuthorId" constrainedElement="_OA1xkKi8EeOTwZftO6CV5g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wXRVgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->excluding(null).assignedAuthor->excluding(null)->reject((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wXRVgookEeSkH97cUQxLGA" name="USRealmHeaderPatientGeneratedDocumentAuthorAssignedAuthorCode" constrainedElement="_OA1xkKi8EeOTwZftO6CV5g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wXRVg4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->excluding(null).assignedAuthor->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wXR8kIokEeSkH97cUQxLGA" name="USRealmHeaderPatientGeneratedDocumentAuthorAssignedAuthor" constrainedElement="_OA1xkKi8EeOTwZftO6CV5g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wXR8kYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->excluding(null)->reject(assignedAuthor->one(assignedAuthor : cda::AssignedAuthor | not assignedAuthor.oclIsUndefined() and assignedAuthor.oclIsKindOf(cda::AssignedAuthor)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wXTxwIokEeSkH97cUQxLGA" name="USRealmHeaderPatientGeneratedDocumentDataEntererAssignedEntityCodeP" constrainedElement="_OA1xkKi8EeOTwZftO6CV5g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wXTxwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.dataEnterer->excluding(null).assignedEntity->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wXTxwookEeSkH97cUQxLGA" name="USRealmHeaderPatientGeneratedDocumentDataEntererAssignedEntityCode" constrainedElement="_OA1xkKi8EeOTwZftO6CV5g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wXTxw4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.dataEnterer->excluding(null).assignedEntity->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined() and code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = code.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.5.111' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wXUY0IokEeSkH97cUQxLGA" name="USRealmHeaderPatientGeneratedDocumentDataEntererAssignedEntity" constrainedElement="_OA1xkKi8EeOTwZftO6CV5g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wXUY0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.dataEnterer->excluding(null)->reject(assignedEntity->one(assignedEntity : cda::AssignedEntity | not assignedEntity.oclIsUndefined() and assignedEntity.oclIsKindOf(cda::AssignedEntity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wXVm8IokEeSkH97cUQxLGA" name="USRealmHeaderPatientGeneratedDocumentInformantRelatedEntityCodeP" constrainedElement="_OA1xkKi8EeOTwZftO6CV5g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wXVm8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.informant->excluding(null).relatedEntity->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wXWOAIokEeSkH97cUQxLGA" name="USRealmHeaderPatientGeneratedDocumentInformantRelatedEntityCode" constrainedElement="_OA1xkKi8EeOTwZftO6CV5g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wXWOAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.informant->excluding(null).relatedEntity->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined() and code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = code.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.5.111' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wXWOAookEeSkH97cUQxLGA" name="USRealmHeaderPatientGeneratedDocumentInformantRelatedEntity" constrainedElement="_OA1xkKi8EeOTwZftO6CV5g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wXWOA4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.informant->excluding(null)->reject(relatedEntity->one(relatedEntity : cda::RelatedEntity | not relatedEntity.oclIsUndefined() and relatedEntity.oclIsKindOf(cda::RelatedEntity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wXZ4YIokEeSkH97cUQxLGA" name="USRealmHeaderPatientGeneratedDocumentCustodianAssignedCustodianRepresentedCustodianOrganizationIIRoot" constrainedElement="_OA1xkKi8EeOTwZftO6CV5g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wXZ4YYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.custodian->excluding(null).assignedCustodian->excluding(null).representedCustodianOrganization->excluding(null).id->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies (not root.oclIsUndefined() )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wXafcIokEeSkH97cUQxLGA" name="USRealmHeaderPatientGeneratedDocumentCustodianAssignedCustodianRepresentedCustodianOrganizationId" constrainedElement="_OA1xkKi8EeOTwZftO6CV5g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wXafcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.custodian->excluding(null).assignedCustodian->excluding(null).representedCustodianOrganization->excluding(null)->reject((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wXafcookEeSkH97cUQxLGA" name="USRealmHeaderPatientGeneratedDocumentCustodianAssignedCustodianRepresentedCustodianOrganization" constrainedElement="_OA1xkKi8EeOTwZftO6CV5g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wXafc4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.custodian->excluding(null).assignedCustodian->excluding(null)->reject(representedCustodianOrganization->one(representedCustodianOrganization : cda::CustodianOrganization | not representedCustodianOrganization.oclIsUndefined() and representedCustodianOrganization.oclIsKindOf(cda::CustodianOrganization)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wXbGgIokEeSkH97cUQxLGA" name="USRealmHeaderPatientGeneratedDocumentCustodianAssignedCustodian" constrainedElement="_OA1xkKi8EeOTwZftO6CV5g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wXbGgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.custodian->excluding(null)->reject(assignedCustodian->one(assignedCustodian : cda::AssignedCustodian | not assignedCustodian.oclIsUndefined() and assignedCustodian.oclIsKindOf(cda::AssignedCustodian)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wXeJ0IokEeSkH97cUQxLGA" name="USRealmHeaderPatientGeneratedDocumentInformationRecipientIntendedRecipientIIRoot" constrainedElement="_OA1xkKi8EeOTwZftO6CV5g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wXeJ0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.informationRecipient->excluding(null).intendedRecipient->excluding(null).id->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies (not root.oclIsUndefined() )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wXeJ0ookEeSkH97cUQxLGA" name="USRealmHeaderPatientGeneratedDocumentInformationRecipientIntendedRecipientId" constrainedElement="_OA1xkKi8EeOTwZftO6CV5g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wXeJ04okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.informationRecipient->excluding(null).intendedRecipient->excluding(null)->reject((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wXew4IokEeSkH97cUQxLGA" name="USRealmHeaderPatientGeneratedDocumentInformationRecipientIntendedRecipient" constrainedElement="_OA1xkKi8EeOTwZftO6CV5g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wXew4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.informationRecipient->excluding(null)->reject(intendedRecipient->one(intendedRecipient : cda::IntendedRecipient | not intendedRecipient.oclIsUndefined() and intendedRecipient.oclIsKindOf(cda::IntendedRecipient)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wXh0MIokEeSkH97cUQxLGA" name="USRealmHeaderPatientGeneratedDocumentLegalAuthenticatorAssignedEntityCECode" constrainedElement="_OA1xkKi8EeOTwZftO6CV5g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wXh0MYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.legalAuthenticator->excluding(null).assignedEntity->excluding(null).code->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies (not code.oclIsUndefined() )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wXibQIokEeSkH97cUQxLGA" name="USRealmHeaderPatientGeneratedDocumentLegalAuthenticatorAssignedEntityId" constrainedElement="_OA1xkKi8EeOTwZftO6CV5g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wXibQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.legalAuthenticator->excluding(null).assignedEntity->excluding(null)->reject((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wXibQookEeSkH97cUQxLGA" name="USRealmHeaderPatientGeneratedDocumentLegalAuthenticatorAssignedEntityCode" constrainedElement="_OA1xkKi8EeOTwZftO6CV5g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wXibQ4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.legalAuthenticator->excluding(null).assignedEntity->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wXjCUIokEeSkH97cUQxLGA" name="USRealmHeaderPatientGeneratedDocumentLegalAuthenticatorAssignedEntity" constrainedElement="_OA1xkKi8EeOTwZftO6CV5g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wXjCUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.legalAuthenticator->excluding(null)->reject(assignedEntity->one(assignedEntity : cda::AssignedEntity | not assignedEntity.oclIsUndefined() and assignedEntity.oclIsKindOf(cda::AssignedEntity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wXkQcIokEeSkH97cUQxLGA" name="USRealmHeaderPatientGeneratedDocumentAuthenticatorAssignedEntityId" constrainedElement="_OA1xkKi8EeOTwZftO6CV5g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wXkQcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.authenticator->excluding(null).assignedEntity->excluding(null)->reject((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wXk3gIokEeSkH97cUQxLGA" name="USRealmHeaderPatientGeneratedDocumentAuthenticatorAssignedEntityCodeP" constrainedElement="_OA1xkKi8EeOTwZftO6CV5g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wXk3gYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.authenticator->excluding(null).assignedEntity->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wXlekIokEeSkH97cUQxLGA" name="USRealmHeaderPatientGeneratedDocumentAuthenticatorAssignedEntityCode" constrainedElement="_OA1xkKi8EeOTwZftO6CV5g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wXlekYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.authenticator->excluding(null).assignedEntity->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined() and code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = code.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.5.111' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wXmFoIokEeSkH97cUQxLGA" name="USRealmHeaderPatientGeneratedDocumentAuthenticatorAssignedEntity" constrainedElement="_OA1xkKi8EeOTwZftO6CV5g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wXmFoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.authenticator->excluding(null)->reject(assignedEntity->one(assignedEntity : cda::AssignedEntity | not assignedEntity.oclIsUndefined() and assignedEntity.oclIsKindOf(cda::AssignedEntity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wXnTwIokEeSkH97cUQxLGA" name="USRealmHeaderPatientGeneratedDocumentParticipantAssociatedEntityCodeP" constrainedElement="_OA1xkKi8EeOTwZftO6CV5g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wXnTwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).associatedEntity->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wXn60IokEeSkH97cUQxLGA" name="USRealmHeaderPatientGeneratedDocumentParticipantAssociatedEntityCode" constrainedElement="_OA1xkKi8EeOTwZftO6CV5g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wXn60YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).associatedEntity->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined() and code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = code.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.5.111' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wXn60ookEeSkH97cUQxLGA" name="USRealmHeaderPatientGeneratedDocumentParticipantTypeCode" constrainedElement="_OA1xkKi8EeOTwZftO6CV5g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wXn604okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->reject(isDefined('typeCode'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wXoh4IokEeSkH97cUQxLGA" name="USRealmHeaderPatientGeneratedDocumentParticipantAssociatedEntity" constrainedElement="_OA1xkKi8EeOTwZftO6CV5g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wXoh4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->reject(associatedEntity->one(associatedEntity : cda::AssociatedEntity | not associatedEntity.oclIsUndefined() and associatedEntity.oclIsKindOf(cda::AssociatedEntity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wXpwAIokEeSkH97cUQxLGA" name="USRealmHeaderPatientGeneratedDocumentInFulfillmentOfOrderId" constrainedElement="_OA1xkKi8EeOTwZftO6CV5g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wXpwAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.inFulfillmentOf->excluding(null).order->excluding(null)->reject((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wXqXEIokEeSkH97cUQxLGA" name="USRealmHeaderPatientGeneratedDocumentInFulfillmentOfOrder" constrainedElement="_OA1xkKi8EeOTwZftO6CV5g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wXqXEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.inFulfillmentOf->excluding(null)->reject(order->one(order : cda::Order | not order.oclIsUndefined() and order.oclIsKindOf(cda::Order)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wXszUIokEeSkH97cUQxLGA" name="USRealmHeaderPatientGeneratedDocumentDocumentationOfServiceEventPerformerAssignedEntityId" constrainedElement="_OA1xkKi8EeOTwZftO6CV5g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wXszUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null).performer->excluding(null).assignedEntity->excluding(null)->reject((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wXszUookEeSkH97cUQxLGA" name="USRealmHeaderPatientGeneratedDocumentDocumentationOfServiceEventPerformerAssignedEntityCodeP" constrainedElement="_OA1xkKi8EeOTwZftO6CV5g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wXszU4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null).performer->excluding(null).assignedEntity->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wXtaYIokEeSkH97cUQxLGA" name="USRealmHeaderPatientGeneratedDocumentDocumentationOfServiceEventPerformerAssignedEntityCode" constrainedElement="_OA1xkKi8EeOTwZftO6CV5g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wXtaYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null).performer->excluding(null).assignedEntity->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined() and code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = code.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.5.111' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wXuBcIokEeSkH97cUQxLGA" name="USRealmHeaderPatientGeneratedDocumentDocumentationOfServiceEventPerformerFunctionCodeP" constrainedElement="_OA1xkKi8EeOTwZftO6CV5g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wXuBcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null).performer->excluding(null)->reject((functionCode.oclIsUndefined() or functionCode.isNullFlavorUndefined()) implies (not functionCode.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wXuBcookEeSkH97cUQxLGA" name="USRealmHeaderPatientGeneratedDocumentDocumentationOfServiceEventPerformerFunctionCode" constrainedElement="_OA1xkKi8EeOTwZftO6CV5g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wXuBc4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null).performer->excluding(null)->reject((functionCode.oclIsUndefined() or functionCode.isNullFlavorUndefined()) implies (not functionCode.oclIsUndefined() and functionCode.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = functionCode.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.5.90' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wXuogIokEeSkH97cUQxLGA" name="USRealmHeaderPatientGeneratedDocumentDocumentationOfServiceEventPerformerAssignedEntity" constrainedElement="_OA1xkKi8EeOTwZftO6CV5g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wXuogYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null).performer->excluding(null)->reject(assignedEntity->one(assignedEntity : cda::AssignedEntity | not assignedEntity.oclIsUndefined() and assignedEntity.oclIsKindOf(cda::AssignedEntity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wXvPkIokEeSkH97cUQxLGA" name="USRealmHeaderPatientGeneratedDocumentDocumentationOfServiceEventCode" constrainedElement="_OA1xkKi8EeOTwZftO6CV5g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wXvPkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wXvPkookEeSkH97cUQxLGA" name="USRealmHeaderPatientGeneratedDocumentDocumentationOfServiceEventPerformer" constrainedElement="_OA1xkKi8EeOTwZftO6CV5g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wXvPk4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject(performer->exists(performer : cda::Performer1 | not performer.oclIsUndefined() and performer.oclIsKindOf(cda::Performer1)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wXv2oIokEeSkH97cUQxLGA" name="USRealmHeaderPatientGeneratedDocumentDocumentationOfServiceEvent" constrainedElement="_OA1xkKi8EeOTwZftO6CV5g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wXv2oYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null)->reject(serviceEvent->one(serviceEvent : cda::ServiceEvent | not serviceEvent.oclIsUndefined() and serviceEvent.oclIsKindOf(cda::ServiceEvent)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_OA2_sKi8EeOTwZftO6CV5g" general="_dduXkJ5OEeOr4eM3k36wAg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_7jqj4KrlEeOxqJAXCMXUYg" name="AuthorParticipation">
      <ownedComment xmi:id="_JvfwcKrmEeOxqJAXCMXUYg">
        <body>This template represents the Author Participation (including the author timestamp). CDA R2 requires that Author and Author timestamp be asserted in the document header. From there, authorship propagates to contained sections and contained entries, unless explicitly overridden.</body>
      </ownedComment>
      <ownedRule xmi:id="_vqnq4IokEeSkH97cUQxLGA" name="AuthorParticipationTemplateId" constrainedElement="_7jqj4KrlEeOxqJAXCMXUYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vqnq4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.119')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vqo5AIokEeSkH97cUQxLGA" name="AuthorParticipationTime" constrainedElement="_7jqj4KrlEeOxqJAXCMXUYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vqo5AYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.time.oclIsUndefined() or self.time.isNullFlavorUndefined()) implies (not self.time.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vq3igIokEeSkH97cUQxLGA" name="AuthorParticipationAssignedAuthor" constrainedElement="_7jqj4KrlEeOxqJAXCMXUYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vq3igYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.assignedAuthor->one(assignedAuthor : cda::AssignedAuthor | not assignedAuthor.oclIsUndefined() and assignedAuthor.oclIsKindOf(cda::AssignedAuthor))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wX_HMIokEeSkH97cUQxLGA" name="AuthorParticipationAssignedAuthorAssignedPersonName" constrainedElement="_7jqj4KrlEeOxqJAXCMXUYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wX_HMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.assignedAuthor->excluding(null).assignedPerson->excluding(null)->reject((name->isEmpty() or name->exists(element | element.isNullFlavorUndefined())) implies (not name->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wX_uQIokEeSkH97cUQxLGA" name="AuthorParticipationAssignedAuthorRepresentedOrganizationClassCode" constrainedElement="_7jqj4KrlEeOxqJAXCMXUYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wX_uQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.assignedAuthor->excluding(null).representedOrganization->excluding(null)->reject(isDefined('classCode') and classCode=vocab::EntityClassOrganization::ORG)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wYAVUIokEeSkH97cUQxLGA" name="AuthorParticipationAssignedAuthorRepresentedOrganizationId" constrainedElement="_7jqj4KrlEeOxqJAXCMXUYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wYAVUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.assignedAuthor->excluding(null).representedOrganization->excluding(null)->reject((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wYAVUookEeSkH97cUQxLGA" name="AuthorParticipationAssignedAuthorRepresentedOrganizationName" constrainedElement="_7jqj4KrlEeOxqJAXCMXUYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wYAVU4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.assignedAuthor->excluding(null).representedOrganization->excluding(null)->reject((name->isEmpty() or name->exists(element | element.isNullFlavorUndefined())) implies (not name->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wYA8YIokEeSkH97cUQxLGA" name="AuthorParticipationAssignedAuthorRepresentedOrganizationTelecom" constrainedElement="_7jqj4KrlEeOxqJAXCMXUYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wYA8YYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.assignedAuthor->excluding(null).representedOrganization->excluding(null)->reject((telecom->isEmpty() or telecom->exists(element | element.isNullFlavorUndefined())) implies (not telecom->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wYBjcIokEeSkH97cUQxLGA" name="AuthorParticipationAssignedAuthorRepresentedOrganizationAddr" constrainedElement="_7jqj4KrlEeOxqJAXCMXUYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wYBjcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.assignedAuthor->excluding(null).representedOrganization->excluding(null)->reject((addr->isEmpty() or addr->exists(element | element.isNullFlavorUndefined())) implies (not addr->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wYBjcookEeSkH97cUQxLGA" name="AuthorParticipationAssignedAuthorId" constrainedElement="_7jqj4KrlEeOxqJAXCMXUYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wYBjc4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.assignedAuthor->excluding(null)->reject((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wYCKgIokEeSkH97cUQxLGA" name="AuthorParticipationAssignedAuthorCodeP" constrainedElement="_7jqj4KrlEeOxqJAXCMXUYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wYCKgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.assignedAuthor->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wYCKgookEeSkH97cUQxLGA" name="AuthorParticipationAssignedAuthorCode" constrainedElement="_7jqj4KrlEeOxqJAXCMXUYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wYCKg4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.assignedAuthor->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined() and code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = code.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.101' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wYCxkIokEeSkH97cUQxLGA" name="AuthorParticipationAssignedAuthorAssignedPerson" constrainedElement="_7jqj4KrlEeOxqJAXCMXUYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wYCxkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.assignedAuthor->excluding(null)->reject(assignedPerson->one(assignedPerson : cda::Person | not assignedPerson.oclIsUndefined() and assignedPerson.oclIsKindOf(cda::Person)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wYDYoIokEeSkH97cUQxLGA" name="AuthorParticipationAssignedAuthorRepresentedOrganization" constrainedElement="_7jqj4KrlEeOxqJAXCMXUYg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wYDYoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.assignedAuthor->excluding(null)->reject(representedOrganization->one(representedOrganization : cda::Organization | not representedOrganization.oclIsUndefined() and representedOrganization.oclIsKindOf(cda::Organization)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_7juOQKrlEeOxqJAXCMXUYg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_ChEisEcEEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_ZQpEwK-1EeO8duI_7f6kZw" name="AdmissionMedication2">
      <ownedComment xmi:id="_qsCkoK-1EeO8duI_7f6kZw">
        <body>This template represents the medications taken by the patient prior to and at the time of admission.</body>
      </ownedComment>
      <ownedRule xmi:id="_vrX40IokEeSkH97cUQxLGA" name="AdmissionMedicationTemplateId" constrainedElement="_ZQpEwK-1EeO8duI_7f6kZw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vrYf4IokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.36' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vrcxUIokEeSkH97cUQxLGA" name="AdmissionMedicationCodeP" constrainedElement="_ZQpEwK-1EeO8duI_7f6kZw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vrcxUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vraVEIokEeSkH97cUQxLGA" name="AdmissionMedicationCode" constrainedElement="_ZQpEwK-1EeO8duI_7f6kZw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vraVEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '42346-7' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v2Xn4IokEeSkH97cUQxLGA" name="AdmissionMedicationMedicationActivity2" constrainedElement="_ZQpEwK-1EeO8duI_7f6kZw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v2Xn4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.substanceAdministration.oclIsUndefined() and entryRelationship.substanceAdministration.oclIsKindOf(consol::MedicationActivity2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_ZQxAkK-1EeO8duI_7f6kZw" general="_LNP08EFGEeGorO80f-Cppg"/>
      <ownedOperation xmi:id="_v2YO8IokEeSkH97cUQxLGA" name="getConsolMedicationActivity2s" bodyCondition="_v2Y2AIokEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v2Y2AIokEeSkH97cUQxLGA" name="body" constrainedElement="_v2YO8IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v2Y2AYokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(consol::MedicationActivity2)).oclAsType(consol::MedicationActivity2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v2YO8YokEeSkH97cUQxLGA" type="_WnSCMOLAEeOc7-TVP7Wi6w" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v2YO8ookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_GnllUK-9EeO8duI_7f6kZw" name="AdvanceDirectiveObservation2">
      <ownedComment xmi:id="_V-vVgK-9EeO8duI_7f6kZw">
        <body>This clinical statement represents Advance Directive Observation findings (e.g., &quot;resuscitation status is Full Code&quot;) rather than orders. It should not be considered a legal document. The related legal documents are referenced using the reference/externalReference element.&#xD;
The Advance Directive Observation describes the patient's directives, including but not limited to:&#xD;
•  Medications&#xD;
•  Transfer of Care to Hospital&#xD;
•  Treatment&#xD;
•  Procedures&#xD;
•  Intubation and Ventilation&#xD;
•  Diagnostic Tests&#xD;
•  Tests&#xD;
The general category of the patient's directive is documented in the observation/code element.  The observation/value element contains the detailed patient directive which may be coded or text. For example, a category  directive  may be antibiotics, and the details would be intravenous antibiotics only.</body>
      </ownedComment>
      <ownedRule xmi:id="_vrfNkIokEeSkH97cUQxLGA" name="AdvanceDirectiveObservationTemplateId" constrainedElement="_GnllUK-9EeO8duI_7f6kZw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vrfNkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.48' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vrjfAIokEeSkH97cUQxLGA" name="AdvanceDirectiveObservationCodeP" constrainedElement="_GnllUK-9EeO8duI_7f6kZw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vrjfAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vrhCwIokEeSkH97cUQxLGA" name="AdvanceDirectiveObservationCode" constrainedElement="_GnllUK-9EeO8duI_7f6kZw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vrhCwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.96' and (value.code = '281789004' or value.code = '89666000' or value.code = '225204009' or value.code = '52765003' or value.code = '78823007' or value.code = '304251008' or value.code = '61420007' or value.code = '71388002'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vrl7QIokEeSkH97cUQxLGA" name="AdvanceDirectiveObservationEffectiveTime" constrainedElement="_GnllUK-9EeO8duI_7f6kZw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vrl7QYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vrnwcIokEeSkH97cUQxLGA" name="AdvanceDirectiveObservation2Value" constrainedElement="_GnllUK-9EeO8duI_7f6kZw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vrnwcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vsD1UIokEeSkH97cUQxLGA" name="AdvanceDirectiveObservationVerifier" constrainedElement="_GnllUK-9EeO8duI_7f6kZw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vsD1UYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->select(participant : cda::Participant2 | not participant.oclIsUndefined() and participant.oclIsKindOf(cda::Participant2))->select(typeCode=vocab::ParticipationType::VRF)->notEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vsEcYIokEeSkH97cUQxLGA" name="AdvanceDirectiveObservationCustodian" constrainedElement="_GnllUK-9EeO8duI_7f6kZw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vsEcYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->select(participant : cda::Participant2 | not participant.oclIsUndefined() and participant.oclIsKindOf(cda::Participant2))->select(typeCode=vocab::ParticipationType::CST)->notEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vsGRkIokEeSkH97cUQxLGA" name="AdvanceDirectiveObservationReference" constrainedElement="_GnllUK-9EeO8duI_7f6kZw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vsGRkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.reference->exists(reference : cda::Reference | not reference.oclIsUndefined() and reference.oclIsKindOf(cda::Reference))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wYFN0IokEeSkH97cUQxLGA" name="AdvanceDirectiveObservation2IVLTSLow" constrainedElement="_GnllUK-9EeO8duI_7f6kZw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wYFN0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.effectiveTime->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((low.oclIsUndefined() or low.isNullFlavorUndefined()) implies (not low.oclIsUndefined()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wYHDAIokEeSkH97cUQxLGA" name="AdvanceDirectiveObservation2VerifierParticipantRolePlayingEntityCodeP" constrainedElement="_GnllUK-9EeO8duI_7f6kZw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wYHDAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->select(typeCode=vocab::ParticipationType::VRF).participantRole->excluding(null).playingEntity->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wYHqEIokEeSkH97cUQxLGA" name="AdvanceDirectiveObservation2VerifierParticipantRolePlayingEntityCode" constrainedElement="_GnllUK-9EeO8duI_7f6kZw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wYHqEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->select(typeCode=vocab::ParticipationType::VRF).participantRole->excluding(null).playingEntity->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined() and code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = code.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.96' and (value.code = '63161005' or value.code = '2603003')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wYHqEookEeSkH97cUQxLGA" name="AdvanceDirectiveObservation2VerifierParticipantRolePlayingEntityName" constrainedElement="_GnllUK-9EeO8duI_7f6kZw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wYHqE4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->select(typeCode=vocab::ParticipationType::VRF).participantRole->excluding(null).playingEntity->excluding(null)->reject((name->isEmpty() or name->exists(element | element.isNullFlavorUndefined())) implies (not name->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wYIRIIokEeSkH97cUQxLGA" name="AdvanceDirectiveObservation2VerifierParticipantRoleCodeP" constrainedElement="_GnllUK-9EeO8duI_7f6kZw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wYIRIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->select(typeCode=vocab::ParticipationType::VRF).participantRole->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wYI4MIokEeSkH97cUQxLGA" name="AdvanceDirectiveObservation2VerifierParticipantRoleCode" constrainedElement="_GnllUK-9EeO8duI_7f6kZw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wYI4MYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->select(typeCode=vocab::ParticipationType::VRF).participantRole->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined() and code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = code.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.101' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wYI4MookEeSkH97cUQxLGA" name="AdvanceDirectiveObservation2VerifierParticipantRoleAddr" constrainedElement="_GnllUK-9EeO8duI_7f6kZw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wYI4M4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->select(typeCode=vocab::ParticipationType::VRF).participantRole->excluding(null)->reject((addr->isEmpty() or addr->exists(element | element.isNullFlavorUndefined())) implies (not addr->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wYJfQIokEeSkH97cUQxLGA" name="AdvanceDirectiveObservation2VerifierParticipantRolePlayingEntity" constrainedElement="_GnllUK-9EeO8duI_7f6kZw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wYJfQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->select(typeCode=vocab::ParticipationType::VRF).participantRole->excluding(null)->reject(playingEntity->one(playingEntity : cda::PlayingEntity | not playingEntity.oclIsUndefined() and playingEntity.oclIsKindOf(cda::PlayingEntity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wYKGUIokEeSkH97cUQxLGA" name="AdvanceDirectiveObservation2AdvanceDirectiveObservationVerifierParticipantRole" constrainedElement="_GnllUK-9EeO8duI_7f6kZw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wYKGUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->select(typeCode=vocab::ParticipationType::VRF)->select(typeCode=vocab::ParticipationType::VRF)->reject(participantRole->one(participantRole : cda::ParticipantRole | not participantRole.oclIsUndefined() and participantRole.oclIsKindOf(cda::ParticipantRole)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wYL7gIokEeSkH97cUQxLGA" name="AdvanceDirectiveObservation2CustodianCustodianRoleCustodianEntityCodeP" constrainedElement="_GnllUK-9EeO8duI_7f6kZw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wYL7gYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->select(typeCode=vocab::ParticipationType::CST).participantRole->excluding(null).playingEntity->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wYMikIokEeSkH97cUQxLGA" name="AdvanceDirectiveObservation2CustodianCustodianRoleCustodianEntityCode" constrainedElement="_GnllUK-9EeO8duI_7f6kZw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wYMikYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->select(typeCode=vocab::ParticipationType::CST).participantRole->excluding(null).playingEntity->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined() and code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = code.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.96' and (value.code = '63161005' or value.code = '2603003')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wYMikookEeSkH97cUQxLGA" name="AdvanceDirectiveObservation2CustodianCustodianRoleAdvanceDirectiveObservationCustodianCustodianRoleCustodianEntityName" constrainedElement="_GnllUK-9EeO8duI_7f6kZw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wYMik4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->select(typeCode=vocab::ParticipationType::CST).participantRole->excluding(null).playingEntity->excluding(null)->reject((name->isEmpty() or name->exists(element | element.isNullFlavorUndefined())) implies (name->size() = 1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wYO-0IokEeSkH97cUQxLGA" name="AdvanceDirectiveObservation2CustodianCustodianRoleCodeP" constrainedElement="_GnllUK-9EeO8duI_7f6kZw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wYPl4IokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->select(typeCode=vocab::ParticipationType::CST).participantRole->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wYPl4YokEeSkH97cUQxLGA" name="AdvanceDirectiveObservation2CustodianCustodianRoleCode" constrainedElement="_GnllUK-9EeO8duI_7f6kZw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wYPl4ookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->select(typeCode=vocab::ParticipationType::CST).participantRole->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined() and code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = code.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.5.111' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wYQM8IokEeSkH97cUQxLGA" name="AdvanceDirectiveObservation2CustodianAdvanceDirectiveObservationCustodianCustodianRoleAddr" constrainedElement="_GnllUK-9EeO8duI_7f6kZw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wYQM8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->select(typeCode=vocab::ParticipationType::CST).participantRole->excluding(null)->reject((addr->isEmpty() or addr->exists(element | element.isNullFlavorUndefined())) implies (not addr->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wYQM8ookEeSkH97cUQxLGA" name="AdvanceDirectiveObservation2CustodianAdvanceDirectiveObservationCustodianCustodianRoleTelecom" constrainedElement="_GnllUK-9EeO8duI_7f6kZw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wYQM84okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->select(typeCode=vocab::ParticipationType::CST).participantRole->excluding(null)->reject((telecom->isEmpty() or telecom->exists(element | element.isNullFlavorUndefined())) implies (not telecom->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wYQ0AIokEeSkH97cUQxLGA" name="AdvanceDirectiveObservation2CustodianAdvanceDirectiveObservationCustodianCustodianRolePlayingEntity" constrainedElement="_GnllUK-9EeO8duI_7f6kZw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wYQ0AYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->select(typeCode=vocab::ParticipationType::CST).participantRole->excluding(null)->reject(playingEntity->one(playingEntity : cda::PlayingEntity | not playingEntity.oclIsUndefined() and playingEntity.oclIsKindOf(cda::PlayingEntity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wYRbEIokEeSkH97cUQxLGA" name="AdvanceDirectiveObservation2AdvanceDirectiveObservationCustodianRole" constrainedElement="_GnllUK-9EeO8duI_7f6kZw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wYRbEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->select(typeCode=vocab::ParticipationType::CST)->select(typeCode=vocab::ParticipationType::CST)->reject(participantRole->one(participantRole : cda::ParticipantRole | not participantRole.oclIsUndefined() and participantRole.oclIsKindOf(cda::ParticipantRole)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wYSpMIokEeSkH97cUQxLGA" name="AdvanceDirectiveObservationReferenceExternalDocumentTextMediaType" constrainedElement="_GnllUK-9EeO8duI_7f6kZw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wYSpMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.reference->excluding(null).externalDocument->excluding(null)->reject(not text.mediaType.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wYSpMookEeSkH97cUQxLGA" name="AdvanceDirectiveObservationReferenceExternalDocumentTextReference" constrainedElement="_GnllUK-9EeO8duI_7f6kZw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wYSpM4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.reference->excluding(null).externalDocument->excluding(null)->reject(not text.oclIsUndefined() implies not text.reference.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wYTQQIokEeSkH97cUQxLGA" name="AdvanceDirectiveObservationReferenceExternalDocumentId" constrainedElement="_GnllUK-9EeO8duI_7f6kZw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wYTQQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.reference->excluding(null).externalDocument->excluding(null)->reject((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wYT3UIokEeSkH97cUQxLGA" name="AdvanceDirectiveObservationReferenceExternalDocumentText" constrainedElement="_GnllUK-9EeO8duI_7f6kZw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wYT3UYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.reference->excluding(null).externalDocument->excluding(null)->reject((text.oclIsUndefined() or text.isNullFlavorUndefined()) implies (not text.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wYT3UookEeSkH97cUQxLGA" name="AdvanceDirectiveObservation2AdvanceDirectiveObservationReferenceTypeCode" constrainedElement="_GnllUK-9EeO8duI_7f6kZw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wYT3U4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.reference->excluding(null)->reject(not typeCode.oclIsUndefined() and typeCode.oclIsKindOf(vocab::x_ActRelationshipExternalReference) and &#xD;
let value : vocab::x_ActRelationshipExternalReference = typeCode.oclAsType(vocab::x_ActRelationshipExternalReference) in &#xD;
value = vocab::x_ActRelationshipExternalReference::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wYUeYIokEeSkH97cUQxLGA" name="AdvanceDirectiveObservation2AdvanceDirectiveObservationReferenceExternalDocument" constrainedElement="_GnllUK-9EeO8duI_7f6kZw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wYUeYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.reference->excluding(null)->reject(externalDocument->one(externalDocument : cda::ExternalDocument | not externalDocument.oclIsUndefined() and externalDocument.oclIsKindOf(cda::ExternalDocument)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_GnmMYK-9EeO8duI_7f6kZw" general="_2KlEwBSVEeGGzu7fmW9pXw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_uCiIYLNwEeOtlapy2HWYww" name="AllergyConcernAct2">
      <ownedComment xmi:id="_kWCYcLNxEeOtlapy2HWYww">
        <body>This template reflects an ongoing concern on behalf of the provider that placed the allergy on a patient's allergy list. So long as the underlying condition is of concern to the provider (i.e. so long as the allergy, whether active or resolved, is of ongoing concern and interest to the provider), the statusCode is &quot;active&quot;. Only when the underlying allergy is no longer of concern is the statusCode set to &quot;completed&quot;. The effectiveTime reflects the time that the underlying allergy was felt to be a concern.&#xD;
The statusCode of the Allergy Concern Act is the definitive indication of the status of the concern, whereas the effectiveTime of the nested Allergy - Intolerance Observation is the definitive indication of whether or not the underlying allergy is resolved. &#xD;
The effectiveTime/low of the Allergy Concern Act asserts when the concern became active. This equates to the time the concern was authored in the patient's chart. The effectiveTime/high asserts when the concern was completed (e.g. when the clinician deemed there is no longer any need to track the underlying condition).</body>
      </ownedComment>
      <ownedRule xmi:id="_a4EoULbWEeOohfENwVAdzg" name="AllergyConcernAct2EffectiveTimeLow" constrainedElement="_2EAisBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_a4EoUbbWEeOohfENwVAdzg">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cA2OQLbWEeOohfENwVAdzg" name="AllergyConcernAct2EffectiveTimeHigh">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cA2OQbbWEeOohfENwVAdzg">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vsJU4IokEeSkH97cUQxLGA" name="AllergyProblemActTemplateId" constrainedElement="_uCiIYLNwEeOtlapy2HWYww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vsJU4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.30' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vsKjAIokEeSkH97cUQxLGA" name="AllergyProblemActEffectiveTime" constrainedElement="_uCiIYLNwEeOtlapy2HWYww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vsKjAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vsQCkIokEeSkH97cUQxLGA" name="AllergyConcernAct2AuthorParticipation" constrainedElement="_uCiIYLNwEeOtlapy2HWYww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vsQCkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->exists(author : cda::Author | not author.oclIsUndefined() and author.oclIsKindOf(consol::AuthorParticipation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v2Y2AookEeSkH97cUQxLGA" name="AllergyProblemActAllergyObservation2" constrainedElement="_uCiIYLNwEeOtlapy2HWYww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v2Y2A4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::AllergyObservation2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wYXhsIokEeSkH97cUQxLGA" name="AllergyConcernAct2IVLTSLow" constrainedElement="_uCiIYLNwEeOtlapy2HWYww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wYXhsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.effectiveTime->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((low.oclIsUndefined() or low.isNullFlavorUndefined()) implies (not low.oclIsUndefined()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wYXhsookEeSkH97cUQxLGA" name="AllergyConcernAct2IVLTSHigh" constrainedElement="_uCiIYLNwEeOtlapy2HWYww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wYXhs4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.effectiveTime->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((high.oclIsUndefined() or high.isNullFlavorUndefined()) implies (not high.oclIsUndefined()) )))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_uCivcLNwEeOtlapy2HWYww" general="_2EAisBSVEeGGzu7fmW9pXw"/>
      <ownedOperation xmi:id="_v2aEIIokEeSkH97cUQxLGA" name="getConsolAllergyObservation2s" bodyCondition="_v2aEI4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v2aEI4okEeSkH97cUQxLGA" name="body" constrainedElement="_v2aEIIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v2aEJIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::AllergyObservation2)).oclAsType(consol::AllergyObservation2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v2aEIYokEeSkH97cUQxLGA" type="_uVJogLj5EeODDJAC5t5vpw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v2aEIookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_uVJogLj5EeODDJAC5t5vpw" name="AllergyObservation2">
      <ownedComment xmi:id="_d2V3QLj6EeODDJAC5t5vpw">
        <body>This template reflects a discrete observation about a patient's allergy or intolerance. Because it is a discrete observation, it will have a statusCode of &quot;completed&quot;. The effectiveTime, also referred to as the &quot;biologically relevant time&quot; is the time at which the observation holds for the patient. For a provider seeing a patient in the clinic today, observing a history of penicillin allergy that developed five years ago, the effectiveTime is five years ago. &#xD;
The effectiveTime of the Allergy - Intolerance Observation is the definitive indication of whether or not the underlying allergy/intolerance is resolved. If known to be resolved, then an effectiveTime/high would be present. If the date of resolution is not known, then effectiveTime/high will be present with a nullFlavor of &quot;UNK&quot;.&#xD;
NOTE: The agent responsible for an allergy or adverse reaction is not always a manufactured material (for example, food allergies), nor is it necessarily consumed. The following constraints reflect limitations in the base CDA R2 specification, and should be used to represent any type of responsible agent.</body>
      </ownedComment>
      <ownedRule xmi:id="_OMO6kLkVEeODDJAC5t5vpw" name="AllergyObservation2ValueOriginalText" constrainedElement="_2EaLUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_OMO6kbkVEeODDJAC5t5vpw">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_okdgoLkXEeODDJAC5t5vpw" name="AllergyObservation2OriginalTextReference" constrainedElement="_2EaLUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_okdgobkXEeODDJAC5t5vpw">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_E9i2ELkYEeODDJAC5t5vpw" name="AllergyObservation2OriginalTextReferenceValue" constrainedElement="_cf38gCFLEeG9m6LRl9ardQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_E9i2EbkYEeODDJAC5t5vpw">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_dwX2gLkYEeODDJAC5t5vpw" name="AllergyObservation2ReferenceValue" constrainedElement="_2EaLUBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_dwX2gbkYEeODDJAC5t5vpw">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YbNUcPfpEeO297ryy8ptVg" name="AllergyObservation2ReactionInversionIndicator">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YbNUcffpEeO297ryy8ptVg">
          <language>OCL</language>
          <body>self.entryRelationship->select(er : cda::EntryRelationship | er.observation.oclIsTypeOf(consol::ReactionObservation2))->forAll(ent : cda::EntryRelationship | ent.inversionInd=true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uBVvYPfpEeO297ryy8ptVg" name="AllergyObservation2SeverityInversionIndicator">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uBVvYffpEeO297ryy8ptVg">
          <language>OCL</language>
          <body>self.entryRelationship->select(er : cda::EntryRelationship | er.observation.oclIsTypeOf(consol::SeverityObservation2))->forAll(ent : cda::EntryRelationship | ent.inversionInd=true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vsR3wIokEeSkH97cUQxLGA" name="SubstanceOrDeviceAllergyObservationTemplateId" constrainedElement="_uVJogLj5EeODDJAC5t5vpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vsR3wYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.7' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vsViIIokEeSkH97cUQxLGA" name="AllergyObservation2NegationInd" constrainedElement="_uVJogLj5EeODDJAC5t5vpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vsViIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.negationInd.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vsWJMIokEeSkH97cUQxLGA" name="AllergyObservation2Text" constrainedElement="_uVJogLj5EeODDJAC5t5vpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vsWJMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.text.oclIsUndefined() or self.text.isNullFlavorUndefined()) implies (not self.text.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vsbowIokEeSkH97cUQxLGA" name="AllergyObservationCodeP" constrainedElement="_uVJogLj5EeODDJAC5t5vpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vsbowYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vsZMgIokEeSkH97cUQxLGA" name="AllergyObservationCode" constrainedElement="_uVJogLj5EeODDJAC5t5vpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vsZMgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
not value.codeSystem.oclIsUndefined() or not value.codeSystemName.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vshIUIokEeSkH97cUQxLGA" name="AllergyObservationValueP" constrainedElement="_uVJogLj5EeODDJAC5t5vpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vshIUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vsfTIIokEeSkH97cUQxLGA" name="AllergyObservationValue" constrainedElement="_uVJogLj5EeODDJAC5t5vpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vsfTIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.96' and (value.code = '420134006' or value.code = '418038007' or value.code = '419511003' or value.code = '418471000' or value.code = '419199007' or value.code = '416098002' or value.code = '414285001' or value.code = '59037007' or value.code = '235719002' or value.code = '232347008' or value.code = '426232007')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vsmn4IokEeSkH97cUQxLGA" name="AllergyObservationStatusCodeP" constrainedElement="_uVJogLj5EeODDJAC5t5vpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vsmn4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vskLoIokEeSkH97cUQxLGA" name="AllergyObservationStatusCode" constrainedElement="_uVJogLj5EeODDJAC5t5vpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vskLoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vspEIIokEeSkH97cUQxLGA" name="AllergyObservationEffectiveTime" constrainedElement="_uVJogLj5EeODDJAC5t5vpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vspEIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vs1RYIokEeSkH97cUQxLGA" name="AllergyObservation2AuthorParticipation" constrainedElement="_uVJogLj5EeODDJAC5t5vpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vs1RYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->exists(author : cda::Author | not author.oclIsUndefined() and author.oclIsKindOf(consol::AuthorParticipation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v2aEJYokEeSkH97cUQxLGA" name="AllergyObservationReactionObservation2" constrainedElement="_uVJogLj5EeODDJAC5t5vpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v2aEJookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::ReactionObservation2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::MFST)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v2bSRYokEeSkH97cUQxLGA" name="AllergyObservation2SeverityObservation2" constrainedElement="_uVJogLj5EeODDJAC5t5vpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v2bSRookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::SeverityObservation2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v3VRNYokEeSkH97cUQxLGA" name="AllergyObservationParticipant" constrainedElement="_uVJogLj5EeODDJAC5t5vpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v3VRNookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->one(participant : cda::Participant2 | not participant.oclIsUndefined() and participant.oclIsKindOf(cda::Participant2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wYbMEIokEeSkH97cUQxLGA" name="AllergyObservation2EDTELValue" constrainedElement="_uVJogLj5EeODDJAC5t5vpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wYbzIIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.text->excluding(null)->select(isNullFlavorUndefined()).reference->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies (not value.oclIsUndefined() )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wYbzIYokEeSkH97cUQxLGA" name="AllergyObservation2EDReference" constrainedElement="_uVJogLj5EeODDJAC5t5vpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wYbzIookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.text->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((reference.oclIsUndefined() or reference.isNullFlavorUndefined()) implies (not reference.oclIsUndefined()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wYePYIokEeSkH97cUQxLGA" name="AllergyObservation2IVLTSLow" constrainedElement="_uVJogLj5EeODDJAC5t5vpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wYe2cIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.effectiveTime->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((low.oclIsUndefined() or low.isNullFlavorUndefined()) implies (not low.oclIsUndefined()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wYe2cYokEeSkH97cUQxLGA" name="AllergyObservation2IVLTSHigh" constrainedElement="_uVJogLj5EeODDJAC5t5vpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wYe2cookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.effectiveTime->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((high.oclIsUndefined() or high.isNullFlavorUndefined()) implies (not high.oclIsUndefined()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wYkWAIokEeSkH97cUQxLGA" name="AllergyObservation2ParticipantParticipantRolePlayingEntityOriginalTextReference" constrainedElement="_uVJogLj5EeODDJAC5t5vpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wYkWAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).participantRole->excluding(null).playingEntity->excluding(null)->reject(true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wYk9EIokEeSkH97cUQxLGA" name="AllergyObservation2ParticipantParticipantRolePlayingEntityAllergyClassMedication" constrainedElement="_uVJogLj5EeODDJAC5t5vpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wYk9EYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).participantRole->excluding(null).playingEntity->excluding(null)->reject(true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wYlkIIokEeSkH97cUQxLGA" name="AllergyObservation2ParticipantParticipantRolePlayingEntityAllergyFoodOtherSubstance" constrainedElement="_uVJogLj5EeODDJAC5t5vpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wYlkIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).participantRole->excluding(null).playingEntity->excluding(null)->reject(true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wYmLMIokEeSkH97cUQxLGA" name="AllergyObservation2ParticipantParticipantRolePlayingEntityReferenceValue" constrainedElement="_uVJogLj5EeODDJAC5t5vpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wYmLMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).participantRole->excluding(null).playingEntity->excluding(null)->reject(true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wYmyQIokEeSkH97cUQxLGA" name="AllergyObservation2ParticipantParticipantRolePlayingEntityOriginalTextReferenceValue" constrainedElement="_uVJogLj5EeODDJAC5t5vpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wYmyQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).participantRole->excluding(null).playingEntity->excluding(null)->reject(true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wYmyQookEeSkH97cUQxLGA" name="AllergyObservation2ParticipantParticipantRolePlayingEntityAllergySpecificMedication" constrainedElement="_uVJogLj5EeODDJAC5t5vpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wYnZUIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).participantRole->excluding(null).playingEntity->excluding(null)->reject(true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wYnZUYokEeSkH97cUQxLGA" name="AllergyObservation2ParticipantParticipantRoleAllergyObservationParticipantParticipantRolePlayingEntityCode" constrainedElement="_uVJogLj5EeODDJAC5t5vpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wYoAYIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).participantRole->excluding(null).playingEntity->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wYoAYYokEeSkH97cUQxLGA" name="AllergyObservation2ParticipantAllergyObservationParticipantParticipantRolePlayingEntity" constrainedElement="_uVJogLj5EeODDJAC5t5vpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wYoAYookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).participantRole->excluding(null)->reject(playingEntity->one(playingEntity : cda::PlayingEntity | not playingEntity.oclIsUndefined() and playingEntity.oclIsKindOf(cda::PlayingEntity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wYoncIokEeSkH97cUQxLGA" name="AllergyObservation2AllergyObservationParticipantParticipantRole" constrainedElement="_uVJogLj5EeODDJAC5t5vpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wYoncYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->reject(participantRole->one(participantRole : cda::ParticipantRole | not participantRole.oclIsUndefined() and participantRole.oclIsKindOf(cda::ParticipantRole)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_uVNS4Lj5EeODDJAC5t5vpw" general="_2EaLUBSVEeGGzu7fmW9pXw"/>
      <ownedOperation xmi:id="_vs2fgIokEeSkH97cUQxLGA" name="getConsolAllergyStatusObservations" bodyCondition="_vs2fg4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vs2fg4okEeSkH97cUQxLGA" name="body" constrainedElement="_vs2fgIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vs2fhIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::AllergyStatusObservation)).oclAsType(consol::AllergyStatusObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vs2fgYokEeSkH97cUQxLGA" type="_2FRuAhSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vs2fgookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v2bSQIokEeSkH97cUQxLGA" name="getConsolReactionObservation2s" bodyCondition="_v2bSQ4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v2bSQ4okEeSkH97cUQxLGA" name="body" constrainedElement="_v2bSQIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v2bSRIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ReactionObservation2)).oclAsType(consol::ReactionObservation2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v2bSQYokEeSkH97cUQxLGA" type="_U3yosPDxEeOKPKE9au0oug" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v2bSQookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v2b5UIokEeSkH97cUQxLGA" name="getSeverityObservation2" bodyCondition="_v2b5U4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v2b5U4okEeSkH97cUQxLGA" name="body" constrainedElement="_v2b5UIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v2b5VIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::SeverityObservation2))->asSequence()->any(true).oclAsType(consol::SeverityObservation2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v2b5UYokEeSkH97cUQxLGA" type="_B0oKYPJdEeO2NaSiicarcg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v2b5UookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_6LYrULkoEeODDJAC5t5vpw" name="CognitiveStatusOrganizer2">
      <ownedComment xmi:id="_XgdH4LkpEeODDJAC5t5vpw">
        <body>This template groups related cognitive status observations into categories. This organizer template may be used to group questions in a Patient Health Questionnaire (PHQ).</body>
      </ownedComment>
      <ownedRule xmi:id="_vs3GkIokEeSkH97cUQxLGA" name="ResultOrganizerTemplateId" constrainedElement="_6LYrULkoEeODDJAC5t5vpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vs3GkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.75' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vs47wIokEeSkH97cUQxLGA" name="ResultOrganizerCode" constrainedElement="_6LYrULkoEeODDJAC5t5vpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vs47wYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v3UDEIokEeSkH97cUQxLGA" name="CognitiveStatusResultOrganizerCognitiveStatusObservation2" constrainedElement="_6LYrULkoEeODDJAC5t5vpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v3UDEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.component->exists(component : cda::Component4 | not component.observation.oclIsUndefined() and component.observation.oclIsKindOf(consol::CognitiveStatusObservation2))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_6LYrUbkoEeODDJAC5t5vpw" general="_jfoCUOZbEeGINOJ_SD9_dA"/>
      <ownedOperation xmi:id="_v3VRMIokEeSkH97cUQxLGA" name="getConsolCognitiveStatusObservation2s" bodyCondition="_v3VRM4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v3VRM4okEeSkH97cUQxLGA" name="body" constrainedElement="_v3VRMIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v3VRNIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::CognitiveStatusObservation2)).oclAsType(consol::CognitiveStatusObservation2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v3VRMYokEeSkH97cUQxLGA" type="_ze150PitEeOXlK95I8tUew" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v3VRMookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_aJr6ULkxEeODDJAC5t5vpw" name="CoverageActivity2">
      <ownedComment xmi:id="_-FQw0LkxEeODDJAC5t5vpw">
        <body>A Coverage Activity groups the policy and authorization acts within a Payers Section to order the payment sources. A Coverage Activity contains one or more policy activities, each of which contains zero or more authorization activities. The Coverage Activity id is the Id from the patient's insurance card.  The sequenceNumber/@value shows the policy order of preference.</body>
      </ownedComment>
      <ownedRule xmi:id="_reFLoPftEeO297ryy8ptVg" name="CoverageActivity2CoverageActivityRelationshipSequenceNumber">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_reFLofftEeO297ryy8ptVg">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vs6J4IokEeSkH97cUQxLGA" name="CoverageActivityTemplateId" constrainedElement="_aJr6ULkxEeODDJAC5t5vpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vs6J4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.60' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vs_pcIokEeSkH97cUQxLGA" name="CoverageActivityCodeP" constrainedElement="_aJr6ULkxEeODDJAC5t5vpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vs_pcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vs9NMIokEeSkH97cUQxLGA" name="CoverageActivityCode" constrainedElement="_aJr6ULkxEeODDJAC5t5vpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vs9NMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '48768-6' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v2cgYIokEeSkH97cUQxLGA" name="CoverageActivityPolicyActivity2" constrainedElement="_aJr6ULkxEeODDJAC5t5vpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v2cgYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(consol::PolicyActivity2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_aJr6UbkxEeODDJAC5t5vpw" general="_Cg3pkBUmEeGvPruliC3crg"/>
      <ownedOperation xmi:id="_v2dHcIokEeSkH97cUQxLGA" name="getConsolPolicyActivity2s" bodyCondition="_v2dHc4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v2dHc4okEeSkH97cUQxLGA" name="body" constrainedElement="_v2dHcIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v2dHdIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::PolicyActivity2)).oclAsType(consol::PolicyActivity2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v2dHcYokEeSkH97cUQxLGA" type="_Q0ODkOwlEeOqa975IP2wug" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v2dHcookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Hl3ScLk0EeODDJAC5t5vpw" name="CurrentSmokingStatus2">
      <ownedComment xmi:id="_05AVQLk0EeODDJAC5t5vpw">
        <body>This template constrains the Tobacco Use template to represent the current smoking status of the patient as specified in Meaningful Use (MU) Stage 2 requirements. Historic smoking status observations as well as details about the smoking habit (e.g., how many per day) would be represented in the Tobacco Use template.&#xD;
This template represents a &quot;snapshot in time&quot; observation, simply reflecting what the patient's current smoking status is at the time of the observation. As a result, the effectiveTime is constrained to a time stamp, and will approximately correspond with the author/time. Details regarding the time period when the patient is/was smoking would be recorded in the Tobacco Use template.&#xD;
If the patient's current smoking status is unknown, the value element must be populated with SNOMED CT code '266927001' to communicate 'Unknown if ever smoked' from the Current Smoking Status Value Set.</body>
      </ownedComment>
      <ownedRule xmi:id="_leM_cLnJEeOgPNzo_e4B9A" name="CurrentSmokingStatus2EffectiveTimeLow" constrainedElement="_RYJj0OWQEeGKmvzED_He2w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_leM_cbnJEeOgPNzo_e4B9A">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vtCFsIokEeSkH97cUQxLGA" name="TobaccoUseTemplateId" constrainedElement="_Hl3ScLk0EeODDJAC5t5vpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vtCFsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.78' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vtG-MIokEeSkH97cUQxLGA" name="SmokingStatusObservationValueP" constrainedElement="_Hl3ScLk0EeODDJAC5t5vpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vtG-MYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vtEh8IokEeSkH97cUQxLGA" name="SmokingStatusObservationValue" constrainedElement="_Hl3ScLk0EeODDJAC5t5vpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vtEh8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.96' and (value.code = '449868002' or value.code = '428041000124106' or value.code = '8517006' or value.code = '266919005' or value.code = '77176002' or value.code = '266927001' or value.code = '428071000124103' or value.code = '428061000124105')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vtL2sIokEeSkH97cUQxLGA" name="SmokingStatusObservationCodeP" constrainedElement="_Hl3ScLk0EeODDJAC5t5vpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vtL2sYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vtKBgIokEeSkH97cUQxLGA" name="SmokingStatusObservationCode" constrainedElement="_Hl3ScLk0EeODDJAC5t5vpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vtKBgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '229819007' and value.codeSystem = '2.16.840.1.113883.6.96')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vteKkIokEeSkH97cUQxLGA" name="SmokingStatusObservationEffectiveTime" constrainedElement="_Hl3ScLk0EeODDJAC5t5vpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vteKkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vtfYsIokEeSkH97cUQxLGA" name="CurrentSmokingStatus2AuthorParticipation" constrainedElement="_Hl3ScLk0EeODDJAC5t5vpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vtfYsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->exists(author : cda::Author | not author.oclIsUndefined() and author.oclIsKindOf(consol::AuthorParticipation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Hl5HoLk0EeODDJAC5t5vpw" general="_RYJj0OWQEeGKmvzED_He2w"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_4iF6IL86EeOS5KuvmCHHew" name="DeceasedObservation2">
      <ownedComment xmi:id="_A79IEL87EeOS5KuvmCHHew">
        <body>This template represents the observation that a patient has died. It also represents the cause of death, indicated by an entryRelationship type of 'CAUS'. This template allows for more specific representation of data than is available with the use of dischargeDispositionCode.</body>
      </ownedComment>
      <ownedRule xmi:id="_vtgm0IokEeSkH97cUQxLGA" name="DeceasedObservationTemplateId" constrainedElement="_4iF6IL86EeOS5KuvmCHHew">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vthN4IokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.79' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vtlfUIokEeSkH97cUQxLGA" name="DeceasedObservationCodeP" constrainedElement="_4iF6IL86EeOS5KuvmCHHew">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vtlfUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vticAIokEeSkH97cUQxLGA" name="DeceasedObservationCode" constrainedElement="_4iF6IL86EeOS5KuvmCHHew">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vticAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = 'ASSERTION' and value.codeSystem = '2.16.840.1.113883.6.96')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v2dugIokEeSkH97cUQxLGA" name="DeceasedObservationProblemObservation2" constrainedElement="_4iF6IL86EeOS5KuvmCHHew">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v2dugYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::ProblemObservation2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::CAUS)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_4iIWYL86EeOS5KuvmCHHew" general="_lm3boOZbEeGINOJ_SD9_dA"/>
      <ownedOperation xmi:id="_v2eVkIokEeSkH97cUQxLGA" name="getConsolProblemObservation2" bodyCondition="_v2eVk4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v2eVk4okEeSkH97cUQxLGA" name="body" constrainedElement="_v2eVkIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v2eVlIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProblemObservation2))->asSequence()->any(true).oclAsType(consol::ProblemObservation2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v2eVkYokEeSkH97cUQxLGA" type="_prDAkPDCEeOKPKE9au0oug" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v2eVkookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_EIeu8MyjEeO93sHu8pHB2g" name="DischargeMedication2">
      <ownedComment xmi:id="_QIz30MykEeO93sHu8pHB2g">
        <body>This template represents medications that the patient is intended to take (or stop) after discharge.</body>
      </ownedComment>
      <ownedRule xmi:id="_vtoioIokEeSkH97cUQxLGA" name="DischargeMedicationTemplateId" constrainedElement="_EIeu8MyjEeO93sHu8pHB2g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vtoioYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.35' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vts0EIokEeSkH97cUQxLGA" name="DischargeMedicationCodeP" constrainedElement="_EIeu8MyjEeO93sHu8pHB2g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vts0EYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vtqX0IokEeSkH97cUQxLGA" name="DischargeMedicationCode" constrainedElement="_EIeu8MyjEeO93sHu8pHB2g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vtqX0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '10183-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v2e8oIokEeSkH97cUQxLGA" name="DischargeMedicationMedicationActivity2" constrainedElement="_EIeu8MyjEeO93sHu8pHB2g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v2e8oYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.substanceAdministration.oclIsUndefined() and entryRelationship.substanceAdministration.oclIsKindOf(consol::MedicationActivity2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_EIhLMMyjEeO93sHu8pHB2g" general="_hD-z0CUPEeGiOPpZVnfEJA"/>
      <ownedOperation xmi:id="_v2fjsIokEeSkH97cUQxLGA" name="getConsolMedicationActivity2s" bodyCondition="_v2fjs4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v2fjs4okEeSkH97cUQxLGA" name="body" constrainedElement="_v2fjsIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v2gKwIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(consol::MedicationActivity2)).oclAsType(consol::MedicationActivity2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v2fjsYokEeSkH97cUQxLGA" type="_WnSCMOLAEeOc7-TVP7Wi6w" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v2fjsookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_RGU34MzDEeO93sHu8pHB2g" name="EncounterActivity2">
      <ownedComment xmi:id="_3BOh0MzDEeO93sHu8pHB2g">
        <body>This clinical statement describes an interaction between a patient and clinician. Interactions may include in-person encounters, telephone conversations, and email exchanges.</body>
      </ownedComment>
      <ownedRule xmi:id="_tMxrkMzLEeO93sHu8pHB2g" name="EncounterActivity2SdtcDDCFromNUBCOrDD" constrainedElement="_RGU34MzDEeO93sHu8pHB2g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_DnY3cMzMEeO93sHu8pHB2g">
          <language>OCL</language>
          <body>(self.sDTCDischargeDispositionCode->isEmpty() or self.sDTCDischargeDispositionCode->exists(element | element.isNullFlavorUndefined())) implies (self.sDTCDischargeDispositionCode->forAll( element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CE) and let value : datatypes::CE = element.oclAsType(datatypes::CE) in (value.codeSystem = '2.16.840.1.113883.6.301.5' or value.codeSystem = '2.16.840.1.113883.12.112') and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vtvQUIokEeSkH97cUQxLGA" name="EncounterActivitiesTemplateId" constrainedElement="_RGU34MzDEeO93sHu8pHB2g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vtvQUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.49' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vtxFgIokEeSkH97cUQxLGA" name="EncounterActivitiesSDTCDischargeDispositionCode" constrainedElement="_RGU34MzDEeO93sHu8pHB2g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vtxFgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.sDTCDischargeDispositionCode->isEmpty() or self.sDTCDischargeDispositionCode->exists(element | element.isNullFlavorUndefined())) implies (not self.sDTCDischargeDispositionCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v2hY4YokEeSkH97cUQxLGA" name="EncounterActivitiesIndication2" constrainedElement="_RGU34MzDEeO93sHu8pHB2g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v2hY4ookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::Indication2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::RSON)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v2inAYokEeSkH97cUQxLGA" name="EncounterActivitiesEncounterDiagnosis2" constrainedElement="_RGU34MzDEeO93sHu8pHB2g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v2inAookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(consol::EncounterDiagnosis2))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_RGVe8MzDEeO93sHu8pHB2g" general="_2LayQBSVEeGGzu7fmW9pXw"/>
      <ownedOperation xmi:id="_v2h_8IokEeSkH97cUQxLGA" name="getConsolIndication2s" bodyCondition="_v2h_84okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v2h_84okEeSkH97cUQxLGA" name="body" constrainedElement="_v2h_8IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v2inAIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::Indication2)).oclAsType(consol::Indication2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v2h_8YokEeSkH97cUQxLGA" type="_PrEOIOHoEeO04sHNODkHmQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v2h_8ookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v2j1IIokEeSkH97cUQxLGA" name="getConsolEncounterDiagnosis2s" bodyCondition="_v2j1I4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v2j1I4okEeSkH97cUQxLGA" name="body" constrainedElement="_v2j1IIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v2j1JIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::EncounterDiagnosis2)).oclAsType(consol::EncounterDiagnosis2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v2j1IYokEeSkH97cUQxLGA" type="_jH6CcMzNEeO93sHu8pHB2g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v2j1IookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_jH6CcMzNEeO93sHu8pHB2g" name="EncounterDiagnosis2">
      <ownedComment xmi:id="_JPYv0MzOEeO93sHu8pHB2g">
        <body>This template wraps relevant problems or diagnoses at the close of a visit or that need to be followed after the visit. If the encounter is associated with a Hospital Discharge, the Hospital Discharge Diagnosis must be used. This entry requires at least one Problem Observation entry.</body>
      </ownedComment>
      <ownedRule xmi:id="_vty6sIokEeSkH97cUQxLGA" name="EncounterDiagnosisTemplateId" constrainedElement="_jH6CcMzNEeO93sHu8pHB2g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vty6sYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.80' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vt3MIIokEeSkH97cUQxLGA" name="EncounterDiagnosisCodeP" constrainedElement="_jH6CcMzNEeO93sHu8pHB2g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vt3MIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vt1W8IokEeSkH97cUQxLGA" name="EncounterDiagnosisCode" constrainedElement="_jH6CcMzNEeO93sHu8pHB2g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vt1W8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '29308-4' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v2gKwYokEeSkH97cUQxLGA" name="EncounterDiagnosisProblemObservation2" constrainedElement="_jH6CcMzNEeO93sHu8pHB2g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v2gKwookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::ProblemObservation2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_jH6CcczNEeO93sHu8pHB2g" general="_Ker6MOM2EeGfv4R-kzpM0g"/>
      <ownedOperation xmi:id="_v2gx0IokEeSkH97cUQxLGA" name="getConsolProblemObservation2s" bodyCondition="_v2gx04okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v2gx04okEeSkH97cUQxLGA" name="body" constrainedElement="_v2gx0IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v2hY4IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProblemObservation2)).oclAsType(consol::ProblemObservation2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v2gx0YokEeSkH97cUQxLGA" type="_prDAkPDCEeOKPKE9au0oug" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v2gx0ookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_3WqogMzSEeO93sHu8pHB2g" name="FunctionalStatusObservation2">
      <ownedComment xmi:id="_OemNYMzTEeO93sHu8pHB2g">
        <body>This template represents the patient's physical function (e.g., mobility status, activities of daily living, self-care status) and problems that limit function (dyspnea, dysphagia). The template may include assessment scale observations, identify supporting caregivers, and provide information about non-medicinal supplies. This template is used to represent physical or developmental function of all patient populations and is not limited to the long-term care population.</body>
      </ownedComment>
      <ownedRule xmi:id="_2gS-oM7qEeO6qNoyVDglCA" name="FunctionalStatusObservation2TextReference">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2gS-oc7qEeO6qNoyVDglCA">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_fU5ZkM7rEeO6qNoyVDglCA" name="FunctionalStatusObservation2TextReferenceValue" constrainedElement="_tjUmsB7rEeGaOZtrEokzNQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fU5Zkc7rEeO6qNoyVDglCA">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vt5oYIokEeSkH97cUQxLGA" name="ResultObservationTemplateId" constrainedElement="_3WqogMzSEeO93sHu8pHB2g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vt6PcIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.67' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vt-g4IokEeSkH97cUQxLGA" name="ResultObservationCodeP" constrainedElement="_3WqogMzSEeO93sHu8pHB2g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vt-g4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vt8EoIokEeSkH97cUQxLGA" name="ResultObservationCode" constrainedElement="_3WqogMzSEeO93sHu8pHB2g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vt8EoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '364644000' and value.codeSystem = '2.16.840.1.113883.6.96')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vuBkMIokEeSkH97cUQxLGA" name="FunctionalStatusResultObservationReferenceRange" constrainedElement="_3WqogMzSEeO93sHu8pHB2g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vuBkMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.referenceRange->exists(referenceRange : cda::ReferenceRange | not referenceRange.oclIsUndefined() and referenceRange.oclIsKindOf(cda::ReferenceRange))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vuCyUIokEeSkH97cUQxLGA" name="FunctionalStatusObservation2AuthorParticipation" constrainedElement="_3WqogMzSEeO93sHu8pHB2g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vuCyUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->exists(author : cda::Author | not author.oclIsUndefined() and author.oclIsKindOf(consol::AuthorParticipation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v2j1JYokEeSkH97cUQxLGA" name="FunctionalStatusResultObservationNonMedicinalSupplyActivity2" constrainedElement="_3WqogMzSEeO93sHu8pHB2g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v2j1JookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.supply.oclIsUndefined() and entryRelationship.supply.oclIsKindOf(consol::NonMedicinalSupplyActivity2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wYvVIIokEeSkH97cUQxLGA" name="FunctionalStatusObservation2ReferenceRangeObservationRangeNoCode" constrainedElement="_3WqogMzSEeO93sHu8pHB2g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wYvVIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.referenceRange->excluding(null).observationRange->excluding(null)->reject(true)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_3WqogczSEeO93sHu8pHB2g" general="_viRU0OZbEeGINOJ_SD9_dA"/>
      <ownedOperation xmi:id="_v2lDQIokEeSkH97cUQxLGA" name="getConsolNonMedicinalSupplyActivity2" bodyCondition="_v2lDQ4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v2lDQ4okEeSkH97cUQxLGA" name="body" constrainedElement="_v2lDQIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v2lDRIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getSupplies()->select(supply : cda::Supply | not supply.oclIsUndefined() and supply.oclIsKindOf(consol::NonMedicinalSupplyActivity2))->asSequence()->any(true).oclAsType(consol::NonMedicinalSupplyActivity2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v2lDQYokEeSkH97cUQxLGA" type="_k_C20OaCEeOmzetP5oaH3A" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v2lDQookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_mgny4NF8EeOHUokOVP95oQ" name="SubstanceOrDeviceAllergyObservation">
      <ownedComment xmi:id="_mgny4dF8EeOHUokOVP95oQ">
        <body>This clinical statement represents that an allergy or adverse reaction to a substance or device exists or does not exist. The agent that is the cause of the allergy or adverse reaction is represented as a participant in the observation.</body>
      </ownedComment>
      <ownedRule xmi:id="_mgny4tF8EeOHUokOVP95oQ" name="SubstanceOrDeviceAllergyObservationAllergyStatusInversionIndicator" constrainedElement="_mgny4NF8EeOHUokOVP95oQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mgny49F8EeOHUokOVP95oQ">
          <language>OCL</language>
          <body>self.entryRelationship->select(er : cda::EntryRelationship | er.observation.oclIsTypeOf(consol::AllergyStatusObservation))->forAll(ent : cda::EntryRelationship | ent.inversionInd=true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mgny5NF8EeOHUokOVP95oQ" name="SubstanceOrDeviceAllergyObservationReactionInversionIndicator" constrainedElement="_mgny4NF8EeOHUokOVP95oQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mgny5dF8EeOHUokOVP95oQ">
          <language>OCL</language>
          <body>self.entryRelationship->select(er : cda::EntryRelationship | er.observation.oclIsTypeOf(consol::ReactionObservation))->forAll(ent : cda::EntryRelationship | ent.inversionInd=true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mgny5tF8EeOHUokOVP95oQ" name="SubstanceOrDeviceAllergyObservationSeverityInversionIndicator" constrainedElement="_mgny4NF8EeOHUokOVP95oQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mgny59F8EeOHUokOVP95oQ">
          <language>OCL</language>
          <body>self.entryRelationship->select(er : cda::EntryRelationship | er.observation.oclIsTypeOf(consol::SeverityObservation))->forAll(ent : cda::EntryRelationship | ent.inversionInd=true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vuDZYIokEeSkH97cUQxLGA" name="SubstanceOrDeviceAllergyObservationTemplateId" constrainedElement="_mgny4NF8EeOHUokOVP95oQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vuDZYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.24.3.90')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vuGcsIokEeSkH97cUQxLGA" name="SubstanceOrDeviceAllergyObservationClassCode" constrainedElement="_mgny4NF8EeOHUokOVP95oQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vuGcsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vuHq0IokEeSkH97cUQxLGA" name="SubstanceOrDeviceAllergyObservationMoodCode" constrainedElement="_mgny4NF8EeOHUokOVP95oQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vuHq0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vuI48IokEeSkH97cUQxLGA" name="SubstanceOrDeviceAllergyObservationId" constrainedElement="_mgny4NF8EeOHUokOVP95oQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vuI48YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vuNKYIokEeSkH97cUQxLGA" name="SubstanceOrDeviceAllergyObservationCodeP" constrainedElement="_mgny4NF8EeOHUokOVP95oQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vuNKYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vuKuIIokEeSkH97cUQxLGA" name="SubstanceOrDeviceAllergyObservationCode" constrainedElement="_mgny4NF8EeOHUokOVP95oQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vuKuIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = 'ASSERTION' and value.codeSystem = '2.16.840.1.113883.5.4')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vuPmoIokEeSkH97cUQxLGA" name="SubstanceOrDeviceAllergyObservationStatusCode" constrainedElement="_mgny4NF8EeOHUokOVP95oQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vuPmoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vuRb0IokEeSkH97cUQxLGA" name="SubstanceOrDeviceAllergyObservationStatusCodeP" constrainedElement="_mgny4NF8EeOHUokOVP95oQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vuRb0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vuTRAIokEeSkH97cUQxLGA" name="SubstanceOrDeviceAllergyObservationEffectiveTime" constrainedElement="_mgny4NF8EeOHUokOVP95oQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vuTRAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vuVGMIokEeSkH97cUQxLGA" name="SubstanceOrDeviceAllergyObservationValue" constrainedElement="_mgny4NF8EeOHUokOVP95oQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vuVGMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.96' and (value.code = '420134006' or value.code = '418038007' or value.code = '419511003' or value.code = '418471000' or value.code = '419199007' or value.code = '416098002' or value.code = '414285001' or value.code = '59037007' or value.code = '235719002' or value.code = '232347008' or value.code = '426232007')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vuW7YIokEeSkH97cUQxLGA" name="SubstanceOrDeviceAllergyObservationValueP" constrainedElement="_mgny4NF8EeOHUokOVP95oQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vuW7YYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vukWwIokEeSkH97cUQxLGA" name="SubstanceOrDeviceAllergyObservationAllergyStatusObservation" constrainedElement="_mgny4NF8EeOHUokOVP95oQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vuk90IokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::AllergyStatusObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vumL8IokEeSkH97cUQxLGA" name="SubstanceOrDeviceAllergyObservationReactionObservation" constrainedElement="_mgny4NF8EeOHUokOVP95oQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vumL8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::ReactionObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::MFST)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vunaEIokEeSkH97cUQxLGA" name="SubstanceOrDeviceAllergyObservationSeverityObservation" constrainedElement="_mgny4NF8EeOHUokOVP95oQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vunaEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::SeverityObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vupPQIokEeSkH97cUQxLGA" name="SubstanceOrDeviceAllergyObservationParticipant" constrainedElement="_mgny4NF8EeOHUokOVP95oQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vupPQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->exists(participant : cda::Participant2 | not participant.oclIsUndefined() and participant.oclIsKindOf(cda::Participant2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wY0NoIokEeSkH97cUQxLGA" name="SubstanceOrDeviceAllergyObservationParticipantParticipantRolePlayingEntityCEOriginalText" constrainedElement="_mgny4NF8EeOHUokOVP95oQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wY00sIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).participantRole->excluding(null).playingEntity->excluding(null).code->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((originalText.oclIsUndefined() or originalText.isNullFlavorUndefined()) implies (not originalText.oclIsUndefined()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wY1bwIokEeSkH97cUQxLGA" name="SubstanceOrDeviceAllergyObservationParticipantParticipantRolePlayingEntityCETranslation" constrainedElement="_mgny4NF8EeOHUokOVP95oQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wY1bwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).participantRole->excluding(null).playingEntity->excluding(null).code->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((translation->isEmpty() or translation->exists(element | element.isNullFlavorUndefined())) implies (not translation->isEmpty()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wY2C0IokEeSkH97cUQxLGA" name="SubstanceOrDeviceAllergyObservationParticipantParticipantRolePlayingEntityOriginalTextReferenceValue" constrainedElement="_mgny4NF8EeOHUokOVP95oQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wY2C0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).participantRole->excluding(null).playingEntity->excluding(null)->reject(not code.originalText.reference.value.oclIsUndefined() implies not getSection().text.getText(code.originalText.reference.value.substring(2, code.originalText.reference.value.size())).oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wY2p4IokEeSkH97cUQxLGA" name="SubstanceOrDeviceAllergyObservationParticipantParticipantRolePlayingEntityReferenceValue" constrainedElement="_mgny4NF8EeOHUokOVP95oQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wY2p4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).participantRole->excluding(null).playingEntity->excluding(null)->reject(not code.originalText.reference.oclIsUndefined() implies code.originalText.reference.value->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wY3Q8IokEeSkH97cUQxLGA" name="SubstanceOrDeviceAllergyObservationParticipantParticipantRolePlayingEntityOriginalTextReference" constrainedElement="_mgny4NF8EeOHUokOVP95oQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wY3Q8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).participantRole->excluding(null).playingEntity->excluding(null)->reject(not code.originalText.oclIsUndefined() implies not code.originalText.reference.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wY34AIokEeSkH97cUQxLGA" name="SubstanceOrDeviceAllergyObservationParticipantParticipantRolePlayingEntityCodeTerminologyValueSetGroupSRFI" constrainedElement="_mgny4NF8EeOHUokOVP95oQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wY34AYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).participantRole->excluding(null).playingEntity->excluding(null)->reject(( code.oclIsUndefined() or code.isNullFlavorUndefined() ) implies ( not code.oclIsUndefined() and code.oclIsKindOf(datatypes::CE) and ( ( let value : datatypes::CE = code.oclAsType(datatypes::CE) in value.codeSystem = '2.16.840.1.113883.3.26.1.5' and not value.code.oclIsUndefined() ) or ( let value : datatypes::CE = code.oclAsType(datatypes::CE) in value.codeSystem = '2.16.840.1.113883.6.88' and not value.code.oclIsUndefined() ) or ( let value : datatypes::CE = code.oclAsType(datatypes::CE) in value.codeSystem = '2.16.840.1.113883.4.9' and not value.code.oclIsUndefined() ) or ( let value : datatypes::CE = code.oclAsType(datatypes::CE) in value.codeSystem = '2.16.840.1.113883.6.96' and not value.code.oclIsUndefined() ) ) ))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wY34AookEeSkH97cUQxLGA" name="SubstanceOrDeviceAllergyObservationParticipantParticipantRolePlayingEntityClassCode" constrainedElement="_mgny4NF8EeOHUokOVP95oQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wY4fEIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).participantRole->excluding(null).playingEntity->excluding(null)->reject(isDefined('classCode') and classCode=vocab::EntityClassRoot::MMAT)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wY4fEYokEeSkH97cUQxLGA" name="SubstanceOrDeviceAllergyObservationParticipantParticipantRolePlayingEntityCode" constrainedElement="_mgny4NF8EeOHUokOVP95oQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wY4fEookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).participantRole->excluding(null).playingEntity->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wY5GIIokEeSkH97cUQxLGA" name="SubstanceOrDeviceAllergyObservationParticipantParticipantRoleClassCode" constrainedElement="_mgny4NF8EeOHUokOVP95oQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wY5GIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).participantRole->excluding(null)->reject(isDefined('classCode') and classCode=vocab::RoleClassRoot::MANU)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wY5tMIokEeSkH97cUQxLGA" name="SubstanceOrDeviceAllergyObservationParticipantParticipantRolePlayingEntity" constrainedElement="_mgny4NF8EeOHUokOVP95oQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wY5tMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).participantRole->excluding(null)->reject(playingEntity->one(playingEntity : cda::PlayingEntity | not playingEntity.oclIsUndefined() and playingEntity.oclIsKindOf(cda::PlayingEntity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wY6UQIokEeSkH97cUQxLGA" name="SubstanceOrDeviceAllergyObservationParticipantTypeCode" constrainedElement="_mgny4NF8EeOHUokOVP95oQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wY6UQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->reject(typeCode=vocab::ParticipationType::CSM)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wY67UIokEeSkH97cUQxLGA" name="SubstanceOrDeviceAllergyObservationParticipantParticipantRole" constrainedElement="_mgny4NF8EeOHUokOVP95oQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wY67UYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->reject(participantRole->one(participantRole : cda::ParticipantRole | not participantRole.oclIsUndefined() and participantRole.oclIsKindOf(cda::ParticipantRole)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_mgny6NF8EeOHUokOVP95oQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_vulk4IokEeSkH97cUQxLGA" name="getAllergyStatusObservation" bodyCondition="_vulk44okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vulk44okEeSkH97cUQxLGA" name="body" constrainedElement="_vulk4IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vulk5IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::AllergyStatusObservation))->asSequence()->any(true).oclAsType(consol::AllergyStatusObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vulk4YokEeSkH97cUQxLGA" type="_2FRuAhSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vulk4ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vumzAIokEeSkH97cUQxLGA" name="getReactionObservations" bodyCondition="_vumzA4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vumzA4okEeSkH97cUQxLGA" name="body" constrainedElement="_vumzAIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vumzBIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ReactionObservation)).oclAsType(consol::ReactionObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vumzAYokEeSkH97cUQxLGA" type="_2E_aIRSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vumzAookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vuooMIokEeSkH97cUQxLGA" name="getSeverityObservation" bodyCondition="_vuooM4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vuooM4okEeSkH97cUQxLGA" name="body" constrainedElement="_vuooMIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vuooNIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::SeverityObservation))->asSequence()->any(true).oclAsType(consol::SeverityObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vuooMYokEeSkH97cUQxLGA" type="_2FGu4hSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vuooMookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_yU2tgOD0EeOmBMTtnrPqww" name="FunctionalStatusOrganizer2">
      <ownedComment xmi:id="_8KWzAOD0EeOmBMTtnrPqww">
        <body>This template groups related functional status observations into categories (e.g ambulation, self-care).</body>
      </ownedComment>
      <ownedRule xmi:id="_s7VVAOD9EeOmBMTtnrPqww" name="FunctionalStatusOrganizer2CodeCodeSystem">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_19yM8OD9EeOmBMTtnrPqww">
          <language>OCL</language>
          <body>self.code.isNullFlavorDefined() or self.code.codeSystem = '2.16.840.1.113883.6.254' or self.code.codeSystem = '2.16.840.1.113883.6.96'</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vusSkIokEeSkH97cUQxLGA" name="ResultOrganizerTemplateId" constrainedElement="_yU2tgOD0EeOmBMTtnrPqww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vusSkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.66' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vuuHwIokEeSkH97cUQxLGA" name="ResultOrganizerCode" constrainedElement="_yU2tgOD0EeOmBMTtnrPqww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vuuHwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vuzAQIokEeSkH97cUQxLGA" name="ResultOrganizerStatusCodeP" constrainedElement="_yU2tgOD0EeOmBMTtnrPqww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vuzAQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vuwkAIokEeSkH97cUQxLGA" name="ResultOrganizerStatusCode" constrainedElement="_yU2tgOD0EeOmBMTtnrPqww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vuwkAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vu01cIokEeSkH97cUQxLGA" name="FunctionalStatusResultOrganizerFunctionalStatusObservation2" constrainedElement="_yU2tgOD0EeOmBMTtnrPqww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vu01cYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.component->exists(component : cda::Component4 | not component.observation.oclIsUndefined() and component.observation.oclIsKindOf(consol::FunctionalStatusObservation2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vu2qoIokEeSkH97cUQxLGA" name="FunctionalStatusOrganizer2SelfCareActivities" constrainedElement="_yU2tgOD0EeOmBMTtnrPqww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vu2qoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.component->exists(component : cda::Component4 | not component.observation.oclIsUndefined() and component.observation.oclIsKindOf(consol::SelfCareActivities))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vu34wIokEeSkH97cUQxLGA" name="FunctionalStatusOrganizer2AuthorParticipation" constrainedElement="_yU2tgOD0EeOmBMTtnrPqww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vu34wYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->exists(author : cda::Author | not author.oclIsUndefined() and author.oclIsKindOf(consol::AuthorParticipation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_yVKPgOD0EeOmBMTtnrPqww" general="_zBlUUOZbEeGINOJ_SD9_dA"/>
      <ownedOperation xmi:id="_vu2DkIokEeSkH97cUQxLGA" name="getConsolFunctionalStatusObservation2s" bodyCondition="_vu2Dk4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vu2Dk4okEeSkH97cUQxLGA" name="body" constrainedElement="_vu2DkIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vu2DlIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::FunctionalStatusObservation2)).oclAsType(consol::FunctionalStatusObservation2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vu2DkYokEeSkH97cUQxLGA" type="_3WqogMzSEeO93sHu8pHB2g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vu2DkookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vu3RsIokEeSkH97cUQxLGA" name="getSelfCareActivitiess" bodyCondition="_vu3Rs4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vu3Rs4okEeSkH97cUQxLGA" name="body" constrainedElement="_vu3RsIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vu3RtIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::SelfCareActivities)).oclAsType(consol::SelfCareActivities)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vu3RsYokEeSkH97cUQxLGA" type="_nC0xUJmzEeOLJeQez13EkQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vu3RsookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_DMvdYOEFEeOmBMTtnrPqww" name="HealthStatusObservation2">
      <ownedComment xmi:id="_3pdyAOEFEeOmBMTtnrPqww">
        <body>This template represents  information about the overall health status of the patient. To represent the impact of a specific problem or concern related to the patient's expected health outcome use the Prognosis Observation Template 2.16.840.1.113883.10.20.22.4.113.</body>
      </ownedComment>
      <ownedRule xmi:id="_vu5G4IokEeSkH97cUQxLGA" name="HealthStatusObservationTemplateId" constrainedElement="_DMvdYOEFEeOmBMTtnrPqww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vu5G4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.5' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vu9YUIokEeSkH97cUQxLGA" name="HealthStatusObservationCodeP" constrainedElement="_DMvdYOEFEeOmBMTtnrPqww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vu9YUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vu68EIokEeSkH97cUQxLGA" name="HealthStatusObservationCode" constrainedElement="_DMvdYOEFEeOmBMTtnrPqww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vu68EYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '11323-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_DMwEcOEFEeOmBMTtnrPqww" general="_2ExXsBSVEeGGzu7fmW9pXw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_GM6icOEIEeOmBMTtnrPqww" name="HospitalAdmissionDiagnosis2">
      <ownedComment xmi:id="_XfoAYOEIEeOmBMTtnrPqww">
        <body>This template represents problems or diagnoses identified by the clinician at the time of the patient's admission.</body>
      </ownedComment>
      <ownedRule xmi:id="_vu_0kIokEeSkH97cUQxLGA" name="HospitalAdmissionDiagnosisTemplateId" constrainedElement="_GM6icOEIEeOmBMTtnrPqww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vvAboIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.34' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vvEGAIokEeSkH97cUQxLGA" name="HospitalAdmissionDiagnosisCodeP" constrainedElement="_GM6icOEIEeOmBMTtnrPqww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vvEGAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vvCQ0IokEeSkH97cUQxLGA" name="HospitalAdmissionDiagnosisCode" constrainedElement="_GM6icOEIEeOmBMTtnrPqww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vvCQ0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '46241-6' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v2lDRYokEeSkH97cUQxLGA" name="HospitalAdmissionDiagnosisProblemObservation2" constrainedElement="_GM6icOEIEeOmBMTtnrPqww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v2lDRookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::ProblemObservation2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_GM6iceEIEeOmBMTtnrPqww" general="_5K6mAEFHEeGorO80f-Cppg"/>
      <ownedOperation xmi:id="_v2mRYIokEeSkH97cUQxLGA" name="getConsolProblemObservation2s" bodyCondition="_v2mRY4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v2mRY4okEeSkH97cUQxLGA" name="body" constrainedElement="_v2mRYIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v2mRZIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProblemObservation2)).oclAsType(consol::ProblemObservation2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v2mRYYokEeSkH97cUQxLGA" type="_prDAkPDCEeOKPKE9au0oug" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v2mRYookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Trd1cOEMEeOmBMTtnrPqww" name="HospitalDischargeDiagnosis2">
      <ownedComment xmi:id="_ao5hoOEMEeOmBMTtnrPqww">
        <body>This template represents problems or diagnoses present at the time of discharge which occurred during the hospitalization or need to be monitored after hospitalization. It requires at least one Problem Observation entry.</body>
      </ownedComment>
      <ownedRule xmi:id="_vvGiQIokEeSkH97cUQxLGA" name="HospitalDischargeDiagnosisTemplateId" constrainedElement="_Trd1cOEMEeOmBMTtnrPqww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vvHJUIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.33' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vvKzsIokEeSkH97cUQxLGA" name="HospitalDischargeDiagnosisCodeP" constrainedElement="_Trd1cOEMEeOmBMTtnrPqww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vvKzsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vvI-gIokEeSkH97cUQxLGA" name="HospitalDischargeDiagnosisCode" constrainedElement="_Trd1cOEMEeOmBMTtnrPqww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vvI-gYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '11535-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v2mRZYokEeSkH97cUQxLGA" name="HospitalDischargeDiagnosisProblemObservation2" constrainedElement="_Trd1cOEMEeOmBMTtnrPqww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v2mRZookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::ProblemObservation2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Trd1ceEMEeOmBMTtnrPqww" general="_KtwVgCULEeGiOPpZVnfEJA"/>
      <ownedOperation xmi:id="_v2nfgIokEeSkH97cUQxLGA" name="getConsolProblemObservation2s" bodyCondition="_v2nfg4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v2nfg4okEeSkH97cUQxLGA" name="body" constrainedElement="_v2nfgIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v2nfhIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProblemObservation2)).oclAsType(consol::ProblemObservation2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v2nfgYokEeSkH97cUQxLGA" type="_prDAkPDCEeOKPKE9au0oug" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v2nfgookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_zI6vcOE7EeOTq9XEMvvkWw" name="ImmunizationActivity2">
      <ownedComment xmi:id="_Jul70OE8EeOTq9XEMvvkWw">
        <body>An Immunization Activity describes immunization substance administrations that have actually occurred or are intended to occur. Immunization Activities in &quot;INT&quot; mood are reflections of immunizations a clinician intends a patient to receive. Immunization Activities in &quot;EVN&quot; mood reflect immunizations actually received.&#xD;
An Immunization Activity is very similar to a Medication Activity with some key differentiators. The drug code system is constrained to CVX codes. Administration timing is less complex. Patient refusal reasons should be captured. All vaccines administered should be fully documented in the patient's permanent medical record. Healthcare providers who administer vaccines covered by the National Childhood Vaccine Injury Act are required to ensure that the permanent medical record of the recipient indicates: &#xD;
1) Date of administration &#xD;
2) Vaccine manufacturer &#xD;
3) Vaccine lot number &#xD;
4) Name and title of the person who administered the vaccine and the address of the clinic or facility where the permanent record will reside &#xD;
5) Vaccine information statement (VIS) &#xD;
a. date printed on the VIS &#xD;
b. date VIS given to patient or parent/guardian.&#xD;
This information should be included in an Immunization Activity when available. (reference: http://www.cdc.gov/vaccines/pubs/pinkbook/downloads/appendices/D/vacc_admin.pdf)</body>
      </ownedComment>
      <ownedRule xmi:id="_vvNP8IokEeSkH97cUQxLGA" name="ImmunizationActivityTemplateId" constrainedElement="_zI6vcOE7EeOTq9XEMvvkWw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vvN3AIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.52' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vvPsMIokEeSkH97cUQxLGA" name="ImmunizationActivityCode" constrainedElement="_zI6vcOE7EeOTq9XEMvvkWw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vvPsMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vvT9oIokEeSkH97cUQxLGA" name="ImmunizationActivityStatusCodeP" constrainedElement="_zI6vcOE7EeOTq9XEMvvkWw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vvT9oYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vvRhYIokEeSkH97cUQxLGA" name="ImmunizationActivityStatusCode" constrainedElement="_zI6vcOE7EeOTq9XEMvvkWw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vvRhYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'normal' or value.code = 'aborted' or value.code = 'active' or value.code = 'cancelled' or value.code = 'completed' or value.code = 'held' or value.code = 'new' or value.code = 'suspended' or value.code = 'nullified' or value.code = 'obsolete')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vvVy0IokEeSkH97cUQxLGA" name="ImmunizationActivityRepeatNumber" constrainedElement="_zI6vcOE7EeOTq9XEMvvkWw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vvVy0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.repeatNumber.oclIsUndefined() or self.repeatNumber.isNullFlavorUndefined()) implies (not self.repeatNumber.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vvarUIokEeSkH97cUQxLGA" name="ImmunizationActivityAdministrationUnitCodeP" constrainedElement="_zI6vcOE7EeOTq9XEMvvkWw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vvbSYIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.administrationUnitCode.oclIsUndefined() or self.administrationUnitCode.isNullFlavorUndefined()) implies (not self.administrationUnitCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vvYPEIokEeSkH97cUQxLGA" name="ImmunizationActivityAdministrationUnitCode" constrainedElement="_zI6vcOE7EeOTq9XEMvvkWw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vvYPEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.administrationUnitCode.oclIsUndefined() or self.administrationUnitCode.isNullFlavorUndefined()) implies (not self.administrationUnitCode.oclIsUndefined() and self.administrationUnitCode.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.administrationUnitCode.oclAsType(datatypes::CE) in &#xD;
value.code = 'APPFUL' or value.code = 'DROP' or value.code = 'NDROP' or value.code = 'OPDROP' or value.code = 'ORDROP' or value.code = 'OTDROP' or value.code = 'PUFF' or value.code = 'SCOOP' or value.code = 'SPRY')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vve8wIokEeSkH97cUQxLGA" name="ImmunizationActivityNegationInd" constrainedElement="_zI6vcOE7EeOTq9XEMvvkWw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vve8wYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.negationInd.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vvjOMIokEeSkH97cUQxLGA" name="ImmunizationActivity2AuthorParticipation" constrainedElement="_zI6vcOE7EeOTq9XEMvvkWw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vvjOMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->exists(author : cda::Author | not author.oclIsUndefined() and author.oclIsKindOf(consol::AuthorParticipation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vvlqcIokEeSkH97cUQxLGA" name="ImmunizationActivity2SubstanceAdministeredAct" constrainedElement="_zI6vcOE7EeOTq9XEMvvkWw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vvlqcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(consol::SubstanceAdministeredAct) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vvm4kIokEeSkH97cUQxLGA" name="ImmunizationActivityDrugVehicle" constrainedElement="_zI6vcOE7EeOTq9XEMvvkWw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vvm4kYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->exists(participant : cda::Participant2 | not participant.participantRole.oclIsUndefined() and participant.participantRole.oclIsKindOf(consol::DrugVehicle))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v2nfhYokEeSkH97cUQxLGA" name="ImmunizationActivityIndication2" constrainedElement="_zI6vcOE7EeOTq9XEMvvkWw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v2nfhookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::Indication2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::RSON)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v2otpYokEeSkH97cUQxLGA" name="ImmunizationActivityMedicationSupplyOrder2" constrainedElement="_zI6vcOE7EeOTq9XEMvvkWw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v2otpookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.supply.oclIsUndefined() and entryRelationship.supply.oclIsKindOf(consol::MedicationSupplyOrder2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v2p7xYokEeSkH97cUQxLGA" name="ImmunizationActivityMedicationDispense2" constrainedElement="_zI6vcOE7EeOTq9XEMvvkWw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v2p7xookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.supply.oclIsUndefined() and entryRelationship.supply.oclIsKindOf(consol::MedicationDispense2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v2rw8IokEeSkH97cUQxLGA" name="ImmunizationActivityReactionObservation2" constrainedElement="_zI6vcOE7EeOTq9XEMvvkWw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v2rw8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::ReactionObservation2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::CAUS)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v2s_EIokEeSkH97cUQxLGA" name="ImmunizationActivityInstruction2" constrainedElement="_zI6vcOE7EeOTq9XEMvvkWw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v2s_EYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(consol::Instruction2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v2tmJYokEeSkH97cUQxLGA" name="ImmunizationActivityConsumable" constrainedElement="_zI6vcOE7EeOTq9XEMvvkWw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v2tmJookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.consumable->one(consumable : cda::Consumable | not consumable.oclIsUndefined() and consumable.oclIsKindOf(cda::Consumable))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wIJUYIokEeSkH97cUQxLGA" name="ImmunizationActivityPrecondition" constrainedElement="_zI6vcOE7EeOTq9XEMvvkWw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wIJUYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.precondition->exists(precondition : cda::Precondition | not precondition.oclIsUndefined() and precondition.oclIsKindOf(cda::Precondition))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wY_MwIokEeSkH97cUQxLGA" name="ImmunizationActivity2ImmunizationActivityConsumableImmunizationMedicationInformation2" constrainedElement="_zI6vcOE7EeOTq9XEMvvkWw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wY_MwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.consumable->excluding(null)->reject(manufacturedProduct->one(manufacturedProduct : cda::ManufacturedProduct | not manufacturedProduct.oclIsUndefined() and manufacturedProduct.oclIsKindOf(consol::ImmunizationMedicationInformation2)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wY_z0IokEeSkH97cUQxLGA" name="ImmunizationActivity2ImmunizationActivityPreconditionTypeCode" constrainedElement="_zI6vcOE7EeOTq9XEMvvkWw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wY_z0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.precondition->excluding(null)->reject(typeCode=vocab::ActRelationshipType::PRCN)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wZAa4IokEeSkH97cUQxLGA" name="ImmunizationActivity2ImmunizationActivityPreconditionPreconditionForSubstanceAdministration2" constrainedElement="_zI6vcOE7EeOTq9XEMvvkWw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wZAa4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.precondition->excluding(null)->reject(criterion->one(criterion : cda::Criterion | not criterion.oclIsUndefined() and criterion.oclIsKindOf(consol::PreconditionForSubstanceAdministration2)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_zI_A4OE7EeOTq9XEMvvkWw" general="_2MAoIBSVEeGGzu7fmW9pXw"/>
      <ownedOperation xmi:id="_vvmRgIokEeSkH97cUQxLGA" name="getSubstanceAdministeredActs" bodyCondition="_vvmRg4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vvmRg4okEeSkH97cUQxLGA" name="body" constrainedElement="_vvmRgIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vvmRhIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::SubstanceAdministeredAct)).oclAsType(consol::SubstanceAdministeredAct)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vvmRgYokEeSkH97cUQxLGA" type="_KTrEAJpdEeOK6dzbL4VoTA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vvmRgookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vvnfoIokEeSkH97cUQxLGA" name="getConsolDrugVehicles" bodyCondition="_vvnfo4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vvnfo4okEeSkH97cUQxLGA" name="body" constrainedElement="_vvnfoIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vvnfpIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getParticipantRoles()->select(participantRole : cda::ParticipantRole | not participantRole.oclIsUndefined() and participantRole.oclIsKindOf(consol::DrugVehicle)).oclAsType(consol::DrugVehicle)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vvnfoYokEeSkH97cUQxLGA" type="_VBXq8BUTEeG6PvUxSTZnaw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vvnfoookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v2otoIokEeSkH97cUQxLGA" name="getConsolIndication2s" bodyCondition="_v2oto4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v2oto4okEeSkH97cUQxLGA" name="body" constrainedElement="_v2otoIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v2otpIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::Indication2)).oclAsType(consol::Indication2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v2otoYokEeSkH97cUQxLGA" type="_PrEOIOHoEeO04sHNODkHmQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v2otoookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v2p7wIokEeSkH97cUQxLGA" name="getConsolMedicationSupplyOrder2" bodyCondition="_v2p7w4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v2p7w4okEeSkH97cUQxLGA" name="body" constrainedElement="_v2p7wIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v2p7xIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getSupplies()->select(supply : cda::Supply | not supply.oclIsUndefined() and supply.oclIsKindOf(consol::MedicationSupplyOrder2))->asSequence()->any(true).oclAsType(consol::MedicationSupplyOrder2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v2p7wYokEeSkH97cUQxLGA" type="_InVpIOZ8EeOmzetP5oaH3A" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v2p7wookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v2rJ4IokEeSkH97cUQxLGA" name="getConsolMedicationDispense2" bodyCondition="_v2rJ44okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v2rJ44okEeSkH97cUQxLGA" name="body" constrainedElement="_v2rJ4IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v2rJ5IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getSupplies()->select(supply : cda::Supply | not supply.oclIsUndefined() and supply.oclIsKindOf(consol::MedicationDispense2))->asSequence()->any(true).oclAsType(consol::MedicationDispense2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v2rJ4YokEeSkH97cUQxLGA" type="_qH-ckOXfEeOkFcFJ9uzEEw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v2rJ4ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v2sYAIokEeSkH97cUQxLGA" name="getConsolReactionObservation2" bodyCondition="_v2sYA4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v2sYA4okEeSkH97cUQxLGA" name="body" constrainedElement="_v2sYAIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v2sYBIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ReactionObservation2))->asSequence()->any(true).oclAsType(consol::ReactionObservation2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v2sYAYokEeSkH97cUQxLGA" type="_U3yosPDxEeOKPKE9au0oug" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v2sYAookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v2tmIIokEeSkH97cUQxLGA" name="getConsolInstruction2" bodyCondition="_v2tmI4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v2tmI4okEeSkH97cUQxLGA" name="body" constrainedElement="_v2tmIIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v2tmJIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::Instruction2))->asSequence()->any(true).oclAsType(consol::Instruction2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v2tmIYokEeSkH97cUQxLGA" type="_D62NwOH7EeO04sHNODkHmQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v2tmIookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Rx8LIOHUEeO04sHNODkHmQ" name="ImmunizationMedicationInformation2">
      <ownedComment xmi:id="_xLRlgOHUEeO04sHNODkHmQ">
        <body>The Immunization Medication Information represents product information about the immunization substance. The vaccine manufacturer and vaccine lot number are typically recorded in the medical record and should be included if known.</body>
      </ownedComment>
      <ownedRule xmi:id="_vvoGsIokEeSkH97cUQxLGA" name="ImmunizationMedicationInformationTemplateId" constrainedElement="_Rx8LIOHUEeO04sHNODkHmQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vvoGsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.54' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vvvbcYokEeSkH97cUQxLGA" name="ImmunizationMedicationInformationManufacturedMaterial" constrainedElement="_Rx8LIOHUEeO04sHNODkHmQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vvvbcookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.manufacturedMaterial->one(manufacturedMaterial : cda::Material | not manufacturedMaterial.oclIsUndefined() and manufacturedMaterial.oclIsKindOf(cda::Material))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wZEFQIokEeSkH97cUQxLGA" name="ImmunizationMedicationInformation2ImmunizationMedicationInformationManufacturedMaterialCETranslation" constrainedElement="_Rx8LIOHUEeO04sHNODkHmQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wZEFQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.manufacturedMaterial->excluding(null).code->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((translation->isEmpty() or translation->exists(element | element.isNullFlavorUndefined())) implies (not translation->isEmpty()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wZEFQookEeSkH97cUQxLGA" name="ImmunizationMedicationInformation2ImmunizationMedicationInformationManufacturedMaterialCodeOriginalText" constrainedElement="_Rx8LIOHUEeO04sHNODkHmQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wZEFQ4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.manufacturedMaterial->excluding(null)->reject(true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wZEsUIokEeSkH97cUQxLGA" name="ImmunizationMedicationInformation2ImmunizationMedicationInformationManufacturedMaterialOriginalTextReference" constrainedElement="_Rx8LIOHUEeO04sHNODkHmQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wZEsUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.manufacturedMaterial->excluding(null)->reject(true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wZFTYIokEeSkH97cUQxLGA" name="ImmunizationMedicationInformation2ImmunizationMedicationInformationManufacturedMaterialTextReferenceValue" constrainedElement="_Rx8LIOHUEeO04sHNODkHmQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wZFTYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.manufacturedMaterial->excluding(null)->reject(true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wZFTYookEeSkH97cUQxLGA" name="ImmunizationMedicationInformation2ImmunizationMedicationInformationManufacturedMaterialOriginalTextReferenceValue" constrainedElement="_Rx8LIOHUEeO04sHNODkHmQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wZFTY4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.manufacturedMaterial->excluding(null)->reject(true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wZF6cIokEeSkH97cUQxLGA" name="ImmunizationMedicationInformation2ImmunizationMedicationInformationManufacturedMaterialCodeTranslation" constrainedElement="_Rx8LIOHUEeO04sHNODkHmQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wZF6cYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.manufacturedMaterial->excluding(null)->reject(true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wZGhgIokEeSkH97cUQxLGA" name="ImmunizationMedicationInformation2ImmunizationMedicationInformationImmunizationMedicationInformationManufacturedMaterialCode" constrainedElement="_Rx8LIOHUEeO04sHNODkHmQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wZGhgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.manufacturedMaterial->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined() and code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = code.oclAsType(datatypes::CE) in &#xD;
not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Rx8LIeHUEeO04sHNODkHmQ" general="_daTqABVOEeGbmN_W114JUw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_PrEOIOHoEeO04sHNODkHmQ" name="Indication2">
      <ownedComment xmi:id="_b-DpwOHoEeO04sHNODkHmQ">
        <body>This template represents the rationale for an action such as an encounter, a medication administration, or a procedure. The id element can be used to reference a problem recorded elsewhere in the document, or can be used with a code and value to record the problem. Indications for treatment are not lab results, rather the problem associated with the lab result should be sited (e.g., hypokalemia instead of a lab result of Potassium 2.0 mEq/L). Use the Drug Monitoring Act templateId 2.16.840.1.113883.10.20.22.4.123] to indicate if a particular drug needs special monitoring (e.g., anticoagulant therapy). Use Precondition for Substance Administration (V2) templateId 2.16.840.1.113883.10.20.22.4.25.2] to represent that a medication is to be administered only when the associated criteria are met.</body>
      </ownedComment>
      <ownedRule xmi:id="_5ehhMOHsEeO04sHNODkHmQ" name="Indication2ProblemIndication" constrainedElement="_sHrUoBUSEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_5ehhMuHsEeO04sHNODkHmQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_53PjMOHsEeO04sHNODkHmQ" name="Indication2CodeNullFlavor" constrainedElement="_sHrUoBUSEeG6PvUxSTZnaw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_53PjMeHsEeO04sHNODkHmQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_6PRosOHsEeO04sHNODkHmQ" name="Indication2CodeNullFlavorValue" constrainedElement="_MtdoIB7kEeGEaLkc3UAsAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_6PRosuHsEeO04sHNODkHmQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vvwpkIokEeSkH97cUQxLGA" name="IndicationTemplateId" constrainedElement="_PrEOIOHoEeO04sHNODkHmQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vvwpkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.19' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vvyewIokEeSkH97cUQxLGA" name="Indication2Text" constrainedElement="_PrEOIOHoEeO04sHNODkHmQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vvyewYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.text.oclIsUndefined() or self.text.isNullFlavorUndefined()) implies (not self.text.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vv3XQIokEeSkH97cUQxLGA" name="IndicationCodeP" constrainedElement="_PrEOIOHoEeO04sHNODkHmQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv3XQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vv07AIokEeSkH97cUQxLGA" name="IndicationCode" constrainedElement="_PrEOIOHoEeO04sHNODkHmQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv07AYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
not value.codeSystem.oclIsUndefined() or not value.codeSystemName.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vv5zgIokEeSkH97cUQxLGA" name="IndicationId" constrainedElement="_PrEOIOHoEeO04sHNODkHmQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv5zgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vv-E8IokEeSkH97cUQxLGA" name="IndicationValueP" constrainedElement="_PrEOIOHoEeO04sHNODkHmQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv-E8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vv8PwIokEeSkH97cUQxLGA" name="IndicationValue" constrainedElement="_PrEOIOHoEeO04sHNODkHmQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vv8PwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.96' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_PrE1MOHoEeO04sHNODkHmQ" general="_sHrUoBUSEeG6PvUxSTZnaw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_D62NwOH7EeO04sHNODkHmQ" name="Instruction2">
      <ownedComment xmi:id="_2laBMOH7EeO04sHNODkHmQ">
        <body>The Instruction template can be used in several ways, such as to record patient instructions within a Medication Activity or to record fill instructions within a supply order. The act/code defines the type of instruction. Though not defined in this template, a Vaccine Information Statement (VIS) document could be referenced through act/reference/externalDocument, and patient awareness of the instructions can be represented with the generic participant and the participant/awarenessCode.</body>
      </ownedComment>
      <ownedRule xmi:id="_vwAhMIokEeSkH97cUQxLGA" name="InstructionsTemplateId" constrainedElement="_D62NwOH7EeO04sHNODkHmQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vwAhMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.20' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_D62NweH7EeO04sHNODkHmQ" general="_2G8h9RSVEeGGzu7fmW9pXw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_WnSCMOLAEeOc7-TVP7Wi6w" name="MedicationActivity2">
      <ownedComment xmi:id="_oiDlsOLAEeOc7-TVP7Wi6w">
        <body>A medication activity describes substance administrations that have actually occurred (e.g. pills ingested or injections given) or are intended to occur (e.g. &quot;take 2 tablets twice a day for the next 10 days&quot;). Medication activities in &quot;INT&quot; mood are reflections of what a clinician intends a patient to be taking. For example, a clinician may intend for a  patient to be administered Lisinopril  20 mg PO for blood pressure control.  However, what was actually administered was Lisinopril 10 mg.  In the latter case, the Medication activities in the &quot;EVN&quot; mood would reflect actual use.&#xD;
At a minimum, a medication activity shall include an effectiveTime indicating the duration of the administration. Ambulatory medication lists generally provide a summary of use for a given medication over time - a medication activity in event mood with the duration reflecting when the medication started and stopped. Ongoing medications will not have a stop date (or a stop date with a suitable NULL value). Ambulatory medication lists will generally also have a frequency (e.g. a medication is being taken twice a day). Inpatient medications generally record each administration as a separate act.&#xD;
The dose (doseQuantity) represents how many of the consumables are to be administered at each administration event. As a result, the dose is always relative to the consumable and the interval of administration. Thus, a patient consuming a single &quot;metoprolol 25mg tablet&quot; per administration will have a doseQuantity of &quot;1&quot;, whereas a patient consuming &quot;metoprolol&quot; will have a dose of &quot;25 mg&quot;.</body>
      </ownedComment>
      <ownedRule xmi:id="_dSgcsOLDEeOc7-TVP7Wi6w" name="MedicationActivity2InstructionsInversionInd">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_dSgcseLDEeOc7-TVP7Wi6w">
          <language>OCL</language>
          <body>self.entryRelationship->select(er : cda::EntryRelationship | er.act.oclIsTypeOf(consol::Instruction2))->forAll(ent : cda::EntryRelationship | ent.inversionInd=true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_S4xW0OLFEeOc7-TVP7Wi6w" name="MedicationActivity2DoseQuantityorrateQuantity" constrainedElement="_2GHbgBSVEeGGzu7fmW9pXw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_S4xW0eLFEeOc7-TVP7Wi6w">
          <language>OCL</language>
          <body>self.doseQuantity->size() = 1 or self.rateQuantity->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_NeWDkOLHEeOc7-TVP7Wi6w" name="MedicationActivity2SubstanceAdministeredActInversionInd" constrainedElement="_WnSCMOLAEeOc7-TVP7Wi6w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_VwguEOLHEeOc7-TVP7Wi6w">
          <language>OCL</language>
          <body>self.entryRelationship->select(er : cda::EntryRelationship | er.act.oclIsTypeOf(consol::SubstanceAdministeredAct))->forAll(ent : cda::EntryRelationship | ent.inversionInd=true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_8MCz4OW8EeOkFcFJ9uzEEw" name="MedicationActivity2EffectiveTimeIVLTSHigh" constrainedElement="_4CqJMEFiEeG2TLeVPbv7pg">
        <ownedComment xmi:id="_MbmLsOW9EeOkFcFJ9uzEEw">
          <body>Note: A medication that is no longer active will have an effectiveTime/high. If no longer active, and the stop date is unknown, then include effectiveTime/high with a suitable nullFlavor (e.g. &quot;UNK&quot;).</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_8MCz4eW8EeOkFcFJ9uzEEw">
          <language>OCL</language>
          <body>self.effectiveTime->select(ef | ef.oclIsTypeOf(datatypes::IVL_TS))->forAll( eff | eff.oclAsType(datatypes::IVL_TS).high->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_0pBccOW-EeOkFcFJ9uzEEw" name="MedicationActivity2EffectiveTimePIVLTS" constrainedElement="_6ODpwEFiEeG2TLeVPbv7pg">
        <ownedComment xmi:id="_xOtdcOXZEeOkFcFJ9uzEEw">
          <body>Note: This effectiveTime represents the medication frequency (e.g. administration times per day).</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_0pBcceW-EeOkFcFJ9uzEEw">
          <language>OCL</language>
          <body>self.effectiveTime->select(ef | ef.oclIsTypeOf(datatypes::PIVL_TS) or ef.oclIsTypeOf(datatypes::EIVL_TS))->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_GsKcUOXAEeOkFcFJ9uzEEw" name="MedicationActivity2EffectiveTimeIVLTSorTS" constrainedElement="_4CqJMEFiEeG2TLeVPbv7pg">
        <ownedComment xmi:id="_JqDw0OXAEeOkFcFJ9uzEEw">
          <body>The substance administration effectiveTime field can repeat, in order to represent varying levels of complex dosing. effectiveTime can be used to represent the duration of administration (e.g. &quot;10 days&quot;), the frequency of administration (e.g. &quot;every 8 hours&quot;), and more. Here, we require that there SHALL be an effectiveTime documentation of the duration, and that there SHOULD be an effectiveTime documentation of the frequency. Other timing nuances, supported by the base CDA R2 standard, may also be included.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_GsKcUeXAEeOkFcFJ9uzEEw">
          <language>OCL</language>
          <body>self.effectiveTime->select(ef | ef.oclIsTypeOf(datatypes::IVL_TS))->size() = 1 xor self.effectiveTime->select(ef | ef.oclIsTypeOf(datatypes::SXCM_TS))->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vwCWYIokEeSkH97cUQxLGA" name="MedicationActivityTemplateId" constrainedElement="_WnSCMOLAEeOc7-TVP7Wi6w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vwCWYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.16' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vwHO4IokEeSkH97cUQxLGA" name="MedicationActivityRepeatNumber" constrainedElement="_WnSCMOLAEeOc7-TVP7Wi6w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vwHO4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.repeatNumber.oclIsUndefined() or self.repeatNumber.isNullFlavorUndefined()) implies (not self.repeatNumber.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vwIdAIokEeSkH97cUQxLGA" name="MedicationActivityCode" constrainedElement="_WnSCMOLAEeOc7-TVP7Wi6w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vwIdAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vwMucIokEeSkH97cUQxLGA" name="MedicationActivityStatusCodeP" constrainedElement="_WnSCMOLAEeOc7-TVP7Wi6w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vwMucYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vwKSMIokEeSkH97cUQxLGA" name="MedicationActivityStatusCode" constrainedElement="_WnSCMOLAEeOc7-TVP7Wi6w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vwKSMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'normal' or value.code = 'aborted' or value.code = 'active' or value.code = 'cancelled' or value.code = 'completed' or value.code = 'held' or value.code = 'new' or value.code = 'suspended' or value.code = 'nullified' or value.code = 'obsolete')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vwRm8IokEeSkH97cUQxLGA" name="MedicationActivityAdministrationUnitCodeP" constrainedElement="_WnSCMOLAEeOc7-TVP7Wi6w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vwRm8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.administrationUnitCode.oclIsUndefined() or self.administrationUnitCode.isNullFlavorUndefined()) implies (not self.administrationUnitCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vwPKsIokEeSkH97cUQxLGA" name="MedicationActivityAdministrationUnitCode" constrainedElement="_WnSCMOLAEeOc7-TVP7Wi6w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vwPKsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.administrationUnitCode.oclIsUndefined() or self.administrationUnitCode.isNullFlavorUndefined()) implies (not self.administrationUnitCode.oclIsUndefined() and self.administrationUnitCode.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.administrationUnitCode.oclAsType(datatypes::CE) in &#xD;
value.code = 'APPFUL' or value.code = 'DROP' or value.code = 'NDROP' or value.code = 'OPDROP' or value.code = 'ORDROP' or value.code = 'OTDROP' or value.code = 'PUFF' or value.code = 'SCOOP' or value.code = 'SPRY')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vwUDMIokEeSkH97cUQxLGA" name="MedicationActivityDoseQuantity" constrainedElement="_WnSCMOLAEeOc7-TVP7Wi6w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vwUDMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.doseQuantity.oclIsUndefined() or self.doseQuantity.isNullFlavorUndefined()) implies (not self.doseQuantity.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vwXGgIokEeSkH97cUQxLGA" name="MedicationActivity2DrugMonitoringAct" constrainedElement="_WnSCMOLAEeOc7-TVP7Wi6w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vwXGgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(consol::DrugMonitoringAct) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vwYUoIokEeSkH97cUQxLGA" name="MedicationActivityInstruction2" constrainedElement="_WnSCMOLAEeOc7-TVP7Wi6w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vwYUoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(consol::Instruction2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vwZiwIokEeSkH97cUQxLGA" name="MedicationActivity2AuthorParticipation" constrainedElement="_WnSCMOLAEeOc7-TVP7Wi6w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vwZiwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->exists(author : cda::Author | not author.oclIsUndefined() and author.oclIsKindOf(consol::AuthorParticipation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vwaw4IokEeSkH97cUQxLGA" name="MedicationActivity2SubstanceAdministeredAct" constrainedElement="_WnSCMOLAEeOc7-TVP7Wi6w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vwaw4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(consol::SubstanceAdministeredAct) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vwb_AIokEeSkH97cUQxLGA" name="MedicationActivityIndication2" constrainedElement="_WnSCMOLAEeOc7-TVP7Wi6w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vwb_AYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::Indication2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::RSON)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v2vbUYokEeSkH97cUQxLGA" name="MedicationActivityConsumable" constrainedElement="_WnSCMOLAEeOc7-TVP7Wi6w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v2vbUookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.consumable->one(consumable : cda::Consumable | not consumable.oclIsUndefined() and consumable.oclIsKindOf(cda::Consumable))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v2xQgIokEeSkH97cUQxLGA" name="MedicationActivityMedicationSupplyOrder2" constrainedElement="_WnSCMOLAEeOc7-TVP7Wi6w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v2xQgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.supply.oclIsUndefined() and entryRelationship.supply.oclIsKindOf(consol::MedicationSupplyOrder2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v2yepIokEeSkH97cUQxLGA" name="MedicationActivityMedicationDispense2" constrainedElement="_WnSCMOLAEeOc7-TVP7Wi6w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v2yepYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.supply.oclIsUndefined() and entryRelationship.supply.oclIsKindOf(consol::MedicationDispense2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v2zsw4okEeSkH97cUQxLGA" name="MedicationActivityReactionObservation2" constrainedElement="_WnSCMOLAEeOc7-TVP7Wi6w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v2zsxIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::ReactionObservation2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::CAUS)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wIKigIokEeSkH97cUQxLGA" name="MedicationActivityPrecondition" constrainedElement="_WnSCMOLAEeOc7-TVP7Wi6w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wIKigYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.precondition->exists(precondition : cda::Precondition | not precondition.oclIsUndefined() and precondition.oclIsKindOf(cda::Precondition))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wZKL4IokEeSkH97cUQxLGA" name="MedicationActivity2MedicationActivityPreconditionTypeCode" constrainedElement="_WnSCMOLAEeOc7-TVP7Wi6w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wZKL4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.precondition->excluding(null)->reject(typeCode=vocab::ActRelationshipType::PRCN)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wZKL4ookEeSkH97cUQxLGA" name="MedicationActivity2MedicationActivityPreconditionPreconditionForSubstanceAdministration2" constrainedElement="_WnSCMOLAEeOc7-TVP7Wi6w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wZKL44okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.precondition->excluding(null)->reject(criterion->one(criterion : cda::Criterion | not criterion.oclIsUndefined() and criterion.oclIsKindOf(consol::PreconditionForSubstanceAdministration2)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wZLaAIokEeSkH97cUQxLGA" name="MedicationActivity2MedicationActivityConsumableMedicationInformation2" constrainedElement="_WnSCMOLAEeOc7-TVP7Wi6w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wZLaAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.consumable->excluding(null)->reject(manufacturedProduct->one(manufacturedProduct : cda::ManufacturedProduct | not manufacturedProduct.oclIsUndefined() and manufacturedProduct.oclIsKindOf(consol::MedicationInformation2)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_WnVFgOLAEeOc7-TVP7Wi6w" general="_2GHbgBSVEeGGzu7fmW9pXw"/>
      <ownedOperation xmi:id="_vwXtkIokEeSkH97cUQxLGA" name="getDrugMonitoringAct" bodyCondition="_vwXtk4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vwXtk4okEeSkH97cUQxLGA" name="body" constrainedElement="_vwXtkIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vwXtlIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::DrugMonitoringAct))->asSequence()->any(true).oclAsType(consol::DrugMonitoringAct)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vwXtkYokEeSkH97cUQxLGA" type="_MbKs8IqvEeOoMZgUoTghIg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vwXtkookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vwY7sIokEeSkH97cUQxLGA" name="getConsolInstruction2" bodyCondition="_vwY7s4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vwY7s4okEeSkH97cUQxLGA" name="body" constrainedElement="_vwY7sIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vwY7tIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::Instruction2))->asSequence()->any(true).oclAsType(consol::Instruction2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vwY7sYokEeSkH97cUQxLGA" type="_D62NwOH7EeO04sHNODkHmQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vwY7sookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vwbX8IokEeSkH97cUQxLGA" name="getSubstanceAdministeredActs" bodyCondition="_vwbX84okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vwbX84okEeSkH97cUQxLGA" name="body" constrainedElement="_vwbX8IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vwbX9IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::SubstanceAdministeredAct)).oclAsType(consol::SubstanceAdministeredAct)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vwbX8YokEeSkH97cUQxLGA" type="_KTrEAJpdEeOK6dzbL4VoTA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vwbX8ookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vwcmEIokEeSkH97cUQxLGA" name="getConsolIndication2s" bodyCondition="_vwcmE4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vwcmE4okEeSkH97cUQxLGA" name="body" constrainedElement="_vwcmEIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vwcmFIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::Indication2)).oclAsType(consol::Indication2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vwcmEYokEeSkH97cUQxLGA" type="_PrEOIOHoEeO04sHNODkHmQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vwcmEookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v2x3kIokEeSkH97cUQxLGA" name="getConsolMedicationSupplyOrder2" bodyCondition="_v2yeoookEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v2yeoookEeSkH97cUQxLGA" name="body" constrainedElement="_v2x3kIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v2yeo4okEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getSupplies()->select(supply : cda::Supply | not supply.oclIsUndefined() and supply.oclIsKindOf(consol::MedicationSupplyOrder2))->asSequence()->any(true).oclAsType(consol::MedicationSupplyOrder2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v2yeoIokEeSkH97cUQxLGA" type="_InVpIOZ8EeOmzetP5oaH3A" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v2yeoYokEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v2zFsIokEeSkH97cUQxLGA" name="getConsolMedicationDispense2s" bodyCondition="_v2zswYokEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v2zswYokEeSkH97cUQxLGA" name="body" constrainedElement="_v2zFsIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v2zswookEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getSupplies()->select(supply : cda::Supply | not supply.oclIsUndefined() and supply.oclIsKindOf(consol::MedicationDispense2)).oclAsType(consol::MedicationDispense2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v2zFsYokEeSkH97cUQxLGA" type="_qH-ckOXfEeOkFcFJ9uzEEw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v2zswIokEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v21h8IokEeSkH97cUQxLGA" name="getConsolReactionObservation2" bodyCondition="_v21h84okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v21h84okEeSkH97cUQxLGA" name="body" constrainedElement="_v21h8IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v21h9IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ReactionObservation2))->asSequence()->any(true).oclAsType(consol::ReactionObservation2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v21h8YokEeSkH97cUQxLGA" type="_U3yosPDxEeOKPKE9au0oug" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v21h8ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_qH-ckOXfEeOkFcFJ9uzEEw" name="MedicationDispense2">
      <ownedComment xmi:id="_zoMZIOXgEeOkFcFJ9uzEEw">
        <body>This template records the act of supplying medications (i.e., dispensing).</body>
      </ownedComment>
      <ownedRule xmi:id="_oloRUOXlEeOkFcFJ9uzEEw" name="MedicationDispense2ContainsMedicationInformation2" constrainedElement="_qH-ckOXfEeOkFcFJ9uzEEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_3f6fUOXlEeOkFcFJ9uzEEw">
          <language>OCL</language>
          <body>self.product.manufacturedProduct.oclIsTypeOf(consol::MedicationInformation2)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_joXtIOXlEeOkFcFJ9uzEEw" name="MedicationDispense2ContainsImmunizationMedicationInformation2" constrainedElement="_qH-ckOXfEeOkFcFJ9uzEEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_QgwGkOXmEeOkFcFJ9uzEEw">
          <language>OCL</language>
          <body>self.product.manufacturedProduct.oclIsTypeOf(consol::ImmunizationMedicationInformation2)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_VWi7YOXnEeOkFcFJ9uzEEw" name="MedicationDispense2ContainsMedicationOrImmunization" constrainedElement="_iZPioB7lEeGEaLkc3UAsAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_VWi7YeXnEeOkFcFJ9uzEEw">
          <language>OCL</language>
          <body>self.product.manufacturedProduct.oclIsTypeOf(consol::MedicationInformation2) xor self.product.manufacturedProduct.oclIsTypeOf(consol::ImmunizationMedicationInformation2)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vwdNIIokEeSkH97cUQxLGA" name="MedicationDispenseTemplateId" constrainedElement="_qH-ckOXfEeOkFcFJ9uzEEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vwdNIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.18' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v21h9YokEeSkH97cUQxLGA" name="MedicationDispenseMedicationSupplyOrder2" constrainedElement="_qH-ckOXfEeOkFcFJ9uzEEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v22JAIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.supply.oclIsUndefined() and entryRelationship.supply.oclIsKindOf(consol::MedicationSupplyOrder2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_qH_DoOXfEeOkFcFJ9uzEEw" general="_DpoGkBUUEeG6PvUxSTZnaw"/>
      <ownedOperation xmi:id="_v22wEIokEeSkH97cUQxLGA" name="getConsolMedicationSupplyOrder2" bodyCondition="_v22wE4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v22wE4okEeSkH97cUQxLGA" name="body" constrainedElement="_v22wEIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v22wFIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getSupplies()->select(supply : cda::Supply | not supply.oclIsUndefined() and supply.oclIsKindOf(consol::MedicationSupplyOrder2))->asSequence()->any(true).oclAsType(consol::MedicationSupplyOrder2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v22wEYokEeSkH97cUQxLGA" type="_InVpIOZ8EeOmzetP5oaH3A" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v22wEookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Hz__kOXrEeOkFcFJ9uzEEw" name="MedicationInformation2">
      <ownedComment xmi:id="_RV3XYOXrEeOkFcFJ9uzEEw">
        <body>A medication should be recorded as a pre-coordinated ingredient + strength + dose form (e.g., &quot;metoprolol 25mg tablet&quot;, &quot;amoxicillin 400mg/5mL suspension&quot;) where possible. This includes RxNorm codes whose Term Type is SCD (semantic clinical drug), SBD (semantic brand drug), GPCK (generic pack), BPCK (brand pack).&#xD;
NOTE: The dose (doseQuantity) represents how many of the consumables are to be administered at each administration event. As a result, the dose is always relative to the consumable. Thus, a patient consuming a single &quot;metoprolol 25mg tablet&quot; per administration will have a doseQuantity of &quot;1&quot;, whereas a patient consuming &quot;metoprolol&quot; will have a dose of &quot;25 mg&quot;.</body>
      </ownedComment>
      <ownedRule xmi:id="_vwgQcIokEeSkH97cUQxLGA" name="MedicationInformationTemplateId" constrainedElement="_Hz__kOXrEeOkFcFJ9uzEEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vwg3gIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.23' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vwrPkYokEeSkH97cUQxLGA" name="MedicationInformationManufacturedMaterial" constrainedElement="_Hz__kOXrEeOkFcFJ9uzEEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vwrPkookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.manufacturedMaterial->one(manufacturedMaterial : cda::Material | not manufacturedMaterial.oclIsUndefined() and manufacturedMaterial.oclIsKindOf(cda::Material))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wZPEYIokEeSkH97cUQxLGA" name="MedicationInformation2MedicationInformationManufacturedMaterialCETranslation" constrainedElement="_Hz__kOXrEeOkFcFJ9uzEEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wZPEYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.manufacturedMaterial->excluding(null).code->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((translation->isEmpty() or translation->exists(element | element.isNullFlavorUndefined())) implies (not translation->isEmpty()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wZPrcIokEeSkH97cUQxLGA" name="MedicationInformation2MedicationInformationManufacturedMaterialCodeOriginalText" constrainedElement="_Hz__kOXrEeOkFcFJ9uzEEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wZPrcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.manufacturedMaterial->excluding(null)->reject(true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wZQSgIokEeSkH97cUQxLGA" name="MedicationInformation2MedicationInformationManufacturedMaterialCodeTranslation" constrainedElement="_Hz__kOXrEeOkFcFJ9uzEEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wZQSgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.manufacturedMaterial->excluding(null)->reject(true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wZQSgookEeSkH97cUQxLGA" name="MedicationInformation2MedicationInformationManufacturedMaterialReference" constrainedElement="_Hz__kOXrEeOkFcFJ9uzEEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wZQSg4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.manufacturedMaterial->excluding(null)->reject(true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wZQ5kIokEeSkH97cUQxLGA" name="MedicationInformation2MedicationInformationManufacturedMaterialOriginalTextReferenceValue" constrainedElement="_Hz__kOXrEeOkFcFJ9uzEEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wZQ5kYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.manufacturedMaterial->excluding(null)->reject(true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wZQ5kookEeSkH97cUQxLGA" name="MedicationInformation2MedicationInformationManufacturedMaterialReferenceValue" constrainedElement="_Hz__kOXrEeOkFcFJ9uzEEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wZQ5k4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.manufacturedMaterial->excluding(null)->reject(true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wZRgoIokEeSkH97cUQxLGA" name="MedicationInformation2MedicationInformationMedicationInformationManufacturedMaterialCodeP" constrainedElement="_Hz__kOXrEeOkFcFJ9uzEEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wZRgoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.manufacturedMaterial->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wZRgoookEeSkH97cUQxLGA" name="MedicationInformation2MedicationInformationMedicationInformationManufacturedMaterialCode" constrainedElement="_Hz__kOXrEeOkFcFJ9uzEEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wZSHsIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.manufacturedMaterial->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined() and code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = code.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.88' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_H0AmoOXrEeOkFcFJ9uzEEw" general="_2T9DQBSVEeGGzu7fmW9pXw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_InVpIOZ8EeOmzetP5oaH3A" name="MedicationSupplyOrder2">
      <ownedComment xmi:id="_SYVCEOZ8EeOmzetP5oaH3A">
        <body>This template records the intent to supply a patient with medications.</body>
      </ownedComment>
      <ownedRule xmi:id="_acGj4OZ_EeOmzetP5oaH3A" name="MedicationSupplyOrder2ContainsMedicationInformation2">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_acGj4eZ_EeOmzetP5oaH3A">
          <language>OCL</language>
          <body>self.product.manufacturedProduct.oclIsTypeOf(consol::MedicationInformation2)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_brcr4OZ_EeOmzetP5oaH3A" name="MedicationSupplyOrder2ContainsImmunizationMedicationInformation2">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_brcr4eZ_EeOmzetP5oaH3A">
          <language>OCL</language>
          <body>self.product.manufacturedProduct.oclIsTypeOf(consol::ImmunizationMedicationInformation2)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_sPjCQOZ9EeOmzetP5oaH3A" name="MedicationSupplyOrder2ContainsMedicationOrImmunization" constrainedElement="_iZPioB7lEeGEaLkc3UAsAg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_sPjCQeZ9EeOmzetP5oaH3A">
          <language>OCL</language>
          <body>self.product.manufacturedProduct.oclIsTypeOf(consol::MedicationInformation2) xor self.product.manufacturedProduct.oclIsTypeOf(consol::ImmunizationMedicationInformation2)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_PA3aMOaAEeOmzetP5oaH3A" name="MedicationSupplyOrder2InstructionInversionInd" constrainedElement="_j3aTQBrTEeGo461UQq-B1g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_PA3aMeaAEeOmzetP5oaH3A">
          <language>OCL</language>
          <body>self.entryRelationship->select(er : cda::EntryRelationship | er.act.oclIsTypeOf(consol::Instruction2))->forAll(ent : cda::EntryRelationship | ent.inversionInd=true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vwsdsIokEeSkH97cUQxLGA" name="MedicationSupplyOrderTemplateId" constrainedElement="_InVpIOZ8EeOmzetP5oaH3A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vwsdsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.17' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vwvhAIokEeSkH97cUQxLGA" name="MedicationSupplyOrderInstruction2" constrainedElement="_InVpIOZ8EeOmzetP5oaH3A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vwvhAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(consol::Instruction2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_InVpIeZ8EeOmzetP5oaH3A" general="_j3aTQBrTEeGo461UQq-B1g"/>
      <ownedOperation xmi:id="_vwwvIIokEeSkH97cUQxLGA" name="getConsolInstruction2" bodyCondition="_vwwvI4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vwwvI4okEeSkH97cUQxLGA" name="body" constrainedElement="_vwwvIIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vwwvJIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::Instruction2))->asSequence()->any(true).oclAsType(consol::Instruction2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vwwvIYokEeSkH97cUQxLGA" type="_D62NwOH7EeO04sHNODkHmQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vwwvIookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_k_C20OaCEeOmzetP5oaH3A" name="NonMedicinalSupplyActivity2">
      <ownedComment xmi:id="_vkE70OaCEeOmzetP5oaH3A">
        <body>This template represents equipment supplied to the patient (e.g. pumps, inhalers, wheelchairs). Devices applied to, or placed in, the patient are represented with the Procedure Activity Procedure (V2) (templateId: 2.16.840.1.113883.10.20.22.4.14.2.)</body>
      </ownedComment>
      <ownedRule xmi:id="_1qtQ8OaEEeOmzetP5oaH3A" name="NonMedicinalSupplyActivity2Instruction2InversionInd" constrainedElement="_k_C20OaCEeOmzetP5oaH3A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_-3Oq4OaEEeOmzetP5oaH3A">
          <language>OCL</language>
          <body>self.entryRelationship->select(er : cda::EntryRelationship | er.act.oclIsTypeOf(consol::Instruction2))->forAll(ent : cda::EntryRelationship | ent.inversionInd=true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vwxWMIokEeSkH97cUQxLGA" name="NonMedicinalSupplyActivityTemplateId" constrainedElement="_k_C20OaCEeOmzetP5oaH3A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vwxWMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.50' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vwzLYIokEeSkH97cUQxLGA" name="NonMedicinalSupplyActivity2Instruction2" constrainedElement="_k_C20OaCEeOmzetP5oaH3A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vwzLYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(consol::Instruction2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_k_C20eaCEeOmzetP5oaH3A" general="_2HIvMBSVEeGGzu7fmW9pXw"/>
      <ownedOperation xmi:id="_vwzycIokEeSkH97cUQxLGA" name="getInstruction2" bodyCondition="_vwzyc4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vwzyc4okEeSkH97cUQxLGA" name="body" constrainedElement="_vwzycIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vwzydIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::Instruction2))->asSequence()->any(true).oclAsType(consol::Instruction2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vwzycYokEeSkH97cUQxLGA" type="_D62NwOH7EeO04sHNODkHmQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vwzycookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Ao2HkOaHEeOmzetP5oaH3A" name="PhysicianofRecordParticipant2">
      <ownedComment xmi:id="_Yh-f4OaHEeOmzetP5oaH3A">
        <body>This encounterParticipant is the attending physician and is usually different from the Physician Reading Study Performer defined in documentationOf/serviceEvent.</body>
      </ownedComment>
      <ownedRule xmi:id="_vw0ZgIokEeSkH97cUQxLGA" name="PhysicianofRecordParticipantTemplateId" constrainedElement="_Ao2HkOaHEeOmzetP5oaH3A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vw0ZgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.6.2' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vw4D4YokEeSkH97cUQxLGA" name="PhysicianofRecordParticipantAssignedEntity" constrainedElement="_Ao2HkOaHEeOmzetP5oaH3A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vw4q8IokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.assignedEntity->one(assignedEntity : cda::AssignedEntity | not assignedEntity.oclIsUndefined() and assignedEntity.oclIsKindOf(cda::AssignedEntity))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wZVyEIokEeSkH97cUQxLGA" name="PhysicianofRecordParticipant2AssignedEntityPhysicianofRecordParticipantAssignedEntityAssignedPersonName" constrainedElement="_Ao2HkOaHEeOmzetP5oaH3A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wZVyEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.assignedEntity->excluding(null).assignedPerson->excluding(null)->reject((name->isEmpty() or name->exists(element | element.isNullFlavorUndefined())) implies (name->size() = 1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wZXAMIokEeSkH97cUQxLGA" name="PhysicianofRecordParticipant2AssignedEntityRepresentedOrganizationName" constrainedElement="_Ao2HkOaHEeOmzetP5oaH3A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wZXAMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.assignedEntity->excluding(null).representedOrganization->excluding(null)->reject((name->isEmpty() or name->exists(element | element.isNullFlavorUndefined())) implies (not name->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wZXnQIokEeSkH97cUQxLGA" name="PhysicianofRecordParticipant2AssignedEntityHasNationalProviderId" constrainedElement="_Ao2HkOaHEeOmzetP5oaH3A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wZXnQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.assignedEntity->excluding(null)->reject(id->exists( root='2.16.840.1.113883.4.6' ))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wZXnQookEeSkH97cUQxLGA" name="PhysicianofRecordParticipant2PhysicianofRecordParticipantAssignedEntityAssignedPerson" constrainedElement="_Ao2HkOaHEeOmzetP5oaH3A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wZXnQ4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.assignedEntity->excluding(null)->reject(assignedPerson->one(assignedPerson : cda::Person | not assignedPerson.oclIsUndefined() and assignedPerson.oclIsKindOf(cda::Person)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wZYOUIokEeSkH97cUQxLGA" name="PhysicianofRecordParticipant2AssignedEntityRepresentedOrganization" constrainedElement="_Ao2HkOaHEeOmzetP5oaH3A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wZYOUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.assignedEntity->excluding(null)->reject(representedOrganization->one(representedOrganization : cda::Organization | not representedOrganization.oclIsUndefined() and representedOrganization.oclIsKindOf(cda::Organization)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Ao2HkeaHEeOmzetP5oaH3A" general="_H_izsEb1EeGp67IkyTw1fg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_lLnRMOaYEeOmzetP5oaH3A" name="PlannedAct2">
      <ownedComment xmi:id="_tFG9AOaYEeOmzetP5oaH3A">
        <body>This template represents planned acts that are not classified as an observation or a procedure according to the HL7 RIM. Examples of these acts are a dressing change, the teaching or feeding of a patient or the providing of comfort measures. &#xD;
The priority of the activity to the patient and provider is communicated through Patient Priority Preference and Provider Priority Preference. The effectiveTime indicates the time when the activity is intended to take place.</body>
      </ownedComment>
      <ownedRule xmi:id="_vw6gIIokEeSkH97cUQxLGA" name="PlanOfCareActivityActTemplateId" constrainedElement="_lLnRMOaYEeOmzetP5oaH3A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vw6gIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.39' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vw8VUIokEeSkH97cUQxLGA" name="PlannedAct2Code" constrainedElement="_lLnRMOaYEeOmzetP5oaH3A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vw8VUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vw-KgIokEeSkH97cUQxLGA" name="PlannedAct2StatusCode" constrainedElement="_lLnRMOaYEeOmzetP5oaH3A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vw-KgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'active')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vxAmwIokEeSkH97cUQxLGA" name="PlannedAct2StatusCodeP" constrainedElement="_lLnRMOaYEeOmzetP5oaH3A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vxAmwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vxB04IokEeSkH97cUQxLGA" name="PlannedAct2EffectiveTime" constrainedElement="_lLnRMOaYEeOmzetP5oaH3A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vxCb8IokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vxDqEIokEeSkH97cUQxLGA" name="PlannedAct2Indication2" constrainedElement="_lLnRMOaYEeOmzetP5oaH3A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vxDqEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::Indication2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::RSON)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vxERJYokEeSkH97cUQxLGA" name="PlannedAct2Instruction2" constrainedElement="_lLnRMOaYEeOmzetP5oaH3A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vxE4MIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(consol::Instruction2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vxFfRYokEeSkH97cUQxLGA" name="PlannedAct2PatientPriorityPreference" constrainedElement="_lLnRMOaYEeOmzetP5oaH3A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vxFfRookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::PatientPriorityPreference) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vxGtYookEeSkH97cUQxLGA" name="PlannedAct2ProviderPriorityPreference" constrainedElement="_lLnRMOaYEeOmzetP5oaH3A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vxGtY4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::ProviderPriorityPreference) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vxH7gIokEeSkH97cUQxLGA" name="PlannedAct2AuthorParticipation" constrainedElement="_lLnRMOaYEeOmzetP5oaH3A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vxH7gYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->one(author : cda::Author | not author.oclIsUndefined() and author.oclIsKindOf(consol::AuthorParticipation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vxJJoIokEeSkH97cUQxLGA" name="PlannedAct2Performer" constrainedElement="_lLnRMOaYEeOmzetP5oaH3A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vxJJoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->exists(performer : cda::Performer2 | not performer.oclIsUndefined() and performer.oclIsKindOf(rim::Participation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_lLn4QOaYEeOmzetP5oaH3A" general="_2NWE5xSVEeGGzu7fmW9pXw"/>
      <ownedOperation xmi:id="_vxERIIokEeSkH97cUQxLGA" name="getIndication2s" bodyCondition="_vxERI4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vxERI4okEeSkH97cUQxLGA" name="body" constrainedElement="_vxERIIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vxERJIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::Indication2)).oclAsType(consol::Indication2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vxERIYokEeSkH97cUQxLGA" type="_PrEOIOHoEeO04sHNODkHmQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vxERIookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vxFfQIokEeSkH97cUQxLGA" name="getInstruction2s" bodyCondition="_vxFfQ4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vxFfQ4okEeSkH97cUQxLGA" name="body" constrainedElement="_vxFfQIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vxFfRIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::Instruction2)).oclAsType(consol::Instruction2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vxFfQYokEeSkH97cUQxLGA" type="_D62NwOH7EeO04sHNODkHmQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vxFfQookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vxGGUIokEeSkH97cUQxLGA" name="getPatientPriorityPreferences" bodyCondition="_vxGtYIokEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vxGtYIokEeSkH97cUQxLGA" name="body" constrainedElement="_vxGGUIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vxGtYYokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::PatientPriorityPreference)).oclAsType(consol::PatientPriorityPreference)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vxGGUYokEeSkH97cUQxLGA" type="_UqXAAI6hEeOB0eBUISUB4Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vxGGUookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vxHUcIokEeSkH97cUQxLGA" name="getProviderPriorityPreferences" bodyCondition="_vxHUc4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vxHUc4okEeSkH97cUQxLGA" name="body" constrainedElement="_vxHUcIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vxHUdIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProviderPriorityPreference)).oclAsType(consol::ProviderPriorityPreference)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vxHUcYokEeSkH97cUQxLGA" type="_ncafYJmaEeOLJeQez13EkQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vxHUcookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_bDPFMOdXEeOqBOMhgDlycQ" name="PlannedEncounter2">
      <ownedComment xmi:id="_3E6nQOdXEeOqBOMhgDlycQ">
        <body>This temple represents a planned or ordered encounter. The type of encounter (e.g. comprehensive outpatient visit) is represented. Clinicians participating in the encounter and the location of the planned encounter may be captured. The priority that the patient and providers place on the encounter may be represented.</body>
      </ownedComment>
      <ownedRule xmi:id="_vxJwsIokEeSkH97cUQxLGA" name="PlanOfCareActivityEncounterTemplateId" constrainedElement="_bDPFMOdXEeOqBOMhgDlycQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vxKXwIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.40' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vxM0AIokEeSkH97cUQxLGA" name="PlannedEncounter2Code" constrainedElement="_bDPFMOdXEeOqBOMhgDlycQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vxM0AYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.96' and not value.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vxOpMIokEeSkH97cUQxLGA" name="PlannedEncounter2CodeP" constrainedElement="_bDPFMOdXEeOqBOMhgDlycQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vxOpMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vxRFcIokEeSkH97cUQxLGA" name="PlannedEncounter2StatusCode" constrainedElement="_bDPFMOdXEeOqBOMhgDlycQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vxRFcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'active')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vxS6oIokEeSkH97cUQxLGA" name="PlannedEncounter2StatusCodeP" constrainedElement="_bDPFMOdXEeOqBOMhgDlycQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vxS6oYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vxUv0IokEeSkH97cUQxLGA" name="PlannedEncounter2EffectiveTime" constrainedElement="_bDPFMOdXEeOqBOMhgDlycQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vxUv0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vxV98IokEeSkH97cUQxLGA" name="PlannedEncounter2Performer" constrainedElement="_bDPFMOdXEeOqBOMhgDlycQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vxV98YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->exists(performer : cda::Performer2 | not performer.oclIsUndefined() and performer.oclIsKindOf(cda::Performer2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vxXMEYokEeSkH97cUQxLGA" name="PlannedEncounter2Author" constrainedElement="_bDPFMOdXEeOqBOMhgDlycQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vxXzIIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->one(author : cda::Author | not author.oclIsUndefined() and author.oclIsKindOf(rim::Participation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vxYaMIokEeSkH97cUQxLGA" name="PlannedEncounter2ServiceDeliveryLocation" constrainedElement="_bDPFMOdXEeOqBOMhgDlycQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vxYaMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->exists(participant : cda::Participant2 | not participant.participantRole.oclIsUndefined() and participant.participantRole.oclIsKindOf(consol::ServiceDeliveryLocation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vxZoU4okEeSkH97cUQxLGA" name="PlannedEncounter2PatientPriorityPreference" constrainedElement="_bDPFMOdXEeOqBOMhgDlycQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vxZoVIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::PatientPriorityPreference) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vxa2cIokEeSkH97cUQxLGA" name="PlannedEncounter2ProviderPriorityPreference" constrainedElement="_bDPFMOdXEeOqBOMhgDlycQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vxa2cYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::ProviderPriorityPreference) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vxcElYokEeSkH97cUQxLGA" name="PlannedEncounter2Indication2" constrainedElement="_bDPFMOdXEeOqBOMhgDlycQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vxcroIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::Indication2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::RSON)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wZZccIokEeSkH97cUQxLGA" name="PlannedEncounter2PerformerAssignedEntity" constrainedElement="_bDPFMOdXEeOqBOMhgDlycQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wZZccYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null)->reject(assignedEntity->one(assignedEntity : cda::AssignedEntity | not assignedEntity.oclIsUndefined() and assignedEntity.oclIsKindOf(rim::Role)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_bDRhcOdXEeOqBOMhgDlycQ" general="_2NWFBBSVEeGGzu7fmW9pXw"/>
      <ownedOperation xmi:id="_vxZBQIokEeSkH97cUQxLGA" name="getServiceDeliveryLocations" bodyCondition="_vxZoUYokEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vxZoUYokEeSkH97cUQxLGA" name="body" constrainedElement="_vxZBQIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vxZoUookEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getParticipantRoles()->select(participantRole : cda::ParticipantRole | not participantRole.oclIsUndefined() and participantRole.oclIsKindOf(consol::ServiceDeliveryLocation)).oclAsType(consol::ServiceDeliveryLocation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vxZBQYokEeSkH97cUQxLGA" type="_2LiHABSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vxZoUIokEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vxaPYIokEeSkH97cUQxLGA" name="getPatientPriorityPreference" bodyCondition="_vxaPY4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vxaPY4okEeSkH97cUQxLGA" name="body" constrainedElement="_vxaPYIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vxaPZIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::PatientPriorityPreference))->asSequence()->any(true).oclAsType(consol::PatientPriorityPreference)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vxaPYYokEeSkH97cUQxLGA" type="_UqXAAI6hEeOB0eBUISUB4Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vxaPYookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vxcEkIokEeSkH97cUQxLGA" name="getProviderPriorityPreferences" bodyCondition="_vxcEk4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vxcEk4okEeSkH97cUQxLGA" name="body" constrainedElement="_vxcEkIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vxcElIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProviderPriorityPreference)).oclAsType(consol::ProviderPriorityPreference)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vxcEkYokEeSkH97cUQxLGA" type="_ncafYJmaEeOLJeQez13EkQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vxcEkookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vxdSsIokEeSkH97cUQxLGA" name="getIndication2s" bodyCondition="_vxdSs4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vxdSs4okEeSkH97cUQxLGA" name="body" constrainedElement="_vxdSsIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vxdStIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::Indication2)).oclAsType(consol::Indication2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vxdSsYokEeSkH97cUQxLGA" type="_PrEOIOHoEeO04sHNODkHmQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vxdSsookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_jKZssOdvEeOqBOMhgDlycQ" name="PlannedObservation2">
      <ownedComment xmi:id="_o4FoQOdvEeOqBOMhgDlycQ">
        <body>This template represents planned observations that result in new information about the patient which cannot be classified as a procedure according to the HL7 RIM. Examples of these procedures are diagnostic imaging procedures, EEGs, and EKGs. &#xD;
The importance of the planned observation to the patient and provider is communicated through Patient Priority Preference and Provider Priority Preference. The effectiveTime indicates the time when the observation is intended to take place and authorTime indicates when the documentation of the plan occurred. &#xD;
The Planned Observation template may also indicate the potential insurance coverage for the observation.</body>
      </ownedComment>
      <ownedRule xmi:id="_vxd5wIokEeSkH97cUQxLGA" name="PlanOfCareActivityObservationTemplateId" constrainedElement="_jKZssOdvEeOqBOMhgDlycQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vxd5wYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.44' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vxfu8IokEeSkH97cUQxLGA" name="PlannedObservation2Code" constrainedElement="_jKZssOdvEeOqBOMhgDlycQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vxfu8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vxhkIIokEeSkH97cUQxLGA" name="PlannedObservation2StatusCode" constrainedElement="_jKZssOdvEeOqBOMhgDlycQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vxhkIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'active')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vxkAYIokEeSkH97cUQxLGA" name="PlannedObservation2StatusCodeP" constrainedElement="_jKZssOdvEeOqBOMhgDlycQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vxkAYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vxlOgIokEeSkH97cUQxLGA" name="PlannedObservation2EffectiveTime" constrainedElement="_jKZssOdvEeOqBOMhgDlycQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vxlOgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vxmcoIokEeSkH97cUQxLGA" name="PlannedObservation2Value" constrainedElement="_jKZssOdvEeOqBOMhgDlycQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vxmcoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vxnqwIokEeSkH97cUQxLGA" name="PlannedObservation2MethodCode" constrainedElement="_jKZssOdvEeOqBOMhgDlycQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vxnqwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.methodCode->isEmpty() or self.methodCode->exists(element | element.isNullFlavorUndefined())) implies (not self.methodCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vxr8MIokEeSkH97cUQxLGA" name="PlannedObservation2TargetSiteCodeP" constrainedElement="_jKZssOdvEeOqBOMhgDlycQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vxr8MYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (not self.targetSiteCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vxqHAIokEeSkH97cUQxLGA" name="PlannedObservation2TargetSiteCode" constrainedElement="_jKZssOdvEeOqBOMhgDlycQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vxqHAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.targetSiteCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.96' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vxuYcIokEeSkH97cUQxLGA" name="PlannedObservation2Performer" constrainedElement="_jKZssOdvEeOqBOMhgDlycQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vxuYcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->exists(performer : cda::Performer2 | not performer.oclIsUndefined() and performer.oclIsKindOf(rim::Participation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vxu_gIokEeSkH97cUQxLGA" name="PlannedObservation2AuthorParticipation" constrainedElement="_jKZssOdvEeOqBOMhgDlycQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vxu_gYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->exists(author : cda::Author | not author.oclIsUndefined() and author.oclIsKindOf(consol::AuthorParticipation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vxwNoIokEeSkH97cUQxLGA" name="PlannedObservation2PatientPriorityPreference" constrainedElement="_jKZssOdvEeOqBOMhgDlycQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vxwNoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::PatientPriorityPreference) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vxxbwIokEeSkH97cUQxLGA" name="PlannedObservation2ProviderPriorityPreference" constrainedElement="_jKZssOdvEeOqBOMhgDlycQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vxxbwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::ProviderPriorityPreference) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vxyp4IokEeSkH97cUQxLGA" name="PlannedObservation2Indication2" constrainedElement="_jKZssOdvEeOqBOMhgDlycQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vxyp4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::Indication2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::RSON)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vxz4AIokEeSkH97cUQxLGA" name="PlannedObservation2Instruction2" constrainedElement="_jKZssOdvEeOqBOMhgDlycQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vxz4AYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(consol::Instruction2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vx1GIIokEeSkH97cUQxLGA" name="PlannedObservation2PlannedCoverage" constrainedElement="_jKZssOdvEeOqBOMhgDlycQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vx1GIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(consol::PlannedCoverage) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_jKZssedvEeOqBOMhgDlycQ" general="_2NcLjhSVEeGGzu7fmW9pXw"/>
      <ownedOperation xmi:id="_vxw0sIokEeSkH97cUQxLGA" name="getPatientPriorityPreferences" bodyCondition="_vxw0s4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vxw0s4okEeSkH97cUQxLGA" name="body" constrainedElement="_vxw0sIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vxw0tIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::PatientPriorityPreference)).oclAsType(consol::PatientPriorityPreference)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vxw0sYokEeSkH97cUQxLGA" type="_UqXAAI6hEeOB0eBUISUB4Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vxw0sookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vxyC0IokEeSkH97cUQxLGA" name="getProviderPriorityPreferences" bodyCondition="_vxyC04okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vxyC04okEeSkH97cUQxLGA" name="body" constrainedElement="_vxyC0IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vxyC1IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProviderPriorityPreference)).oclAsType(consol::ProviderPriorityPreference)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vxyC0YokEeSkH97cUQxLGA" type="_ncafYJmaEeOLJeQez13EkQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vxyC0ookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vxzQ8IokEeSkH97cUQxLGA" name="getIndication2s" bodyCondition="_vxzQ84okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vxzQ84okEeSkH97cUQxLGA" name="body" constrainedElement="_vxzQ8IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vxzQ9IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::Indication2)).oclAsType(consol::Indication2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vxzQ8YokEeSkH97cUQxLGA" type="_PrEOIOHoEeO04sHNODkHmQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vxzQ8ookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vx0fEIokEeSkH97cUQxLGA" name="getInstruction2s" bodyCondition="_vx0fE4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vx0fE4okEeSkH97cUQxLGA" name="body" constrainedElement="_vx0fEIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vx0fFIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::Instruction2)).oclAsType(consol::Instruction2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vx0fEYokEeSkH97cUQxLGA" type="_D62NwOH7EeO04sHNODkHmQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vx0fEookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vx1tMIokEeSkH97cUQxLGA" name="getPlannedCoverages" bodyCondition="_vx1tM4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vx1tM4okEeSkH97cUQxLGA" name="body" constrainedElement="_vx1tMIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vx1tNIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::PlannedCoverage)).oclAsType(consol::PlannedCoverage)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vx1tMYokEeSkH97cUQxLGA" type="_O2I3AI9DEeOB0eBUISUB4Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vx1tMookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_cs0YsOeEEeOqBOMhgDlycQ" name="PlannedProcedure2">
      <ownedComment xmi:id="_oFW-QOeEEeOqBOMhgDlycQ">
        <body>This template represents planned alterations of the patient's physical condition. Examples of such procedures are tracheostomy, knee replacement, and craniectomy. The priority of the procedure to the patient and provider is communicated through Patient Priority Preference and Provider Priority Preference. The effectiveTime indicates the time when the procedure is intended to take place and authorTime indicates when the documentation of the plan occurred. The Planned Procedure Template may also indicate the potential insurance coverage for the procedure.</body>
      </ownedComment>
      <ownedRule xmi:id="_nAaxMOgNEeO-iJTuAv7BKQ" name="PlannedProcedure2Instruction2InversionInd">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nAaxMegNEeO-iJTuAv7BKQ">
          <language>OCL</language>
          <body>self.entryRelationship->select(er : cda::EntryRelationship | er.act.oclIsTypeOf(consol::Instruction2))->forAll(ent : cda::EntryRelationship | ent.inversionInd=true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vx2UQIokEeSkH97cUQxLGA" name="PlanOfCareActivityProcedureTemplateId" constrainedElement="_cs0YsOeEEeOqBOMhgDlycQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vx2UQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.41' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vx4wgIokEeSkH97cUQxLGA" name="PlannedProcedure2Code" constrainedElement="_cs0YsOeEEeOqBOMhgDlycQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vx4wgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vx6lsIokEeSkH97cUQxLGA" name="PlannedProcedure2StatusCode" constrainedElement="_cs0YsOeEEeOqBOMhgDlycQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vx6lsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'active')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vx8a4IokEeSkH97cUQxLGA" name="PlannedProcedure2StatusCodeP" constrainedElement="_cs0YsOeEEeOqBOMhgDlycQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vx8a4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vx-QEIokEeSkH97cUQxLGA" name="PlannedProcedure2EffectiveTime" constrainedElement="_cs0YsOeEEeOqBOMhgDlycQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vx-QEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vx_eMIokEeSkH97cUQxLGA" name="PlannedProcedure2MethodCode" constrainedElement="_cs0YsOeEEeOqBOMhgDlycQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vx_eMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.methodCode->isEmpty() or self.methodCode->exists(element | element.isNullFlavorUndefined())) implies (not self.methodCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vyDIkIokEeSkH97cUQxLGA" name="PlannedProcedure2TargetSiteCodeP" constrainedElement="_cs0YsOeEEeOqBOMhgDlycQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vyDIkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (not self.targetSiteCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vyBTYIokEeSkH97cUQxLGA" name="PlannedProcedure2TargetSiteCode" constrainedElement="_cs0YsOeEEeOqBOMhgDlycQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vyBTYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.targetSiteCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.96' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vyFk0IokEeSkH97cUQxLGA" name="PlannedProcedure2Performer" constrainedElement="_cs0YsOeEEeOqBOMhgDlycQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vyFk0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->exists(performer : cda::Performer2 | not performer.oclIsUndefined() and performer.oclIsKindOf(rim::Participation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vyGy8IokEeSkH97cUQxLGA" name="PlannedProcedure2AuthorParticipation" constrainedElement="_cs0YsOeEEeOqBOMhgDlycQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vyGy8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->one(author : cda::Author | not author.oclIsUndefined() and author.oclIsKindOf(consol::AuthorParticipation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vyHaAIokEeSkH97cUQxLGA" name="PlannedProcedure2PatientPriorityPreference" constrainedElement="_cs0YsOeEEeOqBOMhgDlycQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vyHaAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::PatientPriorityPreference) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vyIoIookEeSkH97cUQxLGA" name="PlannedProcedure2ProviderPriorityPreference" constrainedElement="_cs0YsOeEEeOqBOMhgDlycQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vyIoI4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::ProviderPriorityPreference) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vyJ2QIokEeSkH97cUQxLGA" name="PlannedProcedure2Indication2" constrainedElement="_cs0YsOeEEeOqBOMhgDlycQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vyJ2QYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::Indication2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::RSON)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vyLEYIokEeSkH97cUQxLGA" name="PlannedProcedure2Instruction2" constrainedElement="_cs0YsOeEEeOqBOMhgDlycQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vyLEYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(consol::Instruction2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vyMSgIokEeSkH97cUQxLGA" name="PlannedProcedure2PlannedCoverage" constrainedElement="_cs0YsOeEEeOqBOMhgDlycQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vyMSgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(consol::PlannedCoverage) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_cs0YseeEEeOqBOMhgDlycQ" general="_2NiSKhSVEeGGzu7fmW9pXw"/>
      <ownedOperation xmi:id="_vyIBEIokEeSkH97cUQxLGA" name="getPatientPriorityPreferences" bodyCondition="_vyIoIIokEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vyIoIIokEeSkH97cUQxLGA" name="body" constrainedElement="_vyIBEIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vyIoIYokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::PatientPriorityPreference)).oclAsType(consol::PatientPriorityPreference)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vyIBEYokEeSkH97cUQxLGA" type="_UqXAAI6hEeOB0eBUISUB4Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vyIBEookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vyJPMIokEeSkH97cUQxLGA" name="getProviderPriorityPreferences" bodyCondition="_vyJPM4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vyJPM4okEeSkH97cUQxLGA" name="body" constrainedElement="_vyJPMIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vyJPNIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProviderPriorityPreference)).oclAsType(consol::ProviderPriorityPreference)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vyJPMYokEeSkH97cUQxLGA" type="_ncafYJmaEeOLJeQez13EkQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vyJPMookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vyKdUIokEeSkH97cUQxLGA" name="getIndication2s" bodyCondition="_vyKdU4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vyKdU4okEeSkH97cUQxLGA" name="body" constrainedElement="_vyKdUIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vyKdVIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::Indication2)).oclAsType(consol::Indication2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vyKdUYokEeSkH97cUQxLGA" type="_PrEOIOHoEeO04sHNODkHmQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vyKdUookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vyLrcIokEeSkH97cUQxLGA" name="getInstruction2s" bodyCondition="_vyLrc4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vyLrc4okEeSkH97cUQxLGA" name="body" constrainedElement="_vyLrcIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vyLrdIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::Instruction2)).oclAsType(consol::Instruction2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vyLrcYokEeSkH97cUQxLGA" type="_D62NwOH7EeO04sHNODkHmQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vyLrcookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vyM5kIokEeSkH97cUQxLGA" name="getPlannedCoverages" bodyCondition="_vyM5k4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vyM5k4okEeSkH97cUQxLGA" name="body" constrainedElement="_vyM5kIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vyM5lIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::PlannedCoverage)).oclAsType(consol::PlannedCoverage)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vyM5kYokEeSkH97cUQxLGA" type="_O2I3AI9DEeOB0eBUISUB4Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vyM5kookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Yj45YOgREeO-iJTuAv7BKQ" name="PlannedMedicationActivity2">
      <ownedComment xmi:id="_lNwj8OgREeO-iJTuAv7BKQ">
        <body>This template represents planned medication activities. The priority of the medication activity to the patient and provider is communicated through Patient Priority Preference and Provider Priority Preference. The effectiveTime indicates the time when the medication activity is intended to take place. The authorTime indicates when the documentation of the plan occurred.</body>
      </ownedComment>
      <ownedRule xmi:id="_vyNgoIokEeSkH97cUQxLGA" name="PlanOfCareActivitySubstanceAdministrationTemplateId" constrainedElement="_Yj45YOgREeO-iJTuAv7BKQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vyNgoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.42' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vyPV0IokEeSkH97cUQxLGA" name="PlannedMedicationActivity2StatusCode" constrainedElement="_Yj45YOgREeO-iJTuAv7BKQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vyPV0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'active')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vyRyEIokEeSkH97cUQxLGA" name="PlannedMedicationActivity2StatusCodeP" constrainedElement="_Yj45YOgREeO-iJTuAv7BKQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vyRyEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vyTnQIokEeSkH97cUQxLGA" name="PlannedMedicationActivity2EffectiveTime" constrainedElement="_Yj45YOgREeO-iJTuAv7BKQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vyTnQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.effectiveTime->isEmpty() or self.effectiveTime->exists(element | element.isNullFlavorUndefined())) implies (self.effectiveTime->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vyUOUIokEeSkH97cUQxLGA" name="PlannedMedicationActivity2RepeatNumber" constrainedElement="_Yj45YOgREeO-iJTuAv7BKQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vyUOUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.repeatNumber.oclIsUndefined() or self.repeatNumber.isNullFlavorUndefined()) implies (not self.repeatNumber.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vyYfwIokEeSkH97cUQxLGA" name="PlannedMedicationActivity2RouteCodeP" constrainedElement="_Yj45YOgREeO-iJTuAv7BKQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vyYfwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.routeCode.oclIsUndefined() or self.routeCode.isNullFlavorUndefined()) implies (not self.routeCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vyWqkIokEeSkH97cUQxLGA" name="PlannedMedicationActivity2RouteCode" constrainedElement="_Yj45YOgREeO-iJTuAv7BKQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vyWqkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.routeCode.oclIsUndefined() or self.routeCode.isNullFlavorUndefined()) implies (not self.routeCode.oclIsUndefined() and self.routeCode.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.routeCode.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and (value.code = 'C38192' or value.code = 'C38193' or value.code = 'C38194' or value.code = 'C38675' or value.code = 'C38197' or value.code = 'C38633' or value.code = 'C38205' or value.code = 'C38206' or value.code = 'C38208' or value.code = 'C38209' or value.code = 'C38210' or value.code = 'C38211' or value.code = 'C38212' or value.code = 'C38200' or value.code = 'C38215' or value.code = 'C38219' or value.code = 'C38220' or value.code = 'C38221' or value.code = 'C38222' or value.code = 'C38223' or value.code = 'C38224' or value.code = 'C38225' or value.code = 'C38226' or value.code = 'C38227' or value.code = 'C38228' or value.code = 'C38229' or value.code = 'C38230' or value.code = 'C38231' or value.code = 'C38232' or value.code = 'C38233' or value.code = 'C38234' or value.code = 'C38217' or value.code = 'C38218' or value.code = 'C38235' or value.code = 'C38238' or value.code = 'C38239' or value.code = 'C38240' or value.code = 'C38241' or value.code = 'C38242' or value.code = 'C38243' or value.code = 'C38245' or value.code = 'C38246' or value.code = 'C38247' or value.code = 'C38249' or value.code = 'C38250' or value.code = 'C38251' or value.code = 'C38252' or value.code = 'C38253' or value.code = 'C38254' or value.code = 'C28161' or value.code = 'C38255' or value.code = 'C38256' or value.code = 'C38257' or value.code = 'C38258' or value.code = 'C38259' or value.code = 'C38260' or value.code = 'C38261' or value.code = 'C38262' or value.code = 'C38263' or value.code = 'C38264' or value.code = 'C38265' or value.code = 'C38266' or value.code = 'C38267' or value.code = 'C38207' or value.code = 'C38268' or value.code = 'C38269' or value.code = 'C38270' or value.code = 'C38272' or value.code = 'C38273' or value.code = 'C38276' or value.code = 'C38277' or value.code = 'C38278' or value.code = 'C38280' or value.code = 'C38203' or value.code = 'C38281' or value.code = 'C38282' or value.code = 'C38284' or value.code = 'C38285' or value.code = 'C48623' or value.code = 'C38286' or value.code = 'C38287' or value.code = 'C38288' or value.code = 'C38289' or value.code = 'C38291' or value.code = 'C38676' or value.code = 'C38292' or value.code = 'C38677' or value.code = 'C38293' or value.code = 'C38294' or value.code = 'C38295' or value.code = 'C38216' or value.code = 'C38296' or value.code = 'C38198' or value.code = 'C38297' or value.code = 'C38298' or value.code = 'C38299' or value.code = 'C38300' or value.code = 'C38301' or value.code = 'C38304' or value.code = 'C38305' or value.code = 'C38283' or value.code = 'C38307' or value.code = 'C38308' or value.code = 'C38309' or value.code = 'C38312' or value.code = 'C38271'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vyd_UIokEeSkH97cUQxLGA" name="PlannedMedicationActivity2ApproachSiteCodeP" constrainedElement="_Yj45YOgREeO-iJTuAv7BKQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vyd_UYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.approachSiteCode->isEmpty() or self.approachSiteCode->exists(element | element.isNullFlavorUndefined())) implies (not self.approachSiteCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vybjEIokEeSkH97cUQxLGA" name="PlannedMedicationActivity2ApproachSiteCode" constrainedElement="_Yj45YOgREeO-iJTuAv7BKQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vybjEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.approachSiteCode->isEmpty() or self.approachSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.approachSiteCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.96' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vyf0gIokEeSkH97cUQxLGA" name="PlannedMedicationActivity2DoseQuantity" constrainedElement="_Yj45YOgREeO-iJTuAv7BKQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vyf0gYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.doseQuantity.oclIsUndefined() or self.doseQuantity.isNullFlavorUndefined()) implies (not self.doseQuantity.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vygbkIokEeSkH97cUQxLGA" name="PlannedMedicationActivity2RateQuantity" constrainedElement="_Yj45YOgREeO-iJTuAv7BKQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vygbkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.rateQuantity.oclIsUndefined() or self.rateQuantity.isNullFlavorUndefined()) implies (not self.rateQuantity.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vyhCoIokEeSkH97cUQxLGA" name="PlannedMedicationActivity2MaxDoseQuantity" constrainedElement="_Yj45YOgREeO-iJTuAv7BKQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vyhCoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.maxDoseQuantity.oclIsUndefined() or self.maxDoseQuantity.isNullFlavorUndefined()) implies (not self.maxDoseQuantity.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vylUEIokEeSkH97cUQxLGA" name="PlannedMedicationActivity2AdministrationUnitCodeP" constrainedElement="_Yj45YOgREeO-iJTuAv7BKQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vylUEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.administrationUnitCode.oclIsUndefined() or self.administrationUnitCode.isNullFlavorUndefined()) implies (not self.administrationUnitCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vyi30IokEeSkH97cUQxLGA" name="PlannedMedicationActivity2AdministrationUnitCode" constrainedElement="_Yj45YOgREeO-iJTuAv7BKQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vyi30YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.administrationUnitCode.oclIsUndefined() or self.administrationUnitCode.isNullFlavorUndefined()) implies (not self.administrationUnitCode.oclIsUndefined() and self.administrationUnitCode.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.administrationUnitCode.oclAsType(datatypes::CE) in &#xD;
value.code = 'APPFUL' or value.code = 'DROP' or value.code = 'NDROP' or value.code = 'OPDROP' or value.code = 'ORDROP' or value.code = 'OTDROP' or value.code = 'PUFF' or value.code = 'SCOOP' or value.code = 'SPRY')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vyrasIokEeSkH97cUQxLGA" name="PlannedMedicationActivity2Performer" constrainedElement="_Yj45YOgREeO-iJTuAv7BKQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vyrasYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->exists(performer : cda::Performer2 | not performer.oclIsUndefined() and performer.oclIsKindOf(rim::Participation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vysBwIokEeSkH97cUQxLGA" name="PlannedMedicationActivity2AuthorParticipation" constrainedElement="_Yj45YOgREeO-iJTuAv7BKQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vysBwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->one(author : cda::Author | not author.oclIsUndefined() and author.oclIsKindOf(consol::AuthorParticipation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vytP4IokEeSkH97cUQxLGA" name="PlannedMedicationActivity2PatientPriorityPreference" constrainedElement="_Yj45YOgREeO-iJTuAv7BKQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vytP4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::PatientPriorityPreference) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vyueAIokEeSkH97cUQxLGA" name="PlannedMedicationActivity2ProviderPriorityPreference" constrainedElement="_Yj45YOgREeO-iJTuAv7BKQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vyueAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::ProviderPriorityPreference) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vyvsIIokEeSkH97cUQxLGA" name="PlannedMedicationActivity2Indication2" constrainedElement="_Yj45YOgREeO-iJTuAv7BKQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vyvsIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::Indication2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::RSON)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vyw6QIokEeSkH97cUQxLGA" name="PlannedMedicationActivity2Instruction2" constrainedElement="_Yj45YOgREeO-iJTuAv7BKQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vyw6QYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(consol::Instruction2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vyyIYIokEeSkH97cUQxLGA" name="PlannedMedicationActivity2Consumable" constrainedElement="_Yj45YOgREeO-iJTuAv7BKQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vyyIYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.consumable->one(consumable : cda::Consumable | not consumable.oclIsUndefined() and consumable.oclIsKindOf(cda::Consumable))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wIMXsIokEeSkH97cUQxLGA" name="PlannedMedicationActivity2Precondition" constrainedElement="_Yj45YOgREeO-iJTuAv7BKQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wIMXsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.precondition->exists(precondition : cda::Precondition | not precondition.oclIsUndefined() and precondition.oclIsKindOf(cda::Precondition))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wZaqkIokEeSkH97cUQxLGA" name="PlannedMedicationActivity2IVLPQdoseQuantityUnit" constrainedElement="_Yj45YOgREeO-iJTuAv7BKQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wZaqkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.doseQuantity->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies (not unit.oclIsUndefined() )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wZbRoIokEeSkH97cUQxLGA" name="PlannedMedicationActivity2IVLPQrateQuantityUnit" constrainedElement="_Yj45YOgREeO-iJTuAv7BKQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wZbRoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.doseQuantity->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies (not unit.oclIsUndefined() )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wZcfwIokEeSkH97cUQxLGA" name="PlannedMedicationActivity2ConsumableMedicationInformation2" constrainedElement="_Yj45YOgREeO-iJTuAv7BKQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wZcfwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.consumable->excluding(null)->reject(manufacturedProduct->one(manufacturedProduct : cda::ManufacturedProduct | not manufacturedProduct.oclIsUndefined() and manufacturedProduct.oclIsKindOf(consol::MedicationInformation2)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wZdG0IokEeSkH97cUQxLGA" name="PlannedMedicationActivity2PreconditionTypeCode" constrainedElement="_Yj45YOgREeO-iJTuAv7BKQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wZdG0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.precondition->excluding(null)->reject(isDefined('typeCode') and typeCode=vocab::ActRelationshipType::PRCN)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wZdt4IokEeSkH97cUQxLGA" name="PlannedMedicationActivity2PreconditionPreconditionForSubstanceAdministration2" constrainedElement="_Yj45YOgREeO-iJTuAv7BKQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wZdt4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.precondition->excluding(null)->reject(criterion->one(criterion : cda::Criterion | not criterion.oclIsUndefined() and criterion.oclIsKindOf(consol::PreconditionForSubstanceAdministration2)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Yj5gcOgREeO-iJTuAv7BKQ" general="_2NoYwxSVEeGGzu7fmW9pXw"/>
      <ownedOperation xmi:id="_vyt28IokEeSkH97cUQxLGA" name="getPatientPriorityPreferences" bodyCondition="_vyt284okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vyt284okEeSkH97cUQxLGA" name="body" constrainedElement="_vyt28IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vyt29IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::PatientPriorityPreference)).oclAsType(consol::PatientPriorityPreference)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vyt28YokEeSkH97cUQxLGA" type="_UqXAAI6hEeOB0eBUISUB4Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vyt28ookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vyvFEIokEeSkH97cUQxLGA" name="getProviderPriorityPreferences" bodyCondition="_vyvFE4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vyvFE4okEeSkH97cUQxLGA" name="body" constrainedElement="_vyvFEIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vyvFFIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProviderPriorityPreference)).oclAsType(consol::ProviderPriorityPreference)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vyvFEYokEeSkH97cUQxLGA" type="_ncafYJmaEeOLJeQez13EkQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vyvFEookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vywTMIokEeSkH97cUQxLGA" name="getIndication2s" bodyCondition="_vywTM4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vywTM4okEeSkH97cUQxLGA" name="body" constrainedElement="_vywTMIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vywTNIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::Indication2)).oclAsType(consol::Indication2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vywTMYokEeSkH97cUQxLGA" type="_PrEOIOHoEeO04sHNODkHmQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vywTMookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vyxhUIokEeSkH97cUQxLGA" name="getInstruction2s" bodyCondition="_vyxhU4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vyxhU4okEeSkH97cUQxLGA" name="body" constrainedElement="_vyxhUIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vyxhVIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::Instruction2)).oclAsType(consol::Instruction2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vyxhUYokEeSkH97cUQxLGA" type="_D62NwOH7EeO04sHNODkHmQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vyxhUookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_vEd1cOg0EeO-iJTuAv7BKQ" name="PlannedSupply2">
      <ownedComment xmi:id="_GOfFAOg1EeO-iJTuAv7BKQ">
        <body>This template represents both medicinal and non-medicinal supplies ordered, requested, or intended for the patient (e.g. medication prescription, order for wheelchair). The importance of the supply order or request to the patient and provider may be indicated in the Patient Priority Preference and Provider Priority Preference. &#xD;
The effective time indicates the time when the supply is intended to take place and author time indicates when the documentation of the plan occurred. The Planned Supply template may also indicate the potential insurance coverage for the procedure. &#xD;
Depending on the type of supply, the product or participant will be either a Medication Information product (medication), an Immunization Medication Information product (immunization), or a Product Instance participant (device/equipment).</body>
      </ownedComment>
      <ownedRule xmi:id="_vyyvcIokEeSkH97cUQxLGA" name="PlanOfCareActivitySupplyTemplateId" constrainedElement="_vEd1cOg0EeO-iJTuAv7BKQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vyyvcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.43' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vy1LsIokEeSkH97cUQxLGA" name="PlannedSupply2StatusCode" constrainedElement="_vEd1cOg0EeO-iJTuAv7BKQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vy1LsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'active')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vy3A4IokEeSkH97cUQxLGA" name="PlannedSupply2StatusCodeP" constrainedElement="_vEd1cOg0EeO-iJTuAv7BKQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vy3A4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vy42EIokEeSkH97cUQxLGA" name="PlannedSupply2EffectiveTime" constrainedElement="_vEd1cOg0EeO-iJTuAv7BKQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vy42EYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.effectiveTime->isEmpty() or self.effectiveTime->exists(element | element.isNullFlavorUndefined())) implies (not self.effectiveTime->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vy6EMIokEeSkH97cUQxLGA" name="PlannedSupply2RepeatNumber" constrainedElement="_vEd1cOg0EeO-iJTuAv7BKQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vy6EMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.repeatNumber.oclIsUndefined() or self.repeatNumber.isNullFlavorUndefined()) implies (not self.repeatNumber.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vy7SUIokEeSkH97cUQxLGA" name="PlannedSupply2Quantity" constrainedElement="_vEd1cOg0EeO-iJTuAv7BKQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vy7SUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.quantity.oclIsUndefined() or self.quantity.isNullFlavorUndefined()) implies (not self.quantity.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vy9ukIokEeSkH97cUQxLGA" name="PlannedSupply2Product" constrainedElement="_vEd1cOg0EeO-iJTuAv7BKQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vy9ukYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.product->one(product : cda::Product | not product.oclIsUndefined() and product.oclIsKindOf(cda::Product))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vy-VoIokEeSkH97cUQxLGA" name="PlannedSupply2Performer" constrainedElement="_vEd1cOg0EeO-iJTuAv7BKQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vy-VoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->exists(performer : cda::Performer2 | not performer.oclIsUndefined() and performer.oclIsKindOf(rim::Participation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vy_jwIokEeSkH97cUQxLGA" name="PlannedSupply2AuthorParticipation" constrainedElement="_vEd1cOg0EeO-iJTuAv7BKQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vy_jwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->one(author : cda::Author | not author.oclIsUndefined() and author.oclIsKindOf(consol::AuthorParticipation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vzAK0IokEeSkH97cUQxLGA" name="PlannedSupply2ProductInstance" constrainedElement="_vEd1cOg0EeO-iJTuAv7BKQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vzAK0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->one(participant : cda::Participant2 | not participant.participantRole.oclIsUndefined() and participant.participantRole.oclIsKindOf(consol::ProductInstance))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vzBY9YokEeSkH97cUQxLGA" name="PlannedSupply2PatientPriorityPreference" constrainedElement="_vEd1cOg0EeO-iJTuAv7BKQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vzCAAIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::PatientPriorityPreference) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vzDOIIokEeSkH97cUQxLGA" name="PlannedSupply2ProviderPriorityPreference" constrainedElement="_vEd1cOg0EeO-iJTuAv7BKQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vzDOIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::ProviderPriorityPreference) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vzEcQIokEeSkH97cUQxLGA" name="PlannedSupply2Indication2" constrainedElement="_vEd1cOg0EeO-iJTuAv7BKQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vzEcQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::Indication2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::RSON)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vzFqYIokEeSkH97cUQxLGA" name="PlannedSupply2Instruction2" constrainedElement="_vEd1cOg0EeO-iJTuAv7BKQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vzFqYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(consol::Instruction2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vzGRdYokEeSkH97cUQxLGA" name="PlannedSupply2PlannedCoverage" constrainedElement="_vEd1cOg0EeO-iJTuAv7BKQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vzG4gIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(consol::PlannedCoverage) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_vEecgOg0EeO-iJTuAv7BKQ" general="_2NoY5BSVEeGGzu7fmW9pXw"/>
      <ownedOperation xmi:id="_vzBY8IokEeSkH97cUQxLGA" name="getProductInstance" bodyCondition="_vzBY84okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vzBY84okEeSkH97cUQxLGA" name="body" constrainedElement="_vzBY8IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vzBY9IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getParticipantRoles()->select(participantRole : cda::ParticipantRole | not participantRole.oclIsUndefined() and participantRole.oclIsKindOf(consol::ProductInstance))->asSequence()->any(true).oclAsType(consol::ProductInstance)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vzBY8YokEeSkH97cUQxLGA" type="_2G2bUxSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vzBY8ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vzCnEIokEeSkH97cUQxLGA" name="getPatientPriorityPreferences" bodyCondition="_vzCnE4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vzCnE4okEeSkH97cUQxLGA" name="body" constrainedElement="_vzCnEIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vzCnFIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::PatientPriorityPreference)).oclAsType(consol::PatientPriorityPreference)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vzCnEYokEeSkH97cUQxLGA" type="_UqXAAI6hEeOB0eBUISUB4Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vzCnEookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vzD1MIokEeSkH97cUQxLGA" name="getProviderPriorityPreferences" bodyCondition="_vzD1M4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vzD1M4okEeSkH97cUQxLGA" name="body" constrainedElement="_vzD1MIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vzD1NIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProviderPriorityPreference)).oclAsType(consol::ProviderPriorityPreference)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vzD1MYokEeSkH97cUQxLGA" type="_ncafYJmaEeOLJeQez13EkQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vzD1MookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vzFDUIokEeSkH97cUQxLGA" name="getIndication2s" bodyCondition="_vzFDU4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vzFDU4okEeSkH97cUQxLGA" name="body" constrainedElement="_vzFDUIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vzFDVIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::Indication2)).oclAsType(consol::Indication2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vzFDUYokEeSkH97cUQxLGA" type="_PrEOIOHoEeO04sHNODkHmQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vzFDUookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vzGRcIokEeSkH97cUQxLGA" name="getInstruction2s" bodyCondition="_vzGRc4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vzGRc4okEeSkH97cUQxLGA" name="body" constrainedElement="_vzGRcIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vzGRdIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::Instruction2)).oclAsType(consol::Instruction2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vzGRcYokEeSkH97cUQxLGA" type="_D62NwOH7EeO04sHNODkHmQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vzGRcookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vzHfkIokEeSkH97cUQxLGA" name="getPlannedCoverages" bodyCondition="_vzHfk4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vzHfk4okEeSkH97cUQxLGA" name="body" constrainedElement="_vzHfkIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vzHflIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::PlannedCoverage)).oclAsType(consol::PlannedCoverage)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vzHfkYokEeSkH97cUQxLGA" type="_O2I3AI9DEeOB0eBUISUB4Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vzHfkookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Q0ODkOwlEeOqa975IP2wug" name="PolicyActivity2">
      <ownedComment xmi:id="_eTN_UOwlEeOqa975IP2wug">
        <body>A policy activity represents the policy or program providing the coverage. The person for whom payment is being provided (i.e., the patient) is the covered party. The subscriber of the policy or program is represented as a participant that is the holder the coverage. The payer is represented as the performer of the policy activity.</body>
      </ownedComment>
      <ownedRule xmi:id="_vzIGoIokEeSkH97cUQxLGA" name="PolicyActivityTemplateId" constrainedElement="_Q0ODkOwlEeOqa975IP2wug">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vzIGoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.61' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vzTFwIokEeSkH97cUQxLGA" name="PolicyActivityPayer" constrainedElement="_Q0ODkOwlEeOqa975IP2wug">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vzTFwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->select(performer : cda::Performer2 | not performer.oclIsUndefined() and performer.oclIsKindOf(cda::Performer2))->select(templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.87'))->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vzU68IokEeSkH97cUQxLGA" name="PolicyActivityGuarantor" constrainedElement="_Q0ODkOwlEeOqa975IP2wug">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vzU68YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->select(performer : cda::Performer2 | not performer.oclIsUndefined() and performer.oclIsKindOf(cda::Performer2))->select(templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.88'))->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vzWwIIokEeSkH97cUQxLGA" name="PolicyActivityCoverage" constrainedElement="_Q0ODkOwlEeOqa975IP2wug">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vzWwIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->select(participant : cda::Participant2 | not participant.oclIsUndefined() and participant.oclIsKindOf(cda::Participant2))->select(typeCode=vocab::ParticipationType::COV)->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wZgKIIokEeSkH97cUQxLGA" name="PolicyActivity2PayerPolicyActivityPayerPayerAssignedEntityTelecom" constrainedElement="_Q0ODkOwlEeOqa975IP2wug">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wZgxMIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null)->select(templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.87')).assignedEntity->excluding(null)->reject((telecom->isEmpty() or telecom->exists(element | element.isNullFlavorUndefined())) implies (not telecom->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wZgxMYokEeSkH97cUQxLGA" name="PolicyActivity2PolicyActivityPayerPayerAssignedEntity" constrainedElement="_Q0ODkOwlEeOqa975IP2wug">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wZgxMookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null)->select(templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.87'))->select(templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.87'))->reject(assignedEntity->one(assignedEntity : cda::AssignedEntity | not assignedEntity.oclIsUndefined() and assignedEntity.oclIsKindOf(cda::AssignedEntity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wZh_UIokEeSkH97cUQxLGA" name="PolicyActivity2GuarantorPolicyActivityGuarantorGuarantorAssignedEntityTelecom" constrainedElement="_Q0ODkOwlEeOqa975IP2wug">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wZh_UYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null)->select(templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.88')).assignedEntity->excluding(null)->reject((telecom->isEmpty() or telecom->exists(element | element.isNullFlavorUndefined())) implies (not telecom->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wZimYIokEeSkH97cUQxLGA" name="PolicyActivity2GuarantorPolicyActivityGuarantorGuarantorAssignedEntityCodeP" constrainedElement="_Q0ODkOwlEeOqa975IP2wug">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wZimYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null)->select(templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.88')).assignedEntity->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wZjNcIokEeSkH97cUQxLGA" name="PolicyActivity2GuarantorPolicyActivityGuarantorGuarantorAssignedEntityCode" constrainedElement="_Q0ODkOwlEeOqa975IP2wug">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wZjNcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null)->select(templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.88')).assignedEntity->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined() and code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = code.oclAsType(datatypes::CE) in &#xD;
value.code = 'GUAR' and value.codeSystem = '2.16.840.1.113883.5.110'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wZjNcookEeSkH97cUQxLGA" name="PolicyActivity2PolicyActivityGuarantorGuarantorAssignedEntity" constrainedElement="_Q0ODkOwlEeOqa975IP2wug">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wZjNc4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.performer->excluding(null)->select(templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.88'))->select(templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.88'))->reject(assignedEntity->one(assignedEntity : cda::AssignedEntity | not assignedEntity.oclIsUndefined() and assignedEntity.oclIsKindOf(cda::AssignedEntity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wZlCoIokEeSkH97cUQxLGA" name="PolicyActivity2CoverageCoverageRoleCoveragePlayingEntityDateOfBirthInSDTCbirthTime" constrainedElement="_Q0ODkOwlEeOqa975IP2wug">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wZlCoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->select(typeCode=vocab::ParticipationType::COV).participantRole->excluding(null).playingEntity->excluding(null)->reject(true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wZlpsIokEeSkH97cUQxLGA" name="PolicyActivity2CoverageCoverageRoleCoveragePlayingEntitySDTCBirthTime" constrainedElement="_Q0ODkOwlEeOqa975IP2wug">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wZlpsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->select(typeCode=vocab::ParticipationType::COV).participantRole->excluding(null).playingEntity->excluding(null)->reject((sDTCBirthTime.oclIsUndefined() or sDTCBirthTime.isNullFlavorUndefined()) implies (not sDTCBirthTime.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wZmQwIokEeSkH97cUQxLGA" name="PolicyActivity2CoveragePolicyActivityCoverageCoverageRoleCoveragePlayingEntity" constrainedElement="_Q0ODkOwlEeOqa975IP2wug">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wZmQwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->select(typeCode=vocab::ParticipationType::COV).participantRole->excluding(null)->reject(playingEntity->one(playingEntity : cda::PlayingEntity | not playingEntity.oclIsUndefined() and playingEntity.oclIsKindOf(cda::PlayingEntity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wZmQwookEeSkH97cUQxLGA" name="PolicyActivity2PolicyActivityCoverageCoverageRole" constrainedElement="_Q0ODkOwlEeOqa975IP2wug">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wZmQw4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->select(typeCode=vocab::ParticipationType::COV)->select(typeCode=vocab::ParticipationType::COV)->reject(participantRole->one(participantRole : cda::ParticipantRole | not participantRole.oclIsUndefined() and participantRole.oclIsKindOf(cda::ParticipantRole)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Q0P4wOwlEeOqa975IP2wug" general="_PZBdMBUlEeGvPruliC3crg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="__SgUwOwuEeOqa975IP2wug" name="PostprocedureDiagnosis2">
      <ownedComment xmi:id="_Lz0gQOwvEeOqa975IP2wug">
        <body>This template represents the diagnosis or diagnoses discovered or confirmed during the procedure. They may be the same as preprocedure diagnoses or indications.</body>
      </ownedComment>
      <ownedRule xmi:id="_vzZMYIokEeSkH97cUQxLGA" name="PostprocedureDiagnosisTemplateId" constrainedElement="__SgUwOwuEeOqa975IP2wug">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vzZzcIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.51' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vzer8IokEeSkH97cUQxLGA" name="PostprocedureDiagnosisCodeP" constrainedElement="__SgUwOwuEeOqa975IP2wug">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vzer8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vzcPsIokEeSkH97cUQxLGA" name="PostprocedureDiagnosisCode" constrainedElement="__SgUwOwuEeOqa975IP2wug">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vzcPsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '59769-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v23XIIokEeSkH97cUQxLGA" name="PostprocedureDiagnosisProblemObservation2" constrainedElement="__SgUwOwuEeOqa975IP2wug">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v23XIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::ProblemObservation2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="__SgUwewuEeOqa975IP2wug" general="_0fjXAEEvEeGdmoWy_aLP0Q"/>
      <ownedOperation xmi:id="_v23-MIokEeSkH97cUQxLGA" name="getConsolProblemObservation2s" bodyCondition="_v23-M4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v23-M4okEeSkH97cUQxLGA" name="body" constrainedElement="_v23-MIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v23-NIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProblemObservation2)).oclAsType(consol::ProblemObservation2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v23-MYokEeSkH97cUQxLGA" type="_prDAkPDCEeOKPKE9au0oug" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v23-MookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_5l3g0OzYEeOnE-G4kptBiw" name="PreoperativeDiagnosis2">
      <ownedComment xmi:id="_JXHzEOzZEeOnE-G4kptBiw">
        <body>This template represents the surgical diagnosis or diagnoses assigned to the patient before the surgical procedure and is the reason for the surgery. The preoperative diagnosis is, in the opinion of the surgeon, the diagnosis that will be confirmed during surgery.</body>
      </ownedComment>
      <ownedRule xmi:id="_vzhIMIokEeSkH97cUQxLGA" name="PreoperativeDiagnosisTemplateId" constrainedElement="_5l3g0OzYEeOnE-G4kptBiw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vzhIMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.65' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vzlZoIokEeSkH97cUQxLGA" name="PreoperativeDiagnosisCodeP" constrainedElement="_5l3g0OzYEeOnE-G4kptBiw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vzlZoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vzi9YIokEeSkH97cUQxLGA" name="PreoperativeDiagnosisCode" constrainedElement="_5l3g0OzYEeOnE-G4kptBiw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vzi9YYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '10219-4' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v24lQIokEeSkH97cUQxLGA" name="PreoperativeDiagnosisProblemObservation2" constrainedElement="_5l3g0OzYEeOnE-G4kptBiw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v24lQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::ProblemObservation2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_5l4H4OzYEeOnE-G4kptBiw" general="_0baBYEEwEeGdmoWy_aLP0Q"/>
      <ownedOperation xmi:id="_v25MUIokEeSkH97cUQxLGA" name="getConsolProblemObservation2s" bodyCondition="_v25MU4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v25MU4okEeSkH97cUQxLGA" name="body" constrainedElement="_v25MUIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v25MVIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProblemObservation2)).oclAsType(consol::ProblemObservation2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v25MUYokEeSkH97cUQxLGA" type="_prDAkPDCEeOKPKE9au0oug" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v25MUookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_y5C8IOzbEeOnE-G4kptBiw" name="ProblemConcernAct2">
      <ownedComment xmi:id="_-7idoOzbEeOnE-G4kptBiw">
        <body>This template reflects an ongoing concern on behalf of the provider that placed the concern on a patient's problem list. So long as the underlying condition is of concern to the provider (i.e. so long as the condition, whether active or resolved, is of ongoing concern and interest to the provider), the statusCode is &quot;active&quot;. Only when the underlying condition is no longer of concern is the statusCode set to &quot;completed&quot;. The effectiveTime reflects the time that the underlying condition was felt to be a concern – it may or may not correspond to the effectiveTime of the condition (e.g. even five years later, the clinician may remain concerned about a prior heart attack).&#xD;
The statusCode of the Problem Concern Act (Condition) is the definitive indication of the status of the concern, whereas the effectiveTime of the nested Problem Observation is the definitive indication of whether or not the underlying condition is resolved.&#xD;
The effectiveTime/low of the Problem Concern Act (Condition) asserts when the concern became active. This equates to the time the concern was authored in the patient's chart. The effectiveTime/high asserts when the concern was completed (e.g. when the clinician deemed there is no longer any need to track the underlying condition).&#xD;
A Problem Concern Act (Condition) can contain many Problem Observations (templateId 2.16.840.1.113883.10.20.22.4.4.2). Each Problem Observation is a discrete observation of a condition, and therefore will have a statusCode of &quot;completed&quot;. The many Problem Observations nested under a Problem Concern Act (Condition) reflect the change in the clinical understanding of a condition over time. For instance, a Concern may initially contain a Problem Observation of &quot;chest pain&quot;:&#xD;
 - Problem Concern 1&#xD;
   --- Problem Observation: Chest Pain &#xD;
Later, a new Problem Observation of &quot;esophagitis&quot; will be added, reflecting a better understanding of the nature of the chest pain. The later problem observation will have a more recent author time stamp. &#xD;
 - Problem Concern 1&#xD;
   --- Problem Observation (author/time Jan 3, 2012): Chest Pain &#xD;
   --- Problem Observation (author/time Jan 6, 2012): Esophagitis&#xD;
Many systems display the nested Problem Observation with the most recent author time stamp, and provide a mechanism for viewing prior observations.</body>
      </ownedComment>
      <ownedRule xmi:id="_cNUOQOzfEeOnE-G4kptBiw" name="ProblemConcernAct2EffectiveTimeLow">
        <ownedComment xmi:id="_yLR6YOzfEeOnE-G4kptBiw">
          <body>Note: The effectiveTime/low asserts when the concern became active. This equates to the time the concern was authored in the patient's chart.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cNUOQezfEeOnE-G4kptBiw">
          <language>OCL</language>
          <body>not self.effectiveTime.low.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_cnoLsOzfEeOnE-G4kptBiw" name="ProblemConcernAct2EffectiveTimeHigh">
        <ownedComment xmi:id="_vLAnUOzfEeOnE-G4kptBiw">
          <body>Note: The effectiveTime/high asserts when the concern was completed (e.g. when the clinician deemed there is no longer any need to track the underlying condition).</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_cnoLsezfEeOnE-G4kptBiw">
          <language>OCL</language>
          <body>not self.effectiveTime.high.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vzn14IokEeSkH97cUQxLGA" name="ProblemConcernActTemplateId" constrainedElement="_y5C8IOzbEeOnE-G4kptBiw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vzoc8IokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.3' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vztVcIokEeSkH97cUQxLGA" name="ProblemConcernActStatusCodeP" constrainedElement="_y5C8IOzbEeOnE-G4kptBiw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vztVcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vzq5MIokEeSkH97cUQxLGA" name="ProblemConcernActStatusCode" constrainedElement="_y5C8IOzbEeOnE-G4kptBiw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vzq5MYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'active' or value.code = 'suspended' or value.code = 'aborted' or value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vzvxsIokEeSkH97cUQxLGA" name="ProblemConcernActEffectiveTime" constrainedElement="_y5C8IOzbEeOnE-G4kptBiw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vzvxsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vz0DIIokEeSkH97cUQxLGA" name="ProblemConcernActCodeP" constrainedElement="_y5C8IOzbEeOnE-G4kptBiw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vz0DIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vzxm4IokEeSkH97cUQxLGA" name="ProblemConcernActCode" constrainedElement="_y5C8IOzbEeOnE-G4kptBiw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vzxm4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = 'CONC' and value.codeSystem = '2.16.840.1.113883.5.6')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vz3GcIokEeSkH97cUQxLGA" name="ProblemConcernAct2AuthorParticipation" constrainedElement="_y5C8IOzbEeOnE-G4kptBiw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vz3GcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->exists(author : cda::Author | not author.oclIsUndefined() and author.oclIsKindOf(consol::AuthorParticipation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vz4UkIokEeSkH97cUQxLGA" name="ProblemConcernAct2ProviderPriorityPreference" constrainedElement="_y5C8IOzbEeOnE-G4kptBiw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vz4UkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::ProviderPriorityPreference) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v25zYIokEeSkH97cUQxLGA" name="ProblemConcernActProblemObservation2" constrainedElement="_y5C8IOzbEeOnE-G4kptBiw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v25zYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::ProblemObservation2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_y5C8IezbEeOnE-G4kptBiw" general="_2H6yUBSVEeGGzu7fmW9pXw"/>
      <ownedOperation xmi:id="_vz47oIokEeSkH97cUQxLGA" name="getProviderPriorityPreferences" bodyCondition="_vz47o4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_vz47o4okEeSkH97cUQxLGA" name="body" constrainedElement="_vz47oIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_vz47pIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProviderPriorityPreference)).oclAsType(consol::ProviderPriorityPreference)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_vz47oYokEeSkH97cUQxLGA" type="_ncafYJmaEeOLJeQez13EkQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vz47oookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v26acIokEeSkH97cUQxLGA" name="getConsolProblemObservation2s" bodyCondition="_v26ac4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v26ac4okEeSkH97cUQxLGA" name="body" constrainedElement="_v26acIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v26adIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProblemObservation2)).oclAsType(consol::ProblemObservation2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v26acYokEeSkH97cUQxLGA" type="_prDAkPDCEeOKPKE9au0oug" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v26acookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_prDAkPDCEeOKPKE9au0oug" name="ProblemObservation2">
      <ownedComment xmi:id="_xAdH4PDCEeOKPKE9au0oug">
        <body>This template reflects a discrete observation about a patient's problem. Because it is a discrete observation, it will have a statusCode of &quot;completed&quot;. The effectiveTime, also referred to as the &quot;biologically relevant time&quot; is the time at which the observation holds for the patient. For a provider seeing a patient in the clinic today, observing a history of heart attack that occurred five years ago, the effectiveTime is five years ago. &#xD;
The effectiveTime of the Problem Observation is the definitive indication of whether or not the underlying condition is resolved. If the problem is known to be resolved, then an effectiveTime/high would be present. If the date of resolution is not known, then effectiveTime/high will be present with a nullFlavor of &quot;UNK&quot;.</body>
      </ownedComment>
      <ownedRule xmi:id="_8_sPIPDEEeOKPKE9au0oug" name="ProblemObservation2HasOnsetDate">
        <ownedComment xmi:id="_8_sPIfDEEeOKPKE9au0oug">
          <body>Note: The effectiveTime/low (a.k.a. &quot;onset date&quot;) asserts when the condition became biologically active.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_8_sPIvDEEeOKPKE9au0oug">
          <language>OCL</language>
          <body>not self.effectiveTime.oclIsUndefined() implies not self.effectiveTime.low.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_9fzSkPDEEeOKPKE9au0oug" name="ProblemObservation2HasResolutionDate">
        <ownedComment xmi:id="_9fzSkfDEEeOKPKE9au0oug">
          <body>Note: The effectiveTime/high (a.k.a. &quot;resolution date&quot;) asserts when the condition became biologically resolved.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_9fzSkvDEEeOKPKE9au0oug">
          <language>OCL</language>
          <body>not self.effectiveTime.oclIsUndefined() implies not self.effectiveTime.high.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_eMSAwPDOEeOKPKE9au0oug" name="ProblemObservation2ValueNullFlavor">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_eMSAwfDOEeOKPKE9au0oug">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_3n3DQPDOEeOKPKE9au0oug" name="ProblemObservation2ValueNullFlavorUnknown">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_3n3DQvDOEeOKPKE9au0oug">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vz6w0IokEeSkH97cUQxLGA" name="ProblemObservationTemplateId" constrainedElement="_prDAkPDCEeOKPKE9au0oug">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vz6w0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.4' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vz90IIokEeSkH97cUQxLGA" name="ProblemObservationNegationInd" constrainedElement="_prDAkPDCEeOKPKE9au0oug">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vz90IYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.negationInd.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_vz_CQIokEeSkH97cUQxLGA" name="ProblemObservationEffectiveTime" constrainedElement="_prDAkPDCEeOKPKE9au0oug">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_vz_CQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v0Eh0IokEeSkH97cUQxLGA" name="ProblemObservationValueP" constrainedElement="_prDAkPDCEeOKPKE9au0oug">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v0Eh0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v0A3cIokEeSkH97cUQxLGA" name="ProblemObservationValue" constrainedElement="_prDAkPDCEeOKPKE9au0oug">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v0BegIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.96' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v0KBYIokEeSkH97cUQxLGA" name="ProblemObservation2PatientPriorityPreference" constrainedElement="_prDAkPDCEeOKPKE9au0oug">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v0KBYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::PatientPriorityPreference) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v0LPgYokEeSkH97cUQxLGA" name="ProblemObservation2PrognosisObservation" constrainedElement="_prDAkPDCEeOKPKE9au0oug">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v0LPgookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::PrognosisObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v0MdoIokEeSkH97cUQxLGA" name="ProblemObservation2ProviderPriorityPreference" constrainedElement="_prDAkPDCEeOKPKE9au0oug">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v0MdoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::ProviderPriorityPreference) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v0NrwIokEeSkH97cUQxLGA" name="ProblemObservation2AuthorParticipation" constrainedElement="_prDAkPDCEeOKPKE9au0oug">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v0NrwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->exists(author : cda::Author | not author.oclIsUndefined() and author.oclIsKindOf(consol::AuthorParticipation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wZqiMIokEeSkH97cUQxLGA" name="ProblemObservation2CDQualifier" constrainedElement="_prDAkPDCEeOKPKE9au0oug">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wZqiMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.code->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((qualifier->isEmpty() or qualifier->exists(element | element.isNullFlavorUndefined())) implies (not qualifier->isEmpty()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wZqiMookEeSkH97cUQxLGA" name="ProblemObservation2CDCode" constrainedElement="_prDAkPDCEeOKPKE9au0oug">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wZqiM4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.code->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies (not code.oclIsUndefined() )))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_prGD4PDCEeOKPKE9au0oug" general="_5Ha7ABUyEeGbmN_W114JUw"/>
      <ownedOperation xmi:id="_v0KocIokEeSkH97cUQxLGA" name="getPatientPriorityPreferences" bodyCondition="_v0Koc4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v0Koc4okEeSkH97cUQxLGA" name="body" constrainedElement="_v0KocIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v0LPgIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::PatientPriorityPreference)).oclAsType(consol::PatientPriorityPreference)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v0KocYokEeSkH97cUQxLGA" type="_UqXAAI6hEeOB0eBUISUB4Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v0KocookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v0L2kIokEeSkH97cUQxLGA" name="getPrognosisObservation" bodyCondition="_v0L2k4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v0L2k4okEeSkH97cUQxLGA" name="body" constrainedElement="_v0L2kIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v0L2lIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::PrognosisObservation))->asSequence()->any(true).oclAsType(consol::PrognosisObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v0L2kYokEeSkH97cUQxLGA" type="_GXlxYJmLEeOeSLwbllPCyw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v0L2kookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v0NEsIokEeSkH97cUQxLGA" name="getProviderPriorityPreferences" bodyCondition="_v0NEs4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v0NEs4okEeSkH97cUQxLGA" name="body" constrainedElement="_v0NEsIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v0NEtIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProviderPriorityPreference)).oclAsType(consol::ProviderPriorityPreference)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v0NEsYokEeSkH97cUQxLGA" type="_ncafYJmaEeOLJeQez13EkQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v0NEsookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v0O54IokEeSkH97cUQxLGA" name="getConsolProblemStatus" bodyCondition="_v0O544okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v0O544okEeSkH97cUQxLGA" name="body" constrainedElement="_v0O54IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v0O55IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProblemStatus))->asSequence()->any(true).oclAsType(consol::ProblemStatus)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v0O54YokEeSkH97cUQxLGA" type="_SjN_8BUzEeGbmN_W114JUw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v0O54ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v0O55YokEeSkH97cUQxLGA" name="getConsolHealthStatusObservation" bodyCondition="_v0Pg8ookEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v0Pg8ookEeSkH97cUQxLGA" name="body" constrainedElement="_v0O55YokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v0Pg84okEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::HealthStatusObservation))->asSequence()->any(true).oclAsType(consol::HealthStatusObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v0Pg8IokEeSkH97cUQxLGA" type="_2ExXsBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v0Pg8YokEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_CFMuYPDbEeOKPKE9au0oug" name="ProcedureActivityAct2">
      <ownedComment xmi:id="_NivvwPDbEeOKPKE9au0oug">
        <body>This template represents any act that cannot be classified as an observation or procedure according to the HL7 RIM. Examples of these acts are a dressing change, teaching or feeding a patient, or providing comfort measures. &#xD;
The common notion of &quot;procedure&quot; is broader than that specified by the HL7 Version 3 Reference Information Model (RIM). Procedure templates can be represented with various RIM classes: act (e.g., dressing change), observation (e.g., EEG), procedure (e.g., splenectomy).</body>
      </ownedComment>
      <ownedRule xmi:id="_WdXkkPDfEeOKPKE9au0oug" name="ProcedureActivityAct2InstructionsInversion">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_WdXkkfDfEeOKPKE9au0oug">
          <language>OCL</language>
          <body>self.entryRelationship->select(er : cda::EntryRelationship | er.act.oclIsTypeOf(consol::Instruction2))->forAll(ent : cda::EntryRelationship | ent.inversionInd=true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v0QIAIokEeSkH97cUQxLGA" name="ProcedureActivityActTemplateId" constrainedElement="_CFMuYPDbEeOKPKE9au0oug">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v0QIAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.12' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v0R9MIokEeSkH97cUQxLGA" name="ProcedureActivityActInstruction2" constrainedElement="_CFMuYPDbEeOKPKE9au0oug">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v0R9MYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(consol::Instruction2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v0TyYIokEeSkH97cUQxLGA" name="ProcedureActivityActIndication2" constrainedElement="_CFMuYPDbEeOKPKE9au0oug">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v0TyYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::Indication2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::RSON)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v0VAgIokEeSkH97cUQxLGA" name="ProcedureActivityActMedicationActivity2" constrainedElement="_CFMuYPDbEeOKPKE9au0oug">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v0VAgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.substanceAdministration.oclIsUndefined() and entryRelationship.substanceAdministration.oclIsKindOf(consol::MedicationActivity2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_CFMuYfDbEeOKPKE9au0oug" general="_awdH4Bg4EeGs5a462vYX5Q"/>
      <ownedOperation xmi:id="_v0TLUIokEeSkH97cUQxLGA" name="getConsolInstruction2" bodyCondition="_v0TLU4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v0TLU4okEeSkH97cUQxLGA" name="body" constrainedElement="_v0TLUIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v0TLVIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::Instruction2))->asSequence()->any(true).oclAsType(consol::Instruction2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v0TLUYokEeSkH97cUQxLGA" type="_D62NwOH7EeO04sHNODkHmQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v0TLUookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v0UZcIokEeSkH97cUQxLGA" name="getConsolIndication2s" bodyCondition="_v0UZc4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v0UZc4okEeSkH97cUQxLGA" name="body" constrainedElement="_v0UZcIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v0UZdIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::Indication2)).oclAsType(consol::Indication2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v0UZcYokEeSkH97cUQxLGA" type="_PrEOIOHoEeO04sHNODkHmQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v0UZcookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v0VnkIokEeSkH97cUQxLGA" name="getConsolMedicationActivity2s" bodyCondition="_v0Vnk4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v0Vnk4okEeSkH97cUQxLGA" name="body" constrainedElement="_v0VnkIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v0VnlIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(consol::MedicationActivity2)).oclAsType(consol::MedicationActivity2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v0VnkYokEeSkH97cUQxLGA" type="_WnSCMOLAEeOc7-TVP7Wi6w" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v0VnkookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_QoLWAPDjEeOKPKE9au0oug" name="ProcedureActivityObservation2">
      <ownedComment xmi:id="_bm2DAPDjEeOKPKE9au0oug">
        <body>The common notion of procedure is broader than that specified by the HL7 Version 3 Reference Information Model (RIM). Therefore procedure templates can be represented with various RIM classes: act (e.g., dressing change), observation (e.g., EEG), procedure (e.g. splenectomy). &#xD;
This template represents procedures that result in new information about the patient that cannot be classified as a procedure according to the HL7 RIM. Examples of these procedures are diagnostic imaging procedures, EEGs, and EKGs.</body>
      </ownedComment>
      <ownedRule xmi:id="_GUa08PDoEeOKPKE9au0oug" name="ProcedureActivityObservation2InstructionsInversion">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_GUa08fDoEeOKPKE9au0oug">
          <language>OCL</language>
          <body>self.entryRelationship->select(er : cda::EntryRelationship | er.act.oclIsTypeOf(consol::Instruction2))->forAll(ent : cda::EntryRelationship | ent.inversionInd=true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v0WOoIokEeSkH97cUQxLGA" name="ProcedureActivityObservationTemplateId" constrainedElement="_QoLWAPDjEeOKPKE9au0oug">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v0WOoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.13' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v0bHIIokEeSkH97cUQxLGA" name="ProcedureActivityObservationTargetSiteCodeP" constrainedElement="_QoLWAPDjEeOKPKE9au0oug">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v0bHIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (not self.targetSiteCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v0ZR8IokEeSkH97cUQxLGA" name="ProcedureActivityObservationTargetSiteCode" constrainedElement="_QoLWAPDjEeOKPKE9au0oug">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v0ZR8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.targetSiteCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.96' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v0djYIokEeSkH97cUQxLGA" name="ProcedureActivityObservationIndication2" constrainedElement="_QoLWAPDjEeOKPKE9au0oug">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v0djYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::Indication2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::RSON)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v0exgIokEeSkH97cUQxLGA" name="ProcedureActivityObservationMedicationActivity2" constrainedElement="_QoLWAPDjEeOKPKE9au0oug">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v0exgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.substanceAdministration.oclIsUndefined() and entryRelationship.substanceAdministration.oclIsKindOf(consol::MedicationActivity2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v0f_oIokEeSkH97cUQxLGA" name="ProcedureActivityObservationInstruction2" constrainedElement="_QoLWAPDjEeOKPKE9au0oug">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v0f_oYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(consol::Instruction2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_QoLWAfDjEeOKPKE9au0oug" general="_Aj7JkBg4EeGs5a462vYX5Q"/>
      <ownedOperation xmi:id="_v0eKcIokEeSkH97cUQxLGA" name="getConsolIndication2s" bodyCondition="_v0eKc4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v0eKc4okEeSkH97cUQxLGA" name="body" constrainedElement="_v0eKcIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v0eKdIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::Indication2)).oclAsType(consol::Indication2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v0eKcYokEeSkH97cUQxLGA" type="_PrEOIOHoEeO04sHNODkHmQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v0eKcookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v0fYkIokEeSkH97cUQxLGA" name="getConsolMedicationActivity2s" bodyCondition="_v0fYk4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v0fYk4okEeSkH97cUQxLGA" name="body" constrainedElement="_v0fYkIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v0fYlIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(consol::MedicationActivity2)).oclAsType(consol::MedicationActivity2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v0fYkYokEeSkH97cUQxLGA" type="_WnSCMOLAEeOc7-TVP7Wi6w" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v0fYkookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v0gmsIokEeSkH97cUQxLGA" name="getConsolInstruction2" bodyCondition="_v0gms4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v0gms4okEeSkH97cUQxLGA" name="body" constrainedElement="_v0gmsIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v0gmtIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::Instruction2))->asSequence()->any(true).oclAsType(consol::Instruction2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v0gmsYokEeSkH97cUQxLGA" type="_D62NwOH7EeO04sHNODkHmQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v0gmsookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_fCVOQPDqEeOKPKE9au0oug" name="ProcedureActivityProcedure2">
      <ownedComment xmi:id="_mlXh4PDqEeOKPKE9au0oug">
        <body>The common notion of &quot;procedure&quot; is broader than that specified by the HL7 Version 3 Reference Information Model (RIM). Therefore procedure templates can be represented with various RIM classes: act (e.g., dressing change), observation (e.g., EEG), procedure (e.g. splenectomy). &#xD;
This template represents procedures whose immediate and primary outcome (post-condition) is the alteration of the physical condition of the patient. Examples of these procedures are an appendectomy, hip replacement and a creation of a gastrostomy.Ã‚Â Ã‚Â &#xD;
This template can be used with a contained Product Instance template to represent a device in or on a patient - in this case targetSiteCode is used to record the location of the device in or on the patient's body. Equipment supplied to the patient (e.g. pumps, inhalers, wheelchairs) is represented by the Non-Medicinal Supply Activity V2 template.</body>
      </ownedComment>
      <ownedRule xmi:id="_BIWmcPDtEeOKPKE9au0oug" name="ProcedureActivityProcedure2InstructionsInversion">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_BIWmcfDtEeOKPKE9au0oug">
          <language>OCL</language>
          <body>self.entryRelationship->select(er : cda::EntryRelationship | er.act.oclIsTypeOf(consol::Instruction2))->forAll(ent : cda::EntryRelationship | ent.inversionInd=true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v0hNwIokEeSkH97cUQxLGA" name="ProcedureActivityProcedureTemplateId" constrainedElement="_fCVOQPDqEeOKPKE9au0oug">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v0h00IokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.14' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v0mtUIokEeSkH97cUQxLGA" name="ProcedureActivityProcedureTargetSiteCodeP" constrainedElement="_fCVOQPDqEeOKPKE9au0oug">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v0mtUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (not self.targetSiteCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v0kREIokEeSkH97cUQxLGA" name="ProcedureActivityProcedureTargetSiteCode" constrainedElement="_fCVOQPDqEeOKPKE9au0oug">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v0kREYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.targetSiteCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.96' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v0pJkIokEeSkH97cUQxLGA" name="ProcedureActivityProcedureIndication2" constrainedElement="_fCVOQPDqEeOKPKE9au0oug">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v0pJkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::Indication2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::RSON)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v0qXsIokEeSkH97cUQxLGA" name="ProcedureActivityProcedureMedicationActivity2" constrainedElement="_fCVOQPDqEeOKPKE9au0oug">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v0qXsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.substanceAdministration.oclIsUndefined() and entryRelationship.substanceAdministration.oclIsKindOf(consol::MedicationActivity2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v0rl0IokEeSkH97cUQxLGA" name="ProcedureActivityProcedureInstruction2" constrainedElement="_fCVOQPDqEeOKPKE9au0oug">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v0rl0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(consol::Instruction2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v0sz8IokEeSkH97cUQxLGA" name="ProcedureActivityProcedureSpecimen" constrainedElement="_fCVOQPDqEeOKPKE9au0oug">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v0sz8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.specimen->exists(specimen : cda::Specimen | not specimen.oclIsUndefined() and specimen.oclIsKindOf(cda::Specimen))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_fCV1UPDqEeOKPKE9au0oug" general="_2OG58RSVEeGGzu7fmW9pXw"/>
      <ownedOperation xmi:id="_v0pwoIokEeSkH97cUQxLGA" name="getConsolIndication2s" bodyCondition="_v0pwo4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v0pwo4okEeSkH97cUQxLGA" name="body" constrainedElement="_v0pwoIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v0pwpIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::Indication2)).oclAsType(consol::Indication2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v0pwoYokEeSkH97cUQxLGA" type="_PrEOIOHoEeO04sHNODkHmQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v0pwoookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v0q-wIokEeSkH97cUQxLGA" name="getConsolMedicationActivity2s" bodyCondition="_v0q-w4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v0q-w4okEeSkH97cUQxLGA" name="body" constrainedElement="_v0q-wIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v0q-xIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(consol::MedicationActivity2)).oclAsType(consol::MedicationActivity2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v0q-wYokEeSkH97cUQxLGA" type="_WnSCMOLAEeOc7-TVP7Wi6w" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v0q-wookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v0sM4IokEeSkH97cUQxLGA" name="getConsolInstruction2" bodyCondition="_v0sM44okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v0sM44okEeSkH97cUQxLGA" name="body" constrainedElement="_v0sM4IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v0sM5IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::Instruction2))->asSequence()->any(true).oclAsType(consol::Instruction2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v0sM4YokEeSkH97cUQxLGA" type="_D62NwOH7EeO04sHNODkHmQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v0sM4ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_U3yosPDxEeOKPKE9au0oug" name="ReactionObservation2">
      <ownedComment xmi:id="_clpsQPDxEeOKPKE9au0oug">
        <body>This clinical statement represents an undesired symptom, finding, etc., due to an administered or exposed substance. A reaction can be defined with respect to its severity, and can have been treated by one or more interventions.</body>
      </ownedComment>
      <ownedRule xmi:id="_v-bpYPDyEeOKPKE9au0oug" name="ReactionObservation2CodeValueSet">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v-bpYvDyEeOKPKE9au0oug">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_W4OqcPF1EeOmsLWmq5fnqQ" name="ReactionObservation2ProcedureActivityProcedureInversionInd">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_W4OqcfF1EeOmsLWmq5fnqQ">
          <language>OCL</language>
          <body>self.entryRelationship->select(er : cda::EntryRelationship | er.procedure.oclIsTypeOf(consol::ProcedureActivityProcedure2))->forAll(ent : cda::EntryRelationship | ent.inversionInd=true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_KcqFIPF2EeOmsLWmq5fnqQ" name="ReactionObservation2MedicationActivityInversionInd">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_KcqFIfF2EeOmsLWmq5fnqQ">
          <language>OCL</language>
          <body>self.entryRelationship->select(er : cda::EntryRelationship | er.substanceAdministration.oclIsTypeOf(consol::MedicationActivity2))->forAll(ent : cda::EntryRelationship | ent.inversionInd=true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_4djbEPijEeOXlK95I8tUew" name="ReactionObservation2SeverityObservationInversionInd">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_4djbEfijEeOXlK95I8tUew">
          <language>OCL</language>
          <body>self.entryRelationship->select(er : cda::EntryRelationship | er.observation.oclIsTypeOf(consol::SeverityObservation2))->forAll(ent : cda::EntryRelationship | ent.inversionInd=true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v0tbAIokEeSkH97cUQxLGA" name="ReactionObservationTemplateId" constrainedElement="_U3yosPDxEeOKPKE9au0oug">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v0uCEIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.9' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v0zhoIokEeSkH97cUQxLGA" name="ReactionObservationCodeP" constrainedElement="_U3yosPDxEeOKPKE9au0oug">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v0zhoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v0xscIokEeSkH97cUQxLGA" name="ReactionObservationCode" constrainedElement="_U3yosPDxEeOKPKE9au0oug">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v0xscYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = 'ASSERTION' and value.codeSystem = '2.16.840.1.113883.5.4')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v0194IokEeSkH97cUQxLGA" name="ReactionObservationProcedureActivityProcedure2" constrainedElement="_U3yosPDxEeOKPKE9au0oug">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v0194YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.procedure.oclIsUndefined() and entryRelationship.procedure.oclIsKindOf(consol::ProcedureActivityProcedure2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::RSON)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v03MAIokEeSkH97cUQxLGA" name="ReactionObservationMedicationActivity2" constrainedElement="_U3yosPDxEeOKPKE9au0oug">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v03MAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.substanceAdministration.oclIsUndefined() and entryRelationship.substanceAdministration.oclIsKindOf(consol::MedicationActivity2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::RSON)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v27BgIokEeSkH97cUQxLGA" name="ReactionObservationSeverityObservation2" constrainedElement="_U3yosPDxEeOKPKE9au0oug">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v27BgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::SeverityObservation2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_U3yosfDxEeOKPKE9au0oug" general="_2E_aIRSVEeGGzu7fmW9pXw"/>
      <ownedOperation xmi:id="_v02k8IokEeSkH97cUQxLGA" name="getConsolProcedureActivityProcedure2s" bodyCondition="_v02k84okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v02k84okEeSkH97cUQxLGA" name="body" constrainedElement="_v02k8IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v02k9IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getProcedures()->select(procedure : cda::Procedure | not procedure.oclIsUndefined() and procedure.oclIsKindOf(consol::ProcedureActivityProcedure2)).oclAsType(consol::ProcedureActivityProcedure2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v02k8YokEeSkH97cUQxLGA" type="_fCVOQPDqEeOKPKE9au0oug" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v02k8ookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v03zEIokEeSkH97cUQxLGA" name="getConsolMedicationActivity2s" bodyCondition="_v04aIYokEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v04aIYokEeSkH97cUQxLGA" name="body" constrainedElement="_v03zEIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v04aIookEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(consol::MedicationActivity2)).oclAsType(consol::MedicationActivity2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v03zEYokEeSkH97cUQxLGA" type="_WnSCMOLAEeOc7-TVP7Wi6w" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v04aIIokEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v27okIokEeSkH97cUQxLGA" name="getConsolSeverityObservation2" bodyCondition="_v28PoIokEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v28PoIokEeSkH97cUQxLGA" name="body" constrainedElement="_v27okIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v28PoYokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::SeverityObservation2))->asSequence()->any(true).oclAsType(consol::SeverityObservation2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v27okYokEeSkH97cUQxLGA" type="_B0oKYPJdEeO2NaSiicarcg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v27okookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_H85E0PF7EeOmsLWmq5fnqQ" name="ResultObservation2">
      <ownedComment xmi:id="_TU3CoPF7EeOmsLWmq5fnqQ">
        <body>This template represents the results of a lab, radiology, or other study performed on a patient.&#xD;
The result observation includes a statusCode to allow recording the status of an observation. &quot;Pending&quot; results (e.g., a test has been run but results have not been reported yet) should be represented as &quot;active&quot; ActStatus.</body>
      </ownedComment>
      <ownedRule xmi:id="_PX_vAPF8EeOmsLWmq5fnqQ" name="ResultObservation2AuthorMultiplicity">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_PX_vAfF8EeOmsLWmq5fnqQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_7FLrMPF9EeOmsLWmq5fnqQ" name="ResultObservation2CodeValue">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_7FLrMfF9EeOmsLWmq5fnqQ">
          <language>OCL</language>
          <body>self.code.isNullFlavorDefined() or self.code.codeSystem = '2.16.840.1.113883.6.1' or self.code.codeSystem = '2.16.840.1.113883.6.96'</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v04aI4okEeSkH97cUQxLGA" name="ResultObservationTemplateId" constrainedElement="_H85E0PF7EeOmsLWmq5fnqQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v05BMIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v07dcIokEeSkH97cUQxLGA" name="ResultObservationEffectiveTime" constrainedElement="_H85E0PF7EeOmsLWmq5fnqQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v07dcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v08rkIokEeSkH97cUQxLGA" name="ResultObservation2AuthorParticipation" constrainedElement="_H85E0PF7EeOmsLWmq5fnqQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v08rkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->exists(author : cda::Author | not author.oclIsUndefined() and author.oclIsKindOf(consol::AuthorParticipation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_H85E0fF7EeOmsLWmq5fnqQ" general="_2J1d4BSVEeGGzu7fmW9pXw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_gU40UPGEEeOmsLWmq5fnqQ" name="ResultOrganizer2">
      <ownedComment xmi:id="_r11vAPGEEeOmsLWmq5fnqQ">
        <body>This template provides a mechanism for grouping result observations. It contains information applicable to all of the contained result observations. The Result Organizer code categorizes the contained results into one of several commonly accepted values (e.g., &quot;Hematology&quot;, &quot;Chemistry&quot;, &quot;Nuclear Medicine&quot;). &#xD;
If any Result Observation within the organizer has a statusCode of 'active', the Result Organizer must also have as statusCode of 'active'.</body>
      </ownedComment>
      <ownedRule xmi:id="_6J9xUPJHEeOA6ZIOnFjrYQ" name="ResultOrganizer2CodeValue">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_6J9xUfJHEeOA6ZIOnFjrYQ">
          <language>OCL</language>
          <body>self.code.isNullFlavorDefined() or self.code.codeSystem = '2.16.840.1.113883.6.1' or self.code.codeSystem = '2.16.840.1.113883.6.96' or self.code.codeSystem = '2.16.840.1.113883.6.12'</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_IXgb0PJNEeOA6ZIOnFjrYQ" name="ResultOrganizer2ClassCodeValue">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_IXgb0fJNEeOA6ZIOnFjrYQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v095sIokEeSkH97cUQxLGA" name="ResultOrganizerTemplateId" constrainedElement="_gU40UPGEEeOmsLWmq5fnqQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v095sYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.1' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v0_u4IokEeSkH97cUQxLGA" name="ResultOrganizer2EffectiveTime" constrainedElement="_gU40UPGEEeOmsLWmq5fnqQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v0_u4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v1CLIIokEeSkH97cUQxLGA" name="ResultOrganizerResultObservation2" constrainedElement="_gU40UPGEEeOmsLWmq5fnqQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v1CLIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.component->exists(component : cda::Component4 | not component.observation.oclIsUndefined() and component.observation.oclIsKindOf(consol::ResultObservation2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v1EAUIokEeSkH97cUQxLGA" name="ResultOrganizer2AuthorParticipation" constrainedElement="_gU40UPGEEeOmsLWmq5fnqQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v1EAUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->exists(author : cda::Author | not author.oclIsUndefined() and author.oclIsKindOf(consol::AuthorParticipation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_gU40UfGEEeOmsLWmq5fnqQ" general="_2JxzgBSVEeGGzu7fmW9pXw"/>
      <ownedOperation xmi:id="_v1DZQIokEeSkH97cUQxLGA" name="getConsolResultObservation2s" bodyCondition="_v1DZQ4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v1DZQ4okEeSkH97cUQxLGA" name="body" constrainedElement="_v1DZQIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v1DZRIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ResultObservation2)).oclAsType(consol::ResultObservation2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v1DZQYokEeSkH97cUQxLGA" type="_H85E0PF7EeOmsLWmq5fnqQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v1DZQookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_B0oKYPJdEeO2NaSiicarcg" name="SeverityObservation2">
      <ownedComment xmi:id="_HSh9gPJdEeO2NaSiicarcg">
        <body>This clinical statement represents the gravity of the problem, such as allergy or reaction, in terms of its actual or potential impact on the patient. The Severity Observation can be associated with an Allergy - Intolerance Observation, Substance or Device Allergy - Intolerance Observation, Reaction Observation or all. When the Severity Observation is associated directly with an allergy it characterizes the allergy. When the Severity Observation is associated with a Reaction Observation it characterizes a Reaction. A person may manifest many symptoms in a reaction to a single substance, and each reaction to the substance can be represented. However, each reaction observation can have only one severity observation associated with it. For example, someone may have a rash reaction observation as well as an itching reaction observation, but each can have only one level of severity.</body>
      </ownedComment>
      <ownedRule xmi:id="_v1F1gIokEeSkH97cUQxLGA" name="SeverityObservationTemplateId" constrainedElement="_B0oKYPJdEeO2NaSiicarcg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v1GckIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.8' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v1MjMIokEeSkH97cUQxLGA" name="SeverityObservationCodeP" constrainedElement="_B0oKYPJdEeO2NaSiicarcg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v1MjMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v1Jf4IokEeSkH97cUQxLGA" name="SeverityObservationCode" constrainedElement="_B0oKYPJdEeO2NaSiicarcg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v1Jf4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = 'SEV' and value.codeSystem = '2.16.840.1.113883.5.4')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_B0p_kPJdEeO2NaSiicarcg" general="_2FGu4hSVEeGGzu7fmW9pXw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_b_iGIPJfEeO2NaSiicarcg" name="SocialHistoryObservation2">
      <ownedComment xmi:id="_vZHxAPJfEeO2NaSiicarcg">
        <body>This template represents a patient's occupations, lifestyle, and environmental health risk factors. Demographic data (e.g. marital status, race, ethnicity, religious affiliation) is captured in the header.</body>
      </ownedComment>
      <ownedRule xmi:id="_v1O_cIokEeSkH97cUQxLGA" name="SocialHistoryObservationTemplateId" constrainedElement="_b_iGIPJfEeO2NaSiicarcg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v1O_cYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.38' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v1RbsIokEeSkH97cUQxLGA" name="SocialHistoryObservationValue" constrainedElement="_b_iGIPJfEeO2NaSiicarcg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v1RbsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v1TQ4IokEeSkH97cUQxLGA" name="SocialHistoryObservationCode" constrainedElement="_b_iGIPJfEeO2NaSiicarcg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v1TQ4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.96' and (value.code = '229819007' or value.code = '256235009' or value.code = '160573003' or value.code = '364393001' or value.code = '364703007' or value.code = '425400000' or value.code = '363908000' or value.code = '228272008' or value.code = '105421008' or value.code = '302160007' or value.code = '423514004' or value.code = '102487004' or value.code = '424483007' or value.code = '442133001' or value.code = '446996006'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v1VtIIokEeSkH97cUQxLGA" name="SocialHistoryObservationCodeP" constrainedElement="_b_iGIPJfEeO2NaSiicarcg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v1VtIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v1XiUIokEeSkH97cUQxLGA" name="SocialHistoryObservation2EffectiveTime" constrainedElement="_b_iGIPJfEeO2NaSiicarcg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v1XiUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v1YwcIokEeSkH97cUQxLGA" name="SocialHistoryObservation2AuthorParticipation" constrainedElement="_b_iGIPJfEeO2NaSiicarcg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v1YwcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->exists(author : cda::Author | not author.oclIsUndefined() and author.oclIsKindOf(consol::AuthorParticipation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_b_iGIfJfEeO2NaSiicarcg" general="_2JOZ4BSVEeGGzu7fmW9pXw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_K3M6IPKJEeOn7bMsPcStOw" name="SubstanceOrDeviceAllergyObservation2">
      <ownedComment xmi:id="_RG4IcPKJEeOn7bMsPcStOw">
        <body>This template reflects a discrete observation about a patient's allergy or intolerance to a substance or device. Because it is a discrete observation, it will have a statusCode of &quot;completed&quot;. The effectiveTime, also referred to as the &quot;biologically relevant time&quot; is the time at which the observation holds for the patient. For a provider seeing a patient in the clinic today, observing a history of penicillin allergy that developed five years ago, the effectiveTime is five years ago. &#xD;
The effectiveTime of the Substance or Device Allergy - Intolerance Observation is the definitive indication of whether or not the underlying allergy/intolerance is resolved. If known to be resolved, then an effectiveTime/high would be present. If the date of resolution is not known, then effectiveTime/high will be present with a nullFlavor of &quot;UNK&quot;.</body>
      </ownedComment>
      <ownedRule xmi:id="_KLMTAPMpEeOrR8IF-aqVyQ" name="SubstanceOrDeviceAllergyObservation2ReactionInversionIndicator">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_KLMTAfMpEeOrR8IF-aqVyQ">
          <language>OCL</language>
          <body>self.entryRelationship->select(er : cda::EntryRelationship | er.observation.oclIsTypeOf(consol::ReactionObservation2))->forAll(ent : cda::EntryRelationship | ent.inversionInd=true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_MNuWAPMqEeOrR8IF-aqVyQ" name="SubstanceOrDeviceAllergyObservation2SeverityInversionIndicator" constrainedElement="_mgny4NF8EeOHUokOVP95oQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_MNuWAfMqEeOrR8IF-aqVyQ">
          <language>OCL</language>
          <body>self.entryRelationship->select(er : cda::EntryRelationship | er.observation.oclIsTypeOf(consol::SeverityObservation2))->forAll(ent : cda::EntryRelationship | ent.inversionInd=true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v1Z-kIokEeSkH97cUQxLGA" name="SubstanceOrDeviceAllergyObservationTemplateId" constrainedElement="_K3M6IPKJEeOn7bMsPcStOw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v1Z-kYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.24.3.90' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v1ca0IokEeSkH97cUQxLGA" name="SubstanceOrDeviceAllergyObservationEffectiveTime" constrainedElement="_K3M6IPKJEeOn7bMsPcStOw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v1ca0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v1h6YIokEeSkH97cUQxLGA" name="SubstanceOrDeviceAllergyObservationValueP" constrainedElement="_K3M6IPKJEeOn7bMsPcStOw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v1h6YYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v1feIIokEeSkH97cUQxLGA" name="SubstanceOrDeviceAllergyObservationValue" constrainedElement="_K3M6IPKJEeOn7bMsPcStOw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v1feIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.96' and (value.code = '420134006' or value.code = '418038007' or value.code = '419511003' or value.code = '418471000' or value.code = '419199007' or value.code = '416098002' or value.code = '414285001' or value.code = '59037007' or value.code = '235719002' or value.code = '232347008' or value.code = '426232007')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v1lkwIokEeSkH97cUQxLGA" name="SubstanceOrDeviceAllergyObservationCodeP" constrainedElement="_K3M6IPKJEeOn7bMsPcStOw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v1lkwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v1jvkIokEeSkH97cUQxLGA" name="SubstanceOrDeviceAllergyObservationCode" constrainedElement="_K3M6IPKJEeOn7bMsPcStOw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v1jvkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = 'ASSERTION' and value.codeSystem = '2.16.840.1.113883.5.4')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v11cYIokEeSkH97cUQxLGA" name="SubstanceOrDeviceAllergyObservationParticipant" constrainedElement="_K3M6IPKJEeOn7bMsPcStOw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v11cYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->exists(participant : cda::Participant2 | not participant.oclIsUndefined() and participant.oclIsKindOf(cda::Participant2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v134oYokEeSkH97cUQxLGA" name="SubstanceOrDeviceAllergyObservationReactionObservation2" constrainedElement="_K3M6IPKJEeOn7bMsPcStOw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v134oookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::ReactionObservation2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::MFST)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v15GxYokEeSkH97cUQxLGA" name="SubstanceOrDeviceAllergyObservationSeverityObservation2" constrainedElement="_K3M6IPKJEeOn7bMsPcStOw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v15GxookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::SeverityObservation2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v16U5YokEeSkH97cUQxLGA" name="SubstanceOrDeviceAllergyObservation2AuthorParticipation" constrainedElement="_K3M6IPKJEeOn7bMsPcStOw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v16U5ookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->exists(author : cda::Author | not author.oclIsUndefined() and author.oclIsKindOf(consol::AuthorParticipation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wZuMkIokEeSkH97cUQxLGA" name="SubstanceOrDeviceAllergyObservation2IVLTSLow" constrainedElement="_K3M6IPKJEeOn7bMsPcStOw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wZuMkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.effectiveTime->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((low.oclIsUndefined() or low.isNullFlavorUndefined()) implies (not low.oclIsUndefined()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wZvasIokEeSkH97cUQxLGA" name="SubstanceOrDeviceAllergyObservation2IVLTSHigh" constrainedElement="_K3M6IPKJEeOn7bMsPcStOw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wZvasYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.effectiveTime->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((high.oclIsUndefined() or high.isNullFlavorUndefined()) implies (not high.oclIsUndefined()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wZ06QIokEeSkH97cUQxLGA" name="SubstanceOrDeviceAllergyObservation2ParticipantParticipantRolePlayingEntityAllergySpecificMedication" constrainedElement="_K3M6IPKJEeOn7bMsPcStOw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wZ06QYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).participantRole->excluding(null).playingEntity->excluding(null)->reject(true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wZ06QookEeSkH97cUQxLGA" name="SubstanceOrDeviceAllergyObservation2ParticipantParticipantRolePlayingEntityOriginalTextReference" constrainedElement="_K3M6IPKJEeOn7bMsPcStOw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wZ06Q4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).participantRole->excluding(null).playingEntity->excluding(null)->reject(true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wZ1hUIokEeSkH97cUQxLGA" name="SubstanceOrDeviceAllergyObservation2ParticipantParticipantRolePlayingEntityReferenceValue" constrainedElement="_K3M6IPKJEeOn7bMsPcStOw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wZ1hUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).participantRole->excluding(null).playingEntity->excluding(null)->reject(true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wZ2IYIokEeSkH97cUQxLGA" name="SubstanceOrDeviceAllergyObservation2ParticipantParticipantRolePlayingEntityOriginalTextReferenceValue" constrainedElement="_K3M6IPKJEeOn7bMsPcStOw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wZ2IYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).participantRole->excluding(null).playingEntity->excluding(null)->reject(true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wZ2vcIokEeSkH97cUQxLGA" name="SubstanceOrDeviceAllergyObservation2ParticipantParticipantRolePlayingEntityAllergyClassMedication" constrainedElement="_K3M6IPKJEeOn7bMsPcStOw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wZ2vcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).participantRole->excluding(null).playingEntity->excluding(null)->reject(true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wZ2vcookEeSkH97cUQxLGA" name="SubstanceOrDeviceAllergyObservation2ParticipantParticipantRolePlayingEntityAllergyFoodOtherSubstance" constrainedElement="_K3M6IPKJEeOn7bMsPcStOw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wZ2vc4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).participantRole->excluding(null).playingEntity->excluding(null)->reject(true)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wZ3WgIokEeSkH97cUQxLGA" name="SubstanceOrDeviceAllergyObservation2ParticipantParticipantRoleSubstanceOrDeviceAllergyObservationParticipantParticipantRolePlayingEntityCode" constrainedElement="_K3M6IPKJEeOn7bMsPcStOw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wZ3WgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).participantRole->excluding(null).playingEntity->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wZ39kIokEeSkH97cUQxLGA" name="SubstanceOrDeviceAllergyObservation2ParticipantSubstanceOrDeviceAllergyObservationParticipantParticipantRolePlayingEntity" constrainedElement="_K3M6IPKJEeOn7bMsPcStOw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wZ39kYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).participantRole->excluding(null)->reject(playingEntity->one(playingEntity : cda::PlayingEntity | not playingEntity.oclIsUndefined() and playingEntity.oclIsKindOf(cda::PlayingEntity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wZ39kookEeSkH97cUQxLGA" name="SubstanceOrDeviceAllergyObservation2SubstanceOrDeviceAllergyObservationParticipantParticipantRole" constrainedElement="_K3M6IPKJEeOn7bMsPcStOw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wZ39k4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->reject(participantRole->one(participantRole : cda::ParticipantRole | not participantRole.oclIsUndefined() and participantRole.oclIsKindOf(cda::ParticipantRole)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_K3PWYPKJEeOn7bMsPcStOw" general="_mgny4NF8EeOHUokOVP95oQ"/>
      <ownedOperation xmi:id="_v15GwIokEeSkH97cUQxLGA" name="getConsolReactionObservation2s" bodyCondition="_v15Gw4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v15Gw4okEeSkH97cUQxLGA" name="body" constrainedElement="_v15GwIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v15GxIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ReactionObservation2)).oclAsType(consol::ReactionObservation2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v15GwYokEeSkH97cUQxLGA" type="_U3yosPDxEeOKPKE9au0oug" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v15GwookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v16U4IokEeSkH97cUQxLGA" name="getConsolSeverityObservation2" bodyCondition="_v16U44okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v16U44okEeSkH97cUQxLGA" name="body" constrainedElement="_v16U4IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v16U5IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::SeverityObservation2))->asSequence()->any(true).oclAsType(consol::SeverityObservation2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v16U4YokEeSkH97cUQxLGA" type="_B0oKYPJdEeO2NaSiicarcg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v16U4ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_qHUXwPMxEeOUvapeh9bVvQ" name="TobaccoUse2">
      <ownedComment xmi:id="_y_7XMPMxEeOUvapeh9bVvQ">
        <body>This template represents a patient's tobacco use. &#xD;
All the types of tobacco use are represented using the codes from the tobacco use and exposure-finding hierarchy in SNOMED CT, including codes required for recording smoking status in Meaningful Use Stage 2. &#xD;
The effectiveTime element is used to describe dates associated with the patient's tobacco use. Whereas the Current Smoking Status template (templateId 2.16.840.1.113883.10.20.22.4.78.2) represents a &quot;snapshot in time&quot; observation, simply reflecting what the patient's current smoking status is at the time of the observation, this Tobacco Use template uses effectiveTime to represent the biologically relevant time of the observation. Thus, an observation of &quot;former smoker&quot; will have an effectiveTime defining the time during which the patient has been a former smoker; an observation of &quot;current smoker&quot; will have an effectiveTime defining the time during which the patient has been a current smoker.</body>
      </ownedComment>
      <ownedRule xmi:id="_v17jAIokEeSkH97cUQxLGA" name="TobaccoUseTemplateId" constrainedElement="_qHUXwPMxEeOUvapeh9bVvQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v18KEIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.85' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v19YMIokEeSkH97cUQxLGA" name="TobaccoUseEffectiveTime" constrainedElement="_qHUXwPMxEeOUvapeh9bVvQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v19YMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v2CQsIokEeSkH97cUQxLGA" name="TobaccoUseCodeP" constrainedElement="_qHUXwPMxEeOUvapeh9bVvQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v2CQsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v1_0cIokEeSkH97cUQxLGA" name="TobaccoUseCode" constrainedElement="_qHUXwPMxEeOUvapeh9bVvQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v1_0cYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '229819007' and value.codeSystem = '2.16.840.1.113883.6.96')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v2FUAIokEeSkH97cUQxLGA" name="TobaccoUse2AuthorParticipation" constrainedElement="_qHUXwPMxEeOUvapeh9bVvQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v2FUAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->exists(author : cda::Author | not author.oclIsUndefined() and author.oclIsKindOf(consol::AuthorParticipation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wZ8PAIokEeSkH97cUQxLGA" name="TobaccoUse2IVLTSHigh" constrainedElement="_qHUXwPMxEeOUvapeh9bVvQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wZ8PAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.effectiveTime->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((high.oclIsUndefined() or high.isNullFlavorUndefined()) implies (not high.oclIsUndefined()) )))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_qHW0APMxEeOUvapeh9bVvQ" general="_gIH_QOWQEeGKmvzED_He2w"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="__zeTcPM3EeOUvapeh9bVvQ" name="VitalSignObservation2">
      <ownedComment xmi:id="_PYxNUPM4EeOUvapeh9bVvQ">
        <body>Vital signs are represented as other results, with additional vocabulary constraints.</body>
      </ownedComment>
      <ownedRule xmi:id="_v2GiIIokEeSkH97cUQxLGA" name="VitalSignObservationTemplateId" constrainedElement="__zeTcPM3EeOUvapeh9bVvQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v2HJMIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.27' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v2IXUIokEeSkH97cUQxLGA" name="VitalSignObservationValue" constrainedElement="__zeTcPM3EeOUvapeh9bVvQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v2IXUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v2LaoIokEeSkH97cUQxLGA" name="VitalSignObservation2AuthorParticipation" constrainedElement="__zeTcPM3EeOUvapeh9bVvQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v2LaoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->exists(author : cda::Author | not author.oclIsUndefined() and author.oclIsKindOf(consol::AuthorParticipation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wZ_SUIokEeSkH97cUQxLGA" name="VitalSignObservation2PQUnit" constrainedElement="__zeTcPM3EeOUvapeh9bVvQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wZ_SUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.value->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies (not unit.oclIsUndefined() )))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="__ze6gPM3EeOUvapeh9bVvQ" general="_2OrhsRSVEeGGzu7fmW9pXw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_dDupoPV2EeONioZkBKP8eQ" name="VitalSignsOrganizer2">
      <ownedComment xmi:id="_jK-7wPV2EeONioZkBKP8eQ">
        <body>This template provides a mechanism for grouping vital signs (e.g. grouping systolic blood pressure and diastolic blood pressure).</body>
      </ownedComment>
      <ownedRule xmi:id="_v2NP0IokEeSkH97cUQxLGA" name="VitalSignsOrganizerTemplateId" constrainedElement="_dDupoPV2EeONioZkBKP8eQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v2NP0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.26' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v2RhQIokEeSkH97cUQxLGA" name="VitalSignsOrganizerCodeP" constrainedElement="_dDupoPV2EeONioZkBKP8eQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v2RhQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v2PFAIokEeSkH97cUQxLGA" name="VitalSignsOrganizerCode" constrainedElement="_dDupoPV2EeONioZkBKP8eQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v2PFAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '46680005' and value.codeSystem = '2.16.840.1.113883.6.96')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v2T9gIokEeSkH97cUQxLGA" name="VitalSignsOrganizerEffectiveTime" constrainedElement="_dDupoPV2EeONioZkBKP8eQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v2T9gYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v2VLoIokEeSkH97cUQxLGA" name="VitalSignsOrganizerVitalSignObservation2" constrainedElement="_dDupoPV2EeONioZkBKP8eQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v2VLoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.component->exists(component : cda::Component4 | not component.observation.oclIsUndefined() and component.observation.oclIsKindOf(consol::VitalSignObservation2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v2WZw4okEeSkH97cUQxLGA" name="VitalSignsOrganizer2AuthorParticipation" constrainedElement="_dDupoPV2EeONioZkBKP8eQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v2WZxIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->exists(author : cda::Author | not author.oclIsUndefined() and author.oclIsKindOf(consol::AuthorParticipation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_dDxF4PV2EeONioZkBKP8eQ" general="_2OlbCRSVEeGGzu7fmW9pXw"/>
      <ownedOperation xmi:id="_v2VysIokEeSkH97cUQxLGA" name="getConsolVitalSignObservation2s" bodyCondition="_v2WZwYokEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v2WZwYokEeSkH97cUQxLGA" name="body" constrainedElement="_v2VysIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v2WZwookEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::VitalSignObservation2)).oclAsType(consol::VitalSignObservation2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v2VysYokEeSkH97cUQxLGA" type="__zeTcPM3EeOUvapeh9bVvQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v2WZwIokEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_ze150PitEeOXlK95I8tUew" name="CognitiveStatusObservation2">
      <ownedComment xmi:id="_igg7APiuEeOXlK95I8tUew">
        <body>This template represents a patient's cognitive status (e.g., mood, memory, ability to make decisions) and problems that limit cognition (e.g., amnesia, dementia, aggressive behavior). The template may include assessment scale observations, identify supporting caregivers, and provide information about non-medicinal supplies.</body>
      </ownedComment>
      <ownedRule xmi:id="_3zrgMPi6EeOXlK95I8tUew" name="CognitiveStatusObservation2ValueDatatype">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_3zrgMfi6EeOXlK95I8tUew">
          <language>OCL</language>
          <body>self.value->forAll(val | val.oclIsTypeOf(datatypes::CD) implies (val.isNullFlavorDefined() or val.oclAsType(datatypes::CD).codeSystem = '2.16.840.1.113883.6.96'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v28PoookEeSkH97cUQxLGA" name="CognitiveStatusObservation2TemplateId" constrainedElement="_ze150PitEeOXlK95I8tUew">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v28Po4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.74' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v2-E0IokEeSkH97cUQxLGA" name="CognitiveStatusObservation2ClassCode" constrainedElement="_ze150PitEeOXlK95I8tUew">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v2-r4IokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v2_S8IokEeSkH97cUQxLGA" name="CognitiveStatusObservation2MoodCode" constrainedElement="_ze150PitEeOXlK95I8tUew">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v2_S8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v3AhEIokEeSkH97cUQxLGA" name="CognitiveStatusObservation2Id" constrainedElement="_ze150PitEeOXlK95I8tUew">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v3AhEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v3EygIokEeSkH97cUQxLGA" name="CognitiveStatusObservation2CodeP" constrainedElement="_ze150PitEeOXlK95I8tUew">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v3EygYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v3CWQIokEeSkH97cUQxLGA" name="CognitiveStatusObservation2Code" constrainedElement="_ze150PitEeOXlK95I8tUew">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v3CWQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '311465003' and value.codeSystem = '2.16.840.1.113883.6.96')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v3GnsIokEeSkH97cUQxLGA" name="CognitiveStatusObservation2Text" constrainedElement="_ze150PitEeOXlK95I8tUew">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v3GnsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.text.oclIsUndefined() or self.text.isNullFlavorUndefined()) implies (not self.text.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v3Ic4IokEeSkH97cUQxLGA" name="CognitiveStatusObservation2StatusCode" constrainedElement="_ze150PitEeOXlK95I8tUew">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v3Ic4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'completed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v3KSEIokEeSkH97cUQxLGA" name="CognitiveStatusObservation2StatusCodeP" constrainedElement="_ze150PitEeOXlK95I8tUew">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v3K5IIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v3MHQIokEeSkH97cUQxLGA" name="CognitiveStatusObservation2EffectiveTime" constrainedElement="_ze150PitEeOXlK95I8tUew">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v3MHQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v3NVYIokEeSkH97cUQxLGA" name="CognitiveStatusObservation2Value" constrainedElement="_ze150PitEeOXlK95I8tUew">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v3NVYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v3PKkIokEeSkH97cUQxLGA" name="CognitiveStatusObservation2AuthorParticipation" constrainedElement="_ze150PitEeOXlK95I8tUew">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v3PKkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->exists(author : cda::Author | not author.oclIsUndefined() and author.oclIsKindOf(consol::AuthorParticipation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v3PxoIokEeSkH97cUQxLGA" name="CognitiveStatusObservation2NonMedicinalSupplyActivity2" constrainedElement="_ze150PitEeOXlK95I8tUew">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v3QYsIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.supply.oclIsUndefined() and entryRelationship.supply.oclIsKindOf(consol::NonMedicinalSupplyActivity2) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v3Q_xYokEeSkH97cUQxLGA" name="CognitiveStatusObservation2CaregiverCharacteristics" constrainedElement="_ze150PitEeOXlK95I8tUew">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v3Q_xookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::CaregiverCharacteristics) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v3SN4ookEeSkH97cUQxLGA" name="CognitiveStatusObservation2AssessmentScaleObservation" constrainedElement="_ze150PitEeOXlK95I8tUew">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v3SN44okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(consol::AssessmentScaleObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v3TcAIokEeSkH97cUQxLGA" name="CognitiveStatusObservation2ReferenceRange" constrainedElement="_ze150PitEeOXlK95I8tUew">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v3TcAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.referenceRange->exists(referenceRange : cda::ReferenceRange | not referenceRange.oclIsUndefined() and referenceRange.oclIsKindOf(rim::ActRelationship))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_ze150fitEeOXlK95I8tUew">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_v3Q_wIokEeSkH97cUQxLGA" name="getNonMedicinalSupplyActivity2s" bodyCondition="_v3Q_w4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v3Q_w4okEeSkH97cUQxLGA" name="body" constrainedElement="_v3Q_wIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v3Q_xIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getSupplies()->select(supply : cda::Supply | not supply.oclIsUndefined() and supply.oclIsKindOf(consol::NonMedicinalSupplyActivity2)).oclAsType(consol::NonMedicinalSupplyActivity2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v3Q_wYokEeSkH97cUQxLGA" type="_k_C20OaCEeOmzetP5oaH3A" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v3Q_wookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v3Rm0IokEeSkH97cUQxLGA" name="getCaregiverCharacteristicss" bodyCondition="_v3SN4IokEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v3SN4IokEeSkH97cUQxLGA" name="body" constrainedElement="_v3Rm0IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v3SN4YokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::CaregiverCharacteristics)).oclAsType(consol::CaregiverCharacteristics)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v3Rm0YokEeSkH97cUQxLGA" type="__pNCUOY-EeGINOJ_SD9_dA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v3Rm0ookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v3S08IokEeSkH97cUQxLGA" name="getAssessmentScaleObservations" bodyCondition="_v3S084okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v3S084okEeSkH97cUQxLGA" name="body" constrainedElement="_v3S08IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v3S09IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::AssessmentScaleObservation)).oclAsType(consol::AssessmentScaleObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v3S08YokEeSkH97cUQxLGA" type="_Zi33YOYxEeGINOJ_SD9_dA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v3S08ookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_aetyEPu_EeOyiMEKhdqMGA" name="AnesthesiaSection2">
      <ownedComment xmi:id="_n-ZDQPu_EeOyiMEKhdqMGA">
        <body>The Anesthesia section records the type of anesthesia (e.g., general or local) and may state the actual agent used. This may be a subsection of the Procedure Description section. The full details of anesthesia are usually found in a separate Anesthesia Note.</body>
      </ownedComment>
      <ownedRule xmi:id="_v3Y7kIokEeSkH97cUQxLGA" name="AnesthesiaSectionTemplateId" constrainedElement="_aetyEPu_EeOyiMEKhdqMGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v3Y7kYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.25' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v3dNAIokEeSkH97cUQxLGA" name="AnesthesiaSectionCodeP" constrainedElement="_aetyEPu_EeOyiMEKhdqMGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v3dNAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v3awwIokEeSkH97cUQxLGA" name="AnesthesiaSectionCode" constrainedElement="_aetyEPu_EeOyiMEKhdqMGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v3awwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '59774-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v3fpQIokEeSkH97cUQxLGA" name="AnesthesiaSectionProcedureActivityProcedure2" constrainedElement="_aetyEPu_EeOyiMEKhdqMGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v3fpQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.procedure.oclIsUndefined() and entry.procedure.oclIsKindOf(consol::ProcedureActivityProcedure2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v3g3YIokEeSkH97cUQxLGA" name="AnesthesiaSectionMedicationActivity2" constrainedElement="_aetyEPu_EeOyiMEKhdqMGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v3g3YYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.substanceAdministration.oclIsUndefined() and entry.substanceAdministration.oclIsKindOf(consol::MedicationActivity2))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_aevnQPu_EeOyiMEKhdqMGA" general="_OA_Q0DVyEeGaW4kr-GbV8Q"/>
      <ownedOperation xmi:id="_v3gQUIokEeSkH97cUQxLGA" name="getConsolProcedureActivityProcedure2s" bodyCondition="_v3gQU4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v3gQU4okEeSkH97cUQxLGA" name="body" constrainedElement="_v3gQUIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v3gQVIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getProcedures()->select(procedure : cda::Procedure | not procedure.oclIsUndefined() and procedure.oclIsKindOf(consol::ProcedureActivityProcedure2)).oclAsType(consol::ProcedureActivityProcedure2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v3gQUYokEeSkH97cUQxLGA" type="_fCVOQPDqEeOKPKE9au0oug" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v3gQUookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v3hecIokEeSkH97cUQxLGA" name="getConsolMedicationActivity2s" bodyCondition="_v3hec4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v3hec4okEeSkH97cUQxLGA" name="body" constrainedElement="_v3hecIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v3hedIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(consol::MedicationActivity2)).oclAsType(consol::MedicationActivity2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v3hecYokEeSkH97cUQxLGA" type="_WnSCMOLAEeOc7-TVP7Wi6w" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v3hecookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_q_8twPvVEeOvZJBdQKQrqQ" name="AssessmentAndPlanSection2">
      <ownedComment xmi:id="_8BIW0PvVEeOvZJBdQKQrqQ">
        <body>This section represents the clinician's conclusions and working assumptions that will guide treatment of the patient. The Assessment and Plan sections may be combined or separated to meet local policy requirements.&#xD;
See also the Assessment Section: templateId 2.16.840.1.113883.10.20.22.2.8 and Plan of Treatment Section (V2): templateId 2.16.840.1.113883.10.20.22.2.10.2</body>
      </ownedComment>
      <ownedRule xmi:id="_v3iFgIokEeSkH97cUQxLGA" name="AssessmentAndPlanSectionTemplateId" constrainedElement="_q_8twPvVEeOvZJBdQKQrqQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v3iFgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.9' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v3mW8IokEeSkH97cUQxLGA" name="AssessmentAndPlanSectionCodeP" constrainedElement="_q_8twPvVEeOvZJBdQKQrqQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v3mW8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v3j6sIokEeSkH97cUQxLGA" name="AssessmentAndPlanSectionCode" constrainedElement="_q_8twPvVEeOvZJBdQKQrqQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v3j6sYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '51847-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v3ozMIokEeSkH97cUQxLGA" name="AssessmentAndPlanSectionPlannedAct2" constrainedElement="_q_8twPvVEeOvZJBdQKQrqQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v3ozMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::PlannedAct2))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_q__KAPvVEeOvZJBdQKQrqQ" general="_2Rwq0BSVEeGGzu7fmW9pXw"/>
      <ownedOperation xmi:id="_v3paQIokEeSkH97cUQxLGA" name="getConsolPlannedAct2s" bodyCondition="_v3paQ4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v3paQ4okEeSkH97cUQxLGA" name="body" constrainedElement="_v3paQIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v3paRIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::PlannedAct2)).oclAsType(consol::PlannedAct2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v3paQYokEeSkH97cUQxLGA" type="_lLnRMOaYEeOmzetP5oaH3A" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v3paQookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_6M-msPvXEeOes-3T-2HryA" name="ComplicationsSection2">
      <ownedComment xmi:id="_Ol6OsPvYEeOes-3T-2HryA">
        <body>This section contains problems that occurred during or around the time of a procedure. The complications may be known risks or unanticipated problems.</body>
      </ownedComment>
      <ownedRule xmi:id="_ykBmYPvZEeOes-3T-2HryA" name="ComplicationsSection2ExplicitComplications">
        <ownedComment xmi:id="_ykBmYfvZEeOes-3T-2HryA">
          <body>UNIMPLEMENTABLE</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ykBmYvvZEeOes-3T-2HryA">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v3qBUIokEeSkH97cUQxLGA" name="ComplicationsSectionTemplateId" constrainedElement="_6M-msPvXEeOes-3T-2HryA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v3qBUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.37' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v3uSwIokEeSkH97cUQxLGA" name="ComplicationsSectionCodeP" constrainedElement="_6M-msPvXEeOes-3T-2HryA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v3uSwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v3r2gIokEeSkH97cUQxLGA" name="ComplicationsSectionCode" constrainedElement="_6M-msPvXEeOes-3T-2HryA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v3r2gYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '55109-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v3wvAIokEeSkH97cUQxLGA" name="ComplicationsSectionProblemObservation2" constrainedElement="_6M-msPvXEeOes-3T-2HryA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v3wvAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::ProblemObservation2))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_6NBC8PvXEeOes-3T-2HryA" general="_R1OXcDVyEeGaW4kr-GbV8Q"/>
      <ownedOperation xmi:id="_v3xWEIokEeSkH97cUQxLGA" name="getConsolProblemObservation2s" bodyCondition="_v3xWE4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v3xWE4okEeSkH97cUQxLGA" name="body" constrainedElement="_v3xWEIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v3xWFIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProblemObservation2)).oclAsType(consol::ProblemObservation2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v3xWEYokEeSkH97cUQxLGA" type="_prDAkPDCEeOKPKE9au0oug" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v3xWEookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_kgM0YPvbEeOJwYDYIUCQDg" name="EncountersSectionEntriesOptional2">
      <ownedComment xmi:id="_-E3hcPvbEeOJwYDYIUCQDg">
        <body>This section lists and describes any healthcare encounters pertinent to the patient's current health status or historical health history. An encounter is an interaction, regardless of the setting, between a patient and a practitioner who is vested with primary responsibility for diagnosing, evaluating, or treating the patient's condition. It may include visits, appointments, or non-face-to-face interactions. It is also a contact between a patient and a practitioner who has primary responsibility (exercising independent judgment) for assessing and treating the patient at a given contact. This section may contain all encounters for the time period being summarized, but should include notable encounters.</body>
      </ownedComment>
      <ownedRule xmi:id="_v3x9IIokEeSkH97cUQxLGA" name="EncountersSectionEntriesOptionalTemplateId" constrainedElement="_kgM0YPvbEeOJwYDYIUCQDg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v3x9IYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.22' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v32OkIokEeSkH97cUQxLGA" name="EncountersSectionEntriesOptionalCodeP" constrainedElement="_kgM0YPvbEeOJwYDYIUCQDg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v32OkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v30ZYIokEeSkH97cUQxLGA" name="EncountersSectionEntriesOptionalCode" constrainedElement="_kgM0YPvbEeOJwYDYIUCQDg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v30ZYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '46240-8' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v34q0IokEeSkH97cUQxLGA" name="EncountersSectionEntriesOptionalEncounterActivity2" constrainedElement="_kgM0YPvbEeOJwYDYIUCQDg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v34q0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.encounter.oclIsUndefined() and entry.encounter.oclIsKindOf(consol::EncounterActivity2))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_kgOpkPvbEeOJwYDYIUCQDg" general="_4yj2wBVdEeGQCvUGzi1kDQ"/>
      <ownedOperation xmi:id="_v35R4IokEeSkH97cUQxLGA" name="getConsolEncounterActivity2s" bodyCondition="_v35R44okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v35R44okEeSkH97cUQxLGA" name="body" constrainedElement="_v35R4IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v35R5IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getEncounters()->select(encounter : cda::Encounter | not encounter.oclIsUndefined() and encounter.oclIsKindOf(consol::EncounterActivity2)).oclAsType(consol::EncounterActivity2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v35R4YokEeSkH97cUQxLGA" type="_RGU34MzDEeO93sHu8pHB2g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v35R4ookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_8rMFkPyHEeOozpLKXSm5NA" name="FunctionalStatusSection2">
      <ownedComment xmi:id="_vTMUQPyIEeOozpLKXSm5NA">
        <body>The Functional Status Section contains observations and assessments of a patient's physical abilities. A patient's functional status may include information regarding the patient's general function such as ambulation, ability to perform Activities of Daily Living (ADLs) (e.g., bathing, dressing, feeding, grooming) or Instrumental Activities of Daily Living (IADLs) (e.g., shopping, using a telephone, balancing a check book). Problems that impact function (e.g., dyspnea, dysphagia) can be contained in the section.</body>
      </ownedComment>
      <ownedRule xmi:id="_v3548IokEeSkH97cUQxLGA" name="FunctionalStatusSectionTemplateId" constrainedElement="_8rMFkPyHEeOozpLKXSm5NA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v3548YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.14' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v3-KYIokEeSkH97cUQxLGA" name="FunctionalStatusSectionCodeP" constrainedElement="_8rMFkPyHEeOozpLKXSm5NA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v3-KYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v38VMIokEeSkH97cUQxLGA" name="FunctionalStatusSectionCode" constrainedElement="_8rMFkPyHEeOozpLKXSm5NA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v38VMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '47420-5' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v4BNsIokEeSkH97cUQxLGA" name="FunctionalStatusSectionFunctionalStatusOrganizer2" constrainedElement="_8rMFkPyHEeOozpLKXSm5NA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v4BNsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(consol::FunctionalStatusOrganizer2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v4Cb0IokEeSkH97cUQxLGA" name="FunctionalStatusSectionFunctionalStatusObservation2" constrainedElement="_8rMFkPyHEeOozpLKXSm5NA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v4Cb0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::FunctionalStatusObservation2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v4FfIIokEeSkH97cUQxLGA" name="FunctionalStatusSectionNonMedicinalSupplyActivity2" constrainedElement="_8rMFkPyHEeOozpLKXSm5NA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v4FfIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.supply.oclIsUndefined() and entry.supply.oclIsKindOf(consol::NonMedicinalSupplyActivity2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v4IicIokEeSkH97cUQxLGA" name="FunctionalStatusSection2SelfCareActivities" constrainedElement="_8rMFkPyHEeOozpLKXSm5NA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v4IicYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::SelfCareActivities))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v4JwkIokEeSkH97cUQxLGA" name="FunctionalStatusSection2SensoryAndSpeechStatus" constrainedElement="_8rMFkPyHEeOozpLKXSm5NA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v4JwkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::SensoryAndSpeechStatus))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_8rQXAPyHEeOozpLKXSm5NA" general="_2KKOBhSVEeGGzu7fmW9pXw"/>
      <ownedOperation xmi:id="_v4B0wIokEeSkH97cUQxLGA" name="getConsolFunctionalStatusOrganizer2s" bodyCondition="_v4B0w4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v4B0w4okEeSkH97cUQxLGA" name="body" constrainedElement="_v4B0wIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v4B0xIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getOrganizers()->select(organizer : cda::Organizer | not organizer.oclIsUndefined() and organizer.oclIsKindOf(consol::FunctionalStatusOrganizer2)).oclAsType(consol::FunctionalStatusOrganizer2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v4B0wYokEeSkH97cUQxLGA" type="_yU2tgOD0EeOmBMTtnrPqww" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v4B0wookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v4DC4IokEeSkH97cUQxLGA" name="getConsolFunctionalStatusObservation2s" bodyCondition="_v4DC44okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v4DC44okEeSkH97cUQxLGA" name="body" constrainedElement="_v4DC4IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v4DC5IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::FunctionalStatusObservation2)).oclAsType(consol::FunctionalStatusObservation2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v4DC4YokEeSkH97cUQxLGA" type="_3WqogMzSEeO93sHu8pHB2g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v4DC4ookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v4Dp8IokEeSkH97cUQxLGA" name="getConsolCognitiveStatusResultOrganizers" bodyCondition="_v4Dp84okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v4Dp84okEeSkH97cUQxLGA" name="body" constrainedElement="_v4Dp8IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v4Dp9IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getOrganizers()->select(organizer : cda::Organizer | not organizer.oclIsUndefined() and organizer.oclIsKindOf(consol::CognitiveStatusResultOrganizer)).oclAsType(consol::CognitiveStatusResultOrganizer)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v4Dp8YokEeSkH97cUQxLGA" type="_jfoCUOZbEeGINOJ_SD9_dA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v4Dp8ookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v4Dp9YokEeSkH97cUQxLGA" name="getConsolCognitiveStatusResultObservations" bodyCondition="_v4ERAIokEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v4ERAIokEeSkH97cUQxLGA" name="body" constrainedElement="_v4Dp9YokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v4ERAYokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::CognitiveStatusResultObservation)).oclAsType(consol::CognitiveStatusResultObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v4Dp9ookEeSkH97cUQxLGA" type="_gkBM0OZbEeGINOJ_SD9_dA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v4Dp94okEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v4ERAookEeSkH97cUQxLGA" name="getConsolFunctionalStatusProblemObservations" bodyCondition="_v4ERBYokEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v4ERBYokEeSkH97cUQxLGA" name="body" constrainedElement="_v4ERAookEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v4ERBookEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::FunctionalStatusProblemObservation)).oclAsType(consol::FunctionalStatusProblemObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v4ERA4okEeSkH97cUQxLGA" type="_rVl5AOZbEeGINOJ_SD9_dA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v4ERBIokEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v4E4EIokEeSkH97cUQxLGA" name="getConsolCognitiveStatusProblemObservations" bodyCondition="_v4E4E4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v4E4E4okEeSkH97cUQxLGA" name="body" constrainedElement="_v4E4EIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v4E4FIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::CognitiveStatusProblemObservation)).oclAsType(consol::CognitiveStatusProblemObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v4E4EYokEeSkH97cUQxLGA" type="_dXKPQOZbEeGINOJ_SD9_dA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v4E4EookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v4GGMIokEeSkH97cUQxLGA" name="getConsolNonMedicinalSupplyActivity2s" bodyCondition="_v4GGM4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v4GGM4okEeSkH97cUQxLGA" name="body" constrainedElement="_v4GGMIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v4GGNIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getSupplies()->select(supply : cda::Supply | not supply.oclIsUndefined() and supply.oclIsKindOf(consol::NonMedicinalSupplyActivity2)).oclAsType(consol::NonMedicinalSupplyActivity2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v4GGMYokEeSkH97cUQxLGA" type="_k_C20OaCEeOmzetP5oaH3A" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v4GGMookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v4GGNYokEeSkH97cUQxLGA" name="getConsolNumberOfPressureUlcersObservations" bodyCondition="_v4GtQookEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v4GtQookEeSkH97cUQxLGA" name="body" constrainedElement="_v4GGNYokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v4GtQ4okEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::NumberOfPressureUlcersObservation)).oclAsType(consol::NumberOfPressureUlcersObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v4GtQIokEeSkH97cUQxLGA" type="_7c4ssOZbEeGINOJ_SD9_dA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v4GtQYokEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v4GtRIokEeSkH97cUQxLGA" name="getConsolPressureUlcerObservations" bodyCondition="_v4GtR4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v4GtR4okEeSkH97cUQxLGA" name="body" constrainedElement="_v4GtRIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v4GtSIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::PressureUlcerObservation)).oclAsType(consol::PressureUlcerObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v4GtRYokEeSkH97cUQxLGA" type="_9rQowOZbEeGINOJ_SD9_dA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v4GtRookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v4HUUIokEeSkH97cUQxLGA" name="getConsolHighestPressureUlcerStages" bodyCondition="_v4HUU4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v4HUU4okEeSkH97cUQxLGA" name="body" constrainedElement="_v4HUUIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v4HUVIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::HighestPressureUlcerStage)).oclAsType(consol::HighestPressureUlcerStage)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v4HUUYokEeSkH97cUQxLGA" type="_4YgVsOZbEeGINOJ_SD9_dA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v4HUUookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v4JJgIokEeSkH97cUQxLGA" name="getSelfCareActivitiess" bodyCondition="_v4JJg4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v4JJg4okEeSkH97cUQxLGA" name="body" constrainedElement="_v4JJgIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v4JJhIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::SelfCareActivities)).oclAsType(consol::SelfCareActivities)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v4JJgYokEeSkH97cUQxLGA" type="_nC0xUJmzEeOLJeQez13EkQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v4JJgookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v4K-sIokEeSkH97cUQxLGA" name="getSensoryAndSpeechStatuss" bodyCondition="_v4K-s4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v4K-s4okEeSkH97cUQxLGA" name="body" constrainedElement="_v4K-sIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v4K-tIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::SensoryAndSpeechStatus)).oclAsType(consol::SensoryAndSpeechStatus)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v4K-sYokEeSkH97cUQxLGA" type="_kyeGAJm4EeOLJeQez13EkQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v4K-sookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_sZlggPyhEeOC19UEcu7MOw" name="HistoryOfPastIllnessSection2">
      <ownedComment xmi:id="_9w3VYPyhEeOC19UEcu7MOw">
        <body>This section contains a record of the patient's past complaints, problems, and diagnoses. It contains data from the patient's past up to the patient's current complaint or reason for seeking medical care.</body>
      </ownedComment>
      <ownedRule xmi:id="_v4MM0IokEeSkH97cUQxLGA" name="HistoryOfPastIllnessSectionTemplateId" constrainedElement="_sZlggPyhEeOC19UEcu7MOw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v4MM0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.20' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v4RFUIokEeSkH97cUQxLGA" name="HistoryOfPastIllnessSectionCodeP" constrainedElement="_sZlggPyhEeOC19UEcu7MOw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v4RFUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v4PQIIokEeSkH97cUQxLGA" name="HistoryOfPastIllnessSectionCode" constrainedElement="_sZlggPyhEeOC19UEcu7MOw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v4PQIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '11348-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v4UIoIokEeSkH97cUQxLGA" name="HistoryOfPastIllnessSectionProblemObservation2" constrainedElement="_sZlggPyhEeOC19UEcu7MOw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v4UIoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::ProblemObservation2))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_sZn8wPyhEeOC19UEcu7MOw" general="_2PQJcxSVEeGGzu7fmW9pXw"/>
      <ownedOperation xmi:id="_v4UvsIokEeSkH97cUQxLGA" name="getConsolProblemObservation2s" bodyCondition="_v4Uvs4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v4Uvs4okEeSkH97cUQxLGA" name="body" constrainedElement="_v4UvsIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v4UvtIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProblemObservation2)).oclAsType(consol::ProblemObservation2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v4UvsYokEeSkH97cUQxLGA" type="_prDAkPDCEeOKPKE9au0oug" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v4UvsookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_ctJgAPylEeOc0tW1-DpN-Q" name="AdmissionDiagnosisSection2">
      <ownedComment xmi:id="_mqyN0PylEeOc0tW1-DpN-Q">
        <body>This section contains a narrative description of the problems or diagnoses identified by the clinician at the time of the patient's admission. This section may contain coded entries representing the admitting diagnoses.</body>
      </ownedComment>
      <ownedRule xmi:id="_v4VWwIokEeSkH97cUQxLGA" name="HospitalAdmissionDiagnosisSectionTemplateId" constrainedElement="_ctJgAPylEeOc0tW1-DpN-Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v4VWwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.43' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v4ZoMIokEeSkH97cUQxLGA" name="HospitalAdmissionDiagnosisSectionCodeP" constrainedElement="_ctJgAPylEeOc0tW1-DpN-Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v4aPQIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v4XzAIokEeSkH97cUQxLGA" name="HospitalAdmissionDiagnosisSectionCode" constrainedElement="_ctJgAPylEeOc0tW1-DpN-Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v4XzAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '46241-6' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v4cEcIokEeSkH97cUQxLGA" name="HospitalAdmissionDiagnosisSectionHospitalAdmissionDiagnosis2" constrainedElement="_ctJgAPylEeOc0tW1-DpN-Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v4cEcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::HospitalAdmissionDiagnosis2))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_ctL8QPylEeOc0tW1-DpN-Q" general="_2PidQhSVEeGGzu7fmW9pXw"/>
      <ownedOperation xmi:id="_v4dSkIokEeSkH97cUQxLGA" name="getConsolHospitalAdmissionDiagnosis2" bodyCondition="_v4dSk4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v4dSk4okEeSkH97cUQxLGA" name="body" constrainedElement="_v4dSkIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v4dSlIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::HospitalAdmissionDiagnosis2))->asSequence()->any(true).oclAsType(consol::HospitalAdmissionDiagnosis2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v4dSkYokEeSkH97cUQxLGA" type="_GM6icOEIEeOmBMTtnrPqww" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v4dSkookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_ZLY3MPyqEeOlg_Cnc5bODw" name="AdmissionMedicationsSectionEntriesOptional2">
      <ownedComment xmi:id="_hnpR0PyqEeOlg_Cnc5bODw">
        <body>The section contains the medications administered prior to admission to the facility. The currently active medications must also be listed.</body>
      </ownedComment>
      <ownedRule xmi:id="_v4d5oIokEeSkH97cUQxLGA" name="HospitalAdmissionMedicationsSectionEntriesOptionalTemplateId" constrainedElement="_ZLY3MPyqEeOlg_Cnc5bODw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v4d5oYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.44' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v4iLEIokEeSkH97cUQxLGA" name="HospitalAdmissionMedicationsSectionEntriesOptionalCodeP" constrainedElement="_ZLY3MPyqEeOlg_Cnc5bODw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v4iLEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v4fu0IokEeSkH97cUQxLGA" name="HospitalAdmissionMedicationsSectionEntriesOptionalCode" constrainedElement="_ZLY3MPyqEeOlg_Cnc5bODw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v4fu0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '42346-7' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v4knUIokEeSkH97cUQxLGA" name="HospitalAdmissionMedicationsSectionEntriesOptionalAdmissionMedication2" constrainedElement="_ZLY3MPyqEeOlg_Cnc5bODw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v4knUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::AdmissionMedication2))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_ZLbTcPyqEeOlg_Cnc5bODw" general="_2Poj5BSVEeGGzu7fmW9pXw"/>
      <ownedOperation xmi:id="_v4lOYIokEeSkH97cUQxLGA" name="getConsolAdmissionMedication2s" bodyCondition="_v4lOY4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v4lOY4okEeSkH97cUQxLGA" name="body" constrainedElement="_v4lOYIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v4lOZIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::AdmissionMedication2)).oclAsType(consol::AdmissionMedication2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v4lOYYokEeSkH97cUQxLGA" type="_ZQpEwK-1EeO8duI_7f6kZw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v4lOYookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_jfuGYPytEeOmn53IDV99zw" name="DischargeDiagnosisSection2">
      <ownedComment xmi:id="_CsRpAPyuEeOmn53IDV99zw">
        <body>This template represents problems or diagnoses present at the time of discharge which occurred during the hospitalization or need to be monitored after hospitalization. This section includes an optional entry to record patient conditions.</body>
      </ownedComment>
      <ownedRule xmi:id="_v4l1cIokEeSkH97cUQxLGA" name="HospitalDischargeDiagnosisSectionTemplateId" constrainedElement="_jfuGYPytEeOmn53IDV99zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v4mcgIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.24' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v4qG4IokEeSkH97cUQxLGA" name="HospitalDischargeDiagnosisSectionCodeP" constrainedElement="_jfuGYPytEeOmn53IDV99zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v4qG4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v4oRsIokEeSkH97cUQxLGA" name="HospitalDischargeDiagnosisSectionCode" constrainedElement="_jfuGYPytEeOmn53IDV99zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v4oRsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '11535-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v4sjIIokEeSkH97cUQxLGA" name="HospitalDischargeDiagnosisSectionHospitalDischargeDiagnosis2" constrainedElement="_jfuGYPytEeOmn53IDV99zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v4sjIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::HospitalDischargeDiagnosis2))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_jfv7kPytEeOmn53IDV99zw" general="_2PidURSVEeGGzu7fmW9pXw"/>
      <ownedOperation xmi:id="_v4txQIokEeSkH97cUQxLGA" name="getConsolHospitalDischargeDiagnosis2" bodyCondition="_v4txQ4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v4txQ4okEeSkH97cUQxLGA" name="body" constrainedElement="_v4txQIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v4txRIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::HospitalDischargeDiagnosis2))->asSequence()->any(true).oclAsType(consol::HospitalDischargeDiagnosis2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v4txQYokEeSkH97cUQxLGA" type="_Trd1cOEMEeOmBMTtnrPqww" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v4txQookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_HlfBYPyzEeOfAK77IvEBUw" name="DischargeMedicationsSectionEntriesOptional2">
      <ownedComment xmi:id="_PlPGMPyzEeOfAK77IvEBUw">
        <body>This section contains the medications the patient is intended to take or stop after discharge. Current, active medications must be listed. The section may also include a patient's prescription history and indicate the source of the medication list.</body>
      </ownedComment>
      <ownedRule xmi:id="_v4uYUIokEeSkH97cUQxLGA" name="HospitalDischargeMedicationsSectionEntriesOptionalTemplateId" constrainedElement="_HlfBYPyzEeOfAK77IvEBUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v4uYUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.11' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v4vmcIokEeSkH97cUQxLGA" name="HospitalDischargeMedicationsSectionEntriesOptionalDischargeMedication2" constrainedElement="_HlfBYPyzEeOfAK77IvEBUw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v4vmcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::DischargeMedication2))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_HlhdoPyzEeOfAK77IvEBUw" general="_2Poj7RSVEeGGzu7fmW9pXw"/>
      <ownedOperation xmi:id="_v4wNgIokEeSkH97cUQxLGA" name="getConsolDischargeMedication2s" bodyCondition="_v4wNg4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v4wNg4okEeSkH97cUQxLGA" name="body" constrainedElement="_v4wNgIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v4w0kIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::DischargeMedication2)).oclAsType(consol::DischargeMedication2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v4wNgYokEeSkH97cUQxLGA" type="_EIeu8MyjEeO93sHu8pHB2g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v4wNgookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_kdQhIPy3EeO1SvUcmWeLDQ" name="ImmunizationsSectionEntriesOptional2">
      <ownedComment xmi:id="_5M3jwPy3EeO1SvUcmWeLDQ">
        <body>The Immunizations section defines a patient's current immunization status and pertinent immunization history. The primary use case for the Immunization section is to enable communication of a patient's immunization status. The section should include current immunization status, and may contain the entire immunization history that is relevant to the period of time being summarized.</body>
      </ownedComment>
      <ownedRule xmi:id="_v4w0kYokEeSkH97cUQxLGA" name="ImmunizationsSectionEntriesOptionalTemplateId" constrainedElement="_kdQhIPy3EeO1SvUcmWeLDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v4xboIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v41tEIokEeSkH97cUQxLGA" name="ImmunizationsSectionEntriesOptionalCodeP" constrainedElement="_kdQhIPy3EeO1SvUcmWeLDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v41tEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v4zQ0IokEeSkH97cUQxLGA" name="ImmunizationsSectionEntriesOptionalCode" constrainedElement="_kdQhIPy3EeO1SvUcmWeLDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v4zQ0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '11369-6' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v44JUIokEeSkH97cUQxLGA" name="ImmunizationsSectionEntriesOptionalImmunizationActivity2" constrainedElement="_kdQhIPy3EeO1SvUcmWeLDQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v44JUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.substanceAdministration.oclIsUndefined() and entry.substanceAdministration.oclIsKindOf(consol::ImmunizationActivity2))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_kdS9YPy3EeO1SvUcmWeLDQ" general="_EuPloBVeEeGQCvUGzi1kDQ"/>
      <ownedOperation xmi:id="_v44wYIokEeSkH97cUQxLGA" name="getConsolImmunizationActivity2s" bodyCondition="_v44wY4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v44wY4okEeSkH97cUQxLGA" name="body" constrainedElement="_v44wYIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v44wZIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(consol::ImmunizationActivity2)).oclAsType(consol::ImmunizationActivity2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v44wYYokEeSkH97cUQxLGA" type="_zI6vcOE7EeOTq9XEMvvkWw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v44wYookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_k8L2YP1HEeOVx4YMwgfjlA" name="InstructionsSection2">
      <ownedComment xmi:id="_4mmykP1HEeOVx4YMwgfjlA">
        <body>The Instructions section records instructions given to a patient. List patient decision aids here.</body>
      </ownedComment>
      <ownedRule xmi:id="_v45XcIokEeSkH97cUQxLGA" name="InstructionsSectionTemplateId" constrainedElement="_k8L2YP1HEeOVx4YMwgfjlA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v45XcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.45' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v49o4IokEeSkH97cUQxLGA" name="InstructionsSectionCodeP" constrainedElement="_k8L2YP1HEeOVx4YMwgfjlA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v49o4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v47MoIokEeSkH97cUQxLGA" name="InstructionsSectionCode" constrainedElement="_k8L2YP1HEeOVx4YMwgfjlA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v47MoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '69730-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v5AFIIokEeSkH97cUQxLGA" name="InstructionsSectionInstruction2" constrainedElement="_k8L2YP1HEeOVx4YMwgfjlA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v5AFIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::Instruction2))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_k8O5sP1HEeOVx4YMwgfjlA" general="_4qKukEE1EeGdmoWy_aLP0Q"/>
      <ownedOperation xmi:id="_v5AsMIokEeSkH97cUQxLGA" name="getConsolInstruction2s" bodyCondition="_v5AsM4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v5AsM4okEeSkH97cUQxLGA" name="body" constrainedElement="_v5AsMIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v5AsNIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::Instruction2)).oclAsType(consol::Instruction2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v5AsMYokEeSkH97cUQxLGA" type="_D62NwOH7EeO04sHNODkHmQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v5AsMookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_YCS1AP1WEeOW-qBXb0kbTA" name="InterventionsSection2">
      <ownedComment xmi:id="_k-j3IP1WEeOW-qBXb0kbTA">
        <body>This template represents Interventions.  Interventions are actions taken to maximize the prospects of the  goals of care for the patient, including the removal of barriers to success. Interventions can be planned, ordered, historical, etc.&#xD;
Interventions include actions that may be ongoing (e.g. maintenance medications that the patient is taking, or monitoring the patient's health status or the status of an intervention). &#xD;
Instructions are a subset of interventions and may include self-care instructions. Instructions are information or directions to the patient and other providers including how to care for the individual's condition, what to do at home, when to call for help, any additional appointments, testing, and changes to the medication list or medication instructions, clinical guidelines and a summary of best practice.</body>
      </ownedComment>
      <ownedRule xmi:id="_v5BTQIokEeSkH97cUQxLGA" name="InterventionsSectionTemplateId" constrainedElement="_YCS1AP1WEeOW-qBXb0kbTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v5BTQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.21.2.3' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v5GLwIokEeSkH97cUQxLGA" name="InterventionsSectionCodeP" constrainedElement="_YCS1AP1WEeOW-qBXb0kbTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v5GLwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v5DIcIokEeSkH97cUQxLGA" name="InterventionsSectionCode" constrainedElement="_YCS1AP1WEeOW-qBXb0kbTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v5DIcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '62387-6' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v5IoAIokEeSkH97cUQxLGA" name="InterventionsSection2InterventionAct" constrainedElement="_YCS1AP1WEeOW-qBXb0kbTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v5IoAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::InterventionAct))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_YCVRQP1WEeOW-qBXb0kbTA" general="_hqzJADVyEeGaW4kr-GbV8Q"/>
      <ownedOperation xmi:id="_v5JPEIokEeSkH97cUQxLGA" name="getInterventionActs" bodyCondition="_v5JPE4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v5JPE4okEeSkH97cUQxLGA" name="body" constrainedElement="_v5JPEIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v5JPFIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::InterventionAct)).oclAsType(consol::InterventionAct)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v5JPEYokEeSkH97cUQxLGA" type="_XD5vgJA8EeOZX935IVJfOg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v5JPEookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_5OKxwP1bEeO5Hq-yrsJSmg" name="MedicalEquipmentSection2">
      <ownedComment xmi:id="_GwZnsP1cEeO5Hq-yrsJSmg">
        <body>This section defines a patient's implanted and external health and medical devices and equipment. This section lists any pertinent durable medical equipment (DME) used to help maintain the patient's health status. All equipment relevant to the diagnosis, care, or treatment of a patient should be included. &#xD;
Devices applied to, or placed in, the patient are represented with the Procedure Activity Procedure (V2) template. Equipment supplied to the patient (e.g. pumps, inhalers, wheelchairs) is represented by the Non-Medicinal Supply Activity V2 template.&#xD;
These devices may be grouped together within a Medical Equipment Organizer. The organizer would probably not be used with devices applied in or on the patient but rather to organize a group of medical supplies the patient has been supplied with.</body>
      </ownedComment>
      <ownedRule xmi:id="_v5J2IIokEeSkH97cUQxLGA" name="MedicalEquipmentSectionTemplateId" constrainedElement="_5OKxwP1bEeO5Hq-yrsJSmg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v5J2IYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.23' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v5OHkIokEeSkH97cUQxLGA" name="MedicalEquipmentSectionCodeP" constrainedElement="_5OKxwP1bEeO5Hq-yrsJSmg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v5OHkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v5LrUIokEeSkH97cUQxLGA" name="MedicalEquipmentSectionCode" constrainedElement="_5OKxwP1bEeO5Hq-yrsJSmg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v5LrUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '46264-8' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v5Qj0IokEeSkH97cUQxLGA" name="MedicalEquipmentSectionNonMedicinalSupplyActivity2" constrainedElement="_5OKxwP1bEeO5Hq-yrsJSmg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v5Qj0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.supply.oclIsUndefined() and entry.supply.oclIsKindOf(consol::NonMedicinalSupplyActivity2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v5Rx8IokEeSkH97cUQxLGA" name="MedicalEquipmentSection2MedicalEquipmentOrganizer" constrainedElement="_5OKxwP1bEeO5Hq-yrsJSmg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v5Rx8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(consol::MedicalEquipmentOrganizer))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v5TAEIokEeSkH97cUQxLGA" name="MedicalEquipmentSection2ProcedureActivityProcedure2" constrainedElement="_5OKxwP1bEeO5Hq-yrsJSmg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v5TAEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.procedure.oclIsUndefined() and entry.procedure.oclIsKindOf(consol::ProcedureActivityProcedure2))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_5OOcIP1bEeO5Hq-yrsJSmg" general="_2KEucBSVEeGGzu7fmW9pXw"/>
      <ownedOperation xmi:id="_v5RK4IokEeSkH97cUQxLGA" name="getConsolNonMedicinalSupplyActivity2s" bodyCondition="_v5RK44okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v5RK44okEeSkH97cUQxLGA" name="body" constrainedElement="_v5RK4IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v5RK5IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getSupplies()->select(supply : cda::Supply | not supply.oclIsUndefined() and supply.oclIsKindOf(consol::NonMedicinalSupplyActivity2)).oclAsType(consol::NonMedicinalSupplyActivity2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v5RK4YokEeSkH97cUQxLGA" type="_k_C20OaCEeOmzetP5oaH3A" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v5RK4ookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v5SZAIokEeSkH97cUQxLGA" name="getMedicalEquipmentOrganizers" bodyCondition="_v5SZA4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v5SZA4okEeSkH97cUQxLGA" name="body" constrainedElement="_v5SZAIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v5SZBIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getOrganizers()->select(organizer : cda::Organizer | not organizer.oclIsUndefined() and organizer.oclIsKindOf(consol::MedicalEquipmentOrganizer)).oclAsType(consol::MedicalEquipmentOrganizer)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v5SZAYokEeSkH97cUQxLGA" type="_RbbCII0dEeOB0eBUISUB4Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v5SZAookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v5TnIIokEeSkH97cUQxLGA" name="getProcedureActivityProcedure2s" bodyCondition="_v5TnI4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v5TnI4okEeSkH97cUQxLGA" name="body" constrainedElement="_v5TnIIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v5TnJIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getProcedures()->select(procedure : cda::Procedure | not procedure.oclIsUndefined() and procedure.oclIsKindOf(consol::ProcedureActivityProcedure2)).oclAsType(consol::ProcedureActivityProcedure2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v5TnIYokEeSkH97cUQxLGA" type="_fCVOQPDqEeOKPKE9au0oug" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v5TnIookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_F37nMP4jEeOwFalSp0fRiw" name="MedicationsAdministeredSection2">
      <ownedComment xmi:id="_cc_vkP4jEeOwFalSp0fRiw">
        <body>The Medications Administered Section contains medications and fluids administered during a procedure. The section may also contain the procedure's encounter or other activity, excluding anesthetic medications. This section is not intended for ongoing medications and medication history.</body>
      </ownedComment>
      <ownedRule xmi:id="_v5UOMIokEeSkH97cUQxLGA" name="MedicationsAdministeredSectionTemplateId" constrainedElement="_F37nMP4jEeOwFalSp0fRiw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v5UOMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.38' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v5YfoIokEeSkH97cUQxLGA" name="MedicationsAdministeredSectionCodeP" constrainedElement="_F37nMP4jEeOwFalSp0fRiw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v5YfoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v5WDYIokEeSkH97cUQxLGA" name="MedicationsAdministeredSectionCode" constrainedElement="_F37nMP4jEeOwFalSp0fRiw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v5WDYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '29549-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v5bi8IokEeSkH97cUQxLGA" name="MedicationsAdministeredSectionMedicationActivity2" constrainedElement="_F37nMP4jEeOwFalSp0fRiw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v5bi8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.substanceAdministration.oclIsUndefined() and entry.substanceAdministration.oclIsKindOf(consol::MedicationActivity2))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_F3_RkP4jEeOwFalSp0fRiw" general="_2Poj_BSVEeGGzu7fmW9pXw"/>
      <ownedOperation xmi:id="_v5cxEIokEeSkH97cUQxLGA" name="getConsolMedicationActivity2s" bodyCondition="_v5dYIYokEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v5dYIYokEeSkH97cUQxLGA" name="body" constrainedElement="_v5cxEIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v5dYIookEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(consol::MedicationActivity2)).oclAsType(consol::MedicationActivity2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v5cxEYokEeSkH97cUQxLGA" type="_WnSCMOLAEeOc7-TVP7Wi6w" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v5dYIIokEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_twgM0P4lEeOzC5ykp-XCaA" name="PayersSection2">
      <ownedComment xmi:id="_1F8wYP4lEeOzC5ykp-XCaA">
        <body>The Payers section contains data on the patient's payers, whether a 'third party' insurance, self-pay, other payer or guarantor, or some combination of payers, and is used to define which entity is the responsible fiduciary for the financial aspects of a patient's care.&#xD;
Each unique instance of a payer and all the pertinent data needed to contact, bill to, and collect from that payer should be included. Authorization information that can be used to define pertinent referral, authorization tracking number, procedure, therapy, intervention, device, or similar authorizations for the patient or provider, or both should be included. At a minimum, the patient's pertinent current payment sources should be listed.&#xD;
The sources of payment are represented as a Coverage Activity, which identifies all of the insurance policies or government or other programs that cover some or all of the patient's healthcare expenses. The policies or programs are sequenced by preference. The Coverage Activity has a sequence number that represents the preference order. Each policy or program identifies the covered party with respect to the payer, so that the identifiers can be recorded.</body>
      </ownedComment>
      <ownedRule xmi:id="_v5dYI4okEeSkH97cUQxLGA" name="PayersSectionTemplateId" constrainedElement="_twgM0P4lEeOzC5ykp-XCaA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v5d_MIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.18' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v5jewIokEeSkH97cUQxLGA" name="PayersSectionCodeP" constrainedElement="_twgM0P4lEeOzC5ykp-XCaA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v5jewYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v5gbcIokEeSkH97cUQxLGA" name="PayersSectionCode" constrainedElement="_twgM0P4lEeOzC5ykp-XCaA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v5gbcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '48768-6' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v5nJIIokEeSkH97cUQxLGA" name="PayersSectionCoverageActivity2" constrainedElement="_twgM0P4lEeOzC5ykp-XCaA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v5nJIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::CoverageActivity2))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_twipEP4lEeOzC5ykp-XCaA" general="_2MV_UBSVEeGGzu7fmW9pXw"/>
      <ownedOperation xmi:id="_v5oXQIokEeSkH97cUQxLGA" name="getConsolCoverageActivity2s" bodyCondition="_v5oXQ4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v5oXQ4okEeSkH97cUQxLGA" name="body" constrainedElement="_v5oXQIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v5oXRIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::CoverageActivity2)).oclAsType(consol::CoverageActivity2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v5oXQYokEeSkH97cUQxLGA" type="_aJr6ULkxEeODDJAC5t5vpw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v5oXQookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_-nZiYP4uEeObaveuCI77uA" name="PhysicalExamSection2">
      <ownedComment xmi:id="_ITYfgP4vEeObaveuCI77uA">
        <body>The section includes direct observations made by a clinician. The examination may include the use of simple instruments and may also describe simple maneuvers performed directly on the patient's body. &#xD;
It also includes observations made by the examining clinician using only inspection, palpation, auscultation, and percussion. It does not include laboratory or imaging findings. &#xD;
The exam may be limited to pertinent body systems based on the patient's chief complaint or it may include a comprehensive examination. The examination may be reported as a collection of random clinical statements or it may be reported categorically. &#xD;
The Physical Exam section may contain multiple nested subsections; Vital Signs, General Status, and those listed in the Additional Physical Examination Subsections appendix.</body>
      </ownedComment>
      <ownedRule xmi:id="_v5o-UIokEeSkH97cUQxLGA" name="PhysicalExamSectionTemplateId" constrainedElement="_-nZiYP4uEeObaveuCI77uA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v5o-UYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.2.10' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v5tPwIokEeSkH97cUQxLGA" name="PhysicalExamSectionCodeP" constrainedElement="_-nZiYP4uEeObaveuCI77uA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v5tPwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v5qzgIokEeSkH97cUQxLGA" name="PhysicalExamSectionCode" constrainedElement="_-nZiYP4uEeObaveuCI77uA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v5qzgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '29545-1' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v5wTEIokEeSkH97cUQxLGA" name="PhysicalExamSection2WoundObservation" constrainedElement="_-nZiYP4uEeObaveuCI77uA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v5wTEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::WoundObservation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v5yIQIokEeSkH97cUQxLGA" name="PhysicalExamSectionHighestPressureUlcerStage" constrainedElement="_-nZiYP4uEeObaveuCI77uA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v5yIQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::HighestPressureUlcerStage))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v50kgIokEeSkH97cUQxLGA" name="PhysicalExamSectionNumberOfPressureUlcersObservation" constrainedElement="_-nZiYP4uEeObaveuCI77uA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v50kgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::NumberOfPressureUlcersObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_-nb-oP4uEeObaveuCI77uA" general="_2Pxt0hSVEeGGzu7fmW9pXw"/>
      <ownedOperation xmi:id="_v5w6IIokEeSkH97cUQxLGA" name="getWoundObservations" bodyCondition="_v5w6I4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v5w6I4okEeSkH97cUQxLGA" name="body" constrainedElement="_v5w6IIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v5w6JIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::WoundObservation)).oclAsType(consol::WoundObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v5w6IYokEeSkH97cUQxLGA" type="_09uFMJp_EeOK6dzbL4VoTA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v5w6IookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v5xhMIokEeSkH97cUQxLGA" name="getConsolPressureUlcerObservations" bodyCondition="_v5xhM4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v5xhM4okEeSkH97cUQxLGA" name="body" constrainedElement="_v5xhMIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v5xhNIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::PressureUlcerObservation)).oclAsType(consol::PressureUlcerObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v5xhMYokEeSkH97cUQxLGA" type="_9rQowOZbEeGINOJ_SD9_dA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v5xhMookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v5zWYIokEeSkH97cUQxLGA" name="getConsolHighestPressureUlcerStages" bodyCondition="_v5zWY4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v5zWY4okEeSkH97cUQxLGA" name="body" constrainedElement="_v5zWYIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v5zWZIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::HighestPressureUlcerStage)).oclAsType(consol::HighestPressureUlcerStage)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v5zWYYokEeSkH97cUQxLGA" type="_4YgVsOZbEeGINOJ_SD9_dA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v5zWYookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v52ZsIokEeSkH97cUQxLGA" name="getConsolNumberOfPressureUlcersObservations" bodyCondition="_v52Zs4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v52Zs4okEeSkH97cUQxLGA" name="body" constrainedElement="_v52ZsIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v52ZtIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::NumberOfPressureUlcersObservation)).oclAsType(consol::NumberOfPressureUlcersObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v52ZsYokEeSkH97cUQxLGA" type="_7c4ssOZbEeGINOJ_SD9_dA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v52ZsookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_bwml0P4yEeO_Yb9cO8w3bA" name="PlanOfTreatmentSection2">
      <ownedComment xmi:id="_7lKjoP4yEeO_Yb9cO8w3bA">
        <body>This section contains data that defines pending orders, interventions, encounters, services, and procedures for the patient. It is limited to prospective, unfulfilled, or incomplete orders and requests only. These are indicated by the @moodCode of the entries within this section. All active, incomplete, or pending orders, appointments, referrals, procedures, services, or any other pending event of clinical significance to the current care of the patient should be listed.&#xD;
This section may also contain information about ongoing care of the patient, clinical reminders, patient's values, beliefs, preferences, care expectations, and overarching care goals. &#xD;
Clinical reminders are placed here to provide prompts for disease prevention and management, patient safety, and health-care quality improvements, including widely accepted performance measures. &#xD;
Values may include the importance of quality of life over longevity. These values are taken into account when prioritizing all problems and their treatments.&#xD;
Beliefs may include comfort with dying or the refusal of blood transfusions because of the patient's religious convictions.  &#xD;
Preferences may include liquid medicines over tablets, or treatment via secure email instead of in person. &#xD;
Care expectations may range from being treated only by female clinicians, to expecting all calls to be returned within 24 hours. &#xD;
Overarching goals described in this section are not tied to a specific condition, problem, health concern, or intervention. Examples of overarching goals could be to minimize pain or dependence on others, or to walk a daughter down the aisle for her marriage.  &#xD;
The plan may also indicate that patient education will be provided.</body>
      </ownedComment>
      <ownedRule xmi:id="_v53n0IokEeSkH97cUQxLGA" name="PlanOfCareSectionTemplateId" constrainedElement="_bwml0P4yEeO_Yb9cO8w3bA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v53n0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.10' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v59ucIokEeSkH97cUQxLGA" name="PlanOfCareSectionCodeP" constrainedElement="_bwml0P4yEeO_Yb9cO8w3bA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v59ucYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v57SMIokEeSkH97cUQxLGA" name="PlanOfCareSectionCode" constrainedElement="_bwml0P4yEeO_Yb9cO8w3bA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v57SMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '18776-5' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v6AxwIokEeSkH97cUQxLGA" name="PlanOfCareSectionPlannedObservation2" constrainedElement="_bwml0P4yEeO_Yb9cO8w3bA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v6AxwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::PlannedObservation2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v6B_4IokEeSkH97cUQxLGA" name="PlanOfCareSectionPlannedEncounter2" constrainedElement="_bwml0P4yEeO_Yb9cO8w3bA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v6B_4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.encounter.oclIsUndefined() and entry.encounter.oclIsKindOf(consol::PlannedEncounter2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v6D1EIokEeSkH97cUQxLGA" name="PlanOfCareSectionPlannedAct2" constrainedElement="_bwml0P4yEeO_Yb9cO8w3bA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v6D1EYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::PlannedAct2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v6FDMIokEeSkH97cUQxLGA" name="PlanOfCareSectionPlannedProcedure2" constrainedElement="_bwml0P4yEeO_Yb9cO8w3bA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v6FDMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.procedure.oclIsUndefined() and entry.procedure.oclIsKindOf(consol::PlannedProcedure2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v6GRUIokEeSkH97cUQxLGA" name="PlanOfCareSectionPlannedMedicationActivity2" constrainedElement="_bwml0P4yEeO_Yb9cO8w3bA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v6GRUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.substanceAdministration.oclIsUndefined() and entry.substanceAdministration.oclIsKindOf(consol::PlannedMedicationActivity2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v6HfcIokEeSkH97cUQxLGA" name="PlanOfCareSectionPlannedSupply2" constrainedElement="_bwml0P4yEeO_Yb9cO8w3bA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v6HfcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.supply.oclIsUndefined() and entry.supply.oclIsKindOf(consol::PlannedSupply2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v6ItlYokEeSkH97cUQxLGA" name="PlanOfCareSectionInstruction2" constrainedElement="_bwml0P4yEeO_Yb9cO8w3bA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v6ItlookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::Instruction2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v6J7tYokEeSkH97cUQxLGA" name="PlanOfTreatmentSection2HandoffCommunication" constrainedElement="_bwml0P4yEeO_Yb9cO8w3bA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v6J7tookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::HandoffCommunication))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v6LJ1YokEeSkH97cUQxLGA" name="PlanOfTreatmentSection2NutritionRecommendations" constrainedElement="_bwml0P4yEeO_Yb9cO8w3bA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v6LJ1ookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::NutritionRecommendations))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_bwppIP4yEeO_Yb9cO8w3bA" general="_2NP-QxSVEeGGzu7fmW9pXw"/>
      <ownedOperation xmi:id="_v6BY0IokEeSkH97cUQxLGA" name="getConsolPlannedObservation2s" bodyCondition="_v6BY04okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v6BY04okEeSkH97cUQxLGA" name="body" constrainedElement="_v6BY0IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v6BY1IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::PlannedObservation2)).oclAsType(consol::PlannedObservation2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v6BY0YokEeSkH97cUQxLGA" type="_jKZssOdvEeOqBOMhgDlycQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v6BY0ookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v6DOAIokEeSkH97cUQxLGA" name="getConsolPlannedEncounter2s" bodyCondition="_v6DOA4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v6DOA4okEeSkH97cUQxLGA" name="body" constrainedElement="_v6DOAIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v6DOBIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getEncounters()->select(encounter : cda::Encounter | not encounter.oclIsUndefined() and encounter.oclIsKindOf(consol::PlannedEncounter2)).oclAsType(consol::PlannedEncounter2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v6DOAYokEeSkH97cUQxLGA" type="_bDPFMOdXEeOqBOMhgDlycQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v6DOAookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v6EcIIokEeSkH97cUQxLGA" name="getConsolPlannedAct2s" bodyCondition="_v6EcI4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v6EcI4okEeSkH97cUQxLGA" name="body" constrainedElement="_v6EcIIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v6EcJIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::PlannedAct2)).oclAsType(consol::PlannedAct2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v6EcIYokEeSkH97cUQxLGA" type="_lLnRMOaYEeOmzetP5oaH3A" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v6EcIookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v6FqQIokEeSkH97cUQxLGA" name="getConsolPlannedProcedure2s" bodyCondition="_v6FqQ4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v6FqQ4okEeSkH97cUQxLGA" name="body" constrainedElement="_v6FqQIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v6FqRIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getProcedures()->select(procedure : cda::Procedure | not procedure.oclIsUndefined() and procedure.oclIsKindOf(consol::PlannedProcedure2)).oclAsType(consol::PlannedProcedure2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v6FqQYokEeSkH97cUQxLGA" type="_cs0YsOeEEeOqBOMhgDlycQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v6FqQookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v6G4YIokEeSkH97cUQxLGA" name="getConsolPlannedMedicationActivity2s" bodyCondition="_v6G4Y4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v6G4Y4okEeSkH97cUQxLGA" name="body" constrainedElement="_v6G4YIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v6G4ZIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(consol::PlannedMedicationActivity2)).oclAsType(consol::PlannedMedicationActivity2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v6G4YYokEeSkH97cUQxLGA" type="_Yj45YOgREeO-iJTuAv7BKQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v6G4YookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v6ItkIokEeSkH97cUQxLGA" name="getConsolPlannedSupply2s" bodyCondition="_v6Itk4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v6Itk4okEeSkH97cUQxLGA" name="body" constrainedElement="_v6ItkIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v6ItlIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getSupplies()->select(supply : cda::Supply | not supply.oclIsUndefined() and supply.oclIsKindOf(consol::PlannedSupply2)).oclAsType(consol::PlannedSupply2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v6ItkYokEeSkH97cUQxLGA" type="_vEd1cOg0EeO-iJTuAv7BKQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v6ItkookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v6J7sIokEeSkH97cUQxLGA" name="getConsolInstruction2s" bodyCondition="_v6J7s4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v6J7s4okEeSkH97cUQxLGA" name="body" constrainedElement="_v6J7sIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v6J7tIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::Instruction2)).oclAsType(consol::Instruction2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v6J7sYokEeSkH97cUQxLGA" type="_D62NwOH7EeO04sHNODkHmQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v6J7sookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v6LJ0IokEeSkH97cUQxLGA" name="getHandoffCommunications" bodyCondition="_v6LJ04okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v6LJ04okEeSkH97cUQxLGA" name="body" constrainedElement="_v6LJ0IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v6LJ1IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::HandoffCommunication)).oclAsType(consol::HandoffCommunication)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v6LJ0YokEeSkH97cUQxLGA" type="_POfwAIz7EeOoMZgUoTghIg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v6LJ0ookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v6MX8IokEeSkH97cUQxLGA" name="getNutritionRecommendationss" bodyCondition="_v6MX84okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v6MX84okEeSkH97cUQxLGA" name="body" constrainedElement="_v6MX8IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v6MX9IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::NutritionRecommendations)).oclAsType(consol::NutritionRecommendations)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v6MX8YokEeSkH97cUQxLGA" type="_FhAIMI3FEeOB0eBUISUB4Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v6MX8ookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_dz0ZwP49EeO_F_2qLv6FWQ" name="PlannedProcedureSection2">
      <ownedComment xmi:id="_qFPvIP49EeO_F_2qLv6FWQ">
        <body>This section contains the procedure(s) that a clinician planned based on the preoperative assessment.</body>
      </ownedComment>
      <ownedRule xmi:id="_v6MX9YokEeSkH97cUQxLGA" name="PlannedProcedureSectionTemplateId" constrainedElement="_dz0ZwP49EeO_F_2qLv6FWQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v6M_AIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.30' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v6QpYIokEeSkH97cUQxLGA" name="PlannedProcedureSectionCodeP" constrainedElement="_dz0ZwP49EeO_F_2qLv6FWQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v6RQcIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v6O0MIokEeSkH97cUQxLGA" name="PlannedProcedureSectionCode" constrainedElement="_dz0ZwP49EeO_F_2qLv6FWQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v6O0MYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '59772-4' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v6TFoIokEeSkH97cUQxLGA" name="PlannedProcedureSectionPlannedProcedure2" constrainedElement="_dz0ZwP49EeO_F_2qLv6FWQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v6TFoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.procedure.oclIsUndefined() and entry.procedure.oclIsKindOf(consol::PlannedProcedure2))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_dz3dEP49EeO_F_2qLv6FWQ" general="_3b6E4DVyEeGaW4kr-GbV8Q"/>
      <ownedOperation xmi:id="_v6UTwIokEeSkH97cUQxLGA" name="getConsolPlannedProcedure2s" bodyCondition="_v6UTw4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v6UTw4okEeSkH97cUQxLGA" name="body" constrainedElement="_v6UTwIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v6UTxIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getProcedures()->select(procedure : cda::Procedure | not procedure.oclIsUndefined() and procedure.oclIsKindOf(consol::PlannedProcedure2)).oclAsType(consol::PlannedProcedure2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v6UTwYokEeSkH97cUQxLGA" type="_cs0YsOeEEeOqBOMhgDlycQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v6UTwookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_MLNngP5BEeOmw9RN80Tpig" name="PostprocedureDiagnosisSection2">
      <ownedComment xmi:id="_r8KQoP5BEeOmw9RN80Tpig">
        <body>The Postprocedure Diagnosis section records the diagnosis or diagnoses discovered or confirmed during the procedure. Often it is the same as the pre-procedure diagnosis or indication.</body>
      </ownedComment>
      <ownedRule xmi:id="_v6U60IokEeSkH97cUQxLGA" name="PostprocedureDiagnosisSectionTemplateId" constrainedElement="_MLNngP5BEeOmw9RN80Tpig">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v6U60YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.36' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v6YlMIokEeSkH97cUQxLGA" name="PostprocedureDiagnosisSectionCodeP" constrainedElement="_MLNngP5BEeOmw9RN80Tpig">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v6ZMQIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v6WwAIokEeSkH97cUQxLGA" name="PostprocedureDiagnosisSectionCode" constrainedElement="_MLNngP5BEeOmw9RN80Tpig">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v6WwAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '59769-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v6bBcIokEeSkH97cUQxLGA" name="PostprocedureDiagnosisSectionPostprocedureDiagnosis2" constrainedElement="_MLNngP5BEeOmw9RN80Tpig">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v6bBcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::PostprocedureDiagnosis2))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_MLRR4P5BEeOmw9RN80Tpig" general="_-jlSMDVyEeGaW4kr-GbV8Q"/>
      <ownedOperation xmi:id="_v6cPkIokEeSkH97cUQxLGA" name="getConsolPostprocedureDiagnosis2" bodyCondition="_v6cPk4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v6cPk4okEeSkH97cUQxLGA" name="body" constrainedElement="_v6cPkIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v6cPlIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::PostprocedureDiagnosis2))->asSequence()->any(true).oclAsType(consol::PostprocedureDiagnosis2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v6cPkYokEeSkH97cUQxLGA" type="__SgUwOwuEeOqa975IP2wug" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v6cPkookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_JFd3MP5EEeOBnLkJOVC8NQ" name="PreoperativeDiagnosisSection2">
      <ownedComment xmi:id="_OTT1EP5EEeOBnLkJOVC8NQ">
        <body>The Preoperative Diagnosis section records the surgical diagnoses assigned to the patient before the surgical procedure which are the reason for the surgery. The preoperative diagnosis is, in the surgeon's opinion, the diagnosis that will be confirmed during surgery.</body>
      </ownedComment>
      <ownedRule xmi:id="_v6c2oIokEeSkH97cUQxLGA" name="PreoperativeDiagnosisSectionTemplateId" constrainedElement="_JFd3MP5EEeOBnLkJOVC8NQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v6c2oYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.34' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v6hIEIokEeSkH97cUQxLGA" name="PreoperativeDiagnosisSectionCodeP" constrainedElement="_JFd3MP5EEeOBnLkJOVC8NQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v6hIEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v6er0IokEeSkH97cUQxLGA" name="PreoperativeDiagnosisSectionCode" constrainedElement="_JFd3MP5EEeOBnLkJOVC8NQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v6er0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '10219-4' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v6jkUIokEeSkH97cUQxLGA" name="PreoperativeDiagnosisSectionPreoperativeDiagnosis2" constrainedElement="_JFd3MP5EEeOBnLkJOVC8NQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v6jkUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::PreoperativeDiagnosis2))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_JFgTcP5EEeOBnLkJOVC8NQ" general="_Cu6qMDVzEeGaW4kr-GbV8Q"/>
      <ownedOperation xmi:id="_v6kLYIokEeSkH97cUQxLGA" name="getConsolPreoperativeDiagnosis2" bodyCondition="_v6kLY4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v6kLY4okEeSkH97cUQxLGA" name="body" constrainedElement="_v6kLYIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v6kLZIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::PreoperativeDiagnosis2))->asSequence()->any(true).oclAsType(consol::PreoperativeDiagnosis2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v6kLYYokEeSkH97cUQxLGA" type="_5l3g0OzYEeOnE-G4kptBiw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v6kLYookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_lLOykP5FEeO_r7yO9mhwnA" name="ProcedureFindingsSection2">
      <ownedComment xmi:id="_vk8YYP5FEeO_r7yO9mhwnA">
        <body>The Procedure Findings section records clinically significant observations confirmed or discovered during a procedure or surgery.</body>
      </ownedComment>
      <ownedRule xmi:id="_v6kycIokEeSkH97cUQxLGA" name="ProcedureFindingsSectionTemplateId" constrainedElement="_lLOykP5FEeO_r7yO9mhwnA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v6kycYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.28' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v6pD4IokEeSkH97cUQxLGA" name="ProcedureFindingsSectionCodeP" constrainedElement="_lLOykP5FEeO_r7yO9mhwnA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v6pD4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v6nOsIokEeSkH97cUQxLGA" name="ProcedureFindingsSectionCode" constrainedElement="_lLOykP5FEeO_r7yO9mhwnA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v6nOsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '59776-5' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v6rgIIokEeSkH97cUQxLGA" name="ProcedureFindingsSectionProblemObservation2" constrainedElement="_lLOykP5FEeO_r7yO9mhwnA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v6rgIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::ProblemObservation2))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_lLR14P5FEeO_r7yO9mhwnA" general="_W4UBYDVzEeGaW4kr-GbV8Q"/>
      <ownedOperation xmi:id="_v6sHMIokEeSkH97cUQxLGA" name="getConsolProblemObservation2s" bodyCondition="_v6suQookEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v6suQookEeSkH97cUQxLGA" name="body" constrainedElement="_v6sHMIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v6suQ4okEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProblemObservation2)).oclAsType(consol::ProblemObservation2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v6suQIokEeSkH97cUQxLGA" type="_prDAkPDCEeOKPKE9au0oug" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v6suQYokEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_5_O94AByEeSjnfOPJpFg3A" name="ProcedureIndicationsSection2">
      <ownedComment xmi:id="_EH_WkABzEeSjnfOPJpFg3A">
        <body>This section contains the reason(s) for the procedure or surgery. This section may include the preprocedure diagnoses as well as symptoms contributing to the reason for the procedure.</body>
      </ownedComment>
      <ownedRule xmi:id="_v6suRIokEeSkH97cUQxLGA" name="ProcedureIndicationsSectionTemplateId" constrainedElement="_5_O94AByEeSjnfOPJpFg3A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v6tVUIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.29' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v6w_sIokEeSkH97cUQxLGA" name="ProcedureIndicationsSectionCodeP" constrainedElement="_5_O94AByEeSjnfOPJpFg3A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v6w_sYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v6vKgIokEeSkH97cUQxLGA" name="ProcedureIndicationsSectionCode" constrainedElement="_5_O94AByEeSjnfOPJpFg3A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v6vKgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '59768-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v6zb8IokEeSkH97cUQxLGA" name="ProcedureIndicationsSectionIndication2" constrainedElement="_5_O94AByEeSjnfOPJpFg3A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v6zb8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::Indication2))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_5_SoQAByEeSjnfOPJpFg3A" general="_cjmJMDVzEeGaW4kr-GbV8Q"/>
      <ownedOperation xmi:id="_v60qEIokEeSkH97cUQxLGA" name="getConsolIndication2s" bodyCondition="_v60qE4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v60qE4okEeSkH97cUQxLGA" name="body" constrainedElement="_v60qEIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v60qFIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::Indication2)).oclAsType(consol::Indication2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v60qEYokEeSkH97cUQxLGA" type="_PrEOIOHoEeO04sHNODkHmQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v60qEookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_80dMoAB0EeSLOb2O6vSPzg" name="ProceduresSectionEntriesOptional2">
      <ownedComment xmi:id="_IbycIAB1EeSLOb2O6vSPzg">
        <body>This section describes all interventional, surgical, diagnostic, or therapeutic procedures or treatments pertinent to the patient historically at the time the document is generated. The section should include notable procedures, but can contain all procedures for the period of time being summarized. The common notion of &quot;procedure&quot; is broader than that specified by the HL7 Version 3 Reference Information Model (RIM), therefore this section contains procedure templates represented with three RIM classes: Act, Observation, and Procedure. Procedure act is for procedures that alter the physical condition of a patient (e.g., splenectomy). Observation act is for procedures that result in new information about a patient but do not cause physical alteration (e.g., EEG). Act is for all other types of procedures (e.g., dressing change).&#xD;
The length of an encounter is documented in the documentationOf/encompassingEncounter/effectiveTime and length of service in documentationOf/ServiceEvent/effectiveTime.</body>
      </ownedComment>
      <ownedRule xmi:id="_v60qFYokEeSkH97cUQxLGA" name="ProceduresSectionEntriesOptionalTemplateId" constrainedElement="_80dMoAB0EeSLOb2O6vSPzg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v61RIIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.7' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v647gIokEeSkH97cUQxLGA" name="ProceduresSectionEntriesOptionalCodeP" constrainedElement="_80dMoAB0EeSLOb2O6vSPzg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v647gYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v63GUIokEeSkH97cUQxLGA" name="ProceduresSectionEntriesOptionalCode" constrainedElement="_80dMoAB0EeSLOb2O6vSPzg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v63GUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '47519-4' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v67XwIokEeSkH97cUQxLGA" name="ProceduresSectionEntriesOptionalProcedureActivityProcedure2" constrainedElement="_80dMoAB0EeSLOb2O6vSPzg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v67-0IokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.procedure.oclIsUndefined() and entry.procedure.oclIsKindOf(consol::ProcedureActivityProcedure2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v69M8IokEeSkH97cUQxLGA" name="ProceduresSectionEntriesOptionalProcedureActivityObservation2" constrainedElement="_80dMoAB0EeSLOb2O6vSPzg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v69M8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::ProcedureActivityObservation2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v6_CIIokEeSkH97cUQxLGA" name="ProceduresSectionEntriesOptionalProcedureActivityAct2" constrainedElement="_80dMoAB0EeSLOb2O6vSPzg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v6_CIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::ProcedureActivityAct2))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_80fo4AB0EeSLOb2O6vSPzg" general="_s9Ig4BVdEeGQCvUGzi1kDQ"/>
      <ownedOperation xmi:id="_v68l4IokEeSkH97cUQxLGA" name="getConsolProcedureActivityProcedure2s" bodyCondition="_v68l44okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v68l44okEeSkH97cUQxLGA" name="body" constrainedElement="_v68l4IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v68l5IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getProcedures()->select(procedure : cda::Procedure | not procedure.oclIsUndefined() and procedure.oclIsKindOf(consol::ProcedureActivityProcedure2)).oclAsType(consol::ProcedureActivityProcedure2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v68l4YokEeSkH97cUQxLGA" type="_fCVOQPDqEeOKPKE9au0oug" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v68l4ookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v690AIokEeSkH97cUQxLGA" name="getConsolProcedureActivityObservation2" bodyCondition="_v690A4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v690A4okEeSkH97cUQxLGA" name="body" constrainedElement="_v690AIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v6-bEIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProcedureActivityObservation2))->asSequence()->any(true).oclAsType(consol::ProcedureActivityObservation2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v690AYokEeSkH97cUQxLGA" type="_QoLWAPDjEeOKPKE9au0oug" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v690AookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v7AQQIokEeSkH97cUQxLGA" name="getConsolProcedureActivityAct2" bodyCondition="_v7A3UYokEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v7A3UYokEeSkH97cUQxLGA" name="body" constrainedElement="_v7AQQIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v7A3UookEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::ProcedureActivityAct2))->asSequence()->any(true).oclAsType(consol::ProcedureActivityAct2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v7AQQYokEeSkH97cUQxLGA" type="_CFMuYPDbEeOKPKE9au0oug" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v7A3UIokEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Ya0H0AB5EeS20Pddu0dxVw" name="ReasonForReferralSection2">
      <ownedComment xmi:id="_kbRpAAB5EeS20Pddu0dxVw">
        <body>This section contains the reason(s) for a patient's referral by a provider to a consulting provider. An optional Chief Complaint section may capture the patient's description of the reason for the consultation.</body>
      </ownedComment>
      <ownedRule xmi:id="_v7BeYIokEeSkH97cUQxLGA" name="ReasonForReferralSectionTemplateId" constrainedElement="_Ya0H0AB5EeS20Pddu0dxVw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v7BeYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '1.3.6.1.4.1.19376.1.5.3.1.3.1' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v7Fv0IokEeSkH97cUQxLGA" name="ReasonForReferralSectionCodeP" constrainedElement="_Ya0H0AB5EeS20Pddu0dxVw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v7Fv0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v7DTkIokEeSkH97cUQxLGA" name="ReasonForReferralSectionCode" constrainedElement="_Ya0H0AB5EeS20Pddu0dxVw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v7DTkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '42349-1' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v7HlAIokEeSkH97cUQxLGA" name="ReasonForReferralSection2PatientReferralAct" constrainedElement="_Ya0H0AB5EeS20Pddu0dxVw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v7IMEIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::PatientReferralAct))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Ya3LIAB5EeS20Pddu0dxVw" general="_2PWQFxSVEeGGzu7fmW9pXw"/>
      <ownedOperation xmi:id="_v7IzIIokEeSkH97cUQxLGA" name="getPatientReferralActs" bodyCondition="_v7IzI4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v7IzI4okEeSkH97cUQxLGA" name="body" constrainedElement="_v7IzIIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v7IzJIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::PatientReferralAct)).oclAsType(consol::PatientReferralAct)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v7IzIYokEeSkH97cUQxLGA" type="_50a2UI62EeOB0eBUISUB4Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v7IzIookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_yaJ3QAFAEeSaVZ5WxWd94w" name="ResultsSectionEntriesOptional2">
      <ownedComment xmi:id="_4GquIAFAEeSaVZ5WxWd94w">
        <body>This section contains the results of observations generated by laboratories, imaging and other procedures. The scope includes observations of hematology, chemistry, serology, virology, toxicology, microbiology, plain x-ray, ultrasound, CT, MRI, angiography, echocardiography, nuclear medicine, pathology, and procedure observations. &#xD;
This section often includes notable results such as abnormal values or relevant trends. It can contain all results for the period of time being documented.&#xD;
Laboratory results are typically generated by laboratories providing analytic services in areas such as chemistry, hematology, serology, histology, cytology, anatomic pathology, microbiology, and/or virology. These observations are based on analysis of specimens obtained from the patient and submitted to the laboratory.&#xD;
Imaging results are typically generated by a clinician reviewing the output of an imaging procedure, such as where a cardiologist reports the left ventricular ejection fraction based on the review of a cardiac echocardiogram.&#xD;
Procedure results are typically generated by a clinician to provide more granular information about component observations made during  a procedure, such as where a gastroenterologist reports the size of a polyp observed during a colonoscopy.</body>
      </ownedComment>
      <ownedRule xmi:id="_v7JaMIokEeSkH97cUQxLGA" name="ResultsSectionEntriesOptionalTemplateId" constrainedElement="_yaJ3QAFAEeSaVZ5WxWd94w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v7JaMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.3' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v7NroIokEeSkH97cUQxLGA" name="ResultsSectionEntriesOptionalCodeP" constrainedElement="_yaJ3QAFAEeSaVZ5WxWd94w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v7NroYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v7LPYIokEeSkH97cUQxLGA" name="ResultsSectionEntriesOptionalCode" constrainedElement="_yaJ3QAFAEeSaVZ5WxWd94w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v7LPYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '30954-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v7QH4IokEeSkH97cUQxLGA" name="ResultsSectionEntriesOptionalResultOrganizer2" constrainedElement="_yaJ3QAFAEeSaVZ5WxWd94w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v7QH4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(consol::ResultOrganizer2))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_yaM6kAFAEeSaVZ5WxWd94w" general="_xGqiEBVdEeGQCvUGzi1kDQ"/>
      <ownedOperation xmi:id="_v7Qu8IokEeSkH97cUQxLGA" name="getConsolResultOrganizer2s" bodyCondition="_v7Qu84okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v7Qu84okEeSkH97cUQxLGA" name="body" constrainedElement="_v7Qu8IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v7Qu9IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getOrganizers()->select(organizer : cda::Organizer | not organizer.oclIsUndefined() and organizer.oclIsKindOf(consol::ResultOrganizer2)).oclAsType(consol::ResultOrganizer2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v7Qu8YokEeSkH97cUQxLGA" type="_gU40UPGEEeOmsLWmq5fnqQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v7Qu8ookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_wLWZMAFHEeSG_MJH-zNFRw" name="SocialHistorySection2">
      <ownedComment xmi:id="_4SQ18AFHEeSG_MJH-zNFRw">
        <body>This section contains social history data that influences a patient's physical, psychological or emotional health (e.g. smoking status, pregnancy). Demographic data, such as marital status, race, ethnicity, and religious affiliation, is captured in the header.</body>
      </ownedComment>
      <ownedRule xmi:id="_v7RWAIokEeSkH97cUQxLGA" name="SocialHistorySectionTemplateId" constrainedElement="_wLWZMAFHEeSG_MJH-zNFRw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v7RWAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.17' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v7VncIokEeSkH97cUQxLGA" name="SocialHistorySectionCodeP" constrainedElement="_wLWZMAFHEeSG_MJH-zNFRw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v7VncYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v7TLMIokEeSkH97cUQxLGA" name="SocialHistorySectionCode" constrainedElement="_wLWZMAFHEeSG_MJH-zNFRw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v7TLMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '29762-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v7YDsIokEeSkH97cUQxLGA" name="SocialHistorySectionSocialHistoryObservation2" constrainedElement="_wLWZMAFHEeSG_MJH-zNFRw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v7YDsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::SocialHistoryObservation2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v7ZR0IokEeSkH97cUQxLGA" name="SocialHistorySectionCurrentSmokingStatus2" constrainedElement="_wLWZMAFHEeSG_MJH-zNFRw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v7ZR0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::CurrentSmokingStatus2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v7af8IokEeSkH97cUQxLGA" name="SocialHistorySectionTobaccoUse2" constrainedElement="_wLWZMAFHEeSG_MJH-zNFRw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v7af8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::TobaccoUse2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v7buE4okEeSkH97cUQxLGA" name="SocialHistorySection2CaregiverCharacteristics" constrainedElement="_wLWZMAFHEeSG_MJH-zNFRw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v7buFIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::CaregiverCharacteristics))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v7c8NIokEeSkH97cUQxLGA" name="SocialHistorySection2CulturalAndReligiousObservation" constrainedElement="_wLWZMAFHEeSG_MJH-zNFRw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v7c8NYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::CulturalAndReligiousObservation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v7eKVYokEeSkH97cUQxLGA" name="SocialHistorySection2CharacteristicsOfHomeEnvironment" constrainedElement="_wLWZMAFHEeSG_MJH-zNFRw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v7eKVookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::CharacteristicsOfHomeEnvironment))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_wLZcgAFHEeSG_MJH-zNFRw" general="_2JKvgBSVEeGGzu7fmW9pXw"/>
      <ownedOperation xmi:id="_v7YqwIokEeSkH97cUQxLGA" name="getConsolSocialHistoryObservation2s" bodyCondition="_v7Yqw4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v7Yqw4okEeSkH97cUQxLGA" name="body" constrainedElement="_v7YqwIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v7YqxIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::SocialHistoryObservation2)).oclAsType(consol::SocialHistoryObservation2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v7YqwYokEeSkH97cUQxLGA" type="_b_iGIPJfEeO2NaSiicarcg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v7YqwookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v7Z44IokEeSkH97cUQxLGA" name="getConsolCurrentSmokingStatus2" bodyCondition="_v7Z444okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v7Z444okEeSkH97cUQxLGA" name="body" constrainedElement="_v7Z44IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v7Z45IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::CurrentSmokingStatus2))->asSequence()->any(true).oclAsType(consol::CurrentSmokingStatus2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v7Z44YokEeSkH97cUQxLGA" type="_Hl3ScLk0EeODDJAC5t5vpw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v7Z44ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v7bHAIokEeSkH97cUQxLGA" name="getConsolTobaccoUse2s" bodyCondition="_v7buEYokEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v7buEYokEeSkH97cUQxLGA" name="body" constrainedElement="_v7bHAIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v7buEookEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::TobaccoUse2)).oclAsType(consol::TobaccoUse2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v7bHAYokEeSkH97cUQxLGA" type="_qHUXwPMxEeOUvapeh9bVvQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v7buEIokEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v7cVIIokEeSkH97cUQxLGA" name="getCaregiverCharacteristicss" bodyCondition="_v7c8MookEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v7c8MookEeSkH97cUQxLGA" name="body" constrainedElement="_v7cVIIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v7c8M4okEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::CaregiverCharacteristics)).oclAsType(consol::CaregiverCharacteristics)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v7c8MIokEeSkH97cUQxLGA" type="__pNCUOY-EeGINOJ_SD9_dA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v7c8MYokEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v7eKUIokEeSkH97cUQxLGA" name="getCulturalAndReligiousObservations" bodyCondition="_v7eKU4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v7eKU4okEeSkH97cUQxLGA" name="body" constrainedElement="_v7eKUIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v7eKVIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::CulturalAndReligiousObservation)).oclAsType(consol::CulturalAndReligiousObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v7eKUYokEeSkH97cUQxLGA" type="_H2EzIIqZEeOoMZgUoTghIg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v7eKUookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v7fYcIokEeSkH97cUQxLGA" name="getCharacteristicsOfHomeEnvironments" bodyCondition="_v7fYc4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v7fYc4okEeSkH97cUQxLGA" name="body" constrainedElement="_v7fYcIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v7fYdIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::CharacteristicsOfHomeEnvironment)).oclAsType(consol::CharacteristicsOfHomeEnvironment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v7fYcYokEeSkH97cUQxLGA" type="_O-O-IInUEeOJGtGyq_dBbA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v7fYcookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_8LkzYAFTEeSmasYc71ZgMQ" name="VitalSignsSectionEntriesOptional2">
      <ownedComment xmi:id="_MeZhoAFUEeSmasYc71ZgMQ">
        <body>The Vital Signs section contains relevant vital signs for the context and use case of the document type, such as blood pressure, heart rate, respiratory rate, height, weight, body mass index, head circumference, pulse oximetry, temperature, and body surface area. The section should include notable vital signs such as the most recent, maximum and/or minimum, baseline, or relevant trends.&#xD;
Vital signs are represented in the same way as other results, but are aggregated into their own section to follow clinical conventions.</body>
      </ownedComment>
      <ownedRule xmi:id="_v7f_gIokEeSkH97cUQxLGA" name="VitalSignsSectionEntriesOptionalTemplateId" constrainedElement="_8LkzYAFTEeSmasYc71ZgMQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v7f_gYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.4' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v7kQ8IokEeSkH97cUQxLGA" name="VitalSignsSectionEntriesOptionalCodeP" constrainedElement="_8LkzYAFTEeSmasYc71ZgMQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v7kQ8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v7h0sIokEeSkH97cUQxLGA" name="VitalSignsSectionEntriesOptionalCode" constrainedElement="_8LkzYAFTEeSmasYc71ZgMQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v7h0sYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '8716-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v7mGIIokEeSkH97cUQxLGA" name="VitalSignsSectionEntriesOptionalVitalSignsOrganizer2" constrainedElement="_8LkzYAFTEeSmasYc71ZgMQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v7mGIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(consol::VitalSignsOrganizer2))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_8LnPoAFTEeSmasYc71ZgMQ" general="_bRH8sBVeEeGQCvUGzi1kDQ"/>
      <ownedOperation xmi:id="_v7nUQIokEeSkH97cUQxLGA" name="getConsolVitalSignsOrganizer2s" bodyCondition="_v7nUQ4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v7nUQ4okEeSkH97cUQxLGA" name="body" constrainedElement="_v7nUQIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v7nURIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getOrganizers()->select(organizer : cda::Organizer | not organizer.oclIsUndefined() and organizer.oclIsKindOf(consol::VitalSignsOrganizer2)).oclAsType(consol::VitalSignsOrganizer2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v7nUQYokEeSkH97cUQxLGA" type="_dDupoPV2EeONioZkBKP8eQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v7nUQookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_jsKhYAFXEeSLIY0bHb-fFQ" name="AdvanceDirectivesSectionEntriesOptional2">
      <ownedComment xmi:id="_pViksAFXEeSLIY0bHb-fFQ">
        <body>This section contains data defining the patient's advance directives and any reference to supporting documentation, including living wills, healthcare proxies, and CPR and resuscitation status. If the referenced documents are available, they can be included in the exchange package. &#xD;
The most recent directives are required, if known, and should be listed in as much detail as possible. &#xD;
This section differentiates between 'advance directives' and 'advance directive documents'. The former is the directions to be followed whereas the latter refers to a legal document containing those directions.</body>
      </ownedComment>
      <ownedRule xmi:id="_v7n7UIokEeSkH97cUQxLGA" name="AdvanceDirectivesSectionEntriesOptionalTemplateId" constrainedElement="_jsKhYAFXEeSLIY0bHb-fFQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v7n7UYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.21' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v7sMwIokEeSkH97cUQxLGA" name="AdvanceDirectivesSectionEntriesOptionalCodeP" constrainedElement="_jsKhYAFXEeSLIY0bHb-fFQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v7sMwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v7pwgIokEeSkH97cUQxLGA" name="AdvanceDirectivesSectionEntriesOptionalCode" constrainedElement="_jsKhYAFXEeSLIY0bHb-fFQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v7pwgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '42348-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v7upAIokEeSkH97cUQxLGA" name="AdvanceDirectivesSectionEntriesOptionalAdvanceDirectiveOrganizer" constrainedElement="_jsKhYAFXEeSLIY0bHb-fFQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v7upAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(consol::AdvanceDirectiveOrganizer))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_jsNksAFXEeSLIY0bHb-fFQ" general="_1RZdIBVdEeGQCvUGzi1kDQ"/>
      <ownedOperation xmi:id="_v7vQEIokEeSkH97cUQxLGA" name="getConsolAdvanceDirectiveOrganizers" bodyCondition="_v7vQE4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v7vQE4okEeSkH97cUQxLGA" name="body" constrainedElement="_v7vQEIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v7vQFIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getOrganizers()->select(organizer : cda::Organizer | not organizer.oclIsUndefined() and organizer.oclIsKindOf(consol::AdvanceDirectiveOrganizer)).oclAsType(consol::AdvanceDirectiveOrganizer)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v7vQEYokEeSkH97cUQxLGA" type="_Z8VQYIlFEeOJGtGyq_dBbA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v7vQEookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_JUvaUAFaEeS0nNJt6oyOyQ" name="MedicationsSectionEntriesOptional2">
      <ownedComment xmi:id="_R4TW0AFaEeS0nNJt6oyOyQ">
        <body>The Medications Section contains a patient's current medications and pertinent medication history. At a minimum, the currently active medications are listed. An entire medication history is an option. The section can describe a patient's prescription and dispense history and information about intended drug monitoring.</body>
      </ownedComment>
      <ownedRule xmi:id="_v7v3IIokEeSkH97cUQxLGA" name="MedicationsSectionEntriesOptionalTemplateId" constrainedElement="_JUvaUAFaEeS0nNJt6oyOyQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v7v3IYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.1' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v70voIokEeSkH97cUQxLGA" name="MedicationsSectionEntriesOptionalCodeP" constrainedElement="_JUvaUAFaEeS0nNJt6oyOyQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v70voYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v7yTYIokEeSkH97cUQxLGA" name="MedicationsSectionEntriesOptionalCode" constrainedElement="_JUvaUAFaEeS0nNJt6oyOyQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v7yTYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '10160-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v73L4IokEeSkH97cUQxLGA" name="MedicationsSectionEntriesOptionalMedicationActivity2" constrainedElement="_JUvaUAFaEeS0nNJt6oyOyQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v73L4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.substanceAdministration.oclIsUndefined() and entry.substanceAdministration.oclIsKindOf(consol::MedicationActivity2))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_JUxPgAFaEeS0nNJt6oyOyQ" general="_iAoXEBVdEeGQCvUGzi1kDQ"/>
      <ownedOperation xmi:id="_v73y8IokEeSkH97cUQxLGA" name="getConsolMedicationActivity2s" bodyCondition="_v73y84okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v73y84okEeSkH97cUQxLGA" name="body" constrainedElement="_v73y8IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v73y9IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(consol::MedicationActivity2)).oclAsType(consol::MedicationActivity2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v73y8YokEeSkH97cUQxLGA" type="_WnSCMOLAEeOc7-TVP7Wi6w" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v73y8ookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_ZgLioAFkEeSJ2uHfynwxCw" name="ProblemSectionEntriesOptional2">
      <ownedComment xmi:id="_iFLCgAFkEeSJ2uHfynwxCw">
        <body>This section lists and describes all relevant clinical problems at the time the document is generated. At a minimum, all pertinent current and historical problems should be listed.  Overall health status may be represented in this section.</body>
      </ownedComment>
      <ownedRule xmi:id="_v74aAIokEeSkH97cUQxLGA" name="ProblemSectionEntriesOptionalTemplateId" constrainedElement="_ZgLioAFkEeSJ2uHfynwxCw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v74aAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.5' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v78rcIokEeSkH97cUQxLGA" name="ProblemSectionEntriesOptionalCodeP" constrainedElement="_ZgLioAFkEeSJ2uHfynwxCw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v78rcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v76PMIokEeSkH97cUQxLGA" name="ProblemSectionEntriesOptionalCode" constrainedElement="_ZgLioAFkEeSJ2uHfynwxCw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v76PMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '11450-4' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v7_HsIokEeSkH97cUQxLGA" name="ProblemSectionEntriesOptionalProblemConcernAct2" constrainedElement="_ZgLioAFkEeSJ2uHfynwxCw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v7_HsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::ProblemConcernAct2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v8A84IokEeSkH97cUQxLGA" name="ProblemSectionEntriesOptional2HealthStatusObservation2" constrainedElement="_ZgLioAFkEeSJ2uHfynwxCw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v8A84YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::HealthStatusObservation2))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_ZgPNAAFkEeSJ2uHfynwxCw" general="_naxrkBVdEeGQCvUGzi1kDQ"/>
      <ownedOperation xmi:id="_v8AV0IokEeSkH97cUQxLGA" name="getConsolProblemConcernAct2s" bodyCondition="_v8AV04okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v8AV04okEeSkH97cUQxLGA" name="body" constrainedElement="_v8AV0IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v8AV1IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::ProblemConcernAct2)).oclAsType(consol::ProblemConcernAct2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v8AV0YokEeSkH97cUQxLGA" type="_y5C8IOzbEeOnE-G4kptBiw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v8AV0ookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v8Bj8IokEeSkH97cUQxLGA" name="getHealthStatusObservation2" bodyCondition="_v8Bj84okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v8Bj84okEeSkH97cUQxLGA" name="body" constrainedElement="_v8Bj8IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v8Bj9IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::HealthStatusObservation2))->asSequence()->any(true).oclAsType(consol::HealthStatusObservation2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v8Bj8YokEeSkH97cUQxLGA" type="_DMvdYOEFEeOmBMTtnrPqww" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v8Bj8ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_ZFbCkAIPEeS-F85KYVlDyA" name="AdvanceDirectivesSection2">
      <ownedComment xmi:id="_z2qQcAIPEeS-F85KYVlDyA">
        <body>This section contains data defining the patient's advance directives and any reference to supporting documentation, including living wills, healthcare proxies, and CPR and resuscitation status. If the referenced documents are available, they can be included in the exchange package.&#xD;
The most recent directives are required, if known, and should be listed in as much detail as possible.&#xD;
This section differentiates between 'advance directives' and 'advance directive documents'. The former is the directions to be followed whereas the latter refers to a legal document containing those directions.</body>
      </ownedComment>
      <ownedRule xmi:id="_v8CLAIokEeSkH97cUQxLGA" name="AdvanceDirectivesSectionEntriesOptionalTemplateId" constrainedElement="_ZFbCkAIPEeS-F85KYVlDyA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v8CLAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.21.1' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v8EAMIokEeSkH97cUQxLGA" name="AdvanceDirectivesSectionEntriesOptionalAdvanceDirectiveOrganizer" constrainedElement="_ZFbCkAIPEeS-F85KYVlDyA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v8EAMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(consol::AdvanceDirectiveOrganizer))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_ZFc3wAIPEeS-F85KYVlDyA" general="_jsKhYAFXEeSLIY0bHb-fFQ"/>
      <ownedOperation xmi:id="_v8EnQIokEeSkH97cUQxLGA" name="getConsolAdvanceDirectiveOrganizers" bodyCondition="_v8FOUYokEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v8FOUYokEeSkH97cUQxLGA" name="body" constrainedElement="_v8EnQIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v8FOUookEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getOrganizers()->select(organizer : cda::Organizer | not organizer.oclIsUndefined() and organizer.oclIsKindOf(consol::AdvanceDirectiveOrganizer)).oclAsType(consol::AdvanceDirectiveOrganizer)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v8EnQYokEeSkH97cUQxLGA" type="_Z8VQYIlFEeOJGtGyq_dBbA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v8FOUIokEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_nWAcMAIjEeSVzfoPSatgpg" name="AllergiesSectionEntriesOptional2">
      <ownedComment xmi:id="_w56bYAIjEeSVzfoPSatgpg">
        <body>This section lists and describes any medication allergies, adverse reactions, idiosyncratic reactions, anaphylaxis/anaphylactoid reactions to food items, and metabolic variations or adverse reactions/allergies to other substances (such as latex, iodine, tape adhesives). At a minimum, it should list currently active and any relevant historical allergies and adverse reactions.</body>
      </ownedComment>
      <ownedRule xmi:id="_v8FOU4okEeSkH97cUQxLGA" name="AllergiesSectionEntriesOptionalTemplateId" constrainedElement="_nWAcMAIjEeSVzfoPSatgpg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v8F1YIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.6' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v8JfwIokEeSkH97cUQxLGA" name="AllergiesSectionEntriesOptionalCodeP" constrainedElement="_nWAcMAIjEeSVzfoPSatgpg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v8JfwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v8HqkIokEeSkH97cUQxLGA" name="AllergiesSectionEntriesOptionalCode" constrainedElement="_nWAcMAIjEeSVzfoPSatgpg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v8HqkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '48765-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v8L8AIokEeSkH97cUQxLGA" name="AllergiesSectionEntriesOptionalAllergyConcernAct2" constrainedElement="_nWAcMAIjEeSVzfoPSatgpg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v8L8AYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::AllergyConcernAct2))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_nWC4cAIjEeSVzfoPSatgpg" general="_bGzYgBVdEeGQCvUGzi1kDQ"/>
      <ownedOperation xmi:id="_v8NKIIokEeSkH97cUQxLGA" name="getConsolAllergyConcernAct2s" bodyCondition="_v8NKI4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v8NKI4okEeSkH97cUQxLGA" name="body" constrainedElement="_v8NKIIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v8NKJIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::AllergyConcernAct2)).oclAsType(consol::AllergyConcernAct2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v8NKIYokEeSkH97cUQxLGA" type="_uCiIYLNwEeOtlapy2HWYww" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v8NKIookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_EONPMAInEeSr1aKUYorURA" name="AllergiesSection2">
      <ownedComment xmi:id="_MQKTcAInEeSr1aKUYorURA">
        <body>This section lists and describes any medication allergies, adverse reactions, idiosyncratic reactions, anaphylaxis/anaphylactoid reactions to food items, and metabolic variations or adverse reactions/allergies to other substances (such as latex, iodine, tape adhesives). At a minimum, it should list currently active and any relevant historical allergies and adverse reactions.</body>
      </ownedComment>
      <ownedRule xmi:id="_v8NxMIokEeSkH97cUQxLGA" name="AllergiesSectionEntriesOptionalTemplateId" constrainedElement="_EONPMAInEeSr1aKUYorURA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v8NxMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.6.1' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v8SCoIokEeSkH97cUQxLGA" name="AllergiesSectionEntriesOptionalCodeP" constrainedElement="_EONPMAInEeSr1aKUYorURA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v8SCoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v8PmYIokEeSkH97cUQxLGA" name="AllergiesSectionEntriesOptionalCode" constrainedElement="_EONPMAInEeSr1aKUYorURA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v8PmYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '48765-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v8Ue4IokEeSkH97cUQxLGA" name="AllergiesSection2Title" constrainedElement="_EONPMAInEeSr1aKUYorURA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v8Ue4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v8VtAIokEeSkH97cUQxLGA" name="AllergiesSection2Text" constrainedElement="_EONPMAInEeSr1aKUYorURA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v8VtAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v8W7IIokEeSkH97cUQxLGA" name="AllergiesSectionEntriesOptionalAllergyConcernAct2" constrainedElement="_EONPMAInEeSr1aKUYorURA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v8W7IYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::AllergyConcernAct2))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_EOQSgAInEeSr1aKUYorURA" general="_nWAcMAIjEeSVzfoPSatgpg"/>
      <ownedOperation xmi:id="_v8YJQIokEeSkH97cUQxLGA" name="getConsolAllergyConcernAct2s" bodyCondition="_v8YJQ4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v8YJQ4okEeSkH97cUQxLGA" name="body" constrainedElement="_v8YJQIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v8YJRIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::AllergyConcernAct2)).oclAsType(consol::AllergyConcernAct2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v8YJQYokEeSkH97cUQxLGA" type="_uCiIYLNwEeOtlapy2HWYww" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v8YJQookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_ogD-EAIvEeScubSeRE1upQ" name="EncountersSection2">
      <ownedComment xmi:id="_2f59EAIvEeScubSeRE1upQ">
        <body>This section lists and describes any healthcare encounters pertinent to the patient's current health status or historical health history. An encounter is an interaction, regardless of the setting, between a patient and a practitioner who is vested with primary responsibility for diagnosing, evaluating, or treating the patient's condition. It may include visits, appointments, as well as non-face-to-face interactions. It is also a contact between a patient and a practitioner who has primary responsibility (exercising independent judgment) for assessing and treating the patient at a given contact. This section may contain all encounters for the time period being summarized, but should include notable encounters.</body>
      </ownedComment>
      <ownedRule xmi:id="_v8YwUIokEeSkH97cUQxLGA" name="EncountersSectionEntriesOptionalTemplateId" constrainedElement="_ogD-EAIvEeScubSeRE1upQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v8YwUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.22.1' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v8do0IokEeSkH97cUQxLGA" name="EncountersSectionEntriesOptionalCodeP" constrainedElement="_ogD-EAIvEeScubSeRE1upQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v8do0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v8bMkIokEeSkH97cUQxLGA" name="EncountersSectionEntriesOptionalCode" constrainedElement="_ogD-EAIvEeScubSeRE1upQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v8bMkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '46240-8' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v8gFEIokEeSkH97cUQxLGA" name="EncountersSection2Text" constrainedElement="_ogD-EAIvEeScubSeRE1upQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v8gFEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v8hTMIokEeSkH97cUQxLGA" name="EncountersSection2Title" constrainedElement="_ogD-EAIvEeScubSeRE1upQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v8hTMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v8ihUIokEeSkH97cUQxLGA" name="EncountersSectionEntriesOptionalEncounterActivity2" constrainedElement="_ogD-EAIvEeScubSeRE1upQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v8ihUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.encounter.oclIsUndefined() and entry.encounter.oclIsKindOf(consol::EncounterActivity2))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_ogHBYAIvEeScubSeRE1upQ" general="_kgM0YPvbEeOJwYDYIUCQDg"/>
      <ownedOperation xmi:id="_v8jIYIokEeSkH97cUQxLGA" name="getConsolEncounterActivity2s" bodyCondition="_v8jIY4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v8jIY4okEeSkH97cUQxLGA" name="body" constrainedElement="_v8jIYIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v8jIZIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getEncounters()->select(encounter : cda::Encounter | not encounter.oclIsUndefined() and encounter.oclIsKindOf(consol::EncounterActivity2)).oclAsType(consol::EncounterActivity2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v8jIYYokEeSkH97cUQxLGA" type="_RGU34MzDEeO93sHu8pHB2g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v8jIYookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Jt0moAI0EeSRkrs1G7P_XQ" name="DischargeMedicationsSection2">
      <ownedComment xmi:id="_RgJTcAI0EeSRkrs1G7P_XQ">
        <body>This section defines the medications that the patient is intended to take (or stop) after discharge. At a minimum, the currently active medications should be listed, with an entire medication history as an option. &#xD;
It may also include a patient's prescription history and indicate the source of the medication list, (e.g. a pharmacy system, patient).</body>
      </ownedComment>
      <ownedRule xmi:id="_v8kWgIokEeSkH97cUQxLGA" name="HospitalDischargeMedicationsSectionEntriesOptionalTemplateId" constrainedElement="_Jt0moAI0EeSRkrs1G7P_XQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v8kWgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.11.1' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v8on8IokEeSkH97cUQxLGA" name="DischargeMedicationsSection2CodeP" constrainedElement="_Jt0moAI0EeSRkrs1G7P_XQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v8on8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v8mLsIokEeSkH97cUQxLGA" name="DischargeMedicationsSection2Code" constrainedElement="_Jt0moAI0EeSRkrs1G7P_XQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v8mLsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '10183-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v8rEMIokEeSkH97cUQxLGA" name="DischargeMedicationsSection2Title" constrainedElement="_Jt0moAI0EeSRkrs1G7P_XQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v8rEMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v8sSUIokEeSkH97cUQxLGA" name="DischargeMedicationsSection2Text" constrainedElement="_Jt0moAI0EeSRkrs1G7P_XQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v8sSUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v8tgcIokEeSkH97cUQxLGA" name="HospitalDischargeMedicationsSectionEntriesOptionalDischargeMedication2" constrainedElement="_Jt0moAI0EeSRkrs1G7P_XQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v8tgcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::DischargeMedication2))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Jt3p8AI0EeSRkrs1G7P_XQ" general="_HlfBYPyzEeOfAK77IvEBUw"/>
      <ownedOperation xmi:id="_v8uukIokEeSkH97cUQxLGA" name="getConsolDischargeMedication2s" bodyCondition="_v8uuk4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v8uuk4okEeSkH97cUQxLGA" name="body" constrainedElement="_v8uukIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v8uulIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::DischargeMedication2)).oclAsType(consol::DischargeMedication2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v8uukYokEeSkH97cUQxLGA" type="_EIeu8MyjEeO93sHu8pHB2g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v8uukookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_14bikALNEeSIPYXg7AgJzw" name="ImmunizationsSection2">
      <ownedComment xmi:id="_64PrgALNEeSIPYXg7AgJzw">
        <body>The Immunizations section defines a patient's current immunization status and pertinent immunization history. The primary use case for the Immunization section is to enable communication of a patient's immunization status. The section should include current immunization status, and may contain the entire immunization history that is relevant to the period of time being summarized.</body>
      </ownedComment>
      <ownedRule xmi:id="_v8vVoIokEeSkH97cUQxLGA" name="ImmunizationsSectionEntriesOptionalTemplateId" constrainedElement="_14bikALNEeSIPYXg7AgJzw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v8vVoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.2.1' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v8znEIokEeSkH97cUQxLGA" name="ImmunizationsSectionEntriesOptionalCodeP" constrainedElement="_14bikALNEeSIPYXg7AgJzw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v8znEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v8xx4IokEeSkH97cUQxLGA" name="ImmunizationsSectionEntriesOptionalCode" constrainedElement="_14bikALNEeSIPYXg7AgJzw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v8xx4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '11369-6' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v82DUIokEeSkH97cUQxLGA" name="ImmunizationsSection2Title" constrainedElement="_14bikALNEeSIPYXg7AgJzw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v82DUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v83RcIokEeSkH97cUQxLGA" name="ImmunizationsSection2Text" constrainedElement="_14bikALNEeSIPYXg7AgJzw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v83RcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v85GoIokEeSkH97cUQxLGA" name="ImmunizationsSectionEntriesOptionalImmunizationActivity2" constrainedElement="_14bikALNEeSIPYXg7AgJzw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v85GoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.substanceAdministration.oclIsUndefined() and entry.substanceAdministration.oclIsKindOf(consol::ImmunizationActivity2))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_14dXwALNEeSIPYXg7AgJzw" general="_kdQhIPy3EeO1SvUcmWeLDQ"/>
      <ownedOperation xmi:id="_v85tsIokEeSkH97cUQxLGA" name="getConsolImmunizationActivity2s" bodyCondition="_v85ts4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v85ts4okEeSkH97cUQxLGA" name="body" constrainedElement="_v85tsIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v85ttIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(consol::ImmunizationActivity2)).oclAsType(consol::ImmunizationActivity2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v85tsYokEeSkH97cUQxLGA" type="_zI6vcOE7EeOTq9XEMvvkWw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v85tsookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_P2mp4ALQEeS0YMHMf4rRtQ" name="MedicationsSection2">
      <ownedComment xmi:id="_w0ZgoALQEeS0YMHMf4rRtQ">
        <body>The Medications Section contains a patient's current medications and pertinent medication history. At a minimum, the currently active medications are listed. An entire medication history is an option. The section can describe a patient's prescription and dispense history and information about intended drug monitoring. &#xD;
This section requires either an entry indicating the subject is not known to be on any medications or entries summarizing the subject's medications.</body>
      </ownedComment>
      <ownedRule xmi:id="_fcsjEALSEeS0YMHMf4rRtQ" name="MedicationsSection2AbsenceOfMedications">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fcsjEQLSEeS0YMHMf4rRtQ">
          <language>OCL</language>
          <body>true</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v8670IokEeSkH97cUQxLGA" name="MedicationsSectionEntriesOptionalTemplateId" constrainedElement="_P2mp4ALQEeS0YMHMf4rRtQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v8670YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.1.1' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v8_NQIokEeSkH97cUQxLGA" name="MedicationsSectionEntriesOptionalCodeP" constrainedElement="_P2mp4ALQEeS0YMHMf4rRtQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v8_NQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v88xAIokEeSkH97cUQxLGA" name="MedicationsSectionEntriesOptionalCode" constrainedElement="_P2mp4ALQEeS0YMHMf4rRtQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v88xAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '10160-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v9BpgIokEeSkH97cUQxLGA" name="MedicationsSection2Title" constrainedElement="_P2mp4ALQEeS0YMHMf4rRtQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v9BpgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v9DesIokEeSkH97cUQxLGA" name="MedicationsSection2Text" constrainedElement="_P2mp4ALQEeS0YMHMf4rRtQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v9DesYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v9Es0IokEeSkH97cUQxLGA" name="MedicationsSectionEntriesOptionalMedicationActivity2" constrainedElement="_P2mp4ALQEeS0YMHMf4rRtQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v9Es0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.substanceAdministration.oclIsUndefined() and entry.substanceAdministration.oclIsKindOf(consol::MedicationActivity2))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_P2ofEALQEeS0YMHMf4rRtQ" general="_JUvaUAFaEeS0nNJt6oyOyQ"/>
      <ownedOperation xmi:id="_v9FT4IokEeSkH97cUQxLGA" name="getConsolMedicationActivity2s" bodyCondition="_v9F68YokEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v9F68YokEeSkH97cUQxLGA" name="body" constrainedElement="_v9FT4IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v9F68ookEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(consol::MedicationActivity2)).oclAsType(consol::MedicationActivity2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v9FT4YokEeSkH97cUQxLGA" type="_WnSCMOLAEeOc7-TVP7Wi6w" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v9F68IokEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_IXrA4ALVEeSyydFGYJajGA" name="ProblemSection2">
      <ownedComment xmi:id="_1M5_sALVEeSyydFGYJajGA">
        <body>This section lists and describes all relevant clinical problems at the time the document is generated. At a minimum, all pertinent current and historical problems should be listed.  Overall health status may be represented in this section.</body>
      </ownedComment>
      <ownedRule xmi:id="_v9GiAIokEeSkH97cUQxLGA" name="ProblemSectionEntriesOptionalTemplateId" constrainedElement="_IXrA4ALVEeSyydFGYJajGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v9GiAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.5.1' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v9KzcIokEeSkH97cUQxLGA" name="ProblemSectionEntriesOptionalCodeP" constrainedElement="_IXrA4ALVEeSyydFGYJajGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v9KzcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v9IXMIokEeSkH97cUQxLGA" name="ProblemSectionEntriesOptionalCode" constrainedElement="_IXrA4ALVEeSyydFGYJajGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v9IXMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '11450-4' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v9NPsIokEeSkH97cUQxLGA" name="ProblemSection2Title" constrainedElement="_IXrA4ALVEeSyydFGYJajGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v9NPsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v9Od0IokEeSkH97cUQxLGA" name="ProblemSection2Text" constrainedElement="_IXrA4ALVEeSyydFGYJajGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v9PE4IokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v9QTAIokEeSkH97cUQxLGA" name="ProblemSectionEntriesOptionalProblemConcernAct2" constrainedElement="_IXrA4ALVEeSyydFGYJajGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v9QTAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::ProblemConcernAct2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v9SIMIokEeSkH97cUQxLGA" name="ProblemSectionEntriesOptional2HealthStatusObservation2" constrainedElement="_IXrA4ALVEeSyydFGYJajGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v9SIMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::HealthStatusObservation2))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_IXs2EALVEeSyydFGYJajGA" general="_ZgLioAFkEeSJ2uHfynwxCw"/>
      <ownedOperation xmi:id="_v9Q6EIokEeSkH97cUQxLGA" name="getConsolProblemConcernAct2s" bodyCondition="_v9RhIIokEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v9RhIIokEeSkH97cUQxLGA" name="body" constrainedElement="_v9Q6EIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v9RhIYokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::ProblemConcernAct2)).oclAsType(consol::ProblemConcernAct2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v9Q6EYokEeSkH97cUQxLGA" type="_y5C8IOzbEeOnE-G4kptBiw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v9Q6EookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v9TWUIokEeSkH97cUQxLGA" name="getConsolHealthStatusObservation2" bodyCondition="_v9TWU4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v9TWU4okEeSkH97cUQxLGA" name="body" constrainedElement="_v9TWUIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v9TWVIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::HealthStatusObservation2))->asSequence()->any(true).oclAsType(consol::HealthStatusObservation2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v9TWUYokEeSkH97cUQxLGA" type="_DMvdYOEFEeOmBMTtnrPqww" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v9TWUookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_N6wUUALoEeSBA9s7kRnaEg" name="ProceduresSection2">
      <ownedComment xmi:id="_S_JbQALoEeSBA9s7kRnaEg">
        <body>This section describes all interventional, surgical, diagnostic, or therapeutic procedures or treatments pertinent to the patient historically at the time the document is generated. The section should include notable procedures, but can contain all procedures for the period of time being summarized. The common notion of &quot;procedure&quot; is broader than that specified by the HL7 Version 3 Reference Information Model (RIM), therefore this section contains procedure templates represented with three RIM classes: Act. Observation, and Procedure. Procedure act is for procedures that alter the physical condition of a patient (e.g., splenectomy). Observation act is for procedures that result in new information about a patient but do not cause physical alteration (e.g., EEG). Act is for all other types of procedures (e.g., dressing change).</body>
      </ownedComment>
      <ownedRule xmi:id="_kd9woALqEeSBA9s7kRnaEg" name="ProceduresSection2HasProcedureActivity">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kd9woQLqEeSBA9s7kRnaEg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies self.getActs()->exists(a : cda::Act | a.oclIsKindOf(consol::ProcedureActivityAct)) or self.getObservations()->exists(o : cda::Observation | o.oclIsKindOf(consol::ProcedureActivityObservation)) or self.getProcedures()->exists(p : cda::Procedure | p.oclIsKindOf(consol::ProcedureActivityProcedure))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v9T9YIokEeSkH97cUQxLGA" name="ProceduresSectionEntriesOptionalTemplateId" constrainedElement="_N6wUUALoEeSBA9s7kRnaEg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v9T9YYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.7.1' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v9Y14IokEeSkH97cUQxLGA" name="ProceduresSectionEntriesOptionalCodeP" constrainedElement="_N6wUUALoEeSBA9s7kRnaEg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v9Y14YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v9WZoIokEeSkH97cUQxLGA" name="ProceduresSectionEntriesOptionalCode" constrainedElement="_N6wUUALoEeSBA9s7kRnaEg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v9WZoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '47519-4' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v9bSIIokEeSkH97cUQxLGA" name="ProceduresSection2Title" constrainedElement="_N6wUUALoEeSBA9s7kRnaEg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v9bSIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v9cgQIokEeSkH97cUQxLGA" name="ProceduresSection2Text" constrainedElement="_N6wUUALoEeSBA9s7kRnaEg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v9cgQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v9eVcIokEeSkH97cUQxLGA" name="ProceduresSectionEntriesOptionalProcedureActivityProcedure2" constrainedElement="_N6wUUALoEeSBA9s7kRnaEg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v9eVcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.procedure.oclIsUndefined() and entry.procedure.oclIsKindOf(consol::ProcedureActivityProcedure2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v9fjkIokEeSkH97cUQxLGA" name="ProceduresSectionEntriesOptionalProcedureActivityObservation2" constrainedElement="_N6wUUALoEeSBA9s7kRnaEg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v9fjkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::ProcedureActivityObservation2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v9gxsIokEeSkH97cUQxLGA" name="ProceduresSectionEntriesOptionalProcedureActivityAct2" constrainedElement="_N6wUUALoEeSBA9s7kRnaEg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v9gxsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::ProcedureActivityAct2))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_N6zXoALoEeSBA9s7kRnaEg" general="_80dMoAB0EeSLOb2O6vSPzg"/>
      <ownedOperation xmi:id="_v9e8gIokEeSkH97cUQxLGA" name="getConsolProcedureActivityProcedure2s" bodyCondition="_v9e8g4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v9e8g4okEeSkH97cUQxLGA" name="body" constrainedElement="_v9e8gIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v9e8hIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getProcedures()->select(procedure : cda::Procedure | not procedure.oclIsUndefined() and procedure.oclIsKindOf(consol::ProcedureActivityProcedure2)).oclAsType(consol::ProcedureActivityProcedure2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v9e8gYokEeSkH97cUQxLGA" type="_fCVOQPDqEeOKPKE9au0oug" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v9e8gookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v9gKoIokEeSkH97cUQxLGA" name="getConsolProcedureActivityObservation2s" bodyCondition="_v9gKo4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v9gKo4okEeSkH97cUQxLGA" name="body" constrainedElement="_v9gKoIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v9gKpIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::ProcedureActivityObservation2)).oclAsType(consol::ProcedureActivityObservation2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v9gKoYokEeSkH97cUQxLGA" type="_QoLWAPDjEeOKPKE9au0oug" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v9gKoookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v9hYwIokEeSkH97cUQxLGA" name="getConsolProcedureActivityAct2s" bodyCondition="_v9hYw4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v9hYw4okEeSkH97cUQxLGA" name="body" constrainedElement="_v9hYwIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v9hYxIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(consol::ProcedureActivityAct2)).oclAsType(consol::ProcedureActivityAct2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v9hYwYokEeSkH97cUQxLGA" type="_CFMuYPDbEeOKPKE9au0oug" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v9hYwookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_bAAhEALtEeSueJWOLw5iaQ" name="ResultsSection2">
      <ownedComment xmi:id="_gHqXYALtEeSueJWOLw5iaQ">
        <body>The Results section contains observations of results generated by laboratories, imaging procedures, and other procedures. These coded result observations are contained within a Results Organizer in the Results Section. The scope includes observations such as hematology, chemistry, serology, virology, toxicology, microbiology, plain x-ray, ultrasound, CT, MRI, angiography, echocardiography, nuclear medicine, pathology, and procedure observations. The section often includes notable results such as abnormal values or relevant trends, and could contain all results for the period of time being documented.&#xD;
Laboratory results are typically generated by laboratories providing analytic services in areas such as chemistry, hematology, serology, histology, cytology, anatomic pathology, microbiology, and/or virology. These observations are based on analysis of specimens obtained from the patient and submitted to the laboratory.&#xD;
Imaging results are typically generated by a clinician reviewing the output of an imaging procedure, such as where a cardiologist reports the left ventricular ejection fraction based on the review of a cardiac echocardiogram.&#xD;
Procedure results are typically generated by a clinician to provide more granular information about component observations made during  a procedure, such as where a gastroenterologist reports the size of a polyp observed during a colonoscopy.</body>
      </ownedComment>
      <ownedRule xmi:id="_v9im4IokEeSkH97cUQxLGA" name="ResultsSectionEntriesOptionalTemplateId" constrainedElement="_bAAhEALtEeSueJWOLw5iaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v9im4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.3.1' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v9pUkIokEeSkH97cUQxLGA" name="ResultsSectionEntriesOptionalCodeP" constrainedElement="_bAAhEALtEeSueJWOLw5iaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v9pUkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v9lqMIokEeSkH97cUQxLGA" name="ResultsSectionEntriesOptionalCode" constrainedElement="_bAAhEALtEeSueJWOLw5iaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v9lqMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '30954-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v9s-8IokEeSkH97cUQxLGA" name="ResultsSection2Title" constrainedElement="_bAAhEALtEeSueJWOLw5iaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v9s-8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v9u0IIokEeSkH97cUQxLGA" name="ResultsSection2Text" constrainedElement="_bAAhEALtEeSueJWOLw5iaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v9u0IYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v9xQYIokEeSkH97cUQxLGA" name="ResultsSectionEntriesOptionalResultOrganizer2" constrainedElement="_bAAhEALtEeSueJWOLw5iaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v9xQYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(consol::ResultOrganizer2))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_bAC9UALtEeSueJWOLw5iaQ" general="_yaJ3QAFAEeSaVZ5WxWd94w"/>
      <ownedOperation xmi:id="_v9yegIokEeSkH97cUQxLGA" name="getConsolResultOrganizer2s" bodyCondition="_v9yeg4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v9yeg4okEeSkH97cUQxLGA" name="body" constrainedElement="_v9yegIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v9yehIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getOrganizers()->select(organizer : cda::Organizer | not organizer.oclIsUndefined() and organizer.oclIsKindOf(consol::ResultOrganizer2)).oclAsType(consol::ResultOrganizer2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v9yegYokEeSkH97cUQxLGA" type="_gU40UPGEEeOmsLWmq5fnqQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v9yegookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_D3010ALzEeSM0Jd2D1FgKw" name="VitalSignsSection2">
      <ownedComment xmi:id="_KuBRkALzEeSM0Jd2D1FgKw">
        <body>The Vital Signs Section contains relevant vital signs for the context and use case of the document type, such as blood pressure, heart rate, respiratory rate, height, weight, body mass index, head circumference, pulse oximetry, temperature, and body surface area. The section should include notable vital signs such as the most recent, maximum and/or minimum, baseline, or relevant trends.&#xD;
Vital signs are represented in the same way as other results, but are aggregated into their own section to follow clinical conventions.</body>
      </ownedComment>
      <ownedRule xmi:id="_v9zsoIokEeSkH97cUQxLGA" name="VitalSignsSectionEntriesOptionalTemplateId" constrainedElement="_D3010ALzEeSM0Jd2D1FgKw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v90TsIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.4.1' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v95zQIokEeSkH97cUQxLGA" name="VitalSignsSectionEntriesOptionalCodeP" constrainedElement="_D3010ALzEeSM0Jd2D1FgKw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v95zQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v92v8IokEeSkH97cUQxLGA" name="VitalSignsSectionEntriesOptionalCode" constrainedElement="_D3010ALzEeSM0Jd2D1FgKw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v92v8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '8716-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v98PgIokEeSkH97cUQxLGA" name="VitalSignsSection2Title" constrainedElement="_D3010ALzEeSM0Jd2D1FgKw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v98PgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v99doIokEeSkH97cUQxLGA" name="VitalSignsSection2Text" constrainedElement="_D3010ALzEeSM0Jd2D1FgKw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v99doYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v9_S0IokEeSkH97cUQxLGA" name="VitalSignsSectionEntriesOptionalVitalSignsOrganizer2" constrainedElement="_D3010ALzEeSM0Jd2D1FgKw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v9_54IokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(consol::VitalSignsOrganizer2))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_D33SEALzEeSM0Jd2D1FgKw" general="_8LkzYAFTEeSmasYc71ZgMQ"/>
      <ownedOperation xmi:id="_v-Ag8IokEeSkH97cUQxLGA" name="getConsolVitalSignsOrganizer2s" bodyCondition="_v-Ag84okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v-Ag84okEeSkH97cUQxLGA" name="body" constrainedElement="_v-Ag8IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v-Ag9IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getOrganizers()->select(organizer : cda::Organizer | not organizer.oclIsUndefined() and organizer.oclIsKindOf(consol::VitalSignsOrganizer2)).oclAsType(consol::VitalSignsOrganizer2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v-Ag8YokEeSkH97cUQxLGA" type="_dDupoPV2EeONioZkBKP8eQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v-Ag8ookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_PkP3oCFmEeSt4IEYu7xgbw" name="ConsultationNote2">
      <ownedComment xmi:id="_jfbzsCFmEeSt4IEYu7xgbw">
        <body>The Consultation Note is generated by a request from a clinician for an opinion or advice from another clinician. Consultations may involve face-to-face time with the patient or may fall under the auspices of  tele-medicine visits.&#xD;
A consultation note includes the reason for the referral, history of present illness, physical examination, and decision-making components (Assessment and Plan).</body>
      </ownedComment>
      <ownedRule xmi:id="_OvlKkCGUEeSt4IEYu7xgbw" name="ConsultationNote2HasAnAssementAndPlanSection2OrBothAssementSectionAndPlanOfTreatmentSection2">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_OvlKkSGUEeSt4IEYu7xgbw">
          <language>OCL</language>
          <body>(self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfTreatmentSection2)) and  self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentSection))) xor self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentAndPlanSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_QEkAgCGUEeSt4IEYu7xgbw" name="ConsultationNote2DoesNotHaveAssementAndPlanSection2WhenAssementAndPlanOfTreatment2ArePresent">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_QEkAgSGUEeSt4IEYu7xgbw">
          <language>OCL</language>
          <body>(self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfTreatmentSection2)) or  self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentSection))) xor self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentAndPlanSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ReJCkCGUEeSt4IEYu7xgbw" name="ConsultationNote2HasReasonForReferral2OrReasonForVisit">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ReJCkSGUEeSt4IEYu7xgbw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForReferralSection2)) xor self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v-YUYIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsTemplateId" constrainedElement="_PkP3oCFmEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v-Y7cIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.1.4' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v-heUIokEeSkH97cUQxLGA" name="ConsultationNote2CodeP" constrainedElement="_PkP3oCFmEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v-heUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v-fCEIokEeSkH97cUQxLGA" name="ConsultationNote2Code" constrainedElement="_PkP3oCFmEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v-fCEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = '11488-4' or value.code = '34100-8' or value.code = '34104-0' or value.code = '51845-6' or value.code = '51853-0' or value.code = '51846-4' or value.code = '34101-6' or value.code = '34749-2' or value.code = '34102-4' or value.code = '34099-2' or value.code = '34756-7' or value.code = '34758-3' or value.code = '34760-9' or value.code = '34879-7' or value.code = '34761-7' or value.code = '34764-1' or value.code = '34771-6' or value.code = '34776-5' or value.code = '34777-3' or value.code = '34779-9' or value.code = '34781-5' or value.code = '34783-1' or value.code = '34785-6' or value.code = '34795-5' or value.code = '34797-1' or value.code = '34798-9' or value.code = '34800-3' or value.code = '34803-7' or value.code = '34855-7' or value.code = '34805-2' or value.code = '34807-8' or value.code = '34810-2' or value.code = '34812-8' or value.code = '34814-4' or value.code = '34816-9' or value.code = '34820-1' or value.code = '34822-7' or value.code = '34824-3' or value.code = '34826-8' or value.code = '34828-4' or value.code = '34788-0' or value.code = '34791-4' or value.code = '34103-2' or value.code = '34831-8' or value.code = '34833-4' or value.code = '34835-9' or value.code = '34837-5' or value.code = '34839-1' or value.code = '34841-7' or value.code = '34845-8' or value.code = '34847-4' or value.code = '34849-0' or value.code = '34851-6' or value.code = '34853-2'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v-j6kIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsTitle" constrainedElement="_PkP3oCFmEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v-j6kYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v-5RwIokEeSkH97cUQxLGA" name="ConsultationNote2Participant" constrainedElement="_PkP3oCFmEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v-5RwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->exists(participant : cda::Participant1 | not participant.oclIsUndefined() and participant.oclIsKindOf(cda::Participant1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v-7uAIokEeSkH97cUQxLGA" name="ConsultationNote2InFulfillmentOf" constrainedElement="_PkP3oCFmEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v-7uAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.inFulfillmentOf->exists(inFulfillmentOf : cda::InFulfillmentOf | not inFulfillmentOf.oclIsUndefined() and inFulfillmentOf.oclIsKindOf(cda::InFulfillmentOf))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v-9jMIokEeSkH97cUQxLGA" name="ConsultationNote2ComponentOf" constrainedElement="_PkP3oCFmEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v-9jMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->one(componentOf : cda::Component1 | not componentOf.oclIsUndefined() and componentOf.oclIsKindOf(cda::Component1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v_CbsIokEeSkH97cUQxLGA" name="ConsultationNote2AssessmentSection" constrainedElement="_PkP3oCFmEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v_CbsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v_Dp0IokEeSkH97cUQxLGA" name="ConsultationNote2AssessmentAndPlanSection2" constrainedElement="_PkP3oCFmEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v_EQ4IokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentAndPlanSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v_FfAIokEeSkH97cUQxLGA" name="ConsultationNote2PlanOfTreatmentSection2" constrainedElement="_PkP3oCFmEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v_FfAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfTreatmentSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v_GtI4okEeSkH97cUQxLGA" name="ConsultationNote2ReasonForReferralSection2" constrainedElement="_PkP3oCFmEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v_HUMIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForReferralSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v_IiUIokEeSkH97cUQxLGA" name="ConsultationNote2ReasonForVisitSection" constrainedElement="_PkP3oCFmEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v_IiUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v_KXgIokEeSkH97cUQxLGA" name="ConsultationNote2HistoryOfPresentIllnessSection" constrainedElement="_PkP3oCFmEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v_KXgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HistoryOfPresentIllnessSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v_LloIokEeSkH97cUQxLGA" name="ConsultationNote2PhysicalExamSection2" constrainedElement="_PkP3oCFmEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v_LloYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PhysicalExamSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v_Na0IokEeSkH97cUQxLGA" name="ConsultationNote2AllergiesSection2" constrainedElement="_PkP3oCFmEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v_Na0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v_PQAIokEeSkH97cUQxLGA" name="ConsultationNote2ChiefComplaintSection" constrainedElement="_PkP3oCFmEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v_PQAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v_RFMIokEeSkH97cUQxLGA" name="ConsultationNote2ChiefComplaintAndReasonForVisitSection" constrainedElement="_PkP3oCFmEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v_RFMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v_S6YIokEeSkH97cUQxLGA" name="ConsultationNote2GeneralStatusSection" constrainedElement="_PkP3oCFmEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v_S6YYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::GeneralStatusSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v_UIgIokEeSkH97cUQxLGA" name="ConsultationNote2HistoryOfPastIllnessSection2" constrainedElement="_PkP3oCFmEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v_UIgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HistoryOfPastIllnessSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v_VWoIokEeSkH97cUQxLGA" name="ConsultationNote2ImmunizationsSectionEntriesOptional2" constrainedElement="_PkP3oCFmEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v_VWoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ImmunizationsSectionEntriesOptional2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v_WkwIokEeSkH97cUQxLGA" name="ConsultationNote2MedicationsSection2" constrainedElement="_PkP3oCFmEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v_WkwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v_Xy4IokEeSkH97cUQxLGA" name="ConsultationNote2ProblemSection2" constrainedElement="_PkP3oCFmEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v_Xy4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v_ZBBYokEeSkH97cUQxLGA" name="ConsultationNote2ProceduresSectionEntriesOptional2" constrainedElement="_PkP3oCFmEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v_ZBBookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSectionEntriesOptional2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v_aPI4okEeSkH97cUQxLGA" name="ConsultationNote2ResultsSection2" constrainedElement="_PkP3oCFmEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v_aPJIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ResultsSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v_bdQIokEeSkH97cUQxLGA" name="ConsultationNote2SocialHistorySection2" constrainedElement="_PkP3oCFmEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v_bdQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::SocialHistorySection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v_crYIokEeSkH97cUQxLGA" name="ConsultationNote2VitalSignsSection2" constrainedElement="_PkP3oCFmEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v_crYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v_d5gookEeSkH97cUQxLGA" name="ConsultationNote2AdvanceDirectivesSectionEntriesOptional2" constrainedElement="_PkP3oCFmEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v_d5g4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AdvanceDirectivesSectionEntriesOptional2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v_fHoookEeSkH97cUQxLGA" name="ConsultationNote2FunctionalStatusSection2" constrainedElement="_PkP3oCFmEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v_fHo4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::FunctionalStatusSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v_gVwYokEeSkH97cUQxLGA" name="ConsultationNote2ReviewOfSystemsSection" constrainedElement="_PkP3oCFmEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v_gVwookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReviewOfSystemsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v_hj4IokEeSkH97cUQxLGA" name="ConsultationNote2MedicalEquipmentSection2" constrainedElement="_PkP3oCFmEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v_hj4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicalEquipmentSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v_iyAIokEeSkH97cUQxLGA" name="ConsultationNote2MentalStatusSection" constrainedElement="_PkP3oCFmEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v_iyAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MentalStatusSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v_kAIIokEeSkH97cUQxLGA" name="ConsultationNote2NutritionSection" constrainedElement="_PkP3oCFmEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v_kAIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::NutritionSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_waGAAIokEeSkH97cUQxLGA" name="ConsultationNote2ParticipantAssociatedEntityAssociatedPersonName" constrainedElement="_PkP3oCFmEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_waGAAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).associatedEntity->excluding(null).associatedPerson->excluding(null)->reject((name->isEmpty() or name->exists(element | element.isNullFlavorUndefined())) implies (not name->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_waGnEIokEeSkH97cUQxLGA" name="ConsultationNote2ParticipantAssociatedEntityClassCode" constrainedElement="_PkP3oCFmEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_waGnEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).associatedEntity->excluding(null)->reject(classCode=vocab::RoleClassAssociative::ASSIGNED)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_waGnEookEeSkH97cUQxLGA" name="ConsultationNote2ParticipantAssociatedEntityId" constrainedElement="_PkP3oCFmEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_waGnE4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).associatedEntity->excluding(null)->reject((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_waHOIIokEeSkH97cUQxLGA" name="ConsultationNote2ParticipantAssociatedEntityAddr" constrainedElement="_PkP3oCFmEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_waHOIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).associatedEntity->excluding(null)->reject((addr->isEmpty() or addr->exists(element | element.isNullFlavorUndefined())) implies (not addr->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_waHOIookEeSkH97cUQxLGA" name="ConsultationNote2ParticipantAssociatedEntityTelecom" constrainedElement="_PkP3oCFmEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_waHOI4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).associatedEntity->excluding(null)->reject((telecom->isEmpty() or telecom->exists(element | element.isNullFlavorUndefined())) implies (not telecom->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_waH1MIokEeSkH97cUQxLGA" name="ConsultationNote2ParticipantAssociatedEntityAssociatedPerson" constrainedElement="_PkP3oCFmEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_waH1MYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).associatedEntity->excluding(null)->reject(associatedPerson->one(associatedPerson : cda::Person | not associatedPerson.oclIsUndefined() and associatedPerson.oclIsKindOf(cda::Person)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_waIcQIokEeSkH97cUQxLGA" name="ConsultationNote2ParticipantAssociatedEntityScopingOrganization" constrainedElement="_PkP3oCFmEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_waIcQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).associatedEntity->excluding(null)->reject(scopingOrganization->one(scopingOrganization : cda::Organization | not scopingOrganization.oclIsUndefined() and scopingOrganization.oclIsKindOf(rim::Entity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_waIcQookEeSkH97cUQxLGA" name="ConsultationNote2ParticipantTypeCode" constrainedElement="_PkP3oCFmEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_waIcQ4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->reject(typeCode=vocab::ParticipationType::CALLBCK)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_waJDUIokEeSkH97cUQxLGA" name="ConsultationNote2ParticipantAssociatedEntity" constrainedElement="_PkP3oCFmEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_waJDUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->reject(associatedEntity->one(associatedEntity : cda::AssociatedEntity | not associatedEntity.oclIsUndefined() and associatedEntity.oclIsKindOf(cda::AssociatedEntity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_waK4gIokEeSkH97cUQxLGA" name="ConsultationNote2InFulfillmentOfOrderId" constrainedElement="_PkP3oCFmEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_waK4gYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.inFulfillmentOf->excluding(null).order->excluding(null)->reject((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_waLfkIokEeSkH97cUQxLGA" name="ConsultationNote2InFulfillmentOfOrder" constrainedElement="_PkP3oCFmEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_waLfkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.inFulfillmentOf->excluding(null)->reject(order->one(order : cda::Order | not order.oclIsUndefined() and order.oclIsKindOf(cda::Order)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_waOi4IokEeSkH97cUQxLGA" name="ConsultationNote2ComponentOfEncompassingEncounterResponsiblePartyAssignedEntityHasPersonOrganizationOrBoth" constrainedElement="_PkP3oCFmEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_waOi4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null).responsibleParty->excluding(null)->reject(not assignedEntity.assignedPerson.oclIsUndefined() or not assignedEntity.representedOrganization->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_waPJ8IokEeSkH97cUQxLGA" name="ConsultationNote2ComponentOfEncompassingEncounterResponsiblePartyAssignedEntity" constrainedElement="_PkP3oCFmEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_waPJ8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null).responsibleParty->excluding(null)->reject(assignedEntity->one(assignedEntity : cda::AssignedEntity | not assignedEntity.oclIsUndefined() and assignedEntity.oclIsKindOf(rim::Role)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_waQYEIokEeSkH97cUQxLGA" name="ConsultationNote2ComponentOfEncompassingEncounterEncounterParticipantAssignedEntityHasPersonOrganizationOrBoth" constrainedElement="_PkP3oCFmEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_waQYEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null).encounterParticipant->excluding(null)->reject(not assignedEntity.assignedPerson.oclIsUndefined() or not assignedEntity.representedOrganization->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_waQ_IIokEeSkH97cUQxLGA" name="ConsultationNote2ComponentOfEncompassingEncounterEncounterParticipantAssignedEntity" constrainedElement="_PkP3oCFmEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_waQ_IYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null).encounterParticipant->excluding(null)->reject(assignedEntity->one(assignedEntity : cda::AssignedEntity | not assignedEntity.oclIsUndefined() and assignedEntity.oclIsKindOf(rim::Role)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_waRmMIokEeSkH97cUQxLGA" name="ConsultationNote2ComponentOfEncompassingEncounterPreciseToTheDay" constrainedElement="_PkP3oCFmEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_waRmMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(not effectiveTime.value.oclIsUndefined() implies effectiveTime.value.size() >= 8)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_waSNQIokEeSkH97cUQxLGA" name="ConsultationNote2ComponentOfEncompassingEncounterPreciseToTheMinute" constrainedElement="_PkP3oCFmEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_waSNQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(not effectiveTime.value.oclIsUndefined() implies effectiveTime.value.size() >= 12)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_waS0UIokEeSkH97cUQxLGA" name="ConsultationNote2ComponentOfEncompassingEncounterPreciseToTheSecond" constrainedElement="_PkP3oCFmEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_waS0UYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(not effectiveTime.value.oclIsUndefined() implies effectiveTime.value.size() >= 14)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_waTbYIokEeSkH97cUQxLGA" name="ConsultationNote2ComponentOfEncompassingEncounterIfMorePreciseThanDayIncludeTimeZoneOffset" constrainedElement="_PkP3oCFmEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_waTbYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(not effectiveTime.value.oclIsUndefined() and effectiveTime.value.size() > 8 implies effectiveTime.value.size() >= 15)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_waUCcIokEeSkH97cUQxLGA" name="ConsultationNote2ComponentOfEncompassingEncounterId" constrainedElement="_PkP3oCFmEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_waUCcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_waUpgIokEeSkH97cUQxLGA" name="ConsultationNote2ComponentOfEncompassingEncounterEffectiveTime" constrainedElement="_PkP3oCFmEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_waUpgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject((effectiveTime.oclIsUndefined() or effectiveTime.isNullFlavorUndefined()) implies (not effectiveTime.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_waVQkIokEeSkH97cUQxLGA" name="ConsultationNote2ComponentOfEncompassingEncounterResponsibleParty" constrainedElement="_PkP3oCFmEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_waVQkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(responsibleParty->one(responsibleParty : cda::ResponsibleParty | not responsibleParty.oclIsUndefined() and responsibleParty.oclIsKindOf(cda::ResponsibleParty)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_waV3oIokEeSkH97cUQxLGA" name="ConsultationNote2ComponentOfEncompassingEncounterEncounterParticipant" constrainedElement="_PkP3oCFmEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_waV3oYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(encounterParticipant->exists(encounterParticipant : cda::EncounterParticipant | not encounterParticipant.oclIsUndefined() and encounterParticipant.oclIsKindOf(cda::EncounterParticipant)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_waV3oookEeSkH97cUQxLGA" name="ConsultationNote2ComponentOfEncompassingEncounter" constrainedElement="_PkP3oCFmEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_waV3o4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null)->reject(encompassingEncounter->one(encompassingEncounter : cda::EncompassingEncounter | not encompassingEncounter.oclIsUndefined() and encompassingEncounter.oclIsKindOf(cda::EncompassingEncounter)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_PkS68CFmEeSt4IEYu7xgbw" general="_dduXkJ5OEeOr4eM3k36wAg"/>
      <ownedOperation xmi:id="_v_DCwIokEeSkH97cUQxLGA" name="getAssessmentSection" bodyCondition="_v_DCw4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v_DCw4okEeSkH97cUQxLGA" name="body" constrainedElement="_v_DCwIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v_DCxIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentSection))->asSequence()->any(true).oclAsType(consol::AssessmentSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v_DCwYokEeSkH97cUQxLGA" type="_W8pI4DszEeGvzMYhXuqAEA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v_DCwookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v_E38IokEeSkH97cUQxLGA" name="getAssessmentAndPlanSection2" bodyCondition="_v_E384okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v_E384okEeSkH97cUQxLGA" name="body" constrainedElement="_v_E38IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v_E39IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentAndPlanSection2))->asSequence()->any(true).oclAsType(consol::AssessmentAndPlanSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v_E38YokEeSkH97cUQxLGA" type="_q_8twPvVEeOvZJBdQKQrqQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v_E38ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v_GGEIokEeSkH97cUQxLGA" name="getPlanOfTreatmentSection2" bodyCondition="_v_GtIYokEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v_GtIYokEeSkH97cUQxLGA" name="body" constrainedElement="_v_GGEIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v_GtIookEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfTreatmentSection2))->asSequence()->any(true).oclAsType(consol::PlanOfTreatmentSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v_GGEYokEeSkH97cUQxLGA" type="_bwml0P4yEeO_Yb9cO8w3bA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v_GtIIokEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v_H7QIokEeSkH97cUQxLGA" name="getReasonForReferralSection2" bodyCondition="_v_H7Q4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v_H7Q4okEeSkH97cUQxLGA" name="body" constrainedElement="_v_H7QIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v_H7RIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForReferralSection2))->asSequence()->any(true).oclAsType(consol::ReasonForReferralSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v_H7QYokEeSkH97cUQxLGA" type="_Ya0H0AB5EeS20Pddu0dxVw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v_H7QookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v_JwcIokEeSkH97cUQxLGA" name="getReasonForVisitSection" bodyCondition="_v_Jwc4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v_Jwc4okEeSkH97cUQxLGA" name="body" constrainedElement="_v_JwcIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v_JwdIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))->asSequence()->any(true).oclAsType(consol::ReasonForVisitSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v_JwcYokEeSkH97cUQxLGA" type="_Nm64UCscEeGHF88-qhhUMA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v_JwcookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v_K-kIokEeSkH97cUQxLGA" name="getHistoryOfPresentIllnessSection" bodyCondition="_v_K-k4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v_K-k4okEeSkH97cUQxLGA" name="body" constrainedElement="_v_K-kIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v_K-lIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HistoryOfPresentIllnessSection))->asSequence()->any(true).oclAsType(consol::HistoryOfPresentIllnessSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v_K-kYokEeSkH97cUQxLGA" type="_2PcWsRSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v_K-kookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v_MzwIokEeSkH97cUQxLGA" name="getPhysicalExamSection2" bodyCondition="_v_Mzw4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v_Mzw4okEeSkH97cUQxLGA" name="body" constrainedElement="_v_MzwIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v_MzxIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PhysicalExamSection2))->asSequence()->any(true).oclAsType(consol::PhysicalExamSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v_MzwYokEeSkH97cUQxLGA" type="_-nZiYP4uEeObaveuCI77uA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v_MzwookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v_Oo8IokEeSkH97cUQxLGA" name="getAllergiesSection2" bodyCondition="_v_Oo84okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v_Oo84okEeSkH97cUQxLGA" name="body" constrainedElement="_v_Oo8IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v_Oo9IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSection2))->asSequence()->any(true).oclAsType(consol::AllergiesSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v_Oo8YokEeSkH97cUQxLGA" type="_EONPMAInEeSr1aKUYorURA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v_Oo8ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v_QeIIokEeSkH97cUQxLGA" name="getChiefComplaintSection" bodyCondition="_v_QeI4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v_QeI4okEeSkH97cUQxLGA" name="body" constrainedElement="_v_QeIIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v_QeJIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection))->asSequence()->any(true).oclAsType(consol::ChiefComplaintSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v_QeIYokEeSkH97cUQxLGA" type="_2PWQCBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v_QeIookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v_STUIokEeSkH97cUQxLGA" name="getChiefComplaintAndReasonForVisitSection" bodyCondition="_v_STU4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v_STU4okEeSkH97cUQxLGA" name="body" constrainedElement="_v_STUIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v_STVIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))->asSequence()->any(true).oclAsType(consol::ChiefComplaintAndReasonForVisitSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v_STUYokEeSkH97cUQxLGA" type="_oI7CQCsaEeGHF88-qhhUMA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v_STUookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v_ThcIokEeSkH97cUQxLGA" name="getGeneralStatusSection" bodyCondition="_v_Thc4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v_Thc4okEeSkH97cUQxLGA" name="body" constrainedElement="_v_ThcIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v_ThdIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::GeneralStatusSection))->asSequence()->any(true).oclAsType(consol::GeneralStatusSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v_ThcYokEeSkH97cUQxLGA" type="_2Pxt6xSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v_ThcookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v_UvkIokEeSkH97cUQxLGA" name="getHistoryOfPastIllnessSection2" bodyCondition="_v_Uvk4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v_Uvk4okEeSkH97cUQxLGA" name="body" constrainedElement="_v_UvkIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v_UvlIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HistoryOfPastIllnessSection2))->asSequence()->any(true).oclAsType(consol::HistoryOfPastIllnessSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v_UvkYokEeSkH97cUQxLGA" type="_sZlggPyhEeOC19UEcu7MOw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v_UvkookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v_V9sIokEeSkH97cUQxLGA" name="getImmunizationsSectionEntriesOptional2" bodyCondition="_v_V9s4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v_V9s4okEeSkH97cUQxLGA" name="body" constrainedElement="_v_V9sIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v_V9tIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ImmunizationsSectionEntriesOptional2))->asSequence()->any(true).oclAsType(consol::ImmunizationsSectionEntriesOptional2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v_V9sYokEeSkH97cUQxLGA" type="_kdQhIPy3EeO1SvUcmWeLDQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v_V9sookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v_XL0IokEeSkH97cUQxLGA" name="getMedicationsSection2" bodyCondition="_v_XL04okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v_XL04okEeSkH97cUQxLGA" name="body" constrainedElement="_v_XL0IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v_XL1IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsSection2))->asSequence()->any(true).oclAsType(consol::MedicationsSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v_XL0YokEeSkH97cUQxLGA" type="_P2mp4ALQEeS0YMHMf4rRtQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v_XL0ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v_ZBAIokEeSkH97cUQxLGA" name="getProblemSection2" bodyCondition="_v_ZBA4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v_ZBA4okEeSkH97cUQxLGA" name="body" constrainedElement="_v_ZBAIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v_ZBBIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSection2))->asSequence()->any(true).oclAsType(consol::ProblemSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v_ZBAYokEeSkH97cUQxLGA" type="_IXrA4ALVEeSyydFGYJajGA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v_ZBAookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v_ZoEIokEeSkH97cUQxLGA" name="getProceduresSectionEntriesOptional2" bodyCondition="_v_aPIYokEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v_aPIYokEeSkH97cUQxLGA" name="body" constrainedElement="_v_ZoEIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v_aPIookEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSectionEntriesOptional2))->asSequence()->any(true).oclAsType(consol::ProceduresSectionEntriesOptional2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v_ZoEYokEeSkH97cUQxLGA" type="_80dMoAB0EeSLOb2O6vSPzg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v_aPIIokEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v_a2MIokEeSkH97cUQxLGA" name="getResultsSection2" bodyCondition="_v_a2M4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v_a2M4okEeSkH97cUQxLGA" name="body" constrainedElement="_v_a2MIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v_a2NIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ResultsSection2))->asSequence()->any(true).oclAsType(consol::ResultsSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v_a2MYokEeSkH97cUQxLGA" type="_bAAhEALtEeSueJWOLw5iaQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v_a2MookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v_cEUIokEeSkH97cUQxLGA" name="getSocialHistorySection2" bodyCondition="_v_cEU4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v_cEU4okEeSkH97cUQxLGA" name="body" constrainedElement="_v_cEUIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v_cEVIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::SocialHistorySection2))->asSequence()->any(true).oclAsType(consol::SocialHistorySection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v_cEUYokEeSkH97cUQxLGA" type="_wLWZMAFHEeSG_MJH-zNFRw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v_cEUookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v_dScIokEeSkH97cUQxLGA" name="getVitalSignsSection2" bodyCondition="_v_d5gIokEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v_d5gIokEeSkH97cUQxLGA" name="body" constrainedElement="_v_dScIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v_d5gYokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSection2))->asSequence()->any(true).oclAsType(consol::VitalSignsSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v_dScYokEeSkH97cUQxLGA" type="_D3010ALzEeSM0Jd2D1FgKw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v_dScookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v_egkIokEeSkH97cUQxLGA" name="getAdvanceDirectivesSectionEntriesOptional2" bodyCondition="_v_fHoIokEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v_fHoIokEeSkH97cUQxLGA" name="body" constrainedElement="_v_egkIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v_fHoYokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AdvanceDirectivesSectionEntriesOptional2))->asSequence()->any(true).oclAsType(consol::AdvanceDirectivesSectionEntriesOptional2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v_egkYokEeSkH97cUQxLGA" type="_jsKhYAFXEeSLIY0bHb-fFQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v_egkookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v_fusIokEeSkH97cUQxLGA" name="getFunctionalStatusSection2" bodyCondition="_v_fus4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v_fus4okEeSkH97cUQxLGA" name="body" constrainedElement="_v_fusIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v_gVwIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::FunctionalStatusSection2))->asSequence()->any(true).oclAsType(consol::FunctionalStatusSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v_fusYokEeSkH97cUQxLGA" type="_8rMFkPyHEeOozpLKXSm5NA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v_fusookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v_g80IokEeSkH97cUQxLGA" name="getReviewOfSystemsSection" bodyCondition="_v_g804okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v_g804okEeSkH97cUQxLGA" name="body" constrainedElement="_v_g80IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v_g81IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReviewOfSystemsSection))->asSequence()->any(true).oclAsType(consol::ReviewOfSystemsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v_g80YokEeSkH97cUQxLGA" type="_2RqkMBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v_g80ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v_iK8IokEeSkH97cUQxLGA" name="getMedicalEquipmentSection2" bodyCondition="_v_iK84okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v_iK84okEeSkH97cUQxLGA" name="body" constrainedElement="_v_iK8IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v_iK9IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicalEquipmentSection2))->asSequence()->any(true).oclAsType(consol::MedicalEquipmentSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v_iK8YokEeSkH97cUQxLGA" type="_5OKxwP1bEeO5Hq-yrsJSmg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v_iK8ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v_jZEIokEeSkH97cUQxLGA" name="getMentalStatusSection" bodyCondition="_v_jZE4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v_jZE4okEeSkH97cUQxLGA" name="body" constrainedElement="_v_jZEIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v_jZFIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MentalStatusSection))->asSequence()->any(true).oclAsType(consol::MentalStatusSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v_jZEYokEeSkH97cUQxLGA" type="_4tfOMJ2CEeORR8_YW0n_jQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v_jZEookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v_knMIokEeSkH97cUQxLGA" name="getNutritionSection" bodyCondition="_v_knM4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v_knM4okEeSkH97cUQxLGA" name="body" constrainedElement="_v_knMIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v_knNIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::NutritionSection))->asSequence()->any(true).oclAsType(consol::NutritionSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v_knMYokEeSkH97cUQxLGA" type="_MlM4IJ2GEeORR8_YW0n_jQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v_knMookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_lPMNYCGjEeSt4IEYu7xgbw" name="ContinuityOfCareDocument2">
      <ownedComment xmi:id="_-z2TYCGjEeSt4IEYu7xgbw">
        <body>The Continuity of Care Document (CCD) represents a core data set of the most relevant administrative, demographic, and clinical information facts about a patient's healthcare, covering one or more healthcare encounters. It provides a means for one healthcare practitioner, system, or setting to aggregate all of the pertinent data about a patient and forward it to another to support the continuity of care.  &#xD;
The primary use case for the CCD is to provide a snapshot in time containing the germane clinical, demographic, and administrative data for a specific patient. More specific use cases, such as a Discharge Summary, Transfer Summary, Referral Note, Consultation Note, or Progress Note, are available as alternative documents in this guide.</body>
      </ownedComment>
      <ownedRule xmi:id="_v_l1UIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsTemplateId" constrainedElement="_lPMNYCGjEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v_l1UYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.1.2' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v_qGwIokEeSkH97cUQxLGA" name="ContinuityOfCareDocument2CodeP" constrainedElement="_lPMNYCGjEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v_qGwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v_nqgIokEeSkH97cUQxLGA" name="ContinuityOfCareDocument2Code" constrainedElement="_lPMNYCGjEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v_nqgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '34133-9' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v_2UAIokEeSkH97cUQxLGA" name="ContinuityOfCareDocument2Author" constrainedElement="_lPMNYCGjEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v_2UAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->exists(author : cda::Author | not author.oclIsUndefined() and author.oclIsKindOf(cda::Author))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v_4JMIokEeSkH97cUQxLGA" name="ContinuityOfCareDocument2DocumentationOf" constrainedElement="_lPMNYCGjEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v_4JMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->one(documentationOf : cda::DocumentationOf | not documentationOf.oclIsUndefined() and documentationOf.oclIsKindOf(cda::DocumentationOf))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v_7MgIokEeSkH97cUQxLGA" name="ContinuityOfCareDocument2AllergiesSection2" constrainedElement="_lPMNYCGjEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v_7MgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v_8aoIokEeSkH97cUQxLGA" name="ContinuityOfCareDocument2MedicationsSection2" constrainedElement="_lPMNYCGjEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v_8aoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v_9owIokEeSkH97cUQxLGA" name="ContinuityOfCareDocument2ProblemSection2" constrainedElement="_lPMNYCGjEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v_9owYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_v_-24IokEeSkH97cUQxLGA" name="ContinuityOfCareDocument2ProceduresSection2" constrainedElement="_lPMNYCGjEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_v_-24YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wAAFAIokEeSkH97cUQxLGA" name="ContinuityOfCareDocument2ResultsSection2" constrainedElement="_lPMNYCGjEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wAAFAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ResultsSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wABTIIokEeSkH97cUQxLGA" name="ContinuityOfCareDocument2AdvanceDirectivesSectionEntriesOptional2" constrainedElement="_lPMNYCGjEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wABTIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AdvanceDirectivesSectionEntriesOptional2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wAChQIokEeSkH97cUQxLGA" name="ContinuityOfCareDocument2EncountersSectionEntriesOptional2" constrainedElement="_lPMNYCGjEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wAChQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::EncountersSectionEntriesOptional2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wADvYIokEeSkH97cUQxLGA" name="ContinuityOfCareDocument2FunctionalStatusSection2" constrainedElement="_lPMNYCGjEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wADvYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::FunctionalStatusSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wAEWdYokEeSkH97cUQxLGA" name="ContinuityOfCareDocument2ImmunizationsSection2" constrainedElement="_lPMNYCGjEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wAE9gIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ImmunizationsSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wAFklYokEeSkH97cUQxLGA" name="ContinuityOfCareDocument2MedicalEquipmentSection2" constrainedElement="_lPMNYCGjEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wAFklookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicalEquipmentSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wAHZwIokEeSkH97cUQxLGA" name="ContinuityOfCareDocument2PayersSection2" constrainedElement="_lPMNYCGjEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wAHZwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PayersSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wAIA1YokEeSkH97cUQxLGA" name="ContinuityOfCareDocument2PlanOfTreatmentSection2" constrainedElement="_lPMNYCGjEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wAIA1ookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfTreatmentSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wAJO9YokEeSkH97cUQxLGA" name="ContinuityOfCareDocument2SocialHistorySection2" constrainedElement="_lPMNYCGjEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wAJO9ookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::SocialHistorySection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wAKdFYokEeSkH97cUQxLGA" name="ContinuityOfCareDocument2VitalSignsSection2" constrainedElement="_lPMNYCGjEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wAKdFookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wALrNIokEeSkH97cUQxLGA" name="ContinuityOfCareDocument2MentalStatusSection" constrainedElement="_lPMNYCGjEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wALrNYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MentalStatusSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_waawIIokEeSkH97cUQxLGA" name="ContinuityOfCareDocument2AuthorAssignedAuthorHasAssignedPersonOrRepresentedOrganization" constrainedElement="_lPMNYCGjEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_waawIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->excluding(null).assignedAuthor->excluding(null)->reject((not assignedPerson.oclIsUndefined()) or (not representedOrganization.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wabXMIokEeSkH97cUQxLGA" name="ContinuityOfCareDocument2AuthorAssignedAuthorHasRepresentOrganization" constrainedElement="_lPMNYCGjEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wabXMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->excluding(null).assignedAuthor->excluding(null)->reject((not representedOrganization.oclIsUndefined() and assignedPerson.oclIsUndefined() and assignedAuthoringDevice.oclIsUndefined()) implies id->exists(id | not id.isNullFlavorUndefined() and id.nullFlavor = vocab::NullFlavor::NA))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wab-QIokEeSkH97cUQxLGA" name="ContinuityOfCareDocument2AuthorAssignedAuthor" constrainedElement="_lPMNYCGjEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wab-QYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.author->excluding(null)->reject(assignedAuthor->one(assignedAuthor : cda::AssignedAuthor | not assignedAuthor.oclIsUndefined() and assignedAuthor.oclIsKindOf(cda::AssignedAuthor)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wafooIokEeSkH97cUQxLGA" name="ContinuityOfCareDocument2DocumentationOfServiceEventIVLTSLow" constrainedElement="_lPMNYCGjEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wafooYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null).effectiveTime->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((low.oclIsUndefined() or low.isNullFlavorUndefined()) implies (not low.oclIsUndefined()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wagPsIokEeSkH97cUQxLGA" name="ContinuityOfCareDocument2DocumentationOfServiceEventIVLTSHigh" constrainedElement="_lPMNYCGjEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wagPsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null).effectiveTime->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((high.oclIsUndefined() or high.isNullFlavorUndefined()) implies (not high.oclIsUndefined()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_waiE4IokEeSkH97cUQxLGA" name="ContinuityOfCareDocument2DocumentationOfServiceEventPerformerAssignedEntityHasNationalProviderIdentifier" constrainedElement="_lPMNYCGjEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_waiE4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null).performer->excluding(null).assignedEntity->excluding(null)->reject((not assignedPerson.oclIsUndefined() and not id->isEmpty()) implies id->exists(id | (id.isNullFlavorDefined() and id.extension->isEmpty() and id.root->isEmpty()) or (id.isNullFlavorDefined() and id.root='2.16.840.1.113883.4.6') or (id.root='2.16.840.1.113883.4.6' and id.extension->size() = 1)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wair8IokEeSkH97cUQxLGA" name="ContinuityOfCareDocument2DocumentationOfServiceEventPerformerAssignedEntityId" constrainedElement="_lPMNYCGjEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wair8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null).performer->excluding(null).assignedEntity->excluding(null)->reject((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (id->size() = 1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wajTAIokEeSkH97cUQxLGA" name="ContinuityOfCareDocument2DocumentationOfServiceEventPerformerAssignedEntityAssignedPerson" constrainedElement="_lPMNYCGjEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wajTAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null).performer->excluding(null).assignedEntity->excluding(null)->reject(assignedPerson->one(assignedPerson : cda::Person | not assignedPerson.oclIsUndefined() and assignedPerson.oclIsKindOf(rim::Entity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_waj6EIokEeSkH97cUQxLGA" name="ContinuityOfCareDocument2DocumentationOfServiceEventPerformerTypeCode" constrainedElement="_lPMNYCGjEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_waj6EYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null).performer->excluding(null)->reject(typeCode=vocab::x_ServiceEventPerformer::PRF)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wakhIIokEeSkH97cUQxLGA" name="ContinuityOfCareDocument2DocumentationOfServiceEventPerformerAssignedEntity" constrainedElement="_lPMNYCGjEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wakhIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null).performer->excluding(null)->reject(assignedEntity->one(assignedEntity : cda::AssignedEntity | not assignedEntity.oclIsUndefined() and assignedEntity.oclIsKindOf(cda::AssignedEntity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_walIMIokEeSkH97cUQxLGA" name="ContinuityOfCareDocument2DocumentationOfServiceEventClassCode" constrainedElement="_lPMNYCGjEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_walIMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject(isDefined('classCode') and classCode=vocab::ActClassRoot::PCPR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_walvQIokEeSkH97cUQxLGA" name="ContinuityOfCareDocument2DocumentationOfServiceEventEffectiveTime" constrainedElement="_lPMNYCGjEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_walvQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject((effectiveTime.oclIsUndefined() or effectiveTime.isNullFlavorUndefined()) implies (not effectiveTime.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wamWUIokEeSkH97cUQxLGA" name="ContinuityOfCareDocument2DocumentationOfServiceEventPerformer" constrainedElement="_lPMNYCGjEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wamWUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject(performer->exists(performer : cda::Performer1 | not performer.oclIsUndefined() and performer.oclIsKindOf(cda::Performer1)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wam9YIokEeSkH97cUQxLGA" name="ContinuityOfCareDocument2DocumentationOfServiceEvent" constrainedElement="_lPMNYCGjEeSt4IEYu7xgbw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wam9YYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null)->reject(serviceEvent->one(serviceEvent : cda::ServiceEvent | not serviceEvent.oclIsUndefined() and serviceEvent.oclIsKindOf(cda::ServiceEvent)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_lPMNYSGjEeSt4IEYu7xgbw" general="_dduXkJ5OEeOr4eM3k36wAg"/>
      <ownedOperation xmi:id="_v_7zkIokEeSkH97cUQxLGA" name="getAllergiesSection2" bodyCondition="_v_7zk4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v_7zk4okEeSkH97cUQxLGA" name="body" constrainedElement="_v_7zkIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v_7zlIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSection2))->asSequence()->any(true).oclAsType(consol::AllergiesSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v_7zkYokEeSkH97cUQxLGA" type="_EONPMAInEeSr1aKUYorURA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v_7zkookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v_9BsIokEeSkH97cUQxLGA" name="getMedicationsSection2" bodyCondition="_v_9Bs4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v_9Bs4okEeSkH97cUQxLGA" name="body" constrainedElement="_v_9BsIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v_9BtIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsSection2))->asSequence()->any(true).oclAsType(consol::MedicationsSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v_9BsYokEeSkH97cUQxLGA" type="_P2mp4ALQEeS0YMHMf4rRtQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v_9BsookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v_-P0IokEeSkH97cUQxLGA" name="getProblemSection2" bodyCondition="_v_-P04okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v_-P04okEeSkH97cUQxLGA" name="body" constrainedElement="_v_-P0IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v_-P1IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSection2))->asSequence()->any(true).oclAsType(consol::ProblemSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v_-P0YokEeSkH97cUQxLGA" type="_IXrA4ALVEeSyydFGYJajGA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v_-P0ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_v__d8IokEeSkH97cUQxLGA" name="getProceduresSection2" bodyCondition="_v__d84okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_v__d84okEeSkH97cUQxLGA" name="body" constrainedElement="_v__d8IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_v__d9IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSection2))->asSequence()->any(true).oclAsType(consol::ProceduresSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_v__d8YokEeSkH97cUQxLGA" type="_N6wUUALoEeSBA9s7kRnaEg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v__d8ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wAAsEIokEeSkH97cUQxLGA" name="getResultsSection2" bodyCondition="_wAAsE4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wAAsE4okEeSkH97cUQxLGA" name="body" constrainedElement="_wAAsEIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wAAsFIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ResultsSection2))->asSequence()->any(true).oclAsType(consol::ResultsSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wAAsEYokEeSkH97cUQxLGA" type="_bAAhEALtEeSueJWOLw5iaQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wAAsEookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wAB6MIokEeSkH97cUQxLGA" name="getAdvanceDirectivesSectionEntriesOptional2" bodyCondition="_wAB6M4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wAB6M4okEeSkH97cUQxLGA" name="body" constrainedElement="_wAB6MIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wAB6NIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AdvanceDirectivesSectionEntriesOptional2))->asSequence()->any(true).oclAsType(consol::AdvanceDirectivesSectionEntriesOptional2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wAB6MYokEeSkH97cUQxLGA" type="_jsKhYAFXEeSLIY0bHb-fFQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wAB6MookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wADIUIokEeSkH97cUQxLGA" name="getEncountersSectionEntriesOptional2" bodyCondition="_wADIU4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wADIU4okEeSkH97cUQxLGA" name="body" constrainedElement="_wADIUIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wADIVIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::EncountersSectionEntriesOptional2))->asSequence()->any(true).oclAsType(consol::EncountersSectionEntriesOptional2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wADIUYokEeSkH97cUQxLGA" type="_kgM0YPvbEeOJwYDYIUCQDg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wADIUookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wAEWcIokEeSkH97cUQxLGA" name="getFunctionalStatusSection2" bodyCondition="_wAEWc4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wAEWc4okEeSkH97cUQxLGA" name="body" constrainedElement="_wAEWcIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wAEWdIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::FunctionalStatusSection2))->asSequence()->any(true).oclAsType(consol::FunctionalStatusSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wAEWcYokEeSkH97cUQxLGA" type="_8rMFkPyHEeOozpLKXSm5NA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wAEWcookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wAFkkIokEeSkH97cUQxLGA" name="getImmunizationsSection2" bodyCondition="_wAFkk4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wAFkk4okEeSkH97cUQxLGA" name="body" constrainedElement="_wAFkkIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wAFklIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ImmunizationsSection2))->asSequence()->any(true).oclAsType(consol::ImmunizationsSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wAFkkYokEeSkH97cUQxLGA" type="_14bikALNEeSIPYXg7AgJzw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wAFkkookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wAGysIokEeSkH97cUQxLGA" name="getMedicalEquipmentSection2" bodyCondition="_wAGys4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wAGys4okEeSkH97cUQxLGA" name="body" constrainedElement="_wAGysIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wAGytIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicalEquipmentSection2))->asSequence()->any(true).oclAsType(consol::MedicalEquipmentSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wAGysYokEeSkH97cUQxLGA" type="_5OKxwP1bEeO5Hq-yrsJSmg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wAGysookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wAIA0IokEeSkH97cUQxLGA" name="getPayersSection2" bodyCondition="_wAIA04okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wAIA04okEeSkH97cUQxLGA" name="body" constrainedElement="_wAIA0IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wAIA1IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PayersSection2))->asSequence()->any(true).oclAsType(consol::PayersSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wAIA0YokEeSkH97cUQxLGA" type="_twgM0P4lEeOzC5ykp-XCaA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wAIA0ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wAJO8IokEeSkH97cUQxLGA" name="getPlanOfTreatmentSection2" bodyCondition="_wAJO84okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wAJO84okEeSkH97cUQxLGA" name="body" constrainedElement="_wAJO8IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wAJO9IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfTreatmentSection2))->asSequence()->any(true).oclAsType(consol::PlanOfTreatmentSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wAJO8YokEeSkH97cUQxLGA" type="_bwml0P4yEeO_Yb9cO8w3bA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wAJO8ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wAKdEIokEeSkH97cUQxLGA" name="getSocialHistorySection2" bodyCondition="_wAKdE4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wAKdE4okEeSkH97cUQxLGA" name="body" constrainedElement="_wAKdEIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wAKdFIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::SocialHistorySection2))->asSequence()->any(true).oclAsType(consol::SocialHistorySection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wAKdEYokEeSkH97cUQxLGA" type="_wLWZMAFHEeSG_MJH-zNFRw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wAKdEookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wALEIIokEeSkH97cUQxLGA" name="getVitalSignsSection2" bodyCondition="_wALrMookEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wALrMookEeSkH97cUQxLGA" name="body" constrainedElement="_wALEIIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wALrM4okEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSection2))->asSequence()->any(true).oclAsType(consol::VitalSignsSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wALrMIokEeSkH97cUQxLGA" type="_D3010ALzEeSM0Jd2D1FgKw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wALrMYokEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wAMSQIokEeSkH97cUQxLGA" name="getMentalStatusSection" bodyCondition="_wAM5UookEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wAM5UookEeSkH97cUQxLGA" name="body" constrainedElement="_wAMSQIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wAM5U4okEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MentalStatusSection))->asSequence()->any(true).oclAsType(consol::MentalStatusSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wAM5UIokEeSkH97cUQxLGA" type="_4tfOMJ2CEeORR8_YW0n_jQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wAM5UYokEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_4JRRsCJnEeSBLYc2hU6GfA" name="DiagnosticImagingReport2">
      <ownedComment xmi:id="_GhvMECJoEeSBLYc2hU6GfA">
        <body>A Diagnostic Imaging Report (DIR) is a document that contains a consulting specialist's interpretation of image data. It conveys the interpretation to the referring (ordering) physician and becomes part of the patient's medical record. It is for use in Radiology, Endoscopy, Cardiology, and other imaging specialties.</body>
      </ownedComment>
      <ownedRule xmi:id="_wANgYIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsTemplateId" constrainedElement="_4JRRsCJnEeSBLYc2hU6GfA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wANgYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.1.5' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wAP8oIokEeSkH97cUQxLGA" name="DiagnosticImagingReport2Id" constrainedElement="_4JRRsCJnEeSBLYc2hU6GfA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wAP8oYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id.oclIsUndefined() or self.id.isNullFlavorUndefined()) implies (not self.id.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wAU1IIokEeSkH97cUQxLGA" name="DiagnosticImagingReport2CodeP" constrainedElement="_4JRRsCJnEeSBLYc2hU6GfA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wAU1IYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wAS_8IokEeSkH97cUQxLGA" name="DiagnosticImagingReport2Code" constrainedElement="_4JRRsCJnEeSBLYc2hU6GfA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wAS_8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and not value.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wAvr4IokEeSkH97cUQxLGA" name="DiagnosticImagingReport2InformationRecipient" constrainedElement="_4JRRsCJnEeSBLYc2hU6GfA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wAvr4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.informationRecipient->exists(informationRecipient : cda::InformationRecipient | not informationRecipient.oclIsUndefined() and informationRecipient.oclIsKindOf(rim::Participation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wAw6AIokEeSkH97cUQxLGA" name="DiagnosticImagingReport2Participant" constrainedElement="_4JRRsCJnEeSBLYc2hU6GfA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wAw6AYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->one(participant : cda::Participant1 | not participant.oclIsUndefined() and participant.oclIsKindOf(cda::Participant1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wAyvMYokEeSkH97cUQxLGA" name="DiagnosticImagingReport2InFulfillmentOf" constrainedElement="_4JRRsCJnEeSBLYc2hU6GfA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wAyvMookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.inFulfillmentOf->exists(inFulfillmentOf : cda::InFulfillmentOf | not inFulfillmentOf.oclIsUndefined() and inFulfillmentOf.oclIsKindOf(cda::InFulfillmentOf))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wAz9UYokEeSkH97cUQxLGA" name="DiagnosticImagingReport2DocumentationOf" constrainedElement="_4JRRsCJnEeSBLYc2hU6GfA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wAz9UookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->one(documentationOf : cda::DocumentationOf | not documentationOf.oclIsUndefined() and documentationOf.oclIsKindOf(cda::DocumentationOf))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wA2ZkIokEeSkH97cUQxLGA" name="DiagnosticImagingReport2RelatedDocument" constrainedElement="_4JRRsCJnEeSBLYc2hU6GfA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wA2ZkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.relatedDocument->one(relatedDocument : cda::RelatedDocument | not relatedDocument.oclIsUndefined() and relatedDocument.oclIsKindOf(cda::RelatedDocument))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wA3nsIokEeSkH97cUQxLGA" name="DiagnosticImagingReport2ComponentOf" constrainedElement="_4JRRsCJnEeSBLYc2hU6GfA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wA3nsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->one(componentOf : cda::Component1 | not componentOf.oclIsUndefined() and componentOf.oclIsKindOf(cda::Component1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wA7SEIokEeSkH97cUQxLGA" name="DiagnosticImagingReport2FindingsSection" constrainedElement="_4JRRsCJnEeSBLYc2hU6GfA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wA7SEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::FindingsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wA8gMIokEeSkH97cUQxLGA" name="DiagnosticImagingReport2DICOMObjectCatalogSection" constrainedElement="_4JRRsCJnEeSBLYc2hU6GfA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wA8gMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::DICOMObjectCatalogSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wA9HRYokEeSkH97cUQxLGA" name="DiagnosticImagingReport2Component2" constrainedElement="_4JRRsCJnEeSBLYc2hU6GfA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wA9HRookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component2 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wBM-4IokEeSkH97cUQxLGA" name="DiagnosticImagingReport2Informant" constrainedElement="_4JRRsCJnEeSBLYc2hU6GfA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wBM-4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.informant->select(informant : cda::Informant12 | not informant.oclIsUndefined() and informant.oclIsKindOf(rim::Participation))->isEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wavgQIokEeSkH97cUQxLGA" name="DiagnosticImagingReport2IIRoot" constrainedElement="_4JRRsCJnEeSBLYc2hU6GfA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wavgQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies (not root.oclIsUndefined() )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wawuYIokEeSkH97cUQxLGA" name="DiagnosticImagingReport2ParticipantAssociatedEntityPersonName" constrainedElement="_4JRRsCJnEeSBLYc2hU6GfA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wawuYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).associatedEntity->excluding(null).associatedPerson->excluding(null)->reject((name->isEmpty() or name->exists(element | element.isNullFlavorUndefined())) implies (name->size() = 1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_waxVcIokEeSkH97cUQxLGA" name="DiagnosticImagingReport2ParticipantAssociatedEntityAssociatedPerson" constrainedElement="_4JRRsCJnEeSBLYc2hU6GfA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_waxVcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).associatedEntity->excluding(null)->reject(associatedPerson->one(associatedPerson : cda::Person | not associatedPerson.oclIsUndefined() and associatedPerson.oclIsKindOf(cda::Person)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wax8gIokEeSkH97cUQxLGA" name="DiagnosticImagingReport2ParticipantAssociatedEntity" constrainedElement="_4JRRsCJnEeSBLYc2hU6GfA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wax8gYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->reject(associatedEntity->one(associatedEntity : cda::AssociatedEntity | not associatedEntity.oclIsUndefined() and associatedEntity.oclIsKindOf(cda::AssociatedEntity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wa4DIIokEeSkH97cUQxLGA" name="DiagnosticImagingReport2InFulfillmentOfOrderId" constrainedElement="_4JRRsCJnEeSBLYc2hU6GfA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wa4DIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.inFulfillmentOf->excluding(null).order->excluding(null)->reject((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wa4qMIokEeSkH97cUQxLGA" name="DiagnosticImagingReport2InFulfillmentOfOrder" constrainedElement="_4JRRsCJnEeSBLYc2hU6GfA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wa4qMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.inFulfillmentOf->excluding(null)->reject(order->one(order : cda::Order | not order.oclIsUndefined() and order.oclIsKindOf(cda::Order)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wa6fYIokEeSkH97cUQxLGA" name="DiagnosticImagingReport2DocumentationOfServiceEventClassCode" constrainedElement="_4JRRsCJnEeSBLYc2hU6GfA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wa6fYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject(isDefined('classCode') and classCode=vocab::ActClassRoot::ACT)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wa7GcIokEeSkH97cUQxLGA" name="DiagnosticImagingReport2DocumentationOfServiceEventId" constrainedElement="_4JRRsCJnEeSBLYc2hU6GfA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wa7GcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wa7GcookEeSkH97cUQxLGA" name="DiagnosticImagingReport2DocumentationOfServiceEventCode" constrainedElement="_4JRRsCJnEeSBLYc2hU6GfA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wa7Gc4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wa7tgIokEeSkH97cUQxLGA" name="DiagnosticImagingReport2DocumentationOfServiceEventPerformer" constrainedElement="_4JRRsCJnEeSBLYc2hU6GfA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wa7tgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject(performer->exists(performer : cda::Performer1 | not performer.oclIsUndefined() and performer.oclIsKindOf(cda::Performer1)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wa7tgookEeSkH97cUQxLGA" name="DiagnosticImagingReport2DocumentationOfServiceEvent" constrainedElement="_4JRRsCJnEeSBLYc2hU6GfA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wa7tg4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null)->reject(serviceEvent->one(serviceEvent : cda::ServiceEvent | not serviceEvent.oclIsUndefined() and serviceEvent.oclIsKindOf(cda::ServiceEvent)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wa87oIokEeSkH97cUQxLGA" name="DiagnosticImagingReport2RelatedDocumentParentDocumentId" constrainedElement="_4JRRsCJnEeSBLYc2hU6GfA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wa87oYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.relatedDocument->excluding(null).parentDocument->excluding(null)->reject((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (id->size() = 1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wa9isIokEeSkH97cUQxLGA" name="DiagnosticImagingReport2RelatedDocumentParentDocument" constrainedElement="_4JRRsCJnEeSBLYc2hU6GfA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wa9isYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.relatedDocument->excluding(null)->reject(parentDocument->one(parentDocument : cda::ParentDocument | not parentDocument.oclIsUndefined() and parentDocument.oclIsKindOf(cda::ParentDocument)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wa_-8IokEeSkH97cUQxLGA" name="DiagnosticImagingReport2ComponentOfEncompassingEncounterResponsiblePartyAssignedEntityHasAssignPersonOrRepresentedOrganization" constrainedElement="_4JRRsCJnEeSBLYc2hU6GfA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wa_-8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null).responsibleParty->excluding(null).assignedEntity->excluding(null)->reject(assignedPerson->size() = 1 or representedOrganization->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wa_-8ookEeSkH97cUQxLGA" name="DiagnosticImagingReport2ComponentOfEncompassingEncounterResponsiblePartyAssignedEntity" constrainedElement="_4JRRsCJnEeSBLYc2hU6GfA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wa_-84okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null).responsibleParty->excluding(null)->reject(assignedEntity->one(assignedEntity : cda::AssignedEntity | not assignedEntity.oclIsUndefined() and assignedEntity.oclIsKindOf(cda::AssignedEntity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wbAmAIokEeSkH97cUQxLGA" name="DiagnosticImagingReport2ComponentOfEncompassingEncounterPreciseToTheDay" constrainedElement="_4JRRsCJnEeSBLYc2hU6GfA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wbAmAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(not effectiveTime.value.oclIsUndefined() implies effectiveTime.value.size() >= 8)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wbBNEIokEeSkH97cUQxLGA" name="DiagnosticImagingReport2ComponentOfEncompassingEncounterPreciseToTheMinute" constrainedElement="_4JRRsCJnEeSBLYc2hU6GfA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wbBNEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(not effectiveTime.value.oclIsUndefined() implies effectiveTime.value.size() >= 12)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wbB0IIokEeSkH97cUQxLGA" name="DiagnosticImagingReport2ComponentOfEncompassingEncounterPreciseToTheSecond" constrainedElement="_4JRRsCJnEeSBLYc2hU6GfA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wbB0IYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(not effectiveTime.value.oclIsUndefined() implies effectiveTime.value.size() >= 14)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wbB0IookEeSkH97cUQxLGA" name="DiagnosticImagingReport2ComponentOfEncompassingEncounterIfMorePreciseThanDayIncludeTimeZoneOffset" constrainedElement="_4JRRsCJnEeSBLYc2hU6GfA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wbB0I4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(not effectiveTime.value.oclIsUndefined() and effectiveTime.value.size() > 8 implies effectiveTime.value.size() >= 15)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wbCbMIokEeSkH97cUQxLGA" name="DiagnosticImagingReport2ComponentOfEncompassingEncounterId" constrainedElement="_4JRRsCJnEeSBLYc2hU6GfA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wbCbMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wbCbMookEeSkH97cUQxLGA" name="DiagnosticImagingReport2ComponentOfEncompassingEncounterEffectiveTime" constrainedElement="_4JRRsCJnEeSBLYc2hU6GfA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wbCbM4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject((effectiveTime.oclIsUndefined() or effectiveTime.isNullFlavorUndefined()) implies (not effectiveTime.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wbDCQIokEeSkH97cUQxLGA" name="DiagnosticImagingReport2ComponentOfEncompassingEncounterResponsibleParty" constrainedElement="_4JRRsCJnEeSBLYc2hU6GfA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wbDCQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(responsibleParty->one(responsibleParty : cda::ResponsibleParty | not responsibleParty.oclIsUndefined() and responsibleParty.oclIsKindOf(cda::ResponsibleParty)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wbDpUIokEeSkH97cUQxLGA" name="DiagnosticImagingReport2ComponentOfEncompassingEncounterPhysicianofRecordParticipant2" constrainedElement="_4JRRsCJnEeSBLYc2hU6GfA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wbDpUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(encounterParticipant->one(encounterParticipant : cda::EncounterParticipant | not encounterParticipant.oclIsUndefined() and encounterParticipant.oclIsKindOf(consol::PhysicianofRecordParticipant2)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wbDpUookEeSkH97cUQxLGA" name="DiagnosticImagingReport2ComponentOfEncompassingEncounter" constrainedElement="_4JRRsCJnEeSBLYc2hU6GfA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wbDpU4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null)->reject(encompassingEncounter->one(encompassingEncounter : cda::EncompassingEncounter | not encompassingEncounter.oclIsUndefined() and encompassingEncounter.oclIsKindOf(cda::EncompassingEncounter)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wbGsoIokEeSkH97cUQxLGA" name="DiagnosticImagingReport2ComponentStructuredBodyComponent3SectionSubjectFetusSubjectContext" constrainedElement="_4JRRsCJnEeSBLYc2hU6GfA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wbHTsIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.component->excluding(null).structuredBody->excluding(null).component->excluding(null).section->excluding(null).subject->excluding(null)->reject(relatedSubject->one(relatedSubject : cda::RelatedSubject | not relatedSubject.oclIsUndefined() and relatedSubject.oclIsKindOf(consol::FetusSubjectContext)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wbIh0IokEeSkH97cUQxLGA" name="DiagnosticImagingReport2ComponentStructuredBodyComponent3SectionSectionsHaveText" constrainedElement="_4JRRsCJnEeSBLYc2hU6GfA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wbIh0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.component->excluding(null).structuredBody->excluding(null).component->excluding(null).section->excluding(null)->reject(getAllSections()->forAll(section : cda::Section | not section.text.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wbJI4IokEeSkH97cUQxLGA" name="DiagnosticImagingReport2ComponentStructuredBodyComponent3SectionCode" constrainedElement="_4JRRsCJnEeSBLYc2hU6GfA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wbJI4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.component->excluding(null).structuredBody->excluding(null).component->excluding(null).section->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined() and code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = code.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '1.2.840.10008.2.16.4' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wbJv8IokEeSkH97cUQxLGA" name="DiagnosticImagingReport2ComponentStructuredBodyComponent3SectionCodeP" constrainedElement="_4JRRsCJnEeSBLYc2hU6GfA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wbJv8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.component->excluding(null).structuredBody->excluding(null).component->excluding(null).section->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wbJv8ookEeSkH97cUQxLGA" name="DiagnosticImagingReport2ComponentStructuredBodyComponent3SectionTitle" constrainedElement="_4JRRsCJnEeSBLYc2hU6GfA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wbJv84okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.component->excluding(null).structuredBody->excluding(null).component->excluding(null).section->excluding(null)->reject((title.oclIsUndefined() or title.isNullFlavorUndefined()) implies (not title.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wbKXAIokEeSkH97cUQxLGA" name="DiagnosticImagingReport2ComponentStructuredBodyComponent3SectionText" constrainedElement="_4JRRsCJnEeSBLYc2hU6GfA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wbKXAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.component->excluding(null).structuredBody->excluding(null).component->excluding(null).section->excluding(null)->reject(not text.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wbKXAookEeSkH97cUQxLGA" name="DiagnosticImagingReport2ComponentStructuredBodyComponent3SectionSubject" constrainedElement="_4JRRsCJnEeSBLYc2hU6GfA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wbKXA4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.component->excluding(null).structuredBody->excluding(null).component->excluding(null).section->excluding(null)->reject(nullFlavor &lt;> vocab::NullFlavor::NI implies subject->exists(subject : cda::Subject | not subject.oclIsUndefined() and subject.oclIsKindOf(cda::Subject)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wbK-EIokEeSkH97cUQxLGA" name="DiagnosticImagingReport2ComponentStructuredBodyComponent3SectionAuthor" constrainedElement="_4JRRsCJnEeSBLYc2hU6GfA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wbK-EYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.component->excluding(null).structuredBody->excluding(null).component->excluding(null).section->excluding(null)->reject(nullFlavor &lt;> vocab::NullFlavor::NI implies author->exists(author : cda::Author | not author.oclIsUndefined() and author.oclIsKindOf(cda::Author)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wbLlIIokEeSkH97cUQxLGA" name="DiagnosticImagingReport2ComponentStructuredBodyComponent3SectionProcedureContext" constrainedElement="_4JRRsCJnEeSBLYc2hU6GfA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wbLlIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.component->excluding(null).structuredBody->excluding(null).component->excluding(null).section->excluding(null)->reject(nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(consol::ProcedureContext)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wbLlIookEeSkH97cUQxLGA" name="DiagnosticImagingReport2ComponentStructuredBodyComponent3SectionTextObservation" constrainedElement="_4JRRsCJnEeSBLYc2hU6GfA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wbLlI4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.component->excluding(null).structuredBody->excluding(null).component->excluding(null).section->excluding(null)->reject(nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::TextObservation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wbMMMIokEeSkH97cUQxLGA" name="DiagnosticImagingReport2ComponentStructuredBodyComponent3SectionCodeObservations" constrainedElement="_4JRRsCJnEeSBLYc2hU6GfA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wbMMMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.component->excluding(null).structuredBody->excluding(null).component->excluding(null).section->excluding(null)->reject(nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::CodeObservations)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wbMzQIokEeSkH97cUQxLGA" name="DiagnosticImagingReport2ComponentStructuredBodyComponent3SectionQuantityMeasurementObservation" constrainedElement="_4JRRsCJnEeSBLYc2hU6GfA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wbMzQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.component->excluding(null).structuredBody->excluding(null).component->excluding(null).section->excluding(null)->reject(nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::QuantityMeasurementObservation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wbNaUIokEeSkH97cUQxLGA" name="DiagnosticImagingReport2ComponentStructuredBodyComponent3SectionSOPInstanceObservation" constrainedElement="_4JRRsCJnEeSBLYc2hU6GfA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wbNaUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.component->excluding(null).structuredBody->excluding(null).component->excluding(null).section->excluding(null)->reject(nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(consol::SOPInstanceObservation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wbNaUookEeSkH97cUQxLGA" name="DiagnosticImagingReport2ComponentStructuredBodyComponent3Section" constrainedElement="_4JRRsCJnEeSBLYc2hU6GfA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wbNaU4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.component->excluding(null).structuredBody->excluding(null).component->excluding(null)->reject(section->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(cda::Section)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wbOBYIokEeSkH97cUQxLGA" name="DiagnosticImagingReport2ComponentStructuredBodyComponent3" constrainedElement="_4JRRsCJnEeSBLYc2hU6GfA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wbOBYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.component->excluding(null).structuredBody->excluding(null)->reject(component->exists(component : cda::Component3 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component3)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wbOocIokEeSkH97cUQxLGA" name="DiagnosticImagingReport2ComponentStructuredBody" constrainedElement="_4JRRsCJnEeSBLYc2hU6GfA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wbOocYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.component->excluding(null)->reject(structuredBody->one(structuredBody : cda::StructuredBody | not structuredBody.oclIsUndefined() and structuredBody.oclIsKindOf(cda::StructuredBody)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_4JRRsSJnEeSBLYc2hU6GfA" general="_dduXkJ5OEeOr4eM3k36wAg"/>
      <ownedOperation xmi:id="_wA75IIokEeSkH97cUQxLGA" name="getFindingsSection" bodyCondition="_wA75I4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wA75I4okEeSkH97cUQxLGA" name="body" constrainedElement="_wA75IIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wA75JIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::FindingsSection))->asSequence()->any(true).oclAsType(consol::FindingsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wA75IYokEeSkH97cUQxLGA" type="_ZcC-4DVyEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wA75IookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wA9HQIokEeSkH97cUQxLGA" name="getDICOMObjectCatalogSection" bodyCondition="_wA9HQ4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wA9HQ4okEeSkH97cUQxLGA" name="body" constrainedElement="_wA9HQIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wA9HRIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::DICOMObjectCatalogSection))->asSequence()->any(true).oclAsType(consol::DICOMObjectCatalogSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wA9HQYokEeSkH97cUQxLGA" type="_WPTWEDVyEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wA9HQookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_89EzQCP5EeS4d9o7u1_H3A" name="DischargeSummary2">
      <ownedComment xmi:id="_QEvAoCP6EeS4d9o7u1_H3A">
        <body>The Discharge Summary is a document which synopsizes a patient's admission to a hospital, LTPAC provider, or other admission.  It provides information for the continuation of care following discharge. The Joint Commission requires the following information to be included in the Discharge Summary The following information is to be included in a Discharge Summary:&#xD;
•  The reason for hospitalization the admission&#xD;
•  The procedures performed, as applicable&#xD;
•  The care, treatment, and services provided&#xD;
•  The patient's condition and disposition at discharge&#xD;
•  Information provided to the patient and family&#xD;
•  Provisions for follow-up care&#xD;
The best practice for a Discharge Summary is to include the discharge disposition in the display of the header.</body>
      </ownedComment>
      <ownedRule xmi:id="_SpwesCSVEeS4d9o7u1_H3A" name="DischargeSummary2DoesNotHaveChiefComplaintAndReasonForVisitWithChiefComplaintSectionOrReasonSection">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_SpwesSSVEeS4d9o7u1_H3A">
          <language>OCL</language>
          <body>(self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection)) or  self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))) xor self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wBONAIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsTemplateId" constrainedElement="_89EzQCP5EeS4d9o7u1_H3A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wBONAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.1.8' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wBTFgIokEeSkH97cUQxLGA" name="DischargeSummary2CodeP" constrainedElement="_89EzQCP5EeS4d9o7u1_H3A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wBTFgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wBRQUIokEeSkH97cUQxLGA" name="DischargeSummary2Code" constrainedElement="_89EzQCP5EeS4d9o7u1_H3A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wBRQUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = '18842-5' or value.code = '11490-0' or value.code = '28655-9' or value.code = '29761-4' or value.code = '34745-0' or value.code = '34105-7' or value.code = '34106-5'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wBhH8IokEeSkH97cUQxLGA" name="DischargeSummary2Participant" constrainedElement="_89EzQCP5EeS4d9o7u1_H3A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wBhH8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->exists(participant : cda::Participant1 | not participant.oclIsUndefined() and participant.oclIsKindOf(cda::Participant1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wBhvAIokEeSkH97cUQxLGA" name="DischargeSummary2ComponentOf" constrainedElement="_89EzQCP5EeS4d9o7u1_H3A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wBhvAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->one(componentOf : cda::Component1 | not componentOf.oclIsUndefined() and componentOf.oclIsKindOf(cda::Component1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wBmAcIokEeSkH97cUQxLGA" name="DischargeSummary2AllergiesSectionEntriesOptional2" constrainedElement="_89EzQCP5EeS4d9o7u1_H3A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wBmAcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSectionEntriesOptional2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wBnOkIokEeSkH97cUQxLGA" name="DischargeSummary2HospitalCourseSection" constrainedElement="_89EzQCP5EeS4d9o7u1_H3A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wBnOkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalCourseSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wBocsIokEeSkH97cUQxLGA" name="DischargeSummary2PlanOfTreatmentSection2" constrainedElement="_89EzQCP5EeS4d9o7u1_H3A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wBocsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfTreatmentSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wBpq0IokEeSkH97cUQxLGA" name="DischargeSummary2ChiefComplaintSection" constrainedElement="_89EzQCP5EeS4d9o7u1_H3A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wBpq0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wBq48IokEeSkH97cUQxLGA" name="DischargeSummary2ChiefComplaintAndReasonForVisitSection" constrainedElement="_89EzQCP5EeS4d9o7u1_H3A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wBq48YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wBsHEIokEeSkH97cUQxLGA" name="DischargeSummary2NutritionSection" constrainedElement="_89EzQCP5EeS4d9o7u1_H3A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wBsHEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::NutritionSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wBtVNIokEeSkH97cUQxLGA" name="DischargeSummary2FunctionalStatusSection2" constrainedElement="_89EzQCP5EeS4d9o7u1_H3A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wBtVNYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::FunctionalStatusSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wBvKYIokEeSkH97cUQxLGA" name="DischargeSummary2HistoryOfPastIllnessSection2" constrainedElement="_89EzQCP5EeS4d9o7u1_H3A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wBvKYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HistoryOfPastIllnessSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wBw_kIokEeSkH97cUQxLGA" name="DischargeSummary2HistoryOfPresentIllnessSection" constrainedElement="_89EzQCP5EeS4d9o7u1_H3A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wBw_kYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HistoryOfPresentIllnessSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wBy0wIokEeSkH97cUQxLGA" name="DischargeSummary2HospitalConsultationsSection" constrainedElement="_89EzQCP5EeS4d9o7u1_H3A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wBy0wYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalConsultationsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wB0C4IokEeSkH97cUQxLGA" name="DischargeSummary2HospitalDischargeInstructionsSection" constrainedElement="_89EzQCP5EeS4d9o7u1_H3A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wB0C4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeInstructionsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wB1RAIokEeSkH97cUQxLGA" name="DischargeSummary2HospitalDischargePhysicalSection" constrainedElement="_89EzQCP5EeS4d9o7u1_H3A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wB1RAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargePhysicalSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wB2fIIokEeSkH97cUQxLGA" name="DischargeSummary2HospitalDischargeStudiesSummarySection" constrainedElement="_89EzQCP5EeS4d9o7u1_H3A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wB2fIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeStudiesSummarySection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wB3tQIokEeSkH97cUQxLGA" name="DischargeSummary2ImmunizationsSectionEntriesOptional2" constrainedElement="_89EzQCP5EeS4d9o7u1_H3A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wB3tQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ImmunizationsSectionEntriesOptional2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wB47YIokEeSkH97cUQxLGA" name="DischargeSummary2ProblemSectionEntriesOptional2" constrainedElement="_89EzQCP5EeS4d9o7u1_H3A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wB47YYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSectionEntriesOptional2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wB6JgIokEeSkH97cUQxLGA" name="DischargeSummary2ProceduresSectionEntriesOptional2" constrainedElement="_89EzQCP5EeS4d9o7u1_H3A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wB6JgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSectionEntriesOptional2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wB7XoIokEeSkH97cUQxLGA" name="DischargeSummary2ReasonForVisitSection" constrainedElement="_89EzQCP5EeS4d9o7u1_H3A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wB7XoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wB8lxYokEeSkH97cUQxLGA" name="DischargeSummary2ReviewOfSystemsSection" constrainedElement="_89EzQCP5EeS4d9o7u1_H3A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wB9M0IokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReviewOfSystemsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wB9z5YokEeSkH97cUQxLGA" name="DischargeSummary2SocialHistorySection2" constrainedElement="_89EzQCP5EeS4d9o7u1_H3A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wB9z5ookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::SocialHistorySection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wB_CBYokEeSkH97cUQxLGA" name="DischargeSummary2VitalSignsSectionEntriesOptional2" constrainedElement="_89EzQCP5EeS4d9o7u1_H3A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wB_CBookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSectionEntriesOptional2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wbS54IokEeSkH97cUQxLGA" name="DischargeSummary2ComponentOfEncompassingEncounterIVLTSLow" constrainedElement="_89EzQCP5EeS4d9o7u1_H3A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wbS54YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null).effectiveTime->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((low.oclIsUndefined() or low.isNullFlavorUndefined()) implies (not low.oclIsUndefined()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wbTg8IokEeSkH97cUQxLGA" name="DischargeSummary2ComponentOfEncompassingEncounterIVLTSHigh" constrainedElement="_89EzQCP5EeS4d9o7u1_H3A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wbTg8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null).effectiveTime->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((high.oclIsUndefined() or high.isNullFlavorUndefined()) implies (not high.oclIsUndefined()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wbUvEIokEeSkH97cUQxLGA" name="DischargeSummary2ComponentOfEncompassingEncounterEncounterParticipantAssignedEntityHasPersonOrOrganization" constrainedElement="_89EzQCP5EeS4d9o7u1_H3A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wbUvEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null).encounterParticipant->excluding(null)->reject(not assignedEntity.assignedPerson.oclIsUndefined() or not assignedEntity.representedOrganization->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wbUvEookEeSkH97cUQxLGA" name="DischargeSummary2ComponentOfEncompassingEncounterEncounterParticipantAssignedEntity" constrainedElement="_89EzQCP5EeS4d9o7u1_H3A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wbUvE4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null).encounterParticipant->excluding(null)->reject(assignedEntity->exists(assignedEntity : cda::AssignedEntity | not assignedEntity.oclIsUndefined() and assignedEntity.oclIsKindOf(rim::Role)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wbV9MIokEeSkH97cUQxLGA" name="DischargeSummary2ComponentOfEncompassingEncounterResponsiblePartyAssignedEntityHasPersonOrOrganization" constrainedElement="_89EzQCP5EeS4d9o7u1_H3A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wbV9MYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null).responsibleParty->excluding(null)->reject(not assignedEntity.assignedPerson.oclIsUndefined() or not assignedEntity.representedOrganization->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wbV9MookEeSkH97cUQxLGA" name="DischargeSummary2ComponentOfEncompassingEncounterResponsiblePartyAssignedEntity" constrainedElement="_89EzQCP5EeS4d9o7u1_H3A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wbV9M4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null).responsibleParty->excluding(null)->reject(assignedEntity->exists(assignedEntity : cda::AssignedEntity | not assignedEntity.oclIsUndefined() and assignedEntity.oclIsKindOf(rim::Role)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wbWkQIokEeSkH97cUQxLGA" name="DischargeSummary2ComponentOfEncompassingEncounterEffectiveTime" constrainedElement="_89EzQCP5EeS4d9o7u1_H3A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wbWkQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject((effectiveTime.oclIsUndefined() or effectiveTime.isNullFlavorUndefined()) implies (not effectiveTime.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wbWkQookEeSkH97cUQxLGA" name="DischargeSummary2ComponentOfEncompassingEncounterDischargeDispositionCode" constrainedElement="_89EzQCP5EeS4d9o7u1_H3A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wbWkQ4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject((dischargeDispositionCode.oclIsUndefined() or dischargeDispositionCode.isNullFlavorUndefined()) implies (not dischargeDispositionCode.oclIsUndefined() and dischargeDispositionCode.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = dischargeDispositionCode.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.301.5' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wbXLUIokEeSkH97cUQxLGA" name="DischargeSummary2ComponentOfEncompassingEncounterDischargeDispositionCodeP" constrainedElement="_89EzQCP5EeS4d9o7u1_H3A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wbXLUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject((dischargeDispositionCode.oclIsUndefined() or dischargeDispositionCode.isNullFlavorUndefined()) implies (not dischargeDispositionCode.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wbXyYIokEeSkH97cUQxLGA" name="DischargeSummary2ComponentOfEncompassingEncounterEncounterParticipant" constrainedElement="_89EzQCP5EeS4d9o7u1_H3A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wbXyYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(encounterParticipant->one(encounterParticipant : cda::EncounterParticipant | not encounterParticipant.oclIsUndefined() and encounterParticipant.oclIsKindOf(cda::EncounterParticipant)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wbXyYookEeSkH97cUQxLGA" name="DischargeSummary2ComponentOfEncompassingEncounterResponsibleParty" constrainedElement="_89EzQCP5EeS4d9o7u1_H3A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wbXyY4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(responsibleParty->one(responsibleParty : cda::ResponsibleParty | not responsibleParty.oclIsUndefined() and responsibleParty.oclIsKindOf(cda::ResponsibleParty)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wbYZcIokEeSkH97cUQxLGA" name="DischargeSummary2ComponentOfEncompassingEncounter" constrainedElement="_89EzQCP5EeS4d9o7u1_H3A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wbYZcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null)->reject(encompassingEncounter->one(encompassingEncounter : cda::EncompassingEncounter | not encompassingEncounter.oclIsUndefined() and encompassingEncounter.oclIsKindOf(cda::EncompassingEncounter)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_89FaUCP5EeS4d9o7u1_H3A" general="_dduXkJ5OEeOr4eM3k36wAg"/>
      <ownedOperation xmi:id="_wBmngIokEeSkH97cUQxLGA" name="getAllergiesSectionEntriesOptional2" bodyCondition="_wBmng4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wBmng4okEeSkH97cUQxLGA" name="body" constrainedElement="_wBmngIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wBmnhIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSectionEntriesOptional2))->asSequence()->any(true).oclAsType(consol::AllergiesSectionEntriesOptional2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wBmngYokEeSkH97cUQxLGA" type="_nWAcMAIjEeSVzfoPSatgpg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wBmngookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wBn1oIokEeSkH97cUQxLGA" name="getHospitalCourseSection" bodyCondition="_wBn1o4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wBn1o4okEeSkH97cUQxLGA" name="body" constrainedElement="_wBn1oIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wBn1pIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalCourseSection))->asSequence()->any(true).oclAsType(consol::HospitalCourseSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wBn1oYokEeSkH97cUQxLGA" type="_2RqkOxSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wBn1oookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wBpDwIokEeSkH97cUQxLGA" name="getPlanOfTreatmentSection2" bodyCondition="_wBpDw4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wBpDw4okEeSkH97cUQxLGA" name="body" constrainedElement="_wBpDwIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wBpDxIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfTreatmentSection2))->asSequence()->any(true).oclAsType(consol::PlanOfTreatmentSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wBpDwYokEeSkH97cUQxLGA" type="_bwml0P4yEeO_Yb9cO8w3bA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wBpDwookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wBqR4IokEeSkH97cUQxLGA" name="getChiefComplaintSection" bodyCondition="_wBqR44okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wBqR44okEeSkH97cUQxLGA" name="body" constrainedElement="_wBqR4IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wBqR5IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection))->asSequence()->any(true).oclAsType(consol::ChiefComplaintSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wBqR4YokEeSkH97cUQxLGA" type="_2PWQCBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wBqR4ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wBrgAIokEeSkH97cUQxLGA" name="getChiefComplaintAndReasonForVisitSection" bodyCondition="_wBrgA4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wBrgA4okEeSkH97cUQxLGA" name="body" constrainedElement="_wBrgAIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wBrgBIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))->asSequence()->any(true).oclAsType(consol::ChiefComplaintAndReasonForVisitSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wBrgAYokEeSkH97cUQxLGA" type="_oI7CQCsaEeGHF88-qhhUMA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wBrgAookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wBsuIIokEeSkH97cUQxLGA" name="getNutritionSection" bodyCondition="_wBtVMookEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wBtVMookEeSkH97cUQxLGA" name="body" constrainedElement="_wBsuIIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wBtVM4okEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::NutritionSection))->asSequence()->any(true).oclAsType(consol::NutritionSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wBtVMIokEeSkH97cUQxLGA" type="_MlM4IJ2GEeORR8_YW0n_jQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wBtVMYokEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wBujUIokEeSkH97cUQxLGA" name="getFunctionalStatusSection2" bodyCondition="_wBujU4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wBujU4okEeSkH97cUQxLGA" name="body" constrainedElement="_wBujUIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wBujVIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::FunctionalStatusSection2))->asSequence()->any(true).oclAsType(consol::FunctionalStatusSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wBujUYokEeSkH97cUQxLGA" type="_8rMFkPyHEeOozpLKXSm5NA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wBujUookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wBwYgIokEeSkH97cUQxLGA" name="getHistoryOfPastIllnessSection2" bodyCondition="_wBwYg4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wBwYg4okEeSkH97cUQxLGA" name="body" constrainedElement="_wBwYgIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wBwYhIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HistoryOfPastIllnessSection2))->asSequence()->any(true).oclAsType(consol::HistoryOfPastIllnessSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wBwYgYokEeSkH97cUQxLGA" type="_sZlggPyhEeOC19UEcu7MOw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wBwYgookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wByNsIokEeSkH97cUQxLGA" name="getHistoryOfPresentIllnessSection" bodyCondition="_wByNs4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wByNs4okEeSkH97cUQxLGA" name="body" constrainedElement="_wByNsIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wByNtIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HistoryOfPresentIllnessSection))->asSequence()->any(true).oclAsType(consol::HistoryOfPresentIllnessSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wByNsYokEeSkH97cUQxLGA" type="_2PcWsRSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wByNsookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wBzb0IokEeSkH97cUQxLGA" name="getHospitalConsultationsSection" bodyCondition="_wBzb04okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wBzb04okEeSkH97cUQxLGA" name="body" constrainedElement="_wBzb0IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wBzb1IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalConsultationsSection))->asSequence()->any(true).oclAsType(consol::HospitalConsultationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wBzb0YokEeSkH97cUQxLGA" type="_eKFbUDVyEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wBzb0ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wB0p8IokEeSkH97cUQxLGA" name="getHospitalDischargeInstructionsSection" bodyCondition="_wB0p84okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wB0p84okEeSkH97cUQxLGA" name="body" constrainedElement="_wB0p8IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wB0p9IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeInstructionsSection))->asSequence()->any(true).oclAsType(consol::HospitalDischargeInstructionsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wB0p8YokEeSkH97cUQxLGA" type="_lBergCUMEeGiOPpZVnfEJA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wB0p8ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wB14EIokEeSkH97cUQxLGA" name="getHospitalDischargePhysicalSection" bodyCondition="_wB14E4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wB14E4okEeSkH97cUQxLGA" name="body" constrainedElement="_wB14EIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wB14FIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargePhysicalSection))->asSequence()->any(true).oclAsType(consol::HospitalDischargePhysicalSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wB14EYokEeSkH97cUQxLGA" type="_WikGsCUTEeGiOPpZVnfEJA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wB14EookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wB3GMIokEeSkH97cUQxLGA" name="getHospitalDischargeStudiesSummarySection" bodyCondition="_wB3GM4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wB3GM4okEeSkH97cUQxLGA" name="body" constrainedElement="_wB3GMIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wB3GNIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HospitalDischargeStudiesSummarySection))->asSequence()->any(true).oclAsType(consol::HospitalDischargeStudiesSummarySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wB3GMYokEeSkH97cUQxLGA" type="_38AXoCUTEeGiOPpZVnfEJA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wB3GMookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wB4UUIokEeSkH97cUQxLGA" name="getImmunizationsSectionEntriesOptional2" bodyCondition="_wB4UU4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wB4UU4okEeSkH97cUQxLGA" name="body" constrainedElement="_wB4UUIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wB4UVIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ImmunizationsSectionEntriesOptional2))->asSequence()->any(true).oclAsType(consol::ImmunizationsSectionEntriesOptional2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wB4UUYokEeSkH97cUQxLGA" type="_kdQhIPy3EeO1SvUcmWeLDQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wB4UUookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wB5icIokEeSkH97cUQxLGA" name="getProblemSectionEntriesOptional2" bodyCondition="_wB5ic4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wB5ic4okEeSkH97cUQxLGA" name="body" constrainedElement="_wB5icIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wB5idIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSectionEntriesOptional2))->asSequence()->any(true).oclAsType(consol::ProblemSectionEntriesOptional2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wB5icYokEeSkH97cUQxLGA" type="_ZgLioAFkEeSJ2uHfynwxCw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wB5icookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wB6wkIokEeSkH97cUQxLGA" name="getProceduresSectionEntriesOptional2" bodyCondition="_wB6wk4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wB6wk4okEeSkH97cUQxLGA" name="body" constrainedElement="_wB6wkIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wB6wlIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSectionEntriesOptional2))->asSequence()->any(true).oclAsType(consol::ProceduresSectionEntriesOptional2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wB6wkYokEeSkH97cUQxLGA" type="_80dMoAB0EeSLOb2O6vSPzg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wB6wkookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wB8lwIokEeSkH97cUQxLGA" name="getReasonForVisitSection" bodyCondition="_wB8lw4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wB8lw4okEeSkH97cUQxLGA" name="body" constrainedElement="_wB8lwIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wB8lxIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))->asSequence()->any(true).oclAsType(consol::ReasonForVisitSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wB8lwYokEeSkH97cUQxLGA" type="_Nm64UCscEeGHF88-qhhUMA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wB8lwookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wB9z4IokEeSkH97cUQxLGA" name="getReviewOfSystemsSection" bodyCondition="_wB9z44okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wB9z44okEeSkH97cUQxLGA" name="body" constrainedElement="_wB9z4IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wB9z5IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReviewOfSystemsSection))->asSequence()->any(true).oclAsType(consol::ReviewOfSystemsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wB9z4YokEeSkH97cUQxLGA" type="_2RqkMBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wB9z4ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wB_CAIokEeSkH97cUQxLGA" name="getSocialHistorySection2" bodyCondition="_wB_CA4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wB_CA4okEeSkH97cUQxLGA" name="body" constrainedElement="_wB_CAIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wB_CBIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::SocialHistorySection2))->asSequence()->any(true).oclAsType(consol::SocialHistorySection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wB_CAYokEeSkH97cUQxLGA" type="_wLWZMAFHEeSG_MJH-zNFRw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wB_CAookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wCG90IokEeSkH97cUQxLGA" name="getVitalSignsSectionEntriesOptional2" bodyCondition="_wCG904okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wCG904okEeSkH97cUQxLGA" name="body" constrainedElement="_wCG90IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wCG91IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSectionEntriesOptional2))->asSequence()->any(true).oclAsType(consol::VitalSignsSectionEntriesOptional2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wCG90YokEeSkH97cUQxLGA" type="_8LkzYAFTEeSmasYc71ZgMQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wCG90ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_4mLhsCluEeSoCqqrpX8LzQ" name="HistoryAndPhysicalNote2">
      <ownedComment xmi:id="_QnxScClvEeSoCqqrpX8LzQ">
        <body>A History and Physical (H&amp;P) Note is a medical report that documents the current and past conditions of the patient. It contains essential information that helps determine an individual's health status.  &#xD;
The first portion of the report is a current collection of organized information unique to an individual.  This is typically supplied by the patient or their caregiver, concerning the current medical problem or the reason for the patient encounter. This information is followed by a description of any past or ongoing medical issues, including current medications and allergies. Information is also obtained about the patient's lifestyle, habits, and diseases among family members.&#xD;
The next portion of the report contains information obtained by physically examining the patient and gathering diagnostic information in the form of laboratory tests, imaging, or other diagnostic procedures. &#xD;
The report ends with the clinician's assessment of the patient's situation and the intended plan to address those issues. &#xD;
A History and Physical Examination is required upon hospital admission as well as before operative procedures. An initial evaluation in an ambulatory setting is often documented in the form of an H&amp;P note.</body>
      </ownedComment>
      <ownedRule xmi:id="_pfraYCyUEeSoCqqrpX8LzQ" name="HistoryAndPhysicalNote2HasChiefComplaintAndReasonForVisitChiefComplaintOrReasonForVisit">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pfraYSyUEeSoCqqrpX8LzQ">
          <language>OCL</language>
          <body>(self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection)) and  self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))) xor self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_Ye-nkCyWEeSoCqqrpX8LzQ" name="HistoryAndPhysicalNote2HasAnAssementAndPlanSection2OrBothAssementSectionAndPlanOfTreatmentSection2">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Ye-nkSyWEeSoCqqrpX8LzQ">
          <language>OCL</language>
          <body>(self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfTreatmentSection2)) and  self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentSection))) xor self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentAndPlanSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_gkx0kCyXEeSoCqqrpX8LzQ" name="HistoryAndPhysicalNote2DoesNotHaveAssementAndPlanSection2WhenAssementAndPlanOfTreatment2ArePresent">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_gkx0kSyXEeSoCqqrpX8LzQ">
          <language>OCL</language>
          <body>(self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfTreatmentSection2)) or  self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentSection))) xor self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentAndPlanSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_sU-2wCyYEeSoCqqrpX8LzQ" name="HistoryAndPhysicalNote2DoesNotHaveChiefComplaintAndReasonForVisitWithChiefComplaintSectionOrReasonSection">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_sU-2wSyYEeSoCqqrpX8LzQ">
          <language>OCL</language>
          <body>(self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection)) or  self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))) xor self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wCKBIIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsTemplateId" constrainedElement="_4mLhsCluEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wCKBIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.1.3' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wCQu0IokEeSkH97cUQxLGA" name="HistoryAndPhysicalNote2CodeP" constrainedElement="_4mLhsCluEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wCQu0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wCOSkIokEeSkH97cUQxLGA" name="HistoryAndPhysicalNote2Code" constrainedElement="_4mLhsCluEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wCOSkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = '34117-2' or value.code = '11492-6' or value.code = '28626-0' or value.code = '34774-0' or value.code = '34115-6' or value.code = '34116-4' or value.code = '34095-0' or value.code = '34096-8' or value.code = '51849-8' or value.code = '47039-3' or value.code = '34763-3' or value.code = '34094-3' or value.code = '34138-8'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wCZRsIokEeSkH97cUQxLGA" name="HistoryAndPhysicalNote2InformationRecipient" constrainedElement="_4mLhsCluEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wCZRsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.informationRecipient->exists(informationRecipient : cda::InformationRecipient | not informationRecipient.oclIsUndefined() and informationRecipient.oclIsKindOf(cda::InformationRecipient))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wCaf0YokEeSkH97cUQxLGA" name="HistoryAndPhysicalNote2Participant" constrainedElement="_4mLhsCluEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wCaf0ookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->exists(participant : cda::Participant1 | not participant.oclIsUndefined() and participant.oclIsKindOf(cda::Participant1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wCbG4IokEeSkH97cUQxLGA" name="HistoryAndPhysicalNote2InFulfillmentOf" constrainedElement="_4mLhsCluEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wCbG4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.inFulfillmentOf->exists(inFulfillmentOf : cda::InFulfillmentOf | not inFulfillmentOf.oclIsUndefined() and inFulfillmentOf.oclIsKindOf(rim::ActRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wCcVAIokEeSkH97cUQxLGA" name="HistoryAndPhysicalNote2ComponentOf" constrainedElement="_4mLhsCluEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wCcVAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->one(componentOf : cda::Component1 | not componentOf.oclIsUndefined() and componentOf.oclIsKindOf(cda::Component1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wCgmcIokEeSkH97cUQxLGA" name="HistoryAndPhysicalNote2AllergiesSectionEntriesOptional2" constrainedElement="_4mLhsCluEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wCgmcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSectionEntriesOptional2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wCh0kYokEeSkH97cUQxLGA" name="HistoryAndPhysicalNote2AssessmentSection" constrainedElement="_4mLhsCluEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wCh0kookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wCjCsIokEeSkH97cUQxLGA" name="HistoryAndPhysicalNote2PlanOfTreatmentSection2" constrainedElement="_4mLhsCluEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wCjCsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfTreatmentSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wCk34IokEeSkH97cUQxLGA" name="HistoryAndPhysicalNote2AssessmentAndPlanSection2" constrainedElement="_4mLhsCluEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wCk34YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentAndPlanSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wCmGBYokEeSkH97cUQxLGA" name="HistoryAndPhysicalNote2ChiefComplaintSection" constrainedElement="_4mLhsCluEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wCmtEIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wCn7MIokEeSkH97cUQxLGA" name="HistoryAndPhysicalNote2ChiefComplaintAndReasonForVisitSection" constrainedElement="_4mLhsCluEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wCn7MYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wCpJUYokEeSkH97cUQxLGA" name="HistoryAndPhysicalNote2GeneralStatusSection" constrainedElement="_4mLhsCluEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wCpJUookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::GeneralStatusSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wCqXc4okEeSkH97cUQxLGA" name="HistoryAndPhysicalNote2HistoryOfPastIllnessSection2" constrainedElement="_4mLhsCluEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wCqXdIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HistoryOfPastIllnessSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wCrlkookEeSkH97cUQxLGA" name="HistoryAndPhysicalNote2HistoryOfPresentIllnessSection" constrainedElement="_4mLhsCluEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wCrlk4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HistoryOfPresentIllnessSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wCsztYokEeSkH97cUQxLGA" name="HistoryAndPhysicalNote2ImmunizationsSectionEntriesOptional2" constrainedElement="_4mLhsCluEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wCsztookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ImmunizationsSectionEntriesOptional2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wCuB1YokEeSkH97cUQxLGA" name="HistoryAndPhysicalNote2InstructionsSection2" constrainedElement="_4mLhsCluEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wCuB1ookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::InstructionsSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wCvP84okEeSkH97cUQxLGA" name="HistoryAndPhysicalNote2MedicationsSectionEntriesOptional2" constrainedElement="_4mLhsCluEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wCvP9IokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsSectionEntriesOptional2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wCweFIokEeSkH97cUQxLGA" name="HistoryAndPhysicalNote2PhysicalExamSection2" constrainedElement="_4mLhsCluEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wCweFYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PhysicalExamSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wCxsM4okEeSkH97cUQxLGA" name="HistoryAndPhysicalNote2ProblemSectionEntriesOptional2" constrainedElement="_4mLhsCluEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wCxsNIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSectionEntriesOptional2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wCy6VYokEeSkH97cUQxLGA" name="HistoryAndPhysicalNote2ProceduresSectionEntriesOptional2" constrainedElement="_4mLhsCluEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wCy6VookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSectionEntriesOptional2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wC0Ic4okEeSkH97cUQxLGA" name="HistoryAndPhysicalNote2ReasonForVisitSection" constrainedElement="_4mLhsCluEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wC0IdIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wC1WlYokEeSkH97cUQxLGA" name="HistoryAndPhysicalNote2ResultsSectionEntriesOptional2" constrainedElement="_4mLhsCluEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wC1WlookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ResultsSectionEntriesOptional2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wC2ktYokEeSkH97cUQxLGA" name="HistoryAndPhysicalNote2ReviewOfSystemsSection" constrainedElement="_4mLhsCluEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wC2ktookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReviewOfSystemsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wC3y1YokEeSkH97cUQxLGA" name="HistoryAndPhysicalNote2SocialHistorySection2" constrainedElement="_4mLhsCluEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wC3y1ookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::SocialHistorySection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wC5A9IokEeSkH97cUQxLGA" name="HistoryAndPhysicalNote2VitalSignsSectionEntriesOptional2" constrainedElement="_4mLhsCluEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wC5A9YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSectionEntriesOptional2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wbcq4IokEeSkH97cUQxLGA" name="HistoryAndPhysicalNote2InformationRecipientIntendedRecipient" constrainedElement="_4mLhsCluEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wbcq4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.informationRecipient->excluding(null)->reject(intendedRecipient->one(intendedRecipient : cda::IntendedRecipient | not intendedRecipient.oclIsUndefined() and intendedRecipient.oclIsKindOf(rim::Role)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wbegEIokEeSkH97cUQxLGA" name="HistoryAndPhysicalNote2ComponentOfEncompassingEncounterResponsiblePartyAssignedEntityHasPersonOrOrganization" constrainedElement="_4mLhsCluEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wbegEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null).responsibleParty->excluding(null)->reject(not assignedEntity.assignedPerson.oclIsUndefined() or not assignedEntity.representedOrganization->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wbfHIIokEeSkH97cUQxLGA" name="HistoryAndPhysicalNote2ComponentOfEncompassingEncounterResponsiblePartyAssignedEntity" constrainedElement="_4mLhsCluEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wbfHIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null).responsibleParty->excluding(null)->reject(assignedEntity->one(assignedEntity : cda::AssignedEntity | not assignedEntity.oclIsUndefined() and assignedEntity.oclIsKindOf(rim::Role)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wbfuMIokEeSkH97cUQxLGA" name="HistoryAndPhysicalNote2ComponentOfEncompassingEncounterEncounterParticipantAssignedEntityHasPersonOrOrganization" constrainedElement="_4mLhsCluEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wbfuMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null).encounterParticipant->excluding(null)->reject(not assignedEntity.assignedPerson.oclIsUndefined() or not assignedEntity.representedOrganization->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wbgVQIokEeSkH97cUQxLGA" name="HistoryAndPhysicalNote2ComponentOfEncompassingEncounterEncounterParticipantAssignedEntity" constrainedElement="_4mLhsCluEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wbgVQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null).encounterParticipant->excluding(null)->reject(assignedEntity->one(assignedEntity : cda::AssignedEntity | not assignedEntity.oclIsUndefined() and assignedEntity.oclIsKindOf(rim::Role)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wbg8UIokEeSkH97cUQxLGA" name="HistoryAndPhysicalNote2ComponentOfEncompassingEncounterPreciseToTheDay" constrainedElement="_4mLhsCluEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wbg8UYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(not effectiveTime.value.oclIsUndefined() implies effectiveTime.value.size() >= 8)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wbg8UookEeSkH97cUQxLGA" name="HistoryAndPhysicalNote2ComponentOfEncompassingEncounterPreciseToTheMinute" constrainedElement="_4mLhsCluEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wbg8U4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(not effectiveTime.value.oclIsUndefined() implies effectiveTime.value.size() >= 12)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wbhjYIokEeSkH97cUQxLGA" name="HistoryAndPhysicalNote2ComponentOfEncompassingEncounterPreciseToTheSecond" constrainedElement="_4mLhsCluEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wbhjYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(not effectiveTime.value.oclIsUndefined() implies effectiveTime.value.size() >= 14)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wbiKcIokEeSkH97cUQxLGA" name="HistoryAndPhysicalNote2ComponentOfEncompassingEncounterIfMorePreciseThanDayIncludeTimeZoneOffset" constrainedElement="_4mLhsCluEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wbiKcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(not effectiveTime.value.oclIsUndefined() and effectiveTime.value.size() > 8 implies effectiveTime.value.size() >= 15)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wbiKcookEeSkH97cUQxLGA" name="HistoryAndPhysicalNote2ComponentOfEncompassingEncounterId" constrainedElement="_4mLhsCluEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wbiKc4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wbixgIokEeSkH97cUQxLGA" name="HistoryAndPhysicalNote2ComponentOfEncompassingEncounterEffectiveTime" constrainedElement="_4mLhsCluEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wbixgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject((effectiveTime.oclIsUndefined() or effectiveTime.isNullFlavorUndefined()) implies (not effectiveTime.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wbixgookEeSkH97cUQxLGA" name="HistoryAndPhysicalNote2ComponentOfEncompassingEncounterResponsibleParty" constrainedElement="_4mLhsCluEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wbixg4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(responsibleParty->one(responsibleParty : cda::ResponsibleParty | not responsibleParty.oclIsUndefined() and responsibleParty.oclIsKindOf(cda::ResponsibleParty)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wbjYkIokEeSkH97cUQxLGA" name="HistoryAndPhysicalNote2ComponentOfEncompassingEncounterEncounterParticipant" constrainedElement="_4mLhsCluEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wbjYkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(encounterParticipant->exists(encounterParticipant : cda::EncounterParticipant | not encounterParticipant.oclIsUndefined() and encounterParticipant.oclIsKindOf(cda::EncounterParticipant)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wbj_oIokEeSkH97cUQxLGA" name="HistoryAndPhysicalNote2ComponentOfEncompassingEncounterLocation" constrainedElement="_4mLhsCluEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wbj_oYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(location->one(location : cda::Location | not location.oclIsUndefined() and location.oclIsKindOf(rim::Participation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wbj_oookEeSkH97cUQxLGA" name="HistoryAndPhysicalNote2ComponentOfEncompassingEncounter" constrainedElement="_4mLhsCluEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wbj_o4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null)->reject(encompassingEncounter->one(encompassingEncounter : cda::EncompassingEncounter | not encompassingEncounter.oclIsUndefined() and encompassingEncounter.oclIsKindOf(cda::EncompassingEncounter)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_4mY9ECluEeSoCqqrpX8LzQ" general="_dduXkJ5OEeOr4eM3k36wAg"/>
      <ownedOperation xmi:id="_wChNgIokEeSkH97cUQxLGA" name="getAllergiesSectionEntriesOptional2" bodyCondition="_wChNg4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wChNg4okEeSkH97cUQxLGA" name="body" constrainedElement="_wChNgIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wCh0kIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSectionEntriesOptional2))->asSequence()->any(true).oclAsType(consol::AllergiesSectionEntriesOptional2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wChNgYokEeSkH97cUQxLGA" type="_nWAcMAIjEeSVzfoPSatgpg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wChNgookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wCiboIokEeSkH97cUQxLGA" name="getAssessmentSection" bodyCondition="_wCibo4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wCibo4okEeSkH97cUQxLGA" name="body" constrainedElement="_wCiboIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wCibpIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentSection))->asSequence()->any(true).oclAsType(consol::AssessmentSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wCiboYokEeSkH97cUQxLGA" type="_W8pI4DszEeGvzMYhXuqAEA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wCiboookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wCkQ0IokEeSkH97cUQxLGA" name="getPlanOfTreatmentSection2" bodyCondition="_wCkQ04okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wCkQ04okEeSkH97cUQxLGA" name="body" constrainedElement="_wCkQ0IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wCkQ1IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfTreatmentSection2))->asSequence()->any(true).oclAsType(consol::PlanOfTreatmentSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wCkQ0YokEeSkH97cUQxLGA" type="_bwml0P4yEeO_Yb9cO8w3bA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wCkQ0ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wCmGAIokEeSkH97cUQxLGA" name="getAssessmentAndPlanSection2" bodyCondition="_wCmGA4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wCmGA4okEeSkH97cUQxLGA" name="body" constrainedElement="_wCmGAIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wCmGBIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentAndPlanSection2))->asSequence()->any(true).oclAsType(consol::AssessmentAndPlanSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wCmGAYokEeSkH97cUQxLGA" type="_q_8twPvVEeOvZJBdQKQrqQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wCmGAookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wCnUIIokEeSkH97cUQxLGA" name="getChiefComplaintSection" bodyCondition="_wCnUI4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wCnUI4okEeSkH97cUQxLGA" name="body" constrainedElement="_wCnUIIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wCnUJIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection))->asSequence()->any(true).oclAsType(consol::ChiefComplaintSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wCnUIYokEeSkH97cUQxLGA" type="_2PWQCBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wCnUIookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wCoiQIokEeSkH97cUQxLGA" name="getChiefComplaintAndReasonForVisitSection" bodyCondition="_wCoiQ4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wCoiQ4okEeSkH97cUQxLGA" name="body" constrainedElement="_wCoiQIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wCpJUIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))->asSequence()->any(true).oclAsType(consol::ChiefComplaintAndReasonForVisitSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wCoiQYokEeSkH97cUQxLGA" type="_oI7CQCsaEeGHF88-qhhUMA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wCoiQookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wCpwYIokEeSkH97cUQxLGA" name="getGeneralStatusSection" bodyCondition="_wCqXcYokEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wCqXcYokEeSkH97cUQxLGA" name="body" constrainedElement="_wCpwYIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wCqXcookEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::GeneralStatusSection))->asSequence()->any(true).oclAsType(consol::GeneralStatusSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wCpwYYokEeSkH97cUQxLGA" type="_2Pxt6xSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wCqXcIokEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wCq-gIokEeSkH97cUQxLGA" name="getHistoryOfPastIllnessSection2" bodyCondition="_wCrlkIokEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wCrlkIokEeSkH97cUQxLGA" name="body" constrainedElement="_wCq-gIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wCrlkYokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HistoryOfPastIllnessSection2))->asSequence()->any(true).oclAsType(consol::HistoryOfPastIllnessSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wCq-gYokEeSkH97cUQxLGA" type="_sZlggPyhEeOC19UEcu7MOw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wCq-gookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wCszsIokEeSkH97cUQxLGA" name="getHistoryOfPresentIllnessSection" bodyCondition="_wCszs4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wCszs4okEeSkH97cUQxLGA" name="body" constrainedElement="_wCszsIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wCsztIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HistoryOfPresentIllnessSection))->asSequence()->any(true).oclAsType(consol::HistoryOfPresentIllnessSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wCszsYokEeSkH97cUQxLGA" type="_2PcWsRSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wCszsookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wCuB0IokEeSkH97cUQxLGA" name="getImmunizationsSectionEntriesOptional2" bodyCondition="_wCuB04okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wCuB04okEeSkH97cUQxLGA" name="body" constrainedElement="_wCuB0IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wCuB1IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ImmunizationsSectionEntriesOptional2))->asSequence()->any(true).oclAsType(consol::ImmunizationsSectionEntriesOptional2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wCuB0YokEeSkH97cUQxLGA" type="_kdQhIPy3EeO1SvUcmWeLDQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wCuB0ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wCuo4IokEeSkH97cUQxLGA" name="getInstructionsSection2" bodyCondition="_wCvP8YokEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wCvP8YokEeSkH97cUQxLGA" name="body" constrainedElement="_wCuo4IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wCvP8ookEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::InstructionsSection2))->asSequence()->any(true).oclAsType(consol::InstructionsSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wCuo4YokEeSkH97cUQxLGA" type="_k8L2YP1HEeOVx4YMwgfjlA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wCvP8IokEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wCv3AIokEeSkH97cUQxLGA" name="getMedicationsSectionEntriesOptional2" bodyCondition="_wCweEookEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wCweEookEeSkH97cUQxLGA" name="body" constrainedElement="_wCv3AIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wCweE4okEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsSectionEntriesOptional2))->asSequence()->any(true).oclAsType(consol::MedicationsSectionEntriesOptional2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wCweEIokEeSkH97cUQxLGA" type="_JUvaUAFaEeS0nNJt6oyOyQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wCweEYokEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wCxFIIokEeSkH97cUQxLGA" name="getPhysicalExamSection2" bodyCondition="_wCxsMYokEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wCxsMYokEeSkH97cUQxLGA" name="body" constrainedElement="_wCxFIIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wCxsMookEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PhysicalExamSection2))->asSequence()->any(true).oclAsType(consol::PhysicalExamSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wCxFIYokEeSkH97cUQxLGA" type="_-nZiYP4uEeObaveuCI77uA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wCxsMIokEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wCy6UIokEeSkH97cUQxLGA" name="getProblemSectionEntriesOptional2" bodyCondition="_wCy6U4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wCy6U4okEeSkH97cUQxLGA" name="body" constrainedElement="_wCy6UIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wCy6VIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSectionEntriesOptional2))->asSequence()->any(true).oclAsType(consol::ProblemSectionEntriesOptional2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wCy6UYokEeSkH97cUQxLGA" type="_ZgLioAFkEeSJ2uHfynwxCw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wCy6UookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wCzhYIokEeSkH97cUQxLGA" name="getProceduresSectionEntriesOptional2" bodyCondition="_wC0IcYokEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wC0IcYokEeSkH97cUQxLGA" name="body" constrainedElement="_wCzhYIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wC0IcookEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSectionEntriesOptional2))->asSequence()->any(true).oclAsType(consol::ProceduresSectionEntriesOptional2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wCzhYYokEeSkH97cUQxLGA" type="_80dMoAB0EeSLOb2O6vSPzg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wC0IcIokEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wC1WkIokEeSkH97cUQxLGA" name="getReasonForVisitSection" bodyCondition="_wC1Wk4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wC1Wk4okEeSkH97cUQxLGA" name="body" constrainedElement="_wC1WkIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wC1WlIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))->asSequence()->any(true).oclAsType(consol::ReasonForVisitSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wC1WkYokEeSkH97cUQxLGA" type="_Nm64UCscEeGHF88-qhhUMA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wC1WkookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wC2ksIokEeSkH97cUQxLGA" name="getResultsSectionEntriesOptional2" bodyCondition="_wC2ks4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wC2ks4okEeSkH97cUQxLGA" name="body" constrainedElement="_wC2ksIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wC2ktIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ResultsSectionEntriesOptional2))->asSequence()->any(true).oclAsType(consol::ResultsSectionEntriesOptional2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wC2ksYokEeSkH97cUQxLGA" type="_yaJ3QAFAEeSaVZ5WxWd94w" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wC2ksookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wC3y0IokEeSkH97cUQxLGA" name="getReviewOfSystemsSection" bodyCondition="_wC3y04okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wC3y04okEeSkH97cUQxLGA" name="body" constrainedElement="_wC3y0IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wC3y1IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReviewOfSystemsSection))->asSequence()->any(true).oclAsType(consol::ReviewOfSystemsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wC3y0YokEeSkH97cUQxLGA" type="_2RqkMBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wC3y0ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wC4Z4IokEeSkH97cUQxLGA" name="getSocialHistorySection2" bodyCondition="_wC5A8ookEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wC5A8ookEeSkH97cUQxLGA" name="body" constrainedElement="_wC4Z4IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wC5A84okEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::SocialHistorySection2))->asSequence()->any(true).oclAsType(consol::SocialHistorySection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wC5A8IokEeSkH97cUQxLGA" type="_wLWZMAFHEeSG_MJH-zNFRw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wC5A8YokEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wC5oAIokEeSkH97cUQxLGA" name="getVitalSignsSectionEntriesOptional2" bodyCondition="_wC6PEIokEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wC6PEIokEeSkH97cUQxLGA" name="body" constrainedElement="_wC5oAIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wC6PEYokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSectionEntriesOptional2))->asSequence()->any(true).oclAsType(consol::VitalSignsSectionEntriesOptional2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wC5oAYokEeSkH97cUQxLGA" type="_8LkzYAFTEeSmasYc71ZgMQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wC5oAookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_aH1CYC1fEeSoCqqrpX8LzQ" name="OperativeNote2">
      <ownedComment xmi:id="_wVCEYC1fEeSoCqqrpX8LzQ">
        <body>The Operative Note is a frequently used type of procedure note with specific requirements set forth by regulatory agencies. &#xD;
The Operative Note is created immediately following a surgical or other high-risk procedure. It records the pre and post-surgical diagnosis, pertinent events of the procedure, as well as the condition of the patient following the procedure.  The report should be sufficiently detailed to support the diagnoses, justify the treatment, document the course of the procedure, and provide continuity of care.</body>
      </ownedComment>
      <ownedRule xmi:id="_wC62IIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsTemplateId" constrainedElement="_aH1CYC1fEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wC62IYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.1.7' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wC_HkIokEeSkH97cUQxLGA" name="OperativeNote2CodeP" constrainedElement="_aH1CYC1fEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wC_HkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wC8rUIokEeSkH97cUQxLGA" name="OperativeNote2Code" constrainedElement="_aH1CYC1fEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wC8rUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = '11504-8' or value.code = '34137-0' or value.code = '28583-3' or value.code = '28624-5' or value.code = '28573-4' or value.code = '34877-1' or value.code = '34874-8' or value.code = '34870-6' or value.code = '34868-0' or value.code = '34818-5'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wDZXQIokEeSkH97cUQxLGA" name="OperativeNote2DocumentationOf" constrainedElement="_aH1CYC1fEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wDZXQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->exists(documentationOf : cda::DocumentationOf | not documentationOf.oclIsUndefined() and documentationOf.oclIsKindOf(cda::DocumentationOf))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wDbzgIokEeSkH97cUQxLGA" name="OperativeNote2Authorization" constrainedElement="_aH1CYC1fEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wDbzgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.authorization->one(authorization : cda::Authorization | not authorization.oclIsUndefined() and authorization.oclIsKindOf(cda::Authorization))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wDdBoIokEeSkH97cUQxLGA" name="OperativeNote2AnesthesiaSection2" constrainedElement="_aH1CYC1fEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wDdBoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AnesthesiaSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wDe20IokEeSkH97cUQxLGA" name="OperativeNote2ComplicationsSection2" constrainedElement="_aH1CYC1fEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wDe20YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ComplicationsSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wDfd5YokEeSkH97cUQxLGA" name="OperativeNote2PreoperativeDiagnosisSection2" constrainedElement="_aH1CYC1fEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wDfd5ookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PreoperativeDiagnosisSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wDgsBYokEeSkH97cUQxLGA" name="OperativeNote2ProcedureEstimatedBloodLossSection" constrainedElement="_aH1CYC1fEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wDgsBookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureEstimatedBloodLossSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wDihMIokEeSkH97cUQxLGA" name="OperativeNote2ProcedureFindingsSection2" constrainedElement="_aH1CYC1fEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wDihMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureFindingsSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wDjvUIokEeSkH97cUQxLGA" name="OperativeNote2ProcedureSpecimensTakenSection" constrainedElement="_aH1CYC1fEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wDjvUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureSpecimensTakenSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wDlkgIokEeSkH97cUQxLGA" name="OperativeNote2ProcedureDescriptionSection" constrainedElement="_aH1CYC1fEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wDlkgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureDescriptionSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wDmyoIokEeSkH97cUQxLGA" name="OperativeNote2PostoperativeDiagnosisSection" constrainedElement="_aH1CYC1fEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wDmyoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PostoperativeDiagnosisSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wDoAwIokEeSkH97cUQxLGA" name="OperativeNote2ProcedureImplantsSection" constrainedElement="_aH1CYC1fEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wDoAwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureImplantsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wDpO4IokEeSkH97cUQxLGA" name="OperativeNote2OperativeNoteFluidSection" constrainedElement="_aH1CYC1fEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wDpO4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::OperativeNoteFluidSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wDqdAIokEeSkH97cUQxLGA" name="OperativeNote2OperativeNoteSurgicalProcedureSection" constrainedElement="_aH1CYC1fEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wDqdAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::OperativeNoteSurgicalProcedureSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wDrrIIokEeSkH97cUQxLGA" name="OperativeNote2PlanOfTreatmentSection2" constrainedElement="_aH1CYC1fEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wDrrIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfTreatmentSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wDs5QIokEeSkH97cUQxLGA" name="OperativeNote2PlannedProcedureSection2" constrainedElement="_aH1CYC1fEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wDs5QYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlannedProcedureSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wDuHYIokEeSkH97cUQxLGA" name="OperativeNote2ProcedureDispositionSection" constrainedElement="_aH1CYC1fEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wDuHYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureDispositionSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wDvVgIokEeSkH97cUQxLGA" name="OperativeNote2ProcedureIndicationsSection2" constrainedElement="_aH1CYC1fEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wDvVgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureIndicationsSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wDwjoIokEeSkH97cUQxLGA" name="OperativeNote2SurgicalDrainsSection" constrainedElement="_aH1CYC1fEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wDwjoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::SurgicalDrainsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wboREIokEeSkH97cUQxLGA" name="OperativeNote2DocumentationOfServiceEventIVLTSLow" constrainedElement="_aH1CYC1fEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wboREYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null).effectiveTime->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((low.oclIsUndefined() or low.isNullFlavorUndefined()) implies (not low.oclIsUndefined()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wbpfMIokEeSkH97cUQxLGA" name="OperativeNote2DocumentationOfServiceEventPerformerAssignedEntityCode" constrainedElement="_aH1CYC1fEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wbpfMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null).performer->excluding(null).assignedEntity->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined() and code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = code.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.12.443' and (value.code = 'CP' or value.code = 'PP' or value.code = 'RP')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wbqGQIokEeSkH97cUQxLGA" name="OperativeNote2DocumentationOfServiceEventPerformerAssignedEntityCodeP" constrainedElement="_aH1CYC1fEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wbqGQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null).performer->excluding(null).assignedEntity->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wbqGQookEeSkH97cUQxLGA" name="OperativeNote2DocumentationOfServiceEventPerformerTypeCode" constrainedElement="_aH1CYC1fEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wbqGQ4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null).performer->excluding(null)->reject(typeCode=vocab::x_ServiceEventPerformer::PPRF)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wbqtUIokEeSkH97cUQxLGA" name="OperativeNote2DocumentationOfServiceEventPerformerAssignedEntity" constrainedElement="_aH1CYC1fEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wbqtUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null).performer->excluding(null)->reject(assignedEntity->one(assignedEntity : cda::AssignedEntity | not assignedEntity.oclIsUndefined() and assignedEntity.oclIsKindOf(cda::AssignedEntity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wbqtUookEeSkH97cUQxLGA" name="OperativeNote2DocumentationOfServiceEventEffectiveTimeHasHighWhenNoWidth" constrainedElement="_aH1CYC1fEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wbrUYIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject(not effectiveTime.width.oclIsUndefined() xor not effectiveTime.high.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wbrUYYokEeSkH97cUQxLGA" name="OperativeNote2DocumentationOfServiceEventEffectiveTimeNoHighIfWidth" constrainedElement="_aH1CYC1fEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wbrUYookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject(not effectiveTime.width.oclIsUndefined() xor not effectiveTime.high.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wbr7cIokEeSkH97cUQxLGA" name="OperativeNote2DocumentationOfServiceEventPreciseToTheDay" constrainedElement="_aH1CYC1fEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wbr7cYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject((not effectiveTime.low.value.oclIsUndefined() implies effectiveTime.low.value.size() >= 8) and (not effectiveTime.high.value.oclIsUndefined() implies effectiveTime.high.value.size() >= 8))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wbr7cookEeSkH97cUQxLGA" name="OperativeNote2DocumentationOfServiceEventPreciseToTheMinute" constrainedElement="_aH1CYC1fEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wbr7c4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject((not effectiveTime.low.value.oclIsUndefined() implies effectiveTime.low.value.size() >= 12) and (not effectiveTime.high.value.oclIsUndefined() implies effectiveTime.high.value.size() >= 12))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wbsigIokEeSkH97cUQxLGA" name="OperativeNote2DocumentationOfServiceEventPreciseToTheSecond" constrainedElement="_aH1CYC1fEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wbsigYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject((not effectiveTime.low.value.oclIsUndefined() implies effectiveTime.low.value.size() >= 14) and (not effectiveTime.high.value.oclIsUndefined() implies effectiveTime.high.value.size() >= 14))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wbtJkIokEeSkH97cUQxLGA" name="OperativeNote2DocumentationOfServiceEventIfMorePreciseThanDayIncludeTimeZoneOffset" constrainedElement="_aH1CYC1fEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wbtJkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject((not effectiveTime.low.value.oclIsUndefined() and effectiveTime.low.value.size() > 8 implies effectiveTime.low.value.size() >= 15) and (not effectiveTime.high.value.oclIsUndefined() and effectiveTime.high.value.size() > 8 implies effectiveTime.high.value.size() >= 15))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wbtJkookEeSkH97cUQxLGA" name="OperativeNote2DocumentationOfServiceEventProcedureCodes" constrainedElement="_aH1CYC1fEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wbtJk4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject(code.codeSystem = '2.16.840.1.113883.6.104' or code.codeSystem = '2.16.840.1.113883.6.12' or code.codeSystem = '2.16.840.1.113883.6.96')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wbtwoIokEeSkH97cUQxLGA" name="OperativeNote2DocumentationOfServiceEventEffectiveTime" constrainedElement="_aH1CYC1fEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wbtwoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject((effectiveTime.oclIsUndefined() or effectiveTime.isNullFlavorUndefined()) implies (not effectiveTime.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wbtwoookEeSkH97cUQxLGA" name="OperativeNote2DocumentationOfServiceEventCode" constrainedElement="_aH1CYC1fEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wbtwo4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wbuXsIokEeSkH97cUQxLGA" name="OperativeNote2DocumentationOfServiceEventPerformer" constrainedElement="_aH1CYC1fEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wbuXsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject(performer->one(performer : cda::Performer1 | not performer.oclIsUndefined() and performer.oclIsKindOf(cda::Performer1)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wbu-wIokEeSkH97cUQxLGA" name="OperativeNote2DocumentationOfServiceEvent" constrainedElement="_aH1CYC1fEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wbu-wYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null)->reject(serviceEvent->one(serviceEvent : cda::ServiceEvent | not serviceEvent.oclIsUndefined() and serviceEvent.oclIsKindOf(cda::ServiceEvent)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wbwM4IokEeSkH97cUQxLGA" name="OperativeNote2AuthorizationConsentClassCode" constrainedElement="_aH1CYC1fEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wbwM4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.authorization->excluding(null).consent->excluding(null)->reject(isDefined('classCode') and classCode=vocab::ActClass::CONS)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wbwM4ookEeSkH97cUQxLGA" name="OperativeNote2AuthorizationConsentMoodCode" constrainedElement="_aH1CYC1fEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wbwM44okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.authorization->excluding(null).consent->excluding(null)->reject(isDefined('moodCode') and moodCode=vocab::ActMood::EVN)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wbwz8IokEeSkH97cUQxLGA" name="OperativeNote2AuthorizationConsentStatusCode" constrainedElement="_aH1CYC1fEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wbwz8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.authorization->excluding(null).consent->excluding(null)->reject((statusCode.oclIsUndefined() or statusCode.isNullFlavorUndefined()) implies (not statusCode.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wbxbAIokEeSkH97cUQxLGA" name="OperativeNote2AuthorizationTypeCode" constrainedElement="_aH1CYC1fEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wbxbAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.authorization->excluding(null)->reject(isDefined('typeCode') and typeCode=vocab::ActRelationshipType::AUTH)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wbxbAookEeSkH97cUQxLGA" name="OperativeNote2AuthorizationConsent" constrainedElement="_aH1CYC1fEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wbxbA4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.authorization->excluding(null)->reject(consent->one(consent : cda::Consent | not consent.oclIsUndefined() and consent.oclIsKindOf(cda::Consent)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_aH1pcC1fEeSoCqqrpX8LzQ" general="_dduXkJ5OEeOr4eM3k36wAg"/>
      <ownedOperation xmi:id="_wDePwIokEeSkH97cUQxLGA" name="getAnesthesiaSection2" bodyCondition="_wDePw4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wDePw4okEeSkH97cUQxLGA" name="body" constrainedElement="_wDePwIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wDePxIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AnesthesiaSection2))->asSequence()->any(true).oclAsType(consol::AnesthesiaSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wDePwYokEeSkH97cUQxLGA" type="_aetyEPu_EeOyiMEKhdqMGA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wDePwookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wDfd4IokEeSkH97cUQxLGA" name="getComplicationsSection2" bodyCondition="_wDfd44okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wDfd44okEeSkH97cUQxLGA" name="body" constrainedElement="_wDfd4IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wDfd5IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ComplicationsSection2))->asSequence()->any(true).oclAsType(consol::ComplicationsSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wDfd4YokEeSkH97cUQxLGA" type="_6M-msPvXEeOes-3T-2HryA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wDfd4ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wDgsAIokEeSkH97cUQxLGA" name="getPreoperativeDiagnosisSection2" bodyCondition="_wDgsA4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wDgsA4okEeSkH97cUQxLGA" name="body" constrainedElement="_wDgsAIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wDgsBIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PreoperativeDiagnosisSection2))->asSequence()->any(true).oclAsType(consol::PreoperativeDiagnosisSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wDgsAYokEeSkH97cUQxLGA" type="_JFd3MP5EEeOBnLkJOVC8NQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wDgsAookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wDh6IIokEeSkH97cUQxLGA" name="getProcedureEstimatedBloodLossSection" bodyCondition="_wDh6I4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wDh6I4okEeSkH97cUQxLGA" name="body" constrainedElement="_wDh6IIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wDh6JIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureEstimatedBloodLossSection))->asSequence()->any(true).oclAsType(consol::ProcedureEstimatedBloodLossSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wDh6IYokEeSkH97cUQxLGA" type="_TvcL8DVzEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wDh6IookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wDjIQIokEeSkH97cUQxLGA" name="getProcedureFindingsSection2" bodyCondition="_wDjIQ4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wDjIQ4okEeSkH97cUQxLGA" name="body" constrainedElement="_wDjIQIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wDjIRIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureFindingsSection2))->asSequence()->any(true).oclAsType(consol::ProcedureFindingsSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wDjIQYokEeSkH97cUQxLGA" type="_lLOykP5FEeO_r7yO9mhwnA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wDjIQookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wDk9cIokEeSkH97cUQxLGA" name="getProcedureSpecimensTakenSection" bodyCondition="_wDk9c4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wDk9c4okEeSkH97cUQxLGA" name="body" constrainedElement="_wDk9cIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wDk9dIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureSpecimensTakenSection))->asSequence()->any(true).oclAsType(consol::ProcedureSpecimensTakenSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wDk9cYokEeSkH97cUQxLGA" type="_gSUdsDVzEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wDk9cookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wDmLkIokEeSkH97cUQxLGA" name="getProcedureDescriptionSection" bodyCondition="_wDmLk4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wDmLk4okEeSkH97cUQxLGA" name="body" constrainedElement="_wDmLkIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wDmLlIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureDescriptionSection))->asSequence()->any(true).oclAsType(consol::ProcedureDescriptionSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wDmLkYokEeSkH97cUQxLGA" type="_HNUIIDVzEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wDmLkookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wDnZsIokEeSkH97cUQxLGA" name="getPostoperativeDiagnosisSection" bodyCondition="_wDnZs4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wDnZs4okEeSkH97cUQxLGA" name="body" constrainedElement="_wDnZsIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wDnZtIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PostoperativeDiagnosisSection))->asSequence()->any(true).oclAsType(consol::PostoperativeDiagnosisSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wDnZsYokEeSkH97cUQxLGA" type="_7UA-4DVyEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wDnZsookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wDon0IokEeSkH97cUQxLGA" name="getProcedureImplantsSection" bodyCondition="_wDon04okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wDon04okEeSkH97cUQxLGA" name="body" constrainedElement="_wDon0IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wDon1IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureImplantsSection))->asSequence()->any(true).oclAsType(consol::ProcedureImplantsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wDon0YokEeSkH97cUQxLGA" type="_Z662wDVzEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wDon0ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wDp18IokEeSkH97cUQxLGA" name="getOperativeNoteFluidSection" bodyCondition="_wDp184okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wDp184okEeSkH97cUQxLGA" name="body" constrainedElement="_wDp18IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wDp19IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::OperativeNoteFluidSection))->asSequence()->any(true).oclAsType(consol::OperativeNoteFluidSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wDp18YokEeSkH97cUQxLGA" type="_vHfXoDVyEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wDp18ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wDrEEIokEeSkH97cUQxLGA" name="getOperativeNoteSurgicalProcedureSection" bodyCondition="_wDrEE4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wDrEE4okEeSkH97cUQxLGA" name="body" constrainedElement="_wDrEEIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wDrEFIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::OperativeNoteSurgicalProcedureSection))->asSequence()->any(true).oclAsType(consol::OperativeNoteSurgicalProcedureSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wDrEEYokEeSkH97cUQxLGA" type="_zel6wDVyEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wDrEEookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wDsSMIokEeSkH97cUQxLGA" name="getPlanOfTreatmentSection2" bodyCondition="_wDsSM4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wDsSM4okEeSkH97cUQxLGA" name="body" constrainedElement="_wDsSMIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wDsSNIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfTreatmentSection2))->asSequence()->any(true).oclAsType(consol::PlanOfTreatmentSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wDsSMYokEeSkH97cUQxLGA" type="_bwml0P4yEeO_Yb9cO8w3bA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wDsSMookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wDtgUIokEeSkH97cUQxLGA" name="getPlannedProcedureSection2" bodyCondition="_wDtgU4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wDtgU4okEeSkH97cUQxLGA" name="body" constrainedElement="_wDtgUIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wDtgVIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlannedProcedureSection2))->asSequence()->any(true).oclAsType(consol::PlannedProcedureSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wDtgUYokEeSkH97cUQxLGA" type="_dz0ZwP49EeO_F_2qLv6FWQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wDtgUookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wDuucIokEeSkH97cUQxLGA" name="getProcedureDispositionSection" bodyCondition="_wDuuc4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wDuuc4okEeSkH97cUQxLGA" name="body" constrainedElement="_wDuucIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wDuudIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureDispositionSection))->asSequence()->any(true).oclAsType(consol::ProcedureDispositionSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wDuucYokEeSkH97cUQxLGA" type="_QhXGYDVzEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wDuucookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wDv8kIokEeSkH97cUQxLGA" name="getProcedureIndicationsSection2" bodyCondition="_wDv8k4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wDv8k4okEeSkH97cUQxLGA" name="body" constrainedElement="_wDv8kIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wDv8lIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureIndicationsSection2))->asSequence()->any(true).oclAsType(consol::ProcedureIndicationsSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wDv8kYokEeSkH97cUQxLGA" type="_5_O94AByEeSjnfOPJpFg3A" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wDv8kookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wDxKsIokEeSkH97cUQxLGA" name="getSurgicalDrainsSection" bodyCondition="_wDxKs4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wDxKs4okEeSkH97cUQxLGA" name="body" constrainedElement="_wDxKsIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wDxKtIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::SurgicalDrainsSection))->asSequence()->any(true).oclAsType(consol::SurgicalDrainsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wDxKsYokEeSkH97cUQxLGA" type="_luQh8DVzEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wDxKsookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_JD8b0C4pEeSoCqqrpX8LzQ" name="ProcedureNote2">
      <ownedComment xmi:id="_R29woC4pEeSoCqqrpX8LzQ">
        <body>Procedure Note encompasses many types of non-operative procedures including interventional cardiology, gastrointestinal endoscopy, osteopathic manipulation, and many other specialty fields. Procedure Notes are differentiated from Operative Notes because they do not involve incision or excision as the primary act.  &#xD;
The Procedure Note is created immediately following a non-operative procedure. It records the indications for the procedure and, when applicable, post-procedure diagnosis, pertinent events of the procedure, and the patient's tolerance for the procedure. It should be detailed enough to justify the procedure, describe the course of the procedure, and provide continuity of care.</body>
      </ownedComment>
      <ownedRule xmi:id="_21Cn4C7XEeSoCqqrpX8LzQ" name="ProcedureNote2HasAnAssementAndPlanSection2OrBothAssementSectionAndPlanOfTreatmentSection2">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_21Cn4S7XEeSoCqqrpX8LzQ">
          <language>OCL</language>
          <body>(self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfTreatmentSection2)) and  self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentSection))) xor self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentAndPlanSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uVe6QC7aEeSoCqqrpX8LzQ" name="ProcedureNote2SectionTitles">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uVe6QS7aEeSoCqqrpX8LzQ">
          <language>OCL</language>
          <body>self.getAllSections()->forAll(section : cda::Section | not section.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_OlYJMC7bEeSoCqqrpX8LzQ" name="ProcedureNote2DoesNotHaveAssementAndPlanSection2WhenAssementAndPlanOfTreatment2ArePresent">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_OlYJMS7bEeSoCqqrpX8LzQ">
          <language>OCL</language>
          <body>(self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfTreatmentSection2)) or  self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentSection))) xor self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentAndPlanSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_dOtxIC7bEeSoCqqrpX8LzQ" name="ProcedureNote2DoesNotHaveChiefComplaintAndReasonForVisitWithChiefComplaintSectionOrReasonSection">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_dOtxIS7bEeSoCqqrpX8LzQ">
          <language>OCL</language>
          <body>(self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection)) or  self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))) xor self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wDxxwIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsTemplateId" constrainedElement="_JD8b0C4pEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wDxxwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.1.6' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wD4fcIokEeSkH97cUQxLGA" name="ProcedureNote2CodeP" constrainedElement="_JD8b0C4pEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wD4fcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wD2DMIokEeSkH97cUQxLGA" name="ProcedureNote2Code" constrainedElement="_JD8b0C4pEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wD2DMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = '28570-0' or value.code = '11505-5' or value.code = '18744-3' or value.code = '18745-0' or value.code = '18746-8' or value.code = '18751-8' or value.code = '18753-4' or value.code = '18836-7' or value.code = '28577-5' or value.code = '28625-2' or value.code = '29757-2' or value.code = '33721-2' or value.code = '34121-4' or value.code = '34896-1' or value.code = '34899-5' or value.code = '47048-4' or value.code = '48807-2'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wEY1wYokEeSkH97cUQxLGA" name="ProcedureNote2Participant" constrainedElement="_JD8b0C4pEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wEY1wookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->exists(participant : cda::Participant1 | not participant.oclIsUndefined() and participant.oclIsKindOf(cda::Participant1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wEaq8IokEeSkH97cUQxLGA" name="ProcedureNote2DocumentationOf" constrainedElement="_JD8b0C4pEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wEaq8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->exists(documentationOf : cda::DocumentationOf | not documentationOf.oclIsUndefined() and documentationOf.oclIsKindOf(cda::DocumentationOf))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wEduQIokEeSkH97cUQxLGA" name="ProcedureNote2Authorization" constrainedElement="_JD8b0C4pEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wEduQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.authorization->one(authorization : cda::Authorization | not authorization.oclIsUndefined() and authorization.oclIsKindOf(cda::Authorization))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wEe8YIokEeSkH97cUQxLGA" name="ProcedureNote2ComponentOf" constrainedElement="_JD8b0C4pEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wEe8YYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->one(componentOf : cda::Component1 | not componentOf.oclIsUndefined() and componentOf.oclIsKindOf(cda::Component1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wEimwIokEeSkH97cUQxLGA" name="ProcedureNote2ComplicationsSection2" constrainedElement="_JD8b0C4pEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wEimwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ComplicationsSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wEj04IokEeSkH97cUQxLGA" name="ProcedureNote2ProcedureDescriptionSection" constrainedElement="_JD8b0C4pEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wEj04YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureDescriptionSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wElDAIokEeSkH97cUQxLGA" name="ProcedureNote2ProcedureIndicationsSection2" constrainedElement="_JD8b0C4pEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wElDAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureIndicationsSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wEmRIYokEeSkH97cUQxLGA" name="ProcedureNote2PostprocedureDiagnosisSection2" constrainedElement="_JD8b0C4pEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wEmRIookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PostprocedureDiagnosisSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wEnfQookEeSkH97cUQxLGA" name="ProcedureNote2AssessmentSection" constrainedElement="_JD8b0C4pEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wEnfQ4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wEotYookEeSkH97cUQxLGA" name="ProcedureNote2AssessmentAndPlanSection2" constrainedElement="_JD8b0C4pEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wEotY4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentAndPlanSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wEp7gIokEeSkH97cUQxLGA" name="ProcedureNote2PlanOfTreatmentSection2" constrainedElement="_JD8b0C4pEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wEp7gYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfTreatmentSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wErJoIokEeSkH97cUQxLGA" name="ProcedureNote2AllergiesSectionEntriesOptional2" constrainedElement="_JD8b0C4pEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wErJoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSectionEntriesOptional2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wEsXwIokEeSkH97cUQxLGA" name="ProcedureNote2AnesthesiaSection2" constrainedElement="_JD8b0C4pEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wEsXwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AnesthesiaSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wEtl4IokEeSkH97cUQxLGA" name="ProcedureNote2ChiefComplaintSection" constrainedElement="_JD8b0C4pEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wEtl4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wEu0AIokEeSkH97cUQxLGA" name="ProcedureNote2ChiefComplaintAndReasonForVisitSection" constrainedElement="_JD8b0C4pEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wEu0AYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wEwCIIokEeSkH97cUQxLGA" name="ProcedureNote2FamilyHistorySection" constrainedElement="_JD8b0C4pEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wEwCIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::FamilyHistorySection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wExQQIokEeSkH97cUQxLGA" name="ProcedureNote2HistoryOfPastIllnessSection2" constrainedElement="_JD8b0C4pEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wExQQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HistoryOfPastIllnessSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wEyeYIokEeSkH97cUQxLGA" name="ProcedureNote2HistoryOfPresentIllnessSection" constrainedElement="_JD8b0C4pEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wEyeYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HistoryOfPresentIllnessSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wEzsgIokEeSkH97cUQxLGA" name="ProcedureNote2MedicalHistorySection" constrainedElement="_JD8b0C4pEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wEzsgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicalHistorySection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wE06oIokEeSkH97cUQxLGA" name="ProcedureNote2MedicationsSectionEntriesOptional2" constrainedElement="_JD8b0C4pEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wE06oYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsSectionEntriesOptional2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wE2IwIokEeSkH97cUQxLGA" name="ProcedureNote2MedicationsAdministeredSection2" constrainedElement="_JD8b0C4pEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wE2IwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsAdministeredSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wE3W4IokEeSkH97cUQxLGA" name="ProcedureNote2PhysicalExamSection2" constrainedElement="_JD8b0C4pEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wE3W4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PhysicalExamSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wE4lAIokEeSkH97cUQxLGA" name="ProcedureNote2PlannedProcedureSection2" constrainedElement="_JD8b0C4pEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wE4lAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlannedProcedureSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wE5zIIokEeSkH97cUQxLGA" name="ProcedureNote2ProcedureDispositionSection" constrainedElement="_JD8b0C4pEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wE5zIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureDispositionSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wE7BQIokEeSkH97cUQxLGA" name="ProcedureNote2ProcedureEstimatedBloodLossSection" constrainedElement="_JD8b0C4pEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wE7BQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureEstimatedBloodLossSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wE8PYIokEeSkH97cUQxLGA" name="ProcedureNote2ProcedureFindingsSection2" constrainedElement="_JD8b0C4pEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wE8PYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureFindingsSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wE9dgIokEeSkH97cUQxLGA" name="ProcedureNote2ProcedureImplantsSection" constrainedElement="_JD8b0C4pEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wE9dgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureImplantsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wE-roIokEeSkH97cUQxLGA" name="ProcedureNote2ProcedureSpecimensTakenSection" constrainedElement="_JD8b0C4pEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wE-roYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureSpecimensTakenSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wE_5wIokEeSkH97cUQxLGA" name="ProcedureNote2ProceduresSectionEntriesOptional2" constrainedElement="_JD8b0C4pEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wE_5wYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSectionEntriesOptional2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wFBH4IokEeSkH97cUQxLGA" name="ProcedureNote2ReasonForVisitSection" constrainedElement="_JD8b0C4pEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wFBH4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wFCWAIokEeSkH97cUQxLGA" name="ProcedureNote2ReviewOfSystemsSection" constrainedElement="_JD8b0C4pEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wFCWAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReviewOfSystemsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wFDkIIokEeSkH97cUQxLGA" name="ProcedureNote2SocialHistorySection2" constrainedElement="_JD8b0C4pEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wFDkIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::SocialHistorySection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wb1FYIokEeSkH97cUQxLGA" name="ProcedureNote2ParticipantAssociatedEntityClassCode" constrainedElement="_JD8b0C4pEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wb1FYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).associatedEntity->excluding(null)->reject(classCode=vocab::RoleClassAssociative::PROV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wb1scIokEeSkH97cUQxLGA" name="ProcedureNote2ParticipantAssociatedEntityAssociatedPerson" constrainedElement="_JD8b0C4pEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wb1scYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null).associatedEntity->excluding(null)->reject(associatedPerson->one(associatedPerson : cda::Person | not associatedPerson.oclIsUndefined() and associatedPerson.oclIsKindOf(rim::Entity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wb2TgIokEeSkH97cUQxLGA" name="ProcedureNote2ParticipantTypeCode" constrainedElement="_JD8b0C4pEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wb2TgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->reject(typeCode=vocab::ParticipationType::IND)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wb2TgookEeSkH97cUQxLGA" name="ProcedureNote2ParticipantFunctionCode" constrainedElement="_JD8b0C4pEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wb2Tg4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->reject((functionCode.oclIsUndefined() or functionCode.isNullFlavorUndefined()) implies (not functionCode.oclIsUndefined() and functionCode.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = functionCode.oclAsType(datatypes::CE) in &#xD;
value.code = 'PCP' and value.codeSystem = '2.16.840.1.113883.5.88'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wb26kIokEeSkH97cUQxLGA" name="ProcedureNote2ParticipantFunctionCodeP" constrainedElement="_JD8b0C4pEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wb26kYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->reject((functionCode.oclIsUndefined() or functionCode.isNullFlavorUndefined()) implies (not functionCode.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wb26kookEeSkH97cUQxLGA" name="ProcedureNote2ParticipantAssociatedEntity" constrainedElement="_JD8b0C4pEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wb26k4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.participant->excluding(null)->reject(associatedEntity->one(associatedEntity : cda::AssociatedEntity | not associatedEntity.oclIsUndefined() and associatedEntity.oclIsKindOf(cda::AssociatedEntity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wb594IokEeSkH97cUQxLGA" name="ProcedureNote2DocumentationOfServiceEventIVLTSLow" constrainedElement="_JD8b0C4pEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wb6k8IokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null).effectiveTime->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((low.oclIsUndefined() or low.isNullFlavorUndefined()) implies (not low.oclIsUndefined()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wb7zEIokEeSkH97cUQxLGA" name="ProcedureNote2DocumentationOfServiceEventPerformerAssignedEntityCodeP" constrainedElement="_JD8b0C4pEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wb7zEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null).performer->excluding(null).assignedEntity->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wb8aIIokEeSkH97cUQxLGA" name="ProcedureNote2DocumentationOfServiceEventPerformerAssignedEntityCode" constrainedElement="_JD8b0C4pEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wb8aIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null).performer->excluding(null).assignedEntity->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined() and code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = code.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.101' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wb8aIookEeSkH97cUQxLGA" name="ProcedureNote2DocumentationOfServiceEventPerformerTypeCode" constrainedElement="_JD8b0C4pEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wb8aI4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null).performer->excluding(null)->reject(typeCode=vocab::x_ServiceEventPerformer::PPRF)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wb9BMIokEeSkH97cUQxLGA" name="ProcedureNote2DocumentationOfServiceEventPerformerAssignedEntity" constrainedElement="_JD8b0C4pEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wb9BMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null).performer->excluding(null)->reject(assignedEntity->one(assignedEntity : cda::AssignedEntity | not assignedEntity.oclIsUndefined() and assignedEntity.oclIsKindOf(cda::AssignedEntity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wb9BMookEeSkH97cUQxLGA" name="ProcedureNote2DocumentationOfServiceEventEffectiveTimeHasHighWhenNoWidth" constrainedElement="_JD8b0C4pEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wb9BM4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject(not effectiveTime.width.oclIsUndefined() xor not effectiveTime.high.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wb9oQIokEeSkH97cUQxLGA" name="ProcedureNote2DocumentationOfServiceEventEffectiveTimeNoHighIfWidth" constrainedElement="_JD8b0C4pEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wb9oQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject(not effectiveTime.width.oclIsUndefined() xor not effectiveTime.high.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wb-PUIokEeSkH97cUQxLGA" name="ProcedureNote2DocumentationOfServiceEventPreciseToTheDay" constrainedElement="_JD8b0C4pEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wb-PUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject((not effectiveTime.low.value.oclIsUndefined() implies effectiveTime.low.value.size() >= 8) and (not effectiveTime.high.value.oclIsUndefined() implies effectiveTime.high.value.size() >= 8))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wb-PUookEeSkH97cUQxLGA" name="ProcedureNote2DocumentationOfServiceEventPreciseToTheMinute" constrainedElement="_JD8b0C4pEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wb-PU4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject((not effectiveTime.low.value.oclIsUndefined() implies effectiveTime.low.value.size() >= 12) and (not effectiveTime.high.value.oclIsUndefined() implies effectiveTime.high.value.size() >= 12))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wb-2YIokEeSkH97cUQxLGA" name="ProcedureNote2DocumentationOfServiceEventPreciseToTheSecond" constrainedElement="_JD8b0C4pEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wb-2YYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject((not effectiveTime.low.value.oclIsUndefined() implies effectiveTime.low.value.size() >= 14) and (not effectiveTime.high.value.oclIsUndefined() implies effectiveTime.high.value.size() >= 14))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wb_dcIokEeSkH97cUQxLGA" name="ProcedureNote2DocumentationOfServiceEventIfMorePreciseThanDayIncludeTimeZoneOffset" constrainedElement="_JD8b0C4pEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wb_dcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject((not effectiveTime.low.value.oclIsUndefined() and effectiveTime.low.value.size() > 8 implies effectiveTime.low.value.size() >= 15) and (not effectiveTime.high.value.oclIsUndefined() and effectiveTime.high.value.size() > 8 implies effectiveTime.high.value.size() >= 15))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wb_dcookEeSkH97cUQxLGA" name="ProcedureNote2DocumentationOfServiceEventProcedureCodes" constrainedElement="_JD8b0C4pEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wb_dc4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject(code.codeSystem = '2.16.840.1.113883.6.104' or code.codeSystem = '2.16.840.1.113883.6.12' or code.codeSystem = '2.16.840.1.113883.6.96')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wcAEgIokEeSkH97cUQxLGA" name="ProcedureNote2DocumentationOfServiceEventEffectiveTime" constrainedElement="_JD8b0C4pEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wcAEgYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject((effectiveTime.oclIsUndefined() or effectiveTime.isNullFlavorUndefined()) implies (not effectiveTime.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wcAEgookEeSkH97cUQxLGA" name="ProcedureNote2DocumentationOfServiceEventCode" constrainedElement="_JD8b0C4pEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wcAEg4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wcArkIokEeSkH97cUQxLGA" name="ProcedureNote2DocumentationOfServiceEventPerformer" constrainedElement="_JD8b0C4pEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wcArkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject(performer->one(performer : cda::Performer1 | not performer.oclIsUndefined() and performer.oclIsKindOf(cda::Performer1)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wcBSoIokEeSkH97cUQxLGA" name="ProcedureNote2DocumentationOfServiceEvent" constrainedElement="_JD8b0C4pEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wcBSoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null)->reject(serviceEvent->one(serviceEvent : cda::ServiceEvent | not serviceEvent.oclIsUndefined() and serviceEvent.oclIsKindOf(cda::ServiceEvent)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wcCgwIokEeSkH97cUQxLGA" name="ProcedureNote2AuthorizationConsentClassCode" constrainedElement="_JD8b0C4pEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wcCgwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.authorization->excluding(null).consent->excluding(null)->reject(isDefined('classCode') and classCode=vocab::ActClass::CONS)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wcCgwookEeSkH97cUQxLGA" name="ProcedureNote2AuthorizationConsentMoodCode" constrainedElement="_JD8b0C4pEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wcCgw4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.authorization->excluding(null).consent->excluding(null)->reject(isDefined('moodCode') and moodCode=vocab::ActMood::EVN)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wcDH0IokEeSkH97cUQxLGA" name="ProcedureNote2AuthorizationConsentStatusCode" constrainedElement="_JD8b0C4pEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wcDH0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.authorization->excluding(null).consent->excluding(null)->reject((statusCode.oclIsUndefined() or statusCode.isNullFlavorUndefined()) implies (not statusCode.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wcDu4IokEeSkH97cUQxLGA" name="ProcedureNote2AuthorizationTypeCode" constrainedElement="_JD8b0C4pEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wcDu4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.authorization->excluding(null)->reject(isDefined('typeCode') and typeCode=vocab::ActRelationshipType::AUTH)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wcDu4ookEeSkH97cUQxLGA" name="ProcedureNote2AuthorizationConsent" constrainedElement="_JD8b0C4pEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wcDu44okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.authorization->excluding(null)->reject(consent->one(consent : cda::Consent | not consent.oclIsUndefined() and consent.oclIsKindOf(cda::Consent)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wcFkEIokEeSkH97cUQxLGA" name="ProcedureNote2ComponentOfEncompassingEncounterEncounterParticipantTypeCode" constrainedElement="_JD8b0C4pEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wcFkEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null).encounterParticipant->excluding(null)->reject(typeCode=vocab::x_EncounterParticipant::REF)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wcHZQIokEeSkH97cUQxLGA" name="ProcedureNote2ComponentOfEncompassingEncounterLocationHealthCareFacilityId" constrainedElement="_JD8b0C4pEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wcHZQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null).location->excluding(null).healthCareFacility->excluding(null)->reject((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wcHZQookEeSkH97cUQxLGA" name="ProcedureNote2ComponentOfEncompassingEncounterLocationHealthCareFacility" constrainedElement="_JD8b0C4pEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wcHZQ4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null).location->excluding(null)->reject(healthCareFacility->one(healthCareFacility : cda::HealthCareFacility | not healthCareFacility.oclIsUndefined() and healthCareFacility.oclIsKindOf(cda::HealthCareFacility)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wcIAUIokEeSkH97cUQxLGA" name="ProcedureNote2ComponentOfEncompassingEncounterId" constrainedElement="_JD8b0C4pEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wcIAUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wcInYIokEeSkH97cUQxLGA" name="ProcedureNote2ComponentOfEncompassingEncounterCode" constrainedElement="_JD8b0C4pEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wcInYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wcInYookEeSkH97cUQxLGA" name="ProcedureNote2ComponentOfEncompassingEncounterEncounterParticipant" constrainedElement="_JD8b0C4pEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wcInY4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(encounterParticipant->one(encounterParticipant : cda::EncounterParticipant | not encounterParticipant.oclIsUndefined() and encounterParticipant.oclIsKindOf(cda::EncounterParticipant)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wcJOcIokEeSkH97cUQxLGA" name="ProcedureNote2ComponentOfEncompassingEncounterLocation" constrainedElement="_JD8b0C4pEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wcJOcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(location->exists(location : cda::Location | not location.oclIsUndefined() and location.oclIsKindOf(cda::Location)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wcJ1gIokEeSkH97cUQxLGA" name="ProcedureNote2ComponentOfEncompassingEncounter" constrainedElement="_JD8b0C4pEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wcJ1gYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null)->reject(encompassingEncounter->one(encompassingEncounter : cda::EncompassingEncounter | not encompassingEncounter.oclIsUndefined() and encompassingEncounter.oclIsKindOf(cda::EncompassingEncounter)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_JD8b0S4pEeSoCqqrpX8LzQ" general="_dduXkJ5OEeOr4eM3k36wAg"/>
      <ownedOperation xmi:id="_wEjN0IokEeSkH97cUQxLGA" name="getComplicationsSection2" bodyCondition="_wEjN04okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wEjN04okEeSkH97cUQxLGA" name="body" constrainedElement="_wEjN0IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wEjN1IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ComplicationsSection2))->asSequence()->any(true).oclAsType(consol::ComplicationsSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wEjN0YokEeSkH97cUQxLGA" type="_6M-msPvXEeOes-3T-2HryA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wEjN0ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wEkb8IokEeSkH97cUQxLGA" name="getProcedureDescriptionSection" bodyCondition="_wEkb84okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wEkb84okEeSkH97cUQxLGA" name="body" constrainedElement="_wEkb8IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wEkb9IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureDescriptionSection))->asSequence()->any(true).oclAsType(consol::ProcedureDescriptionSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wEkb8YokEeSkH97cUQxLGA" type="_HNUIIDVzEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wEkb8ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wElqEIokEeSkH97cUQxLGA" name="getProcedureIndicationsSection2" bodyCondition="_wElqE4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wElqE4okEeSkH97cUQxLGA" name="body" constrainedElement="_wElqEIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wEmRIIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureIndicationsSection2))->asSequence()->any(true).oclAsType(consol::ProcedureIndicationsSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wElqEYokEeSkH97cUQxLGA" type="_5_O94AByEeSjnfOPJpFg3A" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wElqEookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wEm4MIokEeSkH97cUQxLGA" name="getPostprocedureDiagnosisSection2" bodyCondition="_wEnfQIokEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wEnfQIokEeSkH97cUQxLGA" name="body" constrainedElement="_wEm4MIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wEnfQYokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PostprocedureDiagnosisSection2))->asSequence()->any(true).oclAsType(consol::PostprocedureDiagnosisSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wEm4MYokEeSkH97cUQxLGA" type="_MLNngP5BEeOmw9RN80Tpig" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wEm4MookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wEoGUIokEeSkH97cUQxLGA" name="getAssessmentSection" bodyCondition="_wEotYIokEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wEotYIokEeSkH97cUQxLGA" name="body" constrainedElement="_wEoGUIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wEotYYokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentSection))->asSequence()->any(true).oclAsType(consol::AssessmentSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wEoGUYokEeSkH97cUQxLGA" type="_W8pI4DszEeGvzMYhXuqAEA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wEoGUookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wEpUcIokEeSkH97cUQxLGA" name="getAssessmentAndPlanSection2" bodyCondition="_wEpUc4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wEpUc4okEeSkH97cUQxLGA" name="body" constrainedElement="_wEpUcIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wEpUdIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentAndPlanSection2))->asSequence()->any(true).oclAsType(consol::AssessmentAndPlanSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wEpUcYokEeSkH97cUQxLGA" type="_q_8twPvVEeOvZJBdQKQrqQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wEpUcookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wEqikIokEeSkH97cUQxLGA" name="getPlanOfTreatmentSection2" bodyCondition="_wEqik4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wEqik4okEeSkH97cUQxLGA" name="body" constrainedElement="_wEqikIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wEqilIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfTreatmentSection2))->asSequence()->any(true).oclAsType(consol::PlanOfTreatmentSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wEqikYokEeSkH97cUQxLGA" type="_bwml0P4yEeO_Yb9cO8w3bA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wEqikookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wErwsIokEeSkH97cUQxLGA" name="getAllergiesSectionEntriesOptional2" bodyCondition="_wErws4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wErws4okEeSkH97cUQxLGA" name="body" constrainedElement="_wErwsIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wErwtIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSectionEntriesOptional2))->asSequence()->any(true).oclAsType(consol::AllergiesSectionEntriesOptional2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wErwsYokEeSkH97cUQxLGA" type="_nWAcMAIjEeSVzfoPSatgpg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wErwsookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wEs-0IokEeSkH97cUQxLGA" name="getAnesthesiaSection2" bodyCondition="_wEs-04okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wEs-04okEeSkH97cUQxLGA" name="body" constrainedElement="_wEs-0IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wEs-1IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AnesthesiaSection2))->asSequence()->any(true).oclAsType(consol::AnesthesiaSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wEs-0YokEeSkH97cUQxLGA" type="_aetyEPu_EeOyiMEKhdqMGA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wEs-0ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wEuM8IokEeSkH97cUQxLGA" name="getChiefComplaintSection" bodyCondition="_wEuM84okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wEuM84okEeSkH97cUQxLGA" name="body" constrainedElement="_wEuM8IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wEuM9IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection))->asSequence()->any(true).oclAsType(consol::ChiefComplaintSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wEuM8YokEeSkH97cUQxLGA" type="_2PWQCBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wEuM8ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wEvbEIokEeSkH97cUQxLGA" name="getChiefComplaintAndReasonForVisitSection" bodyCondition="_wEvbE4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wEvbE4okEeSkH97cUQxLGA" name="body" constrainedElement="_wEvbEIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wEvbFIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintAndReasonForVisitSection))->asSequence()->any(true).oclAsType(consol::ChiefComplaintAndReasonForVisitSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wEvbEYokEeSkH97cUQxLGA" type="_oI7CQCsaEeGHF88-qhhUMA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wEvbEookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wEwpMIokEeSkH97cUQxLGA" name="getFamilyHistorySection" bodyCondition="_wEwpM4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wEwpM4okEeSkH97cUQxLGA" name="body" constrainedElement="_wEwpMIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wEwpNIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::FamilyHistorySection))->asSequence()->any(true).oclAsType(consol::FamilyHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wEwpMYokEeSkH97cUQxLGA" type="_2IWQIxSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wEwpMookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wEx3UIokEeSkH97cUQxLGA" name="getHistoryOfPastIllnessSection2" bodyCondition="_wEx3U4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wEx3U4okEeSkH97cUQxLGA" name="body" constrainedElement="_wEx3UIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wEx3VIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HistoryOfPastIllnessSection2))->asSequence()->any(true).oclAsType(consol::HistoryOfPastIllnessSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wEx3UYokEeSkH97cUQxLGA" type="_sZlggPyhEeOC19UEcu7MOw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wEx3UookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wEzFcIokEeSkH97cUQxLGA" name="getHistoryOfPresentIllnessSection" bodyCondition="_wEzFc4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wEzFc4okEeSkH97cUQxLGA" name="body" constrainedElement="_wEzFcIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wEzFdIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::HistoryOfPresentIllnessSection))->asSequence()->any(true).oclAsType(consol::HistoryOfPresentIllnessSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wEzFcYokEeSkH97cUQxLGA" type="_2PcWsRSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wEzFcookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wE0TkIokEeSkH97cUQxLGA" name="getMedicalHistorySection" bodyCondition="_wE0Tk4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wE0Tk4okEeSkH97cUQxLGA" name="body" constrainedElement="_wE0TkIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wE0TlIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicalHistorySection))->asSequence()->any(true).oclAsType(consol::MedicalHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wE0TkYokEeSkH97cUQxLGA" type="_mEIgwDVyEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wE0TkookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wE1hsIokEeSkH97cUQxLGA" name="getMedicationsSectionEntriesOptional2" bodyCondition="_wE1hs4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wE1hs4okEeSkH97cUQxLGA" name="body" constrainedElement="_wE1hsIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wE1htIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsSectionEntriesOptional2))->asSequence()->any(true).oclAsType(consol::MedicationsSectionEntriesOptional2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wE1hsYokEeSkH97cUQxLGA" type="_JUvaUAFaEeS0nNJt6oyOyQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wE1hsookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wE2v0IokEeSkH97cUQxLGA" name="getMedicationsAdministeredSection2" bodyCondition="_wE2v04okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wE2v04okEeSkH97cUQxLGA" name="body" constrainedElement="_wE2v0IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wE2v1IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsAdministeredSection2))->asSequence()->any(true).oclAsType(consol::MedicationsAdministeredSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wE2v0YokEeSkH97cUQxLGA" type="_F37nMP4jEeOwFalSp0fRiw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wE2v0ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wE398IokEeSkH97cUQxLGA" name="getPhysicalExamSection2" bodyCondition="_wE3984okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wE3984okEeSkH97cUQxLGA" name="body" constrainedElement="_wE398IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wE399IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PhysicalExamSection2))->asSequence()->any(true).oclAsType(consol::PhysicalExamSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wE398YokEeSkH97cUQxLGA" type="_-nZiYP4uEeObaveuCI77uA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wE398ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wE5MEIokEeSkH97cUQxLGA" name="getPlannedProcedureSection2" bodyCondition="_wE5ME4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wE5ME4okEeSkH97cUQxLGA" name="body" constrainedElement="_wE5MEIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wE5MFIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlannedProcedureSection2))->asSequence()->any(true).oclAsType(consol::PlannedProcedureSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wE5MEYokEeSkH97cUQxLGA" type="_dz0ZwP49EeO_F_2qLv6FWQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wE5MEookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wE6aMIokEeSkH97cUQxLGA" name="getProcedureDispositionSection" bodyCondition="_wE6aM4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wE6aM4okEeSkH97cUQxLGA" name="body" constrainedElement="_wE6aMIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wE6aNIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureDispositionSection))->asSequence()->any(true).oclAsType(consol::ProcedureDispositionSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wE6aMYokEeSkH97cUQxLGA" type="_QhXGYDVzEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wE6aMookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wE7oUIokEeSkH97cUQxLGA" name="getProcedureEstimatedBloodLossSection" bodyCondition="_wE7oU4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wE7oU4okEeSkH97cUQxLGA" name="body" constrainedElement="_wE7oUIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wE7oVIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureEstimatedBloodLossSection))->asSequence()->any(true).oclAsType(consol::ProcedureEstimatedBloodLossSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wE7oUYokEeSkH97cUQxLGA" type="_TvcL8DVzEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wE7oUookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wE82cIokEeSkH97cUQxLGA" name="getProcedureFindingsSection2" bodyCondition="_wE82c4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wE82c4okEeSkH97cUQxLGA" name="body" constrainedElement="_wE82cIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wE82dIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureFindingsSection2))->asSequence()->any(true).oclAsType(consol::ProcedureFindingsSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wE82cYokEeSkH97cUQxLGA" type="_lLOykP5FEeO_r7yO9mhwnA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wE82cookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wE-EkIokEeSkH97cUQxLGA" name="getProcedureImplantsSection" bodyCondition="_wE-Ek4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wE-Ek4okEeSkH97cUQxLGA" name="body" constrainedElement="_wE-EkIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wE-ElIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureImplantsSection))->asSequence()->any(true).oclAsType(consol::ProcedureImplantsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wE-EkYokEeSkH97cUQxLGA" type="_Z662wDVzEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wE-EkookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wE_SsIokEeSkH97cUQxLGA" name="getProcedureSpecimensTakenSection" bodyCondition="_wE_Ss4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wE_Ss4okEeSkH97cUQxLGA" name="body" constrainedElement="_wE_SsIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wE_StIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProcedureSpecimensTakenSection))->asSequence()->any(true).oclAsType(consol::ProcedureSpecimensTakenSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wE_SsYokEeSkH97cUQxLGA" type="_gSUdsDVzEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wE_SsookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wFAg0IokEeSkH97cUQxLGA" name="getProceduresSectionEntriesOptional2" bodyCondition="_wFAg04okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wFAg04okEeSkH97cUQxLGA" name="body" constrainedElement="_wFAg0IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wFAg1IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProceduresSectionEntriesOptional2))->asSequence()->any(true).oclAsType(consol::ProceduresSectionEntriesOptional2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wFAg0YokEeSkH97cUQxLGA" type="_80dMoAB0EeSLOb2O6vSPzg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wFAg0ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wFBu8IokEeSkH97cUQxLGA" name="getReasonForVisitSection" bodyCondition="_wFBu84okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wFBu84okEeSkH97cUQxLGA" name="body" constrainedElement="_wFBu8IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wFBu9IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReasonForVisitSection))->asSequence()->any(true).oclAsType(consol::ReasonForVisitSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wFBu8YokEeSkH97cUQxLGA" type="_Nm64UCscEeGHF88-qhhUMA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wFBu8ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wFC9EIokEeSkH97cUQxLGA" name="getReviewOfSystemsSection" bodyCondition="_wFC9E4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wFC9E4okEeSkH97cUQxLGA" name="body" constrainedElement="_wFC9EIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wFC9FIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReviewOfSystemsSection))->asSequence()->any(true).oclAsType(consol::ReviewOfSystemsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wFC9EYokEeSkH97cUQxLGA" type="_2RqkMBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wFC9EookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wFELMIokEeSkH97cUQxLGA" name="getSocialHistorySection2" bodyCondition="_wFELM4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wFELM4okEeSkH97cUQxLGA" name="body" constrainedElement="_wFELMIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wFELNIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::SocialHistorySection2))->asSequence()->any(true).oclAsType(consol::SocialHistorySection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wFELMYokEeSkH97cUQxLGA" type="_wLWZMAFHEeSG_MJH-zNFRw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wFELMookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_qVEVkC-aEeSoCqqrpX8LzQ" name="ProgressNote2">
      <ownedComment xmi:id="_63rMQC-aEeSoCqqrpX8LzQ">
        <body>This template represents a patient's clinical status during a hospitalization, outpatient visit, treatment with a LTPAC provider, or other healthcare encounter.&#xD;
Taber's medical dictionary defines a Progress Note as &quot;An ongoing record of a patient's illness and treatment. Physicians, nurses, consultants, and therapists record their notes concerning the progress or lack of progress made by the patient between the time of the previous note and the most recent note.&quot;&#xD;
Mosby's  medical dictionary defines a Progress Note as &quot;Notes made by a nurse, physician, social worker, physical therapist, and other health care professionals that describe the patient's condition and the treatment given or planned.&quot;&#xD;
A Progress Note is not a re-evaluation note. A Progress Note is not intended to be a Progress Report for Medicare. Medicare B Section 1833(e) defines the requirements of a Medicare Progress Report.</body>
      </ownedComment>
      <ownedRule xmi:id="_bpjAsC-4EeSoCqqrpX8LzQ" name="ProgressNote2HasAnAssementAndPlanSection2OrBothAssementSectionAndPlanOfTreatmentSection2">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_bpjAsS-4EeSoCqqrpX8LzQ">
          <language>OCL</language>
          <body>(self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfTreatmentSection2)) and  self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentSection))) xor self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentAndPlanSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pgQ44C-4EeSoCqqrpX8LzQ" name="ProgressNote2DoesNotHaveAssementAndPlanSection2WhenAssementAndPlanOfTreatment2ArePresent">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pgQ44S-4EeSoCqqrpX8LzQ">
          <language>OCL</language>
          <body>(self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfTreatmentSection2)) or  self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentSection))) xor self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentAndPlanSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wFFZUIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsTemplateId" constrainedElement="_qVEVkC-aEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wFFZUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.1.9' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wFKR0IokEeSkH97cUQxLGA" name="ProgressNote2CodeP" constrainedElement="_qVEVkC-aEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wFKR0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wFIcoIokEeSkH97cUQxLGA" name="ProgressNote2Code" constrainedElement="_qVEVkC-aEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wFIcoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = '11506-3' or value.code = '18733-6' or value.code = '18762-5' or value.code = '28569-2' or value.code = '28617-9' or value.code = '34900-1' or value.code = '34904-3' or value.code = '18764-1' or value.code = '28623-7' or value.code = '11507-1' or value.code = '11508-9' or value.code = '11509-7' or value.code = '28627-8' or value.code = '11510-5' or value.code = '28656-7' or value.code = '11512-1' or value.code = '34126-3' or value.code = '15507-7' or value.code = '34129-7' or value.code = '34125-5' or value.code = '34130-5' or value.code = '34131-3' or value.code = '34124-8' or value.code = '34127-1' or value.code = '34128-9' or value.code = '34901-9' or value.code = '34132-1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wFclsYokEeSkH97cUQxLGA" name="ProgressNote2DocumentationOf" constrainedElement="_qVEVkC-aEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wFclsookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->one(documentationOf : cda::DocumentationOf | not documentationOf.oclIsUndefined() and documentationOf.oclIsKindOf(cda::DocumentationOf))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wFea4IokEeSkH97cUQxLGA" name="ProgressNote2ComponentOf" constrainedElement="_qVEVkC-aEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wFea4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->one(componentOf : cda::Component1 | not componentOf.oclIsUndefined() and componentOf.oclIsKindOf(cda::Component1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wFheMIokEeSkH97cUQxLGA" name="ProgressNote2AssessmentSection" constrainedElement="_qVEVkC-aEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wFheMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wFisUIokEeSkH97cUQxLGA" name="ProgressNote2PlanOfTreatmentSection2" constrainedElement="_qVEVkC-aEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wFisUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfTreatmentSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wFj6cIokEeSkH97cUQxLGA" name="ProgressNote2AssessmentAndPlanSection2" constrainedElement="_qVEVkC-aEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wFj6cYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentAndPlanSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wFlIkIokEeSkH97cUQxLGA" name="ProgressNote2AllergiesSectionEntriesOptional2" constrainedElement="_qVEVkC-aEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wFlIkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSectionEntriesOptional2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wFmWsYokEeSkH97cUQxLGA" name="ProgressNote2ChiefComplaintSection" constrainedElement="_qVEVkC-aEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wFmWsookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wFnk1YokEeSkH97cUQxLGA" name="ProgressNote2InterventionsSection2" constrainedElement="_qVEVkC-aEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wFnk1ookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::InterventionsSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wFpaAIokEeSkH97cUQxLGA" name="ProgressNote2InstructionsSection2" constrainedElement="_qVEVkC-aEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wFpaAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::InstructionsSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wFrPMIokEeSkH97cUQxLGA" name="ProgressNote2MedicationsSectionEntriesOptional2" constrainedElement="_qVEVkC-aEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wFrPMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsSectionEntriesOptional2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wFsdUIokEeSkH97cUQxLGA" name="ProgressNote2ObjectiveSection" constrainedElement="_qVEVkC-aEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wFsdUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ObjectiveSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wFtEZYokEeSkH97cUQxLGA" name="ProgressNote2PhysicalExamSection2" constrainedElement="_qVEVkC-aEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wFtrcIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PhysicalExamSection2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wFuShYokEeSkH97cUQxLGA" name="ProgressNote2ProblemSectionEntriesOptional2" constrainedElement="_qVEVkC-aEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wFuShookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSectionEntriesOptional2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wFwHsIokEeSkH97cUQxLGA" name="ProgressNote2ResultsSectionEntriesOptional2" constrainedElement="_qVEVkC-aEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wFwHsYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ResultsSectionEntriesOptional2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wFwuxYokEeSkH97cUQxLGA" name="ProgressNote2ReviewOfSystemsSection" constrainedElement="_qVEVkC-aEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wFwuxookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReviewOfSystemsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wFx85YokEeSkH97cUQxLGA" name="ProgressNote2SubjectiveSection" constrainedElement="_qVEVkC-aEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wFx85ookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::SubjectiveSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wFzLBYokEeSkH97cUQxLGA" name="ProgressNote2VitalSignsSectionEntriesOptional2" constrainedElement="_qVEVkC-aEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wFzLBookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSectionEntriesOptional2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wcP8IIokEeSkH97cUQxLGA" name="ProgressNote2DocumentationOfServiceEventIVLTSLow" constrainedElement="_qVEVkC-aEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wcP8IYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null).effectiveTime->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((low.oclIsUndefined() or low.isNullFlavorUndefined()) implies (not low.oclIsUndefined()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wcP8IookEeSkH97cUQxLGA" name="ProgressNote2DocumentationOfServiceEventEffectiveTimeHasHighWhenNoWidth" constrainedElement="_qVEVkC-aEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wcP8I4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject(not effectiveTime.width.oclIsUndefined() xor not effectiveTime.high.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wcQjMIokEeSkH97cUQxLGA" name="ProgressNote2DocumentationOfServiceEventPreciseToTheDay" constrainedElement="_qVEVkC-aEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wcQjMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject((not effectiveTime.low.value.oclIsUndefined() implies effectiveTime.low.value.size() >= 8) and (not effectiveTime.high.value.oclIsUndefined() implies effectiveTime.high.value.size() >= 8))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wcRKQIokEeSkH97cUQxLGA" name="ProgressNote2DocumentationOfServiceEventPreciseToTheMinute" constrainedElement="_qVEVkC-aEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wcRKQYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject((not effectiveTime.low.value.oclIsUndefined() implies effectiveTime.low.value.size() >= 12) and (not effectiveTime.high.value.oclIsUndefined() implies effectiveTime.high.value.size() >= 12))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wcRKQookEeSkH97cUQxLGA" name="ProgressNote2DocumentationOfServiceEventPreciseToTheSecond" constrainedElement="_qVEVkC-aEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wcRKQ4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject((not effectiveTime.low.value.oclIsUndefined() implies effectiveTime.low.value.size() >= 14) and (not effectiveTime.high.value.oclIsUndefined() implies effectiveTime.high.value.size() >= 14))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wcRxUIokEeSkH97cUQxLGA" name="ProgressNote2DocumentationOfServiceEventIfMorePreciseThanDayIncludeTimeZoneOffset" constrainedElement="_qVEVkC-aEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wcRxUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject((not effectiveTime.low.value.oclIsUndefined() and effectiveTime.low.value.size() > 8 implies effectiveTime.low.value.size() >= 15) and (not effectiveTime.high.value.oclIsUndefined() and effectiveTime.high.value.size() > 8 implies effectiveTime.high.value.size() >= 15))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wcRxUookEeSkH97cUQxLGA" name="ProgressNote2DocumentationOfServiceEventTemplateId" constrainedElement="_qVEVkC-aEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wcRxU4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject(templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.21.3.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wcSYYIokEeSkH97cUQxLGA" name="ProgressNote2DocumentationOfServiceEventClassCode" constrainedElement="_qVEVkC-aEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wcSYYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject(isDefined('classCode') and classCode=vocab::ActClassRoot::PCPR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wcS_cIokEeSkH97cUQxLGA" name="ProgressNote2DocumentationOfServiceEventEffectiveTime" constrainedElement="_qVEVkC-aEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wcS_cYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null).serviceEvent->excluding(null)->reject((effectiveTime.oclIsUndefined() or effectiveTime.isNullFlavorUndefined()) implies (not effectiveTime.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wcS_cookEeSkH97cUQxLGA" name="ProgressNote2DocumentationOfServiceEvent" constrainedElement="_qVEVkC-aEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wcS_c4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.documentationOf->excluding(null)->reject(serviceEvent->one(serviceEvent : cda::ServiceEvent | not serviceEvent.oclIsUndefined() and serviceEvent.oclIsKindOf(cda::ServiceEvent)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wcWCwIokEeSkH97cUQxLGA" name="ProgressNote2ComponentOfEncompassingEncounterIVLTSLow" constrainedElement="_qVEVkC-aEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wcWCwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null).effectiveTime->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies ((low.oclIsUndefined() or low.isNullFlavorUndefined()) implies (not low.oclIsUndefined()) )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wcX38IokEeSkH97cUQxLGA" name="ProgressNote2ComponentOfEncompassingEncounterLocationHealthCareFacilityId" constrainedElement="_qVEVkC-aEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wcX38YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null).location->excluding(null).healthCareFacility->excluding(null)->reject((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wcX38ookEeSkH97cUQxLGA" name="ProgressNote2ComponentOfEncompassingEncounterLocationHealthCareFacility" constrainedElement="_qVEVkC-aEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wcX384okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null).location->excluding(null)->reject(healthCareFacility->one(healthCareFacility : cda::HealthCareFacility | not healthCareFacility.oclIsUndefined() and healthCareFacility.oclIsKindOf(cda::HealthCareFacility)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wcYfAIokEeSkH97cUQxLGA" name="ProgressNote2ComponentOfEncompassingEncounterPreciseToTheDay" constrainedElement="_qVEVkC-aEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wcYfAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(not effectiveTime.value.oclIsUndefined() implies effectiveTime.value.size() >= 8)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wcZGEIokEeSkH97cUQxLGA" name="ProgressNote2ComponentOfEncompassingEncounterPreciseToTheMinute" constrainedElement="_qVEVkC-aEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wcZGEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(not effectiveTime.value.oclIsUndefined() implies effectiveTime.value.size() >= 12)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wcZGEookEeSkH97cUQxLGA" name="ProgressNote2ComponentOfEncompassingEncounterPreciseToTheSecond" constrainedElement="_qVEVkC-aEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wcZGE4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(not effectiveTime.value.oclIsUndefined() implies effectiveTime.value.size() >= 14)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wcZtIIokEeSkH97cUQxLGA" name="ProgressNote2ComponentOfEncompassingEncounterIfMorePreciseThanDayIncludeTimeZoneOffset" constrainedElement="_qVEVkC-aEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wcZtIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(not effectiveTime.value.oclIsUndefined() and effectiveTime.value.size() > 8 implies effectiveTime.value.size() >= 15)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wcaUMIokEeSkH97cUQxLGA" name="ProgressNote2ComponentOfEncompassingEncounterId" constrainedElement="_qVEVkC-aEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wcaUMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wcaUMookEeSkH97cUQxLGA" name="ProgressNote2ComponentOfEncompassingEncounterEffectiveTime" constrainedElement="_qVEVkC-aEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wcaUM4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject((effectiveTime.oclIsUndefined() or effectiveTime.isNullFlavorUndefined()) implies (not effectiveTime.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wca7QIokEeSkH97cUQxLGA" name="ProgressNote2ComponentOfEncompassingEncounterLocation" constrainedElement="_qVEVkC-aEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wca7QYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null).encompassingEncounter->excluding(null)->reject(location->one(location : cda::Location | not location.oclIsUndefined() and location.oclIsKindOf(cda::Location)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wca7QookEeSkH97cUQxLGA" name="ProgressNote2ComponentOfEncompassingEncounter" constrainedElement="_qVEVkC-aEeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wca7Q4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.componentOf->excluding(null)->reject(encompassingEncounter->one(encompassingEncounter : cda::EncompassingEncounter | not encompassingEncounter.oclIsUndefined() and encompassingEncounter.oclIsKindOf(cda::EncompassingEncounter)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_qVE8oC-aEeSoCqqrpX8LzQ" general="_dduXkJ5OEeOr4eM3k36wAg"/>
      <ownedOperation xmi:id="_wFiFQIokEeSkH97cUQxLGA" name="getAssessmentSection" bodyCondition="_wFiFQ4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wFiFQ4okEeSkH97cUQxLGA" name="body" constrainedElement="_wFiFQIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wFiFRIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentSection))->asSequence()->any(true).oclAsType(consol::AssessmentSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wFiFQYokEeSkH97cUQxLGA" type="_W8pI4DszEeGvzMYhXuqAEA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wFiFQookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wFjTYIokEeSkH97cUQxLGA" name="getPlanOfTreatmentSection2" bodyCondition="_wFjTY4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wFjTY4okEeSkH97cUQxLGA" name="body" constrainedElement="_wFjTYIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wFjTZIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PlanOfTreatmentSection2))->asSequence()->any(true).oclAsType(consol::PlanOfTreatmentSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wFjTYYokEeSkH97cUQxLGA" type="_bwml0P4yEeO_Yb9cO8w3bA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wFjTYookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wFkhgIokEeSkH97cUQxLGA" name="getAssessmentAndPlanSection2" bodyCondition="_wFkhg4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wFkhg4okEeSkH97cUQxLGA" name="body" constrainedElement="_wFkhgIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wFkhhIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AssessmentAndPlanSection2))->asSequence()->any(true).oclAsType(consol::AssessmentAndPlanSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wFkhgYokEeSkH97cUQxLGA" type="_q_8twPvVEeOvZJBdQKQrqQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wFkhgookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wFlvoIokEeSkH97cUQxLGA" name="getAllergiesSectionEntriesOptional2" bodyCondition="_wFlvo4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wFlvo4okEeSkH97cUQxLGA" name="body" constrainedElement="_wFlvoIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wFmWsIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::AllergiesSectionEntriesOptional2))->asSequence()->any(true).oclAsType(consol::AllergiesSectionEntriesOptional2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wFlvoYokEeSkH97cUQxLGA" type="_nWAcMAIjEeSVzfoPSatgpg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wFlvoookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wFnk0IokEeSkH97cUQxLGA" name="getChiefComplaintSection" bodyCondition="_wFnk04okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wFnk04okEeSkH97cUQxLGA" name="body" constrainedElement="_wFnk0IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wFnk1IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ChiefComplaintSection))->asSequence()->any(true).oclAsType(consol::ChiefComplaintSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wFnk0YokEeSkH97cUQxLGA" type="_2PWQCBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wFnk0ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wFoy8IokEeSkH97cUQxLGA" name="getInterventionsSection2" bodyCondition="_wFoy84okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wFoy84okEeSkH97cUQxLGA" name="body" constrainedElement="_wFoy8IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wFoy9IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::InterventionsSection2))->asSequence()->any(true).oclAsType(consol::InterventionsSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wFoy8YokEeSkH97cUQxLGA" type="_YCS1AP1WEeOW-qBXb0kbTA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wFoy8ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wFqoIIokEeSkH97cUQxLGA" name="getInstructionsSection2" bodyCondition="_wFqoI4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wFqoI4okEeSkH97cUQxLGA" name="body" constrainedElement="_wFqoIIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wFqoJIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::InstructionsSection2))->asSequence()->any(true).oclAsType(consol::InstructionsSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wFqoIYokEeSkH97cUQxLGA" type="_k8L2YP1HEeOVx4YMwgfjlA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wFqoIookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wFr2QIokEeSkH97cUQxLGA" name="getMedicationsSectionEntriesOptional2" bodyCondition="_wFr2Q4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wFr2Q4okEeSkH97cUQxLGA" name="body" constrainedElement="_wFr2QIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wFr2RIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::MedicationsSectionEntriesOptional2))->asSequence()->any(true).oclAsType(consol::MedicationsSectionEntriesOptional2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wFr2QYokEeSkH97cUQxLGA" type="_JUvaUAFaEeS0nNJt6oyOyQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wFr2QookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wFtEYIokEeSkH97cUQxLGA" name="getObjectiveSection" bodyCondition="_wFtEY4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wFtEY4okEeSkH97cUQxLGA" name="body" constrainedElement="_wFtEYIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wFtEZIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ObjectiveSection))->asSequence()->any(true).oclAsType(consol::ObjectiveSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wFtEYYokEeSkH97cUQxLGA" type="_rNJpADVyEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wFtEYookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wFuSgIokEeSkH97cUQxLGA" name="getPhysicalExamSection2" bodyCondition="_wFuSg4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wFuSg4okEeSkH97cUQxLGA" name="body" constrainedElement="_wFuSgIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wFuShIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::PhysicalExamSection2))->asSequence()->any(true).oclAsType(consol::PhysicalExamSection2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wFuSgYokEeSkH97cUQxLGA" type="_-nZiYP4uEeObaveuCI77uA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wFuSgookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wFvgoIokEeSkH97cUQxLGA" name="getProblemSectionEntriesOptional2" bodyCondition="_wFvgo4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wFvgo4okEeSkH97cUQxLGA" name="body" constrainedElement="_wFvgoIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wFvgpIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ProblemSectionEntriesOptional2))->asSequence()->any(true).oclAsType(consol::ProblemSectionEntriesOptional2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wFvgoYokEeSkH97cUQxLGA" type="_ZgLioAFkEeSJ2uHfynwxCw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wFvgoookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wFwuwIokEeSkH97cUQxLGA" name="getResultsSectionEntriesOptional2" bodyCondition="_wFwuw4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wFwuw4okEeSkH97cUQxLGA" name="body" constrainedElement="_wFwuwIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wFwuxIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ResultsSectionEntriesOptional2))->asSequence()->any(true).oclAsType(consol::ResultsSectionEntriesOptional2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wFwuwYokEeSkH97cUQxLGA" type="_yaJ3QAFAEeSaVZ5WxWd94w" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wFwuwookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wFx84IokEeSkH97cUQxLGA" name="getReviewOfSystemsSection" bodyCondition="_wFx844okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wFx844okEeSkH97cUQxLGA" name="body" constrainedElement="_wFx84IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wFx85IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::ReviewOfSystemsSection))->asSequence()->any(true).oclAsType(consol::ReviewOfSystemsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wFx84YokEeSkH97cUQxLGA" type="_2RqkMBSVEeGGzu7fmW9pXw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wFx84ookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wFzLAIokEeSkH97cUQxLGA" name="getSubjectiveSection" bodyCondition="_wFzLA4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wFzLA4okEeSkH97cUQxLGA" name="body" constrainedElement="_wFzLAIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wFzLBIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::SubjectiveSection))->asSequence()->any(true).oclAsType(consol::SubjectiveSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wFzLAYokEeSkH97cUQxLGA" type="_iy8nYDVzEeGaW4kr-GbV8Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wFzLAookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_wFzyEIokEeSkH97cUQxLGA" name="getVitalSignsSectionEntriesOptional2" bodyCondition="_wF0ZIIokEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wF0ZIIokEeSkH97cUQxLGA" name="body" constrainedElement="_wFzyEIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wF0ZIYokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(consol::VitalSignsSectionEntriesOptional2))->asSequence()->any(true).oclAsType(consol::VitalSignsSectionEntriesOptional2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wFzyEYokEeSkH97cUQxLGA" type="_8LkzYAFTEeSmasYc71ZgMQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wFzyEookEeSkH97cUQxLGA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_MrNuQC-6EeSoCqqrpX8LzQ" name="UnstructuredDocument2">
      <ownedComment xmi:id="_FCUNwC-7EeSoCqqrpX8LzQ">
        <body>An Unstructured Document (UD) document type can (1) include unstructured content, such as a graphic, directly in a text element with a mediaType attribute, or (2) reference a single document file, such as a word-processing document  using a text/reference element.&#xD;
For guidance on how to handle multiple files, on the selection of media types for this IG, and on the identification of external files, see the subsections which follow the constraints below.&#xD;
IHE's XDS-SD (Cross-Transaction Specifications and Content Specifications, Scanned Documents Module) profile addresses a similar, more restricted use case, specifically for scanned documents or documents electronically created from existing text sources, and limits content to PDF-A or text. This Unstructured Documents implementation guide is applicable not only for scanned documents in non-PDF formats, but also for clinical documents produced through word processing applications, etc. &#xD;
For conformance with both specifications, please review the appendix on XDS-SD and US Realm Clinical Document Header Comparison and ensure that your documents at a minimum conform to all the SHALL constraints from either specification.</body>
      </ownedComment>
      <ownedRule xmi:id="_wF1AMIokEeSkH97cUQxLGA" name="GeneralHeaderConstraintsTemplateId" constrainedElement="_MrNuQC-6EeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wF1AMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.1.10' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wF7t4IokEeSkH97cUQxLGA" name="UnstructuredDocument2RecordTarget" constrainedElement="_MrNuQC-6EeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wF7t4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->exists(recordTarget : cda::RecordTarget | not recordTarget.oclIsUndefined() and recordTarget.oclIsKindOf(cda::RecordTarget))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wF88AIokEeSkH97cUQxLGA" name="UnstructuredDocument2Custodian" constrainedElement="_MrNuQC-6EeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wF88AYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.custodian->one(custodian : cda::Custodian | not custodian.oclIsUndefined() and custodian.oclIsKindOf(cda::Custodian))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wF-xMYokEeSkH97cUQxLGA" name="UnstructuredDocument2Component" constrainedElement="_MrNuQC-6EeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wF-xMookEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component2 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wchB4IokEeSkH97cUQxLGA" name="UnstructuredDocument2RecordTargetPatientRoleId" constrainedElement="_MrNuQC-6EeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wchB4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null).patientRole->excluding(null)->reject((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wchB4ookEeSkH97cUQxLGA" name="UnstructuredDocument2RecordTargetPatientRole" constrainedElement="_MrNuQC-6EeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wchB44okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.recordTarget->excluding(null)->reject(patientRole->one(patientRole : cda::PatientRole | not patientRole.oclIsUndefined() and patientRole.oclIsKindOf(cda::PatientRole)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wciQAIokEeSkH97cUQxLGA" name="UnstructuredDocument2CustodianAssignedCustodianRepresentedCustodianOrganization" constrainedElement="_MrNuQC-6EeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wciQAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.custodian->excluding(null).assignedCustodian->excluding(null)->reject(representedCustodianOrganization->one(representedCustodianOrganization : cda::CustodianOrganization | not representedCustodianOrganization.oclIsUndefined() and representedCustodianOrganization.oclIsKindOf(rim::Entity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wci3EIokEeSkH97cUQxLGA" name="UnstructuredDocument2CustodianAssignedCustodian" constrainedElement="_MrNuQC-6EeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wci3EYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.custodian->excluding(null)->reject(assignedCustodian->one(assignedCustodian : cda::AssignedCustodian | not assignedCustodian.oclIsUndefined() and assignedCustodian.oclIsKindOf(cda::AssignedCustodian)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wcl6YIokEeSkH97cUQxLGA" name="UnstructuredDocument2ComponentNonXMLBodyEDMediaType" constrainedElement="_MrNuQC-6EeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wcl6YYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.component->excluding(null).nonXMLBody->excluding(null).text->excluding(null)->select(isNullFlavorUndefined())->reject( ( isNullFlavorUndefined() implies (not mediaType.oclIsUndefined() )))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wcl6YookEeSkH97cUQxLGA" name="UnstructuredDocument2ComponentNonXMLBodyMediaTypeFileFormats" constrainedElement="_MrNuQC-6EeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wcl6Y4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.component->excluding(null).nonXMLBody->excluding(null)->reject(not text.mediaType.oclIsUndefined()  implies (text.mediaType = 'application/msword' or text.mediaType = 'application/pdf' or text.mediaType = 'text/plain' or text.mediaType = 'text/rtf' or text.mediaType = 'text/html' or text.mediaType = 'image/gif' or text.mediaType = 'image/tiff' or text.mediaType = 'image/jpeg' or text.mediaType = 'image/png'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wcmhcIokEeSkH97cUQxLGA" name="UnstructuredDocument2ComponentNonXMLBodyText" constrainedElement="_MrNuQC-6EeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wcmhcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.component->excluding(null).nonXMLBody->excluding(null)->reject((text.oclIsUndefined() or text.isNullFlavorUndefined()) implies (not text.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wcmhcookEeSkH97cUQxLGA" name="UnstructuredDocument2ComponentNonXMLBody" constrainedElement="_MrNuQC-6EeSoCqqrpX8LzQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wcmhc4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.component->excluding(null)->reject(nonXMLBody->one(nonXMLBody : cda::NonXMLBody | not nonXMLBody.oclIsUndefined() and nonXMLBody.oclIsKindOf(cda::NonXMLBody)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_MrPjcC-6EeSoCqqrpX8LzQ" general="_dduXkJ5OEeOr4eM3k36wAg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_XA96QDhDEeS1WeMhbm6GZw" name="PreconditionForSubstanceAdministration2">
      <ownedComment xmi:id="_ro_uMDhDEeS1WeMhbm6GZw">
        <body>A criterion for administration can be used to record that the medication is to be administered only when the associated criteria are met.</body>
      </ownedComment>
      <ownedRule xmi:id="_wGAmYIokEeSkH97cUQxLGA" name="PreconditionForSubstanceAdministrationTemplateId" constrainedElement="_XA96QDhDEeS1WeMhbm6GZw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wGAmYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.25' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wGCbkIokEeSkH97cUQxLGA" name="PreconditionForSubstanceAdministrationCode" constrainedElement="_XA96QDhDEeS1WeMhbm6GZw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wGCbkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = 'ASSERTION' and value.codeSystem = '2.16.840.1.113883.5.4')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wGEQwIokEeSkH97cUQxLGA" name="PreconditionForSubstanceAdministrationCodeP" constrainedElement="_XA96QDhDEeS1WeMhbm6GZw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wGE30IokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wGGtAIokEeSkH97cUQxLGA" name="PreconditionForSubstanceAdministrationText" constrainedElement="_XA96QDhDEeS1WeMhbm6GZw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wGGtAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.text.oclIsUndefined() or self.text.isNullFlavorUndefined()) implies (not self.text.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wGIiMIokEeSkH97cUQxLGA" name="PreconditionForSubstanceAdministrationValue" constrainedElement="_XA96QDhDEeS1WeMhbm6GZw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wGIiMYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value.oclIsUndefined() or self.value.isNullFlavorUndefined()) implies (not self.value.oclIsUndefined() and self.value.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.value.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.96' and not value.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wGK-cIokEeSkH97cUQxLGA" name="PreconditionForSubstanceAdministrationValueP" constrainedElement="_XA96QDhDEeS1WeMhbm6GZw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wGK-cYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.value.oclIsUndefined() or self.value.isNullFlavorUndefined()) implies (not self.value.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_XA-hUDhDEeS1WeMhbm6GZw" general="_chEhQBUUEeG6PvUxSTZnaw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_YYgjwIC3EeS108flGLVEBA" name="NumberOfPressureUlcersObservation2">
      <ownedComment xmi:id="_awOMkIC4EeS108flGLVEBA">
        <body>This template represents the number of pressure ulcers observed at a particular stage.</body>
      </ownedComment>
      <ownedRule xmi:id="_wIQpIIokEeSkH97cUQxLGA" name="NumberOfPressureUlcersObservationTemplateId" constrainedElement="_YYgjwIC3EeS108flGLVEBA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wIQpIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.76' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wIU6kIokEeSkH97cUQxLGA" name="NumberOfPressureUlcersObservationCodeP" constrainedElement="_YYgjwIC3EeS108flGLVEBA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wIU6kYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wISeUIokEeSkH97cUQxLGA" name="NumberOfPressureUlcersObservationCode" constrainedElement="_YYgjwIC3EeS108flGLVEBA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wISeUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '75277-4' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wIkLIIokEeSkH97cUQxLGA" name="NumberOfPressureUlcersObservationEntryRelationship" constrainedElement="_YYgjwIC3EeS108flGLVEBA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wIkLIYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->select(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))->select(typeCode=vocab::x_ActRelationshipEntryRelationship::SUBJ)->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wcqL0IokEeSkH97cUQxLGA" name="NumberOfPressureUlcersObservation2EntryRelationshipNumberOfPressureUlcersObservationEntryRelationshipObservationClassCode" constrainedElement="_YYgjwIC3EeS108flGLVEBA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wcqL0YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->select(typeCode=vocab::x_ActRelationshipEntryRelationship::SUBJ).observation->excluding(null)->reject(classCode=vocab::ActClassObservation::OBS)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wcqL0ookEeSkH97cUQxLGA" name="NumberOfPressureUlcersObservation2EntryRelationshipNumberOfPressureUlcersObservationEntryRelationshipObservationMoodCode" constrainedElement="_YYgjwIC3EeS108flGLVEBA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wcqL04okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->select(typeCode=vocab::x_ActRelationshipEntryRelationship::SUBJ).observation->excluding(null)->reject(moodCode=vocab::x_ActMoodDocumentObservation::EVN)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wcqy4IokEeSkH97cUQxLGA" name="NumberOfPressureUlcersObservation2EntryRelationshipObservationCodeP" constrainedElement="_YYgjwIC3EeS108flGLVEBA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wcqy4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->select(typeCode=vocab::x_ActRelationshipEntryRelationship::SUBJ).observation->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wcrZ8IokEeSkH97cUQxLGA" name="NumberOfPressureUlcersObservation2EntryRelationshipObservationCode" constrainedElement="_YYgjwIC3EeS108flGLVEBA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wcrZ8YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->select(typeCode=vocab::x_ActRelationshipEntryRelationship::SUBJ).observation->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined() and code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = code.oclAsType(datatypes::CD) in &#xD;
value.code = 'ASSERTION' and value.codeSystem = '2.16.840.1.113883.5.4'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wcrZ8ookEeSkH97cUQxLGA" name="NumberOfPressureUlcersObservation2EntryRelationshipNumberOfPressureUlcersObservationEntryRelationshipObservationValueP" constrainedElement="_YYgjwIC3EeS108flGLVEBA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wcrZ84okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->select(typeCode=vocab::x_ActRelationshipEntryRelationship::SUBJ).observation->excluding(null)->reject((value->isEmpty() or value->exists(element | element.isNullFlavorUndefined())) implies (not value->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wcsBAIokEeSkH97cUQxLGA" name="NumberOfPressureUlcersObservation2EntryRelationshipNumberOfPressureUlcersObservationEntryRelationshipObservationValue" constrainedElement="_YYgjwIC3EeS108flGLVEBA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wcsBAYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->select(typeCode=vocab::x_ActRelationshipEntryRelationship::SUBJ).observation->excluding(null)->reject((value->isEmpty() or value->exists(element | element.isNullFlavorUndefined())) implies (value->size() = 1 and value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.96' and (value.code = '421076008' or value.code = '420324007' or value.code = '421927004' or value.code = '420597008' or value.code = '421594008'))))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wcsBAookEeSkH97cUQxLGA" name="NumberOfPressureUlcersObservation2NumberOfPressureUlcersObservationEntryRelationshipTypeCode" constrainedElement="_YYgjwIC3EeS108flGLVEBA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wcsBA4okEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->select(typeCode=vocab::x_ActRelationshipEntryRelationship::SUBJ)->select(typeCode=vocab::x_ActRelationshipEntryRelationship::SUBJ)->reject(typeCode=vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wcsoEIokEeSkH97cUQxLGA" name="NumberOfPressureUlcersObservation2NumberOfPressureUlcersObservationEntryRelationshipObservation" constrainedElement="_YYgjwIC3EeS108flGLVEBA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wcsoEYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->select(typeCode=vocab::x_ActRelationshipEntryRelationship::SUBJ)->select(typeCode=vocab::x_ActRelationshipEntryRelationship::SUBJ)->reject(observation->one(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(cda::Observation)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_YZLSIIC3EeS108flGLVEBA" general="_7c4ssOZbEeGINOJ_SD9_dA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_YvV88IV5EeSRBMdZotACQg" name="FamilyHistoryObservation2">
      <ownedComment xmi:id="_Kb53EIV6EeSRBMdZotACQg">
        <body>Family History Observations related to a particular family member are contained within a Family History Organizer. The effectiveTime in the Family History Observation is the biologically or clinically relevant time of the observation. The biologically or clinically relevant time is the time at which the observation holds (is effective) for the family member (the subject of the observation).</body>
      </ownedComment>
      <ownedRule xmi:id="_wInOcIokEeSkH97cUQxLGA" name="FamilyHistoryObservationTemplateId" constrainedElement="_YvV88IV5EeSRBMdZotACQg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wInOcYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.46' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wIrf4IokEeSkH97cUQxLGA" name="FamilyHistoryObservationCodeP" constrainedElement="_YvV88IV5EeSRBMdZotACQg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wIrf4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wIpDoIokEeSkH97cUQxLGA" name="FamilyHistoryObservationCode" constrainedElement="_YvV88IV5EeSRBMdZotACQg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wIpDoYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and not value.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_YvZAQIV5EeSRBMdZotACQg" general="_2IpyIxSVEeGGzu7fmW9pXw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_6whQEIbpEeSxzopshBnQuw" name="FamilyHistoryOrganizer2">
      <ownedComment xmi:id="_2ylZ4Ib0EeSxzopshBnQuw">
        <body>The Family History Organizer associates a set of observations with a family member. For example, the Family History Organizer can group a set of observations about the patient's father.</body>
      </ownedComment>
      <ownedRule xmi:id="_wIt8IYokEeSkH97cUQxLGA" name="FamilyHistoryOrganizerTemplateId" constrainedElement="_6whQEIbpEeSxzopshBnQuw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wIujMIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.4.45' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wIvxUIokEeSkH97cUQxLGA" name="FamilyHistoryOrganizer2Id" constrainedElement="_6whQEIbpEeSxzopshBnQuw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wIvxUYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wIw_cIokEeSkH97cUQxLGA" name="FamilyHistoryOrganizerFamilyHistoryObservation2" constrainedElement="_6whQEIbpEeSxzopshBnQuw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wIw_cYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.component->exists(component : cda::Component4 | not component.observation.oclIsUndefined() and component.observation.oclIsKindOf(consol::FamilyHistoryObservation2))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_6wieMIbpEeSxzopshBnQuw" general="_2IbIoBSVEeGGzu7fmW9pXw"/>
      <ownedOperation xmi:id="_wIxmgIokEeSkH97cUQxLGA" name="getConsolFamilyHistoryObservation2s" bodyCondition="_wIxmg4okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wIxmg4okEeSkH97cUQxLGA" name="body" constrainedElement="_wIxmgIokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wIxmhIokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(consol::FamilyHistoryObservation2)).oclAsType(consol::FamilyHistoryObservation2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wIxmgYokEeSkH97cUQxLGA" type="_YvV88IV5EeSRBMdZotACQg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wIxmgookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_NGivoIevEeSBauRYePLghA" name="FamilyHistorySection2">
      <ownedComment xmi:id="_q8o1oIevEeSBauRYePLghA">
        <body>This section contains data defining the patient's genetic relatives in terms of possible or relevant health risk factors that have a potential impact on the patient's healthcare risk profile.</body>
      </ownedComment>
      <ownedRule xmi:id="_wIyNkIokEeSkH97cUQxLGA" name="FamilyHistorySectionTemplateId" constrainedElement="_NGivoIevEeSBauRYePLghA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wIyNkYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.15' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wI0CwIokEeSkH97cUQxLGA" name="FamilyHistorySectionFamilyHistoryOrganizer2" constrainedElement="_NGivoIevEeSBauRYePLghA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wI0CwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(consol::FamilyHistoryOrganizer2))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_NGjWsIevEeSBauRYePLghA" general="_2IWQIxSVEeGGzu7fmW9pXw"/>
      <ownedOperation xmi:id="_wI1Q4IokEeSkH97cUQxLGA" name="getConsolFamilyHistoryOrganizer2s" bodyCondition="_wI1Q44okEeSkH97cUQxLGA" isQuery="true">
        <ownedRule xmi:id="_wI1Q44okEeSkH97cUQxLGA" name="body" constrainedElement="_wI1Q4IokEeSkH97cUQxLGA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_wI1Q5IokEeSkH97cUQxLGA">
            <language>OCL</language>
            <body>self.getOrganizers()->select(organizer : cda::Organizer | not organizer.oclIsUndefined() and organizer.oclIsKindOf(consol::FamilyHistoryOrganizer2)).oclAsType(consol::FamilyHistoryOrganizer2)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_wI1Q4YokEeSkH97cUQxLGA" type="_6whQEIbpEeSxzopshBnQuw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wI1Q4ookEeSkH97cUQxLGA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_zKKIUIe9EeSBauRYePLghA" name="PhysicianReadingStudyPerformer2">
      <ownedComment xmi:id="__iuAcIe9EeSBauRYePLghA">
        <body>This participant is the Physician Reading Study Performer defined in documentationOf/serviceEvent. It is usually different from the attending physician. The reading physician interprets the images and evidence of the study (DICOM Definition).</body>
      </ownedComment>
      <ownedRule xmi:id="_wI138IokEeSkH97cUQxLGA" name="PhysicianReadingStudyPerformerTemplateId" constrainedElement="_zKKIUIe9EeSBauRYePLghA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wI2fAIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.6.2.1' and id.extension = '2014-06-09')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_zKKvYIe9EeSBauRYePLghA" general="_H1UdcEVEEeGAh_iQGJvI5w"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_S0oqIIfLEeSBauRYePLghA" name="CourseOfCareSection">
      <ownedComment xmi:id="_2fYPUIfLEeSBauRYePLghA">
        <body>The Course of Care section describes what happened during the course of an encounter.</body>
      </ownedComment>
      <ownedRule xmi:id="_wI3tIIokEeSkH97cUQxLGA" name="CourseOfCareSectionTemplateId" constrainedElement="_S0oqIIfLEeSBauRYePLghA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wI4UMIokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.22.2.64')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wI6JYIokEeSkH97cUQxLGA" name="CourseOfCareSectionCode" constrainedElement="_S0oqIIfLEeSBauRYePLghA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wI6JYYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '8648-8' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wI8loIokEeSkH97cUQxLGA" name="CourseOfCareSectionCodeP" constrainedElement="_S0oqIIfLEeSBauRYePLghA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wI8loYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wI9zwIokEeSkH97cUQxLGA" name="CourseOfCareSectionTitle" constrainedElement="_S0oqIIfLEeSBauRYePLghA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wI9zwYokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_wI_B4IokEeSkH97cUQxLGA" name="CourseOfCareSectionText" constrainedElement="_S0oqIIfLEeSBauRYePLghA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wI_B4YokEeSkH97cUQxLGA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_S0pRMIfLEeSBauRYePLghA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <profileApplication xmi:id="_2B97UBSVEeGGzu7fmW9pXw">
      <eAnnotations xmi:id="_2B97URSVEeGGzu7fmW9pXw" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.openhealthtools.org/mdht/schemas/cda/4#/"/>
      </eAnnotations>
      <appliedProfile href="pathmap://CDA_PROFILES/CDA.profile.uml#_cxOJEIEVEd6H8o-hO3-B4Q"/>
    </profileApplication>
    <profileApplication xmi:id="_ugYFUIokEeSkH97cUQxLGA">
      <eAnnotations xmi:id="_ugahkIokEeSkH97cUQxLGA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Ecore.profile.uml#_z1OFcHjqEdy8S4Cr8Rc_NA"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Ecore.profile.uml#_0"/>
    </profileApplication>
  </uml:Package>
  <CDA:AssociationValidation xmi:id="_2EY9MhSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-168</ruleId>
  </CDA:AssociationValidation>
  <CDA:EntryRelationship xmi:id="_2ElKchSVEeGGzu7fmW9pXw" severity="INFO" typeCode="REFR"/>
  <CDA:EntryRelationship xmi:id="_2ElxghSVEeGGzu7fmW9pXw" severity="INFO" typeCode="SUBJ"/>
  <CDA:EntryRelationship xmi:id="_2EwwoRSVEeGGzu7fmW9pXw" severity="INFO" typeCode="SUBJ">
    <ruleId>CONF-160</ruleId>
  </CDA:EntryRelationship>
  <CDA:EntryRelationship xmi:id="_2E_aIBSVEeGGzu7fmW9pXw" severity="INFO" typeCode="REFR"/>
  <CDA:EntryRelationship xmi:id="_2FGH1RSVEeGGzu7fmW9pXw" severity="INFO" typeCode="SUBJ">
    <ruleId>CONF-160</ruleId>
  </CDA:EntryRelationship>
  <CDA:EntryRelationship xmi:id="_2FgXgBSVEeGGzu7fmW9pXw" severity="INFO" typeCode="REFR"/>
  <CDA:EntryRelationship xmi:id="_2Fg-kBSVEeGGzu7fmW9pXw" severity="INFO" typeCode="REFR"/>
  <CDA:EntryRelationship xmi:id="_2Fr9shSVEeGGzu7fmW9pXw" severity="INFO" typeCode="SUBJ"/>
  <CDA:EntryRelationship xmi:id="_2GsqUhSVEeGGzu7fmW9pXw" severity="INFO" typeCode="SUBJ">
    <ruleId>CONF-338</ruleId>
    <ruleId>CONF-339</ruleId>
  </CDA:EntryRelationship>
  <CDA:AssociationValidation xmi:id="_2G1NMhSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-350</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_2G43kxSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-368</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_2HU8dRSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-351</ruleId>
  </CDA:AssociationValidation>
  <CDA:EntryRelationship xmi:id="_2HbqIhSVEeGGzu7fmW9pXw" message="An entry relationship may be present to provide the fulfillment instructions. When present, this entry relationship shall contain a Medication Fulfillment Instructions entry." severity="INFO" typeCode="SUBJ"/>
  <CDA:ConstraintValidation xmi:id="_2IezABSVEeGGzu7fmW9pXw"/>
  <CDA:AssociationValidation xmi:id="_2Ik5oxSVEeGGzu7fmW9pXw" severity="WARNING"/>
  <CDA:AssociationValidation xmi:id="_2Iwf0hSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-207</ruleId>
  </CDA:AssociationValidation>
  <CDA:ConstraintValidation xmi:id="_2I9UIxSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF-215</ruleId>
  </CDA:ConstraintValidation>
  <CDA:AssociationValidation xmi:id="_2JeRghSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-246</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_2Je4lBSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-249</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_2KIY1RSVEeGGzu7fmW9pXw" severity="INFO"/>
  <CDA:AssociationValidation xmi:id="_2KzuQhSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-93</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_2K8RIhSVEeGGzu7fmW9pXw">
    <ruleId>CONF-98</ruleId>
  </CDA:AssociationValidation>
  <CDA:ActRelationship xmi:id="_2K84MBSVEeGGzu7fmW9pXw"/>
  <CDA:AssociationValidation xmi:id="_2LBwsxSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-102</ruleId>
    <ruleId>CONF-103</ruleId>
  </CDA:AssociationValidation>
  <CDA:ActRelationship xmi:id="_2LCXwBSVEeGGzu7fmW9pXw"/>
  <CDA:AssociationValidation xmi:id="_2LXu8xSVEeGGzu7fmW9pXw"/>
  <CDA:AssociationValidation xmi:id="_2LfqwxSVEeGGzu7fmW9pXw" severity="INFO"/>
  <CDA:EntryRelationship xmi:id="_2LgR0hSVEeGGzu7fmW9pXw" severity="INFO" typeCode="SUBJ"/>
  <CDA:AssociationValidation xmi:id="_2MABERSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF-298</ruleId>
  </CDA:AssociationValidation>
  <CDA:EntryRelationship xmi:id="_2MIj9xSVEeGGzu7fmW9pXw" severity="INFO" typeCode="SUBJ">
    <ruleId>CONF-338</ruleId>
    <ruleId>CONF-339</ruleId>
  </CDA:EntryRelationship>
  <CDA:AssociationValidation xmi:id="_2MJLBRSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-350</ruleId>
  </CDA:AssociationValidation>
  <CDA:EntryRelationship xmi:id="_2MJyFRSVEeGGzu7fmW9pXw" severity="INFO" typeCode="SUBJ">
    <ruleId>CONF-330</ruleId>
    <ruleId>CONF-333</ruleId>
  </CDA:EntryRelationship>
  <CDA:AssociationValidation xmi:id="_2MKZJRSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-313</ruleId>
  </CDA:AssociationValidation>
  <CDA:EntryRelationship xmi:id="_2MLANRSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-348</ruleId>
    <ruleId>CONF-349</ruleId>
  </CDA:EntryRelationship>
  <CDA:AssociationValidation xmi:id="_2MLnRRSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-368</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_2MXNcBSVEeGGzu7fmW9pXw" message="This section SHALL include entries from the Insurance Provider module when this information is known.">
    <ruleId>C83-[CT-101-2]</ruleId>
  </CDA:AssociationValidation>
  <CDA:PropertyValidation xmi:id="_2M3jxRSVEeGGzu7fmW9pXw">
    <ruleId>CONF-57</ruleId>
  </CDA:PropertyValidation>
  <CDA:AssociationValidation xmi:id="_2NJ3sRSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF-298</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_2NP-UxSVEeGGzu7fmW9pXw" severity="INFO"/>
  <CDA:AssociationValidation xmi:id="_2NP-VhSVEeGGzu7fmW9pXw" severity="INFO"/>
  <CDA:AssociationValidation xmi:id="_2NP-WRSVEeGGzu7fmW9pXw" severity="INFO"/>
  <CDA:AssociationValidation xmi:id="_2NP-XBSVEeGGzu7fmW9pXw" severity="INFO"/>
  <CDA:AssociationValidation xmi:id="_2OG57RSVEeGGzu7fmW9pXw" severity="WARNING"/>
  <CDA:ConstraintValidation xmi:id="_2OfUZhSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF-426</ruleId>
  </CDA:ConstraintValidation>
  <CDA:AssociationValidation xmi:id="_2OrhpxSVEeGGzu7fmW9pXw">
    <ruleId>6.3.4.21.8</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_2OrhsBSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF-399</ruleId>
  </CDA:AssociationValidation>
  <CDA:ConstraintValidation xmi:id="_2O91mxSVEeGGzu7fmW9pXw">
    <ruleId>CONF-406</ruleId>
  </CDA:ConstraintValidation>
  <CDA:EntryRelationship xmi:id="_2SC-yRSVEeGGzu7fmW9pXw" severity="INFO" typeCode="SUBJ">
    <ruleId>CONF-224</ruleId>
  </CDA:EntryRelationship>
  <CDA:AssociationValidation xmi:id="_sGVWMBUlEeGvPruliC3crg" severity="WARNING"/>
  <CDA:PropertyValidation xmi:id="_vAJFABVeEeGQCvUGzi1kDQ" severity="INFO"/>
  <CDA:EntryRelationship xmi:id="_hDPtEBrUEeGo461UQq-B1g" severity="INFO" typeCode="REFR">
    <base_Association href="../../org.openhealthtools.mdht.uml.cda.consol2.model/model/.controlled/consol-immunizations.uml#_eLHCUhrUEeGo461UQq-B1g"/>
  </CDA:EntryRelationship>
  <CDA:CDATemplate xmi:id="_qzhEUBuEEeGnMahsPjlwOw" templateId="11111"/>
  <CDA:PropertyValidation xmi:id="_r4qugBuEEeGnMahsPjlwOw"/>
  <CDA:AssociationValidation xmi:id="_4Kb30BrkEeGJ_KU17uNyeA">
    <ruleId>CONF-458</ruleId>
  </CDA:AssociationValidation>
  <CDA:CodegenSupport xmi:id="_6C87UBwmEeG_RY8fzJjtMw" basePackage="org.openhealthtools.mdht.uml.cda" nsPrefix="consol" nsURI="http://www.openhealthtools.org/mdht/uml/cda/consol" packageName="consol" prefix="Consol" base_Namespace="_2B30sBSVEeGGzu7fmW9pXw"/>
  <CDA:AssociationValidation xmi:id="_4Kb30BrkEeGJ_KU17uNyeA">
    <ruleId>CONF-458</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_AFd2wB7tEeGaOZtrEokzNQ" severity="INFO">
    <ruleId>CONF-9139</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_RRrrIB7tEeGaOZtrEokzNQ" severity="WARNING">
    <ruleId>CONF-7150</ruleId>
  </CDA:AssociationValidation>
  <CDA:ValueSetConstraint xmi:id="__6IX4CUrEeG_gJw2x8CkdQ"/>
  <CDA:CDATemplate xmi:id="_yJUwEBkaEeGs5a462vYX5Q" templateId="1.3.6.1.4.1.19376.1.5.3.1.3.33"/>
  <CDA:CodeSystemConstraint xmi:id="_2U6FcBSVEeGGzu7fmW9pXw" code="42344-2" displayName="Discharge Diet">
    <reference href="../../org.openhealthtools.mdht.uml.term.models/model/CodeSystems.uml#_3-cwsCWrEd-iTYfpNb4PkQ"/>
  </CDA:CodeSystemConstraint>
  <CDA:CDATemplate xmi:id="_41cG4BnXEeGs5a462vYX5Q" templateId="2.16.840.1.113883.10.20.22.2.24"/>
  <CDA:CodeSystemConstraint xmi:id="_2Poj4RSVEeGGzu7fmW9pXw" code="11535-2" displayName="HOSPITAL DISCHARGE DX">
    <reference href="../../org.openhealthtools.mdht.uml.term.models/model/CodeSystems.uml#_3-cwsCWrEd-iTYfpNb4PkQ"/>
  </CDA:CodeSystemConstraint>
  <CDA:AssociationValidation xmi:id="_2PidWxSVEeGGzu7fmW9pXw"/>
  <CDA:AssociationValidation xmi:id="_5nMEgCwNEeGKLc4ckmfDag" severity="WARNING">
    <ruleId>CONF:8802</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="__GSxhSwNEeGKLc4ckmfDag">
    <ruleId>CONF:8802</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_USFDsCwXEeGKLc4ckmfDag">
    <ruleId>CONF:8726</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_JJ5jcCwZEeGKLc4ckmfDag" severity="INFO">
    <ruleId>CONF:8725</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_5nMEgCwNEeGKLc4ckmfDag" severity="WARNING">
    <ruleId>CONF:8802</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="__GSxhSwNEeGKLc4ckmfDag">
    <ruleId>CONF:8802</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_USFDsCwXEeGKLc4ckmfDag">
    <ruleId>CONF:8726</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_JJ5jcCwZEeGKLc4ckmfDag" severity="INFO">
    <ruleId>CONF:8725</ruleId>
  </CDA:AssociationValidation>
  <CDA:ValueSetConstraint xmi:id="_S5cLoCytEeGMXrZ0DiQwGg">
    <reference href="../../org.openhealthtools.mdht.uml.cda.consol2.model/model/consol-vocab.uml#_2SbZNRSVEeGGzu7fmW9pXw"/>
    <base_Property href="../../org.openhealthtools.mdht.uml.cda.consol2.model/model/.controlled/consol-documents.uml#_nLJOcCymEeGMXrZ0DiQwGg"/>
    <ruleId>CONF:5407</ruleId>
  </CDA:ValueSetConstraint>
  <CDA:AssociationValidation xmi:id="_dO2aID-OEeGvOdejHZ7dYg">
    <ruleId>CONF:8508</ruleId>
    <base_Association href="../../org.openhealthtools.mdht.uml.cda.consol2.model/model/.controlled/consol-documents.uml#_azyF4D-OEeGvOdejHZ7dYg"/>
  </CDA:AssociationValidation>
  <CDA:CDATemplate xmi:id="_AoIhAOZFEeGINOJ_SD9_dA" base_Class="_6kIXMOZEEeGINOJ_SD9_dA" templateId="2.16.840.1.113883.10.20.22.4.29">
    <ruleId>CONF:7559</ruleId>
    <ruleId>CONF:10508</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_K8t5wOZGEeGINOJ_SD9_dA" severity="WARNING" base_Constraint="_Fu374OZGEeGINOJ_SD9_dA">
    <ruleId>CONF:15580</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_RQou4OZGEeGINOJ_SD9_dA" severity="WARNING" base_Constraint="_HEttcOZGEeGINOJ_SD9_dA">
    <ruleId>CONF:15581</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_WNhfoOZGEeGINOJ_SD9_dA" base_Constraint="_H4Cn0OZGEeGINOJ_SD9_dA">
    <ruleId>CONF:15582</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_qga1cOZkEeGINOJ_SD9_dA" base_Class="_lm3boOZbEeGINOJ_SD9_dA" templateId="2.16.840.1.113883.10.20.22.4.79">
    <ruleId>CONF:14871</ruleId>
    <ruleId>CONF:14872</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_JtkN8OZlEeGINOJ_SD9_dA" base_Constraint="_Dk8p4OZlEeGINOJ_SD9_dA">
    <ruleId>CONF:14874</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_Glis0OcEEeGINOJ_SD9_dA" base_Class="_9rQowOZbEeGINOJ_SD9_dA" templateId="2.16.840.1.113883.10.20.22.4.70">
    <ruleId>CONF:14387</ruleId>
    <ruleId>CONF:14388</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_XS7QIucEEeGINOJ_SD9_dA" severity="WARNING" base_Constraint="_XS7QIOcEEeGINOJ_SD9_dA">
    <ruleId>CONF:14392</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_Y3WQQucEEeGINOJ_SD9_dA" base_Constraint="_Y3WQQOcEEeGINOJ_SD9_dA">
    <ruleId>CONF:15585</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_ZuPcAucEEeGINOJ_SD9_dA" base_Constraint="_ZuPcAOcEEeGINOJ_SD9_dA">
    <ruleId>CONF:15586</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_BD7o8ucFEeGINOJ_SD9_dA" severity="INFO" base_Constraint="_BD7o8OcFEeGINOJ_SD9_dA">
    <ruleId>CONF:14397</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_Bn1KwOcGEeGINOJ_SD9_dA" severity="WARNING" base_Constraint="_1uHKwOcFEeGINOJ_SD9_dA">
    <ruleId>CONF:14799</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_E0i-YOcGEeGINOJ_SD9_dA" base_Constraint="_5vyQcOcFEeGINOJ_SD9_dA">
    <ruleId>CONF:14800</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_HTu9oOcGEeGINOJ_SD9_dA" severity="WARNING" base_Constraint="_7RhwAOcFEeGINOJ_SD9_dA">
    <ruleId>CONF:14801</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_K_GcIOcGEeGINOJ_SD9_dA" base_Constraint="_9MavYOcFEeGINOJ_SD9_dA">
    <ruleId>CONF:14802</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_M1FtYOcGEeGINOJ_SD9_dA" severity="WARNING" base_Constraint="_-ACksOcFEeGINOJ_SD9_dA">
    <ruleId>CONF:14803</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_alEUkPKwEeGFUPBL8qS7yQ" base_Class="_TkyvwPKwEeGFUPBL8qS7yQ" templateId="2.16.840.1.113883.10.20.6.2.3">
    <ruleId>CONF:9189</ruleId>
    <ruleId>CONF:10535</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_2DNSDxSVEeGGzu7fmW9pXw" base_Class="_2DNRcBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.1.1">
    <ruleId>CONF:5252</ruleId>
    <ruleId>CONF:10036</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_2UnxxhSVEeGGzu7fmW9pXw" base_Class="_2UnxkRSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.1.8">
    <ruleId>CONF:8375</ruleId>
    <ruleId>CONF:10043</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_2IKC4BSVEeGGzu7fmW9pXw" base_Class="_2IJb0BSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.1.2">
    <ruleId>CONF:8450</ruleId>
    <ruleId>CONF:10038</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_2TeiKRSVEeGGzu7fmW9pXw" base_Class="_2TeiIRSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.1.10">
    <ruleId>CONF:7710</ruleId>
    <ruleId>CONF:10054</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2UVdyxSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2UVdzhSVEeGGzu7fmW9pXw"/>
  <CDA:CDATemplate xmi:id="_epztEDssEeGvzMYhXuqAEA" base_Class="_R-vIoDssEeGvzMYhXuqAEA" templateId="2.16.840.1.113883.10.20.22.1.4">
    <ruleId>CONF:8375</ruleId>
    <ruleId>CONF:10040</ruleId>
  </CDA:CDATemplate>
  <CDA:ClassValidation xmi:id="_B2d0cD1kEeG3tde5scYNWA" base_Class="_-Qa60D1jEeG3tde5scYNWA">
    <ruleId>CONF:8283</ruleId>
  </CDA:ClassValidation>
  <CDA:CDATemplate xmi:id="_DJxPYD1kEeG3tde5scYNWA" base_Class="_-Qa60D1jEeG3tde5scYNWA" templateId="2.16.840.1.113883.10.20.22.1.3">
    <ruleId>CONF:9968</ruleId>
    <ruleId>CONF:10045</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_cOVMsD3rEeGYzOhiGkMbTA" base_Constraint="_OMdNYD3rEeGYzOhiGkMbTA">
    <ruleId>CONF:9986</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_5kEXoD3rEeGYzOhiGkMbTA" base_Constraint="_sAyY0D3rEeGYzOhiGkMbTA"/>
  <CDA:ClassValidation xmi:id="_5i-GcD4iEeGhnL_c4sBHGg" base_Class="_xe9MsD4iEeGhnL_c4sBHGg">
    <ruleId>CONF:8483</ruleId>
    <ruleId>CONF:10048</ruleId>
  </CDA:ClassValidation>
  <CDA:CDATemplate xmi:id="_7C3L4D4iEeGhnL_c4sBHGg" base_Class="_xe9MsD4iEeGhnL_c4sBHGg" templateId="2.16.840.1.113883.10.20.22.1.7">
    <ruleId>CONF:8486</ruleId>
    <ruleId>CONF:10048</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_W-JIwD7YEeGvOdejHZ7dYg" base_Class="_LuYEsD7YEeGvOdejHZ7dYg" templateId="2.16.840.1.113883.10.20.22.1.6">
    <ruleId>CONF:8496</ruleId>
    <ruleId>CONF:10050</ruleId>
  </CDA:CDATemplate>
  <CDA:PropertyValidation xmi:id="_m8tBwD7ZEeGvOdejHZ7dYg"/>
  <CDA:ConstraintValidation xmi:id="_QFc28D-6EeGtTIIxHid14Q" base_Constraint="_NBpHsD-6EeGtTIIxHid14Q">
    <ruleId>CONF:9643</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_Qex88D-6EeGtTIIxHid14Q" base_Constraint="_Ot-tsD-6EeGtTIIxHid14Q">
    <ruleId>CONF:10064</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_coZxcD_LEeGXieeKs7NJjA" base_Class="_UBzvED_LEeGXieeKs7NJjA" templateId="2.16.840.1.113883.10.20.22.1.9">
    <ruleId>CONF:9483</ruleId>
    <ruleId>CONF:10051</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_m2WxMD_hEeGysvimLgYv4A" base_Constraint="_iu5zoD_hEeGysvimLgYv4A">
    <ruleId>CONF:8704</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_nto-gD_hEeGysvimLgYv4A" base_Constraint="_lKUtMD_hEeGysvimLgYv4A">
    <ruleId>CONF:10069</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_gWBOEEUuEeGdQ4KWAmnbhw" base_Class="_XwBooEUuEeGdQ4KWAmnbhw" templateId="2.16.840.1.113883.10.20.22.1.5">
    <ruleId>CONF:8404</ruleId>
    <ruleId>CONF:10042</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_HAihoEUwEeGdQ4KWAmnbhw" severity="WARNING" base_Constraint="__CBy8EUvEeGdQ4KWAmnbhw">
    <ruleId>CONF:8409</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_GXwi8ErZEeGJpZWiuxRVIw" severity="WARNING" base_Constraint="_CldWAErZEeGJpZWiuxRVIw">
    <ruleId>CONF:9409</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_9LMQQErZEeGJpZWiuxRVIw" base_Constraint="_5AKaQErZEeGJpZWiuxRVIw">
    <ruleId>CONF:9413</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_nhJFwGjBEeGNoZ3kEkcY2A" base_Constraint="_6fCIkGjAEeGNoZ3kEkcY2A">
    <ruleId>CONF:9642</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_vMmDoGjDEeGNoZ3kEkcY2A" base_Constraint="_96mQgGjAEeGNoZ3kEkcY2A">
    <ruleId>CONF:10057</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_DEqS4GjHEeGNoZ3kEkcY2A" base_Constraint="_8h6-oGjGEeGNoZ3kEkcY2A">
    <ruleId>CONF:9501</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_DbxyYGjHEeGNoZ3kEkcY2A" base_Constraint="_90KpoGjGEeGNoZ3kEkcY2A">
    <ruleId>CONF:10028</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_EJAEwGjHEeGNoZ3kEkcY2A" base_Constraint="_AUOyoGjHEeGNoZ3kEkcY2A">
    <ruleId>CONF:10055</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_5k4JQGjHEeGNoZ3kEkcY2A" base_Constraint="_43rsEGjHEeGNoZ3kEkcY2A">
    <ruleId>CONF:10055</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_LnhPUGjIEeGNoZ3kEkcY2A" base_Constraint="_KkMxIGjIEeGNoZ3kEkcY2A">
    <ruleId>CONF:10065</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_sR3YYMa8EeGp28IjMvW3Ag" base_Constraint="_jXOYoMa8EeGp28IjMvW3Ag">
    <ruleId>CONF:5250</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_uWPq8Ma8EeGp28IjMvW3Ag" base_Constraint="_meGqAMa8EeGp28IjMvW3Ag">
    <ruleId>CONF:5251</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_VcpMwMa_EeGp28IjMvW3Ag" base_Constraint="_QNCUUMa_EeGp28IjMvW3Ag">
    <ruleId>CONF:6380</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_V4fbQMa_EeGp28IjMvW3Ag" base_Constraint="_SYLWMMa_EeGp28IjMvW3Ag">
    <ruleId>CONF:6387</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_tg1F4PKuEeGFUPBL8qS7yQ" base_Constraint="_ZNLmgPKuEeGFUPBL8qS7yQ">
    <ruleId>CONF:9504</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_oT3JYPK8EeGFUPBL8qS7yQ" base_Constraint="_fHsUwPK8EeGFUPBL8qS7yQ">
    <ruleId>CONF:9937</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConformsTo xmi:id="_5usfIHyqEeOMoc1VIZQnRQ" base_Generalization="_XwdtgEUuEeGdQ4KWAmnbhw"/>
  <CDA:ConformsTo xmi:id="_OtsooHyrEeOMoc1VIZQnRQ" base_Generalization="_-QelMD1jEeG3tde5scYNWA"/>
  <CDA:ConformsTo xmi:id="_R_H9IHyrEeOMoc1VIZQnRQ" base_Generalization="_xfHkwD4iEeGhnL_c4sBHGg"/>
  <CDA:ConformsTo xmi:id="_T4eEYHyrEeOMoc1VIZQnRQ" base_Generalization="_Luag8D7YEeGvOdejHZ7dYg"/>
  <CDA:ConformsTo xmi:id="_V0tuoHyrEeOMoc1VIZQnRQ" base_Generalization="_UCQbAD_LEeGXieeKs7NJjA"/>
  <CDA:ConformsTo xmi:id="_XylwkHyrEeOMoc1VIZQnRQ" base_Generalization="_2T9DPxSVEeGGzu7fmW9pXw"/>
  <CDA:ConformsTo xmi:id="_HtrosJAWEeOBqfnqAvqk7Q" base_Generalization="_R_oggDssEeGvzMYhXuqAEA"/>
  <CDA:ConformsTo xmi:id="_JGLFoJAWEeOBqfnqAvqk7Q" base_Generalization="_2PQJchSVEeGGzu7fmW9pXw"/>
  <CDA:ConformsTo xmi:id="_LfhioJAWEeOBqfnqAvqk7Q" base_Generalization="_2U6FfBSVEeGGzu7fmW9pXw"/>
  <CDA:CDATemplate xmi:id="_vsuMsJ5QEeOr4eM3k36wAg" base_Class="_dduXkJ5OEeOr4eM3k36wAg" templateId="2.16.840.1.113883.10.20.22.1.1" templateVersion="2014-06-09">
    <ruleId>CONF:5252</ruleId>
    <ruleId>CONF:10036</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_KDKU8J5REeOr4eM3k36wAg" base_Generalization="_ddxa4J5OEeOr4eM3k36wAg"/>
  <CDA:ConformsTo xmi:id="_qS_r8J5xEeOr4eM3k36wAg" base_Generalization="_2jWfwZ5wEeOr4eM3k36wAg"/>
  <CDA:CDATemplate xmi:id="_yJ1FUJ5xEeOr4eM3k36wAg" base_Class="_2jWfwJ5wEeOr4eM3k36wAg" templateId="2.16.840.1.113883.10.20.22.1.15">
    <ruleId>CONF:28741</ruleId>
    <ruleId>CONF:28742</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_vrtb0J8bEeOr4eM3k36wAg" base_Constraint="_qk9kcJ8bEeOr4eM3k36wAg">
    <ruleId>CONF:31044</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_4OnRIKAEEeOQs7VC4HptuQ" base_Class="_itRPkKAEEeOQs7VC4HptuQ" templateId="2.16.840.1.113883.10.20.22.1.14">
    <ruleId>CONF:28947</ruleId>
    <ruleId>CONF:28948</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_PJLvcKAFEeOQs7VC4HptuQ" base_Generalization="_itUS4KAEEeOQs7VC4HptuQ"/>
  <CDA:ConstraintValidation xmi:id="_uJVIkKAXEeOQs7VC4HptuQ" base_Constraint="_Y-s94KAXEeOQs7VC4HptuQ">
    <ruleId>CONF:29102</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_9znQIKAXEeOQs7VC4HptuQ" base_Constraint="_8wCTQKAXEeOQs7VC4HptuQ">
    <ruleId>CONF:29103</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_3KN7MKDQEeOPqKnBFQcY_A" base_Class="_mgnrsKDQEeOPqKnBFQcY_A" templateId="2.16.840.1.113883.10.20.22.1.13">
    <ruleId>CONF:28239</ruleId>
    <ruleId>CONF:28240</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_AakFMKDREeOPqKnBFQcY_A" base_Generalization="_mgoSwKDQEeOPqKnBFQcY_A"/>
  <CDA:ConstraintValidation xmi:id="_ifohUKWYEeOPqKnBFQcY_A" base_Constraint="_O78fQKWYEeOPqKnBFQcY_A">
    <ruleId>CONF:31582</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_NoqdAKWZEeOPqKnBFQcY_A" base_Constraint="_NBehMKWZEeOPqKnBFQcY_A">
    <ruleId>CONF:31583</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_wTVxcKi8EeOTwZftO6CV5g" base_Class="_OA1xkKi8EeOTwZftO6CV5g" templateId="2.16.840.1.113883.10.20.29.1">
    <ruleId>CONF:28458</ruleId>
    <ruleId>CONF:28459</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="__XcCwKi8EeOTwZftO6CV5g" base_Generalization="_OA2_sKi8EeOTwZftO6CV5g"/>
  <CDA:CDATemplate xmi:id="_acTmUCFmEeSt4IEYu7xgbw" base_Class="_PkP3oCFmEeSt4IEYu7xgbw" templateId="2.16.840.1.113883.10.20.22.1.4" templateVersion="2014-06-09">
    <ruleId>CONF:1098-8375</ruleId>
    <ruleId>CONF:1098-10040</ruleId>
    <ruleId>CONF:1098-32502</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_m0g5ICFmEeSt4IEYu7xgbw" base_Generalization="_PkS68CFmEeSt4IEYu7xgbw"/>
  <CDA:ConstraintValidation xmi:id="_OvlKkiGUEeSt4IEYu7xgbw" severity="INFO" base_Constraint="_OvlKkCGUEeSt4IEYu7xgbw">
    <ruleId>CONF:1098-28938</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_QEknkCGUEeSt4IEYu7xgbw" base_Constraint="_QEkAgCGUEeSt4IEYu7xgbw">
    <ruleId>CONF:1098-28939</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_ReJCkiGUEeSt4IEYu7xgbw" base_Constraint="_ReJCkCGUEeSt4IEYu7xgbw">
    <ruleId>CONF:1098-28941</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_qGSfMCGjEeSt4IEYu7xgbw" base_Class="_lPMNYCGjEeSt4IEYu7xgbw" templateId="2.16.840.1.113883.10.20.22.1.2" templateVersion="2014-06-09">
    <ruleId>CONF:1098-8450</ruleId>
    <ruleId>CONF:1098-10038</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_tIed0CGjEeSt4IEYu7xgbw" base_Generalization="_lPMNYSGjEeSt4IEYu7xgbw"/>
  <CDA:CDATemplate xmi:id="_8pFr8CJnEeSBLYc2hU6GfA" base_Class="_4JRRsCJnEeSBLYc2hU6GfA" templateId="2.16.840.1.113883.10.20.22.1.5" templateVersion="2014-06-09">
    <ruleId>CONF:1098-8404</ruleId>
    <ruleId>CONF:1098-10042</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_odKIsCJoEeSBLYc2hU6GfA" base_Generalization="_4JRRsSJnEeSBLYc2hU6GfA"/>
  <CDA:CDATemplate xmi:id="_JYLpECP6EeS4d9o7u1_H3A" base_Class="_89EzQCP5EeS4d9o7u1_H3A" templateId="2.16.840.1.113883.10.20.22.1.8" templateVersion="2014-06-09">
    <ruleId>CONF:1098-8463</ruleId>
    <ruleId>CONF:1098-10044</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_dqd2gCP6EeS4d9o7u1_H3A" base_Generalization="_89FaUCP5EeS4d9o7u1_H3A"/>
  <CDA:ConstraintValidation xmi:id="_Spxs0CSVEeS4d9o7u1_H3A" base_Constraint="_SpwesCSVEeS4d9o7u1_H3A">
    <ruleId>CONF:1098-30569</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_LsLiMClvEeSoCqqrpX8LzQ" base_Class="_4mLhsCluEeSoCqqrpX8LzQ" templateId="2.16.840.1.113883.10.20.22.1.3" templateVersion="2014-06-09">
    <ruleId>CONF:1098-8283</ruleId>
    <ruleId>CONF:1098-10046</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_i-2XcClvEeSoCqqrpX8LzQ" base_Generalization="_4mY9ECluEeSoCqqrpX8LzQ"/>
  <CDA:ConstraintValidation xmi:id="_pfsBcCyUEeSoCqqrpX8LzQ" base_Constraint="_pfraYCyUEeSoCqqrpX8LzQ">
    <ruleId>CONF:1098-30613</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_Ye_OoCyWEeSoCqqrpX8LzQ" base_Constraint="_Ye-nkCyWEeSoCqqrpX8LzQ">
    <ruleId>CONF:1098-30614</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_gkzCsCyXEeSoCqqrpX8LzQ" base_Constraint="_gkx0kCyXEeSoCqqrpX8LzQ">
    <ruleId>CONF:1098-30615</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_sU_d0CyYEeSoCqqrpX8LzQ" base_Constraint="_sU-2wCyYEeSoCqqrpX8LzQ">
    <ruleId>CONF:1098-30616</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_jaxNYC1fEeSoCqqrpX8LzQ" base_Class="_aH1CYC1fEeSoCqqrpX8LzQ" templateId="2.16.840.1.113883.10.20.22.1.7" templateVersion="2014-06-09">
    <ruleId>CONF:1098-8483</ruleId>
    <ruleId>CONF:1098-10048</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_w825YC1fEeSoCqqrpX8LzQ" base_Generalization="_aH1pcC1fEeSoCqqrpX8LzQ"/>
  <CDA:CDATemplate xmi:id="_ONtyAC4pEeSoCqqrpX8LzQ" base_Class="_JD8b0C4pEeSoCqqrpX8LzQ" templateId="2.16.840.1.113883.10.20.22.1.6" templateVersion="2014-06-09">
    <ruleId>CONF:1098-8496</ruleId>
    <ruleId>CONF:1098-10050</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_4H4G0C4pEeSoCqqrpX8LzQ" base_Generalization="_JD8b0S4pEeSoCqqrpX8LzQ"/>
  <CDA:ConstraintValidation xmi:id="_21FEIC7XEeSoCqqrpX8LzQ" base_Constraint="_21Cn4C7XEeSoCqqrpX8LzQ">
    <ruleId>CONF:1098-30412</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_uVgvcC7aEeSoCqqrpX8LzQ" base_Constraint="_uVe6QC7aEeSoCqqrpX8LzQ">
    <ruleId>CONF:1098-30413</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_OlZ-YC7bEeSoCqqrpX8LzQ" base_Constraint="_OlYJMC7bEeSoCqqrpX8LzQ">
    <ruleId>CONF:1098-30414</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_dPemIC7bEeSoCqqrpX8LzQ" base_Constraint="_dOtxIC7bEeSoCqqrpX8LzQ">
    <ruleId>CONF:1098-30415</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_vc8OUC-aEeSoCqqrpX8LzQ" base_Class="_qVEVkC-aEeSoCqqrpX8LzQ" templateId="2.16.840.1.113883.10.20.22.1.9" templateVersion="2014-06-09">
    <ruleId>CONF:1098-7588</ruleId>
    <ruleId>CONF:1098-10052</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_Fyde0C-bEeSoCqqrpX8LzQ" base_Generalization="_qVE8oC-aEeSoCqqrpX8LzQ"/>
  <CDA:ConstraintValidation xmi:id="_bplc8C-4EeSoCqqrpX8LzQ" base_Constraint="_bpjAsC-4EeSoCqqrpX8LzQ">
    <ruleId>CONF:1098-30657</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_pgSuEC-4EeSoCqqrpX8LzQ" base_Constraint="_pgQ44C-4EeSoCqqrpX8LzQ">
    <ruleId>CONF:1098-30658</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_SxqvIC-6EeSoCqqrpX8LzQ" base_Class="_MrNuQC-6EeSoCqqrpX8LzQ" templateId="2.16.840.1.113883.10.20.22.1.10" templateVersion="2014-06-09">
    <ruleId>CONF:1098-7710</ruleId>
    <ruleId>CONF:1098-10054</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_u1fw0C-7EeSoCqqrpX8LzQ" base_Generalization="_MrPjcC-6EeSoCqqrpX8LzQ"/>
  <CDA:CDATemplate xmi:id="_2LMv0BSVEeGGzu7fmW9pXw" base_Class="_2LMIwBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.2.6.1">
    <ruleId>CONF:7527</ruleId>
    <ruleId>CONF:10379</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_45wiEBkaEeGs5a462vYX5Q" base_Class="_bGzYgBVdEeGQCvUGzi1kDQ" templateId="2.16.840.1.113883.10.20.22.2.6">
    <ruleId>CONF:7800</ruleId>
    <ruleId>CONF:10378</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_96YgEBnaEeGs5a462vYX5Q" base_Class="_2EaLUBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.7">
    <ruleId>CONF:7381</ruleId>
    <ruleId>CONF:10488</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2F280hSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2F3j4hSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2EdOoRSVEeGGzu7fmW9pXw" severity="INFO"/>
  <CDA:ConstraintValidation xmi:id="_2Ed1sBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2EecwBSVEeGGzu7fmW9pXw" severity="WARNING"/>
  <CDA:ConstraintValidation xmi:id="_2EfD0BSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2Efq4BSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF:7402</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2Efq4RSVEeGGzu7fmW9pXw">
    <ruleId>CONF:7403</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2EgR8BSVEeGGzu7fmW9pXw">
    <ruleId>CONF:7404</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2Eg5ABSVEeGGzu7fmW9pXw">
    <ruleId>CONF:7405</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2EhgEBSVEeGGzu7fmW9pXw">
    <ruleId>CONF:7406</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2EhgERSVEeGGzu7fmW9pXw">
    <ruleId>CONF:7407</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2EiHIBSVEeGGzu7fmW9pXw">
    <ruleId>CONF:7419</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2EiuMBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2EjVQBSVEeGGzu7fmW9pXw" base_Constraint="_2EaLbxSVEeGGzu7fmW9pXw">
    <ruleId>CONF:9964</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2EjVQRSVEeGGzu7fmW9pXw"/>
  <CDA:PropertyValidation xmi:id="_2EoNwhSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF:7422</ruleId>
  </CDA:PropertyValidation>
  <CDA:CDATemplate xmi:id="_09uuIBnaEeGs5a462vYX5Q" base_Class="_2EAisBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.30">
    <ruleId>CONF:7471</ruleId>
    <ruleId>CONF:10489</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2F7OQhSVEeGGzu7fmW9pXw">
    <ruleId>CONF:7509</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2F71UBSVEeGGzu7fmW9pXw">
    <ruleId>CONF:7915</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2F-RkhSVEeGGzu7fmW9pXw" base_Constraint="_2F-RkBSVEeGGzu7fmW9pXw">
    <ruleId>CONF:10085</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2F-4oxSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2F_fsBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2F_ftRSVEeGGzu7fmW9pXw" severity="INFO"/>
  <CDA:ConstraintValidation xmi:id="_2GAGwhSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2EBw0BSVEeGGzu7fmW9pXw" severity="WARNING"/>
  <CDA:ConstraintValidation xmi:id="_2ECX4BSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2EC-8RSVEeGGzu7fmW9pXw" severity="WARNING"/>
  <CDA:ConstraintValidation xmi:id="_2EDmABSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2EENEBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2EE0IBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2EE0IRSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2EFbMBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2EGCQBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2EGpUBSVEeGGzu7fmW9pXw" severity="WARNING"/>
  <CDA:ConstraintValidation xmi:id="_2EIegBSVEeGGzu7fmW9pXw" severity="WARNING"/>
  <CDA:ConstraintValidation xmi:id="_2EJFkBSVEeGGzu7fmW9pXw" severity="WARNING"/>
  <CDA:ConstraintValidation xmi:id="_2EJsoBSVEeGGzu7fmW9pXw" severity="WARNING"/>
  <CDA:ConstraintValidation xmi:id="_2EKTsBSVEeGGzu7fmW9pXw" severity="WARNING"/>
  <CDA:CDATemplate xmi:id="_cAAIcBneEeGs5a462vYX5Q" base_Class="_2FGu4hSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.8">
    <ruleId>CONF:7347</ruleId>
    <ruleId>CONF:10525</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2FJyMBSVEeGGzu7fmW9pXw"/>
  <CDA:CDATemplate xmi:id="_kdmRwBncEeGs5a462vYX5Q" base_Class="_2E_aIRSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.9">
    <ruleId>CONF:7323</ruleId>
    <ruleId>CONF:10523</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2FvBAxSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2FvoEhSVEeGGzu7fmW9pXw"/>
  <CDA:PropertyValidation xmi:id="__eoqQBwNEeGlALrr33gUJg" severity="WARNING">
    <ruleId>CONF:7805</ruleId>
  </CDA:PropertyValidation>
  <CDA:CDATemplate xmi:id="_52DvABnaEeGs5a462vYX5Q" base_Class="_2FRuAhSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.28">
    <ruleId>CONF:7317</ruleId>
    <ruleId>CONF:10490</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2FUxUBSVEeGGzu7fmW9pXw"/>
  <CDA:TextValue xmi:id="_2FS8IBSVEeGGzu7fmW9pXw"/>
  <CDA:TextValue xmi:id="_iecvoCCOEeGq2sn1dgvG_g"/>
  <CDA:ConstraintValidation xmi:id="_0KsogCFKEeG9m6LRl9ardQ" severity="WARNING" base_Constraint="_ouJssCFKEeG9m6LRl9ardQ">
    <ruleId>CONF:7422</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_mSUG8CFLEeG9m6LRl9ardQ" severity="WARNING" base_Constraint="_cf38gCFLEeG9m6LRl9ardQ">
    <ruleId>CONF:15949</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_xUgzoCFMEeG9m6LRl9ardQ" base_Constraint="_nV_8ECFMEeG9m6LRl9ardQ">
    <ruleId>CONF:15951</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_UHQ8sCFUEeG9m6LRl9ardQ" base_Constraint="_8gb1UCFTEeG9m6LRl9ardQ">
    <ruleId>CONF:7446</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_mLLYoCFVEeG9m6LRl9ardQ" base_Constraint="_VBabUCFVEeG9m6LRl9ardQ">
    <ruleId>CONF:7449</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_kAPmECKdEeG9m6LRl9ardQ" severity="WARNING" base_Constraint="_gBlYICKdEeG9m6LRl9ardQ">
    <ruleId>CONF:15917</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_5EW5ECKdEeG9m6LRl9ardQ" base_Constraint="_0eDcUCKdEeG9m6LRl9ardQ">
    <ruleId>CONF:15919</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_DpWFUCKfEeG9m6LRl9ardQ" severity="WARNING" base_Constraint="_3qPPACKeEeG9m6LRl9ardQ">
    <ruleId>CONF:7334</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_ICYiICKfEeG9m6LRl9ardQ" severity="WARNING" base_Constraint="_1SPc4CKeEeG9m6LRl9ardQ">
    <ruleId>CONF:7333</ruleId>
  </CDA:ConstraintValidation>
  <CDA:PropertyValidation xmi:id="_R4ulECKzEeG9m6LRl9ardQ" severity="WARNING">
    <ruleId>CONF:9117</ruleId>
    <ruleId>CONF:9118</ruleId>
  </CDA:PropertyValidation>
  <CDA:ConstraintValidation xmi:id="_xKFLUCK3EeG9m6LRl9ardQ" severity="WARNING" base_Constraint="_sBN0ECK3EeG9m6LRl9ardQ">
    <ruleId>CONF:15928</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_3ucQMCK3EeG9m6LRl9ardQ" base_Constraint="_0IXhYCK3EeG9m6LRl9ardQ">
    <ruleId>CONF:15930</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_gBGW4CWFEeGWfpmyutaqOA" base_Constraint="_L5MNcCWFEeGWfpmyutaqOA">
    <ruleId>CONF:7504</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_rgdFYCWhEeGWfpmyutaqOA">
    <ruleId>CONF:7421</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_lGdg0CXKEeGWfpmyutaqOA">
    <ruleId>CONF:10083</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_7ZihUCXKEeGWfpmyutaqOA">
    <ruleId>CONF:10084</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_oGz9UCXTEeGWfpmyutaqOA" severity="WARNING">
    <ruleId>CONF:7424</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_BI13YCXUEeGWfpmyutaqOA" severity="WARNING">
    <ruleId>CONF:7425</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_XNKqMCXUEeGWfpmyutaqOA">
    <ruleId>CONF:7426</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_BSGroCXVEeGWfpmyutaqOA" severity="INFO">
    <ruleId>CONF:7431</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_r9M7ECYKEeGWfpmyutaqOA" base_Constraint="_jm2UICYKEeGWfpmyutaqOA">
    <ruleId>CONF:10375</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_LPerMCYLEeGWfpmyutaqOA" base_Constraint="_IvIIQBrcEeGo461UQq-B1g">
    <ruleId>CONF:7343</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_eqOzsCYLEeGWfpmyutaqOA"/>
  <CDA:ConstraintValidation xmi:id="_QuussCYMEeGWfpmyutaqOA" base_Constraint="_P3TE0BrcEeGo461UQq-B1g">
    <ruleId>CONF:7344</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_kTFLMCYOEeGWfpmyutaqOA" severity="WARNING">
    <ruleId>CONF:9118</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ValueSetConstraint xmi:id="_vj2U0CYOEeGWfpmyutaqOA">
    <reference href="../../org.openhealthtools.mdht.uml.cda.consol2.model/model/consol-vocab.uml#_xQv28CXLEeGnSfJ2zNllag"/>
  </CDA:ValueSetConstraint>
  <CDA:PropertyValidation xmi:id="__uvHMCnAEeGHDN_aHIiN8Q" severity="WARNING">
    <ruleId>CONF:9117</ruleId>
    <ruleId>CONF:9118</ruleId>
  </CDA:PropertyValidation>
  <CDA:ValueSetConstraint xmi:id="_DrnMcCnBEeGHDN_aHIiN8Q">
    <reference href="../../org.openhealthtools.mdht.uml.cda.consol2.model/model/consol-vocab.uml#_xQv28CXLEeGnSfJ2zNllag"/>
  </CDA:ValueSetConstraint>
  <CDA:ValueSetConstraint xmi:id="_AIIMsCnDEeGHDN_aHIiN8Q" severity="WARNING">
    <reference href="../../org.openhealthtools.mdht.uml.cda.consol2.model/model/consol-vocab.uml#_xQv28CXLEeGnSfJ2zNllag"/>
    <ruleId>CONF:9117</ruleId>
    <ruleId>CONF:16038</ruleId>
  </CDA:ValueSetConstraint>
  <CDA:ConstraintValidation xmi:id="_fXgRIOJPEeG3cO7ebC3QuA" severity="WARNING" base_Constraint="_bTC9MOJPEeG3cO7ebC3QuA">
    <ruleId>CONF:15950</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_q_Ja8OJVEeG3cO7ebC3QuA" severity="WARNING" base_Constraint="_l-kdAOJVEeG3cO7ebC3QuA">
    <ruleId>CONF:15918</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_0mkLsOJWEeG3cO7ebC3QuA" severity="WARNING" base_Constraint="_wNrf4OJWEeG3cO7ebC3QuA">
    <ruleId>CONF:15929</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_ePScoLNxEeOtlapy2HWYww" base_Class="_uCiIYLNwEeOtlapy2HWYww" templateId="2.16.840.1.113883.10.20.22.4.30" templateVersion="2014-06-09">
    <ruleId>CONF:7471</ruleId>
    <ruleId>CONF:10489</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_ptgzcLNxEeOtlapy2HWYww" base_Generalization="_uCivcLNwEeOtlapy2HWYww"/>
  <CDA:CodeSystemConstraint xmi:id="_I2tmcLN6EeOtlapy2HWYww" code="CONC" displayName="Concern">
    <reference href="../../org.openhealthtools.mdht.uml.term.models/model/CodeSystems.uml#_wOhRcE6REeC5ttwajeXVXg"/>
    <ruleId>CONF:19158</ruleId>
    <ruleId>CONF:32154</ruleId>
  </CDA:CodeSystemConstraint>
  <CDA:PropertyValidation xmi:id="_PVWd0LN6EeOtlapy2HWYww">
    <ruleId>CONF:7477</ruleId>
  </CDA:PropertyValidation>
  <CDA:CDATemplate xmi:id="_HX1C0Lj6EeODDJAC5t5vpw" base_Class="_uVJogLj5EeODDJAC5t5vpw" templateId="2.16.840.1.113883.10.20.22.4.7" templateVersion="2014-06-09">
    <ruleId>CONF:7381</ruleId>
    <ruleId>CONF:10488</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_2XNlALj6EeODDJAC5t5vpw" base_Generalization="_uVNS4Lj5EeODDJAC5t5vpw"/>
  <CDA:CDATemplate xmi:id="_mgoZ8NF8EeOHUokOVP95oQ" base_Class="_mgny4NF8EeOHUokOVP95oQ" templateId="2.16.840.1.113883.10.20.24.3.90">
    <ruleId>CONF:16305</ruleId>
    <ruleId>CONF:16306</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_mgoZ8dF8EeOHUokOVP95oQ" base_Constraint="_mgny4tF8EeOHUokOVP95oQ">
    <ruleId>CONF:16334</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_mgoZ8tF8EeOHUokOVP95oQ" base_Constraint="_mgny5NF8EeOHUokOVP95oQ">
    <ruleId>CONF:16338</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_mgoZ89F8EeOHUokOVP95oQ" base_Constraint="_mgny5tF8EeOHUokOVP95oQ">
    <ruleId>CONF:16343</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_XSaRAPDxEeOKPKE9au0oug" base_Class="_U3yosPDxEeOKPKE9au0oug" templateId="2.16.840.1.113883.10.20.22.4.9" templateVersion="2014-06-09">
    <ruleId>CONF:7323</ruleId>
    <ruleId>CONF:10523</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_snq-YPDxEeOKPKE9au0oug" base_Generalization="_U3yosfDxEeOKPKE9au0oug"/>
  <CDA:ConstraintValidation xmi:id="_W4OqcvF1EeOmsLWmq5fnqQ" base_Constraint="_W4OqcPF1EeOmsLWmq5fnqQ">
    <ruleId>CONF:7343</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_KcqFIvF2EeOmsLWmq5fnqQ" base_Constraint="_KcqFIPF2EeOmsLWmq5fnqQ">
    <ruleId>CONF:7344</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_E9Cs0PJdEeO2NaSiicarcg" base_Class="_B0oKYPJdEeO2NaSiicarcg" templateId="2.16.840.1.113883.10.20.22.4.8" templateVersion="2014-06-09">
    <ruleId>CONF:7347</ruleId>
    <ruleId>CONF:10525</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_b1UFEPJdEeO2NaSiicarcg" base_Generalization="_B0p_kPJdEeO2NaSiicarcg"/>
  <CDA:CDATemplate xmi:id="_Ok8XMPKJEeOn7bMsPcStOw" base_Class="_K3M6IPKJEeOn7bMsPcStOw" templateId="2.16.840.1.113883.10.20.24.3.90" templateVersion="2014-06-09">
    <ruleId>CONF:16305</ruleId>
    <ruleId>CONF:16306</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_RubQoPKJEeOn7bMsPcStOw" base_Generalization="_K3PWYPKJEeOn7bMsPcStOw"/>
  <CDA:ConstraintValidation xmi:id="_KLMTAvMpEeOrR8IF-aqVyQ" base_Constraint="_KLMTAPMpEeOrR8IF-aqVyQ">
    <ruleId>CONF:16338</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_MNuWAvMqEeOrR8IF-aqVyQ" base_Constraint="_MNuWAPMqEeOrR8IF-aqVyQ">
    <ruleId>CONF:16343</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_YbNUcvfpEeO297ryy8ptVg" base_Constraint="_YbNUcPfpEeO297ryy8ptVg">
    <ruleId>CONF:7449</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_uBVvYvfpEeO297ryy8ptVg" base_Constraint="_uBVvYPfpEeO297ryy8ptVg">
    <ruleId>CONF:9964</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_4dkCIPijEeOXlK95I8tUew" base_Constraint="_4djbEPijEeOXlK95I8tUew">
    <ruleId>CONF:10375</ruleId>
  </CDA:ConstraintValidation>
  <CDA:PropertyValidation xmi:id="_TUYTYPrwEeO3D4OxHxUkag">
    <ruleId>CONF:7403</ruleId>
  </CDA:PropertyValidation>
  <CDA:CDATemplate xmi:id="_uK0X4AIjEeSVzfoPSatgpg" base_Class="_nWAcMAIjEeSVzfoPSatgpg" templateId="2.16.840.1.113883.10.20.22.2.6" templateVersion="2014-06-09">
    <ruleId>CONF:7800</ruleId>
    <ruleId>CONF:10378</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_Bp4_sAIkEeSVzfoPSatgpg" base_Generalization="_nWC4cAIjEeSVzfoPSatgpg"/>
  <CDA:CDATemplate xmi:id="_LXPHYAInEeSr1aKUYorURA" base_Class="_EONPMAInEeSr1aKUYorURA" templateId="2.16.840.1.113883.10.20.22.2.6.1" templateVersion="2014-06-09">
    <ruleId>CONF:7527</ruleId>
    <ruleId>CONF:10379</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_Z2m7AAInEeSr1aKUYorURA" base_Generalization="_EOQSgAInEeSr1aKUYorURA"/>
  <CDA:CDATemplate xmi:id="_2LSPZhSVEeGGzu7fmW9pXw" base_Class="_2LSPYBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.2.5.1" assigningAuthorityName="HITSP C83">
    <ruleId>CONF:9179</ruleId>
  </CDA:CDATemplate>
  <CDA:CodeSystemConstraint xmi:id="_2LTdgRSVEeGGzu7fmW9pXw" code="11450-4" displayName="Problem List">
    <reference href="../../org.openhealthtools.mdht.uml.term.models/model/CodeSystems.uml#_3-cwsCWrEd-iTYfpNb4PkQ"/>
    <ruleId>CONF:9180</ruleId>
  </CDA:CodeSystemConstraint>
  <CDA:PropertyValidation xmi:id="_2LUroRSVEeGGzu7fmW9pXw">
    <ruleId>CONF:9181</ruleId>
  </CDA:PropertyValidation>
  <CDA:PropertyValidation xmi:id="_2LVSsxSVEeGGzu7fmW9pXw">
    <ruleId>CONF:9182</ruleId>
  </CDA:PropertyValidation>
  <CDA:CDATemplate xmi:id="_2H7ZYBSVEeGGzu7fmW9pXw" base_Class="_2H6yUBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.3">
    <ruleId>CONF:16772</ruleId>
    <ruleId>CONF:16773</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2IFxcBSVEeGGzu7fmW9pXw" base_Constraint="_2IFKYxSVEeGGzu7fmW9pXw">
    <ruleId>CONF:9032</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2IFxdBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2IGYghSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2IG_lBSVEeGGzu7fmW9pXw" severity="INFO"/>
  <CDA:ConstraintValidation xmi:id="_2IHmohSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2Ezz8BSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2ExXshSVEeGGzu7fmW9pXw">
    <ruleId>CONF:9271</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_p4UDcBnbEeGs5a462vYX5Q" base_Class="_2ExXsBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.5">
    <ruleId>CONF:16756</ruleId>
    <ruleId>CONF:16757</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_8A93ABVeEeGQCvUGzi1kDQ" base_Class="_naxrkBVdEeGQCvUGzi1kDQ" templateId="2.16.840.1.113883.10.20.22.2.5">
    <ruleId>CONF:7877</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_YpxugBUzEeGbmN_W114JUw" base_Class="_SjN_8BUzEeGbmN_W114JUw" templateId="2.16.840.1.113883.10.20.22.4.6">
    <ruleId>CONF:7359</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_GYVXcBUzEeGbmN_W114JUw" base_Class="_5Ha7ABUyEeGbmN_W114JUw" templateId="2.16.840.1.113883.10.20.22.4.4">
    <ruleId>CONF:14926</ruleId>
    <ruleId>CONF:14927</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_2EqqDxSVEeGGzu7fmW9pXw" base_Class="_2EqqABSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.31">
    <ruleId>CONF:7899</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_0SNWsCBCEeG938evaWkvcA" base_Constraint="_sPoAUCBCEeG938evaWkvcA">
    <ruleId>CONF:7618</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_c_rxwCBKEeG938evaWkvcA" base_Constraint="_5_4wYCAwEeGetMjKLkqR8g">
    <ruleId>CONF:15603</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_rfOvECBLEeG938evaWkvcA" severity="INFO" base_Constraint="_6nx20CAwEeGetMjKLkqR8g">
    <ruleId>CONF:15604</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_x4R70CBLEeG938evaWkvcA" severity="WARNING" base_Constraint="_vaH7gCBEEeG938evaWkvcA">
    <ruleId>CONF:15587</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_YyWRMCf2EeGO5_JBy9h6BA" severity="WARNING" base_Constraint="_SxxO0Cf2EeGO5_JBy9h6BA">
    <ruleId>CONF:9033</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_gTeq4Cf3EeGO5_JBy9h6BA" base_Constraint="_TFQWECf3EeGO5_JBy9h6BA">
    <ruleId>CONF:15589</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_v1JB8Cf3EeGO5_JBy9h6BA" severity="INFO" base_Constraint="_jlZuoCf3EeGO5_JBy9h6BA">
    <ruleId>CONF:10141</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_-OqsQCf3EeGO5_JBy9h6BA" base_Constraint="_1fQFECf3EeGO5_JBy9h6BA">
    <ruleId>CONF:9069</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_SheeICf4EeGO5_JBy9h6BA" base_Constraint="_QEznYCf4EeGO5_JBy9h6BA">
    <ruleId>CONF:9272</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_Q1jF0Cp_EeGiFpKeZIy4Pg" severity="WARNING" base_Constraint="_NGUbACp_EeGiFpKeZIy4Pg">
    <ruleId>CONF:15593</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_VCsbsCp_EeGiFpKeZIy4Pg" base_Constraint="_S6G-kCp_EeGiFpKeZIy4Pg">
    <ruleId>CONF:15595</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_XZazsOJkEeG3cO7ebC3QuA" base_Constraint="_IO0RwOJkEeG3cO7ebC3QuA">
    <ruleId>CONF:15588</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_rJa-AOJlEeG3cO7ebC3QuA" severity="INFO" base_Constraint="_nck40OJlEeG3cO7ebC3QuA">
    <ruleId>CONF:16749</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_w9zXcOJlEeG3cO7ebC3QuA" severity="INFO" base_Constraint="_uQVroOJlEeG3cO7ebC3QuA">
    <ruleId>CONF:16750</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_FhpnQOJsEeG3cO7ebC3QuA" severity="WARNING" base_Constraint="_1RiOwOJrEeG3cO7ebC3QuA">
    <ruleId>CONF:15530</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_6vhsAOJsEeG3cO7ebC3QuA" base_Constraint="_z76qMOJsEeG3cO7ebC3QuA">
    <ruleId>CONF:15594</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_IERgMJmMEeOeSLwbllPCyw" base_Class="_GXlxYJmLEeOeSLwbllPCyw" templateId="2.16.840.1.113883.10.20.22.4.113">
    <ruleId>CONF:29037</ruleId>
    <ruleId>CONF:29038</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_hPn20JpnEeOK6dzbL4VoTA" base_Class="_D6Lm0JpnEeOK6dzbL4VoTA" templateId="2.16.840.1.113883.10.20.22.4.134">
    <ruleId>CONF:29940</ruleId>
    <ruleId>CONF:29941</ruleId>
  </CDA:CDATemplate>
  <CDA:PropertyValidation xmi:id="_9A8D0Jp2EeOK6dzbL4VoTA" severity="INFO">
    <ruleId>CONF:31541</ruleId>
  </CDA:PropertyValidation>
  <CDA:CDATemplate xmi:id="_dzjJkJ19EeORR8_YW0n_jQ" base_Class="_2umuYJ18EeORR8_YW0n_jQ" templateId="2.16.840.1.113883.10.20.22.2.58">
    <ruleId>CONF:28804</ruleId>
    <ruleId>CONF:28805</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_JanU4OEFEeOmBMTtnrPqww" base_Generalization="_DMwEcOEFEeOmBMTtnrPqww"/>
  <CDA:CDATemplate xmi:id="_QRxZ8OEFEeOmBMTtnrPqww" base_Class="_DMvdYOEFEeOmBMTtnrPqww" templateId="2.16.840.1.113883.10.20.22.4.5" templateVersion="2014-06-09">
    <ruleId>CONF:16756</ruleId>
    <ruleId>CONF:16757</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_1-Y8cOzbEeOnE-G4kptBiw" base_Class="_y5C8IOzbEeOnE-G4kptBiw" templateId="2.16.840.1.113883.10.20.22.4.3" templateVersion="2014-06-09">
    <ruleId>CONF:16772</ruleId>
    <ruleId>CONF:16773</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_QaoKsOzcEeOnE-G4kptBiw" base_Generalization="_y5C8IezbEeOnE-G4kptBiw"/>
  <CDA:ConstraintValidation xmi:id="_cNUOQuzfEeOnE-G4kptBiw" base_Constraint="_cNUOQOzfEeOnE-G4kptBiw">
    <ruleId>CONF:9032</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_cnoLsuzfEeOnE-G4kptBiw" severity="INFO" base_Constraint="_cnoLsOzfEeOnE-G4kptBiw">
    <ruleId>CONF:9033</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_tIFIIPDCEeOKPKE9au0oug" base_Class="_prDAkPDCEeOKPKE9au0oug" templateId="2.16.840.1.113883.10.20.22.4.4" templateVersion="2014-06-09">
    <ruleId>CONF:14926</ruleId>
    <ruleId>CONF:14927</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_zgiCgPDDEeOKPKE9au0oug" base_Generalization="_prGD4PDCEeOKPKE9au0oug"/>
  <CDA:ConstraintValidation xmi:id="_8_sPI_DEEeOKPKE9au0oug" base_Constraint="_8_sPIPDEEeOKPKE9au0oug">
    <ruleId>CONF:15603</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_9fzSk_DEEeOKPKE9au0oug" severity="INFO" base_Constraint="_9fzSkPDEEeOKPKE9au0oug">
    <ruleId>CONF:15604</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_fcIjsAFkEeSJ2uHfynwxCw" base_Class="_ZgLioAFkEeSJ2uHfynwxCw" templateId="2.16.840.1.113883.10.20.22.2.5" templateVersion="2014-06-09">
    <ruleId>CONF:7877</ruleId>
    <ruleId>CONF:10440</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_EitYQAFmEeSJ2uHfynwxCw" base_Generalization="_ZgPNAAFkEeSJ2uHfynwxCw"/>
  <CDA:CDATemplate xmi:id="_z4rXsALVEeSyydFGYJajGA" base_Class="_IXrA4ALVEeSyydFGYJajGA" templateId="2.16.840.1.113883.10.20.22.2.5.1" templateVersion="2014-06-09">
    <ruleId>CONF:9179</ruleId>
    <ruleId>CONF:10441</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="__-n10ALVEeSyydFGYJajGA" base_Generalization="_IXs2EALVEeSyydFGYJajGA"/>
  <CDA:CDATemplate xmi:id="_r3b7QBkaEeGs5a462vYX5Q" base_Class="_2Rwq0BSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.2.9" assigningAuthorityName="HL7">
    <ruleId>CONF:7705</ruleId>
    <ruleId>CONF:10381</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_JcLykBkbEeGs5a462vYX5Q" base_Class="_2PWQCBSVEeGGzu7fmW9pXw" templateId="1.3.6.1.4.1.19376.1.5.3.1.1.13.2.1">
    <ruleId>CONF:7832</ruleId>
    <ruleId>CONF:10453</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_JkL0wBnbEeGs5a462vYX5Q" base_Class="_2FhloBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.64">
    <ruleId>CONF:9427</ruleId>
    <ruleId>CONF:10491</ruleId>
  </CDA:CDATemplate>
  <CDA:CodeSystemConstraint xmi:id="_2FnFMxSVEeGGzu7fmW9pXw" code="completed">
    <reference href="../../org.openhealthtools.mdht.uml.term.models/model/CodeSystems.uml#_e8ZEoCWvEd-iTYfpNb4PkQ"/>
    <ruleId>CONF-6.3.4.6.8</ruleId>
  </CDA:CodeSystemConstraint>
  <CDA:CDATemplate xmi:id="_2KK1EBSVEeGGzu7fmW9pXw" base_Class="_2KKOBhSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.2.14" assigningAuthorityName="HL7">
    <ruleId>CONF:10389</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2KN4YhSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF-123</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2KOfcBSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF-127</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2KOfdBSVEeGGzu7fmW9pXw">
    <ruleId>CONF-128</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2KPGghSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-129</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2KPtkxSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF-130</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2KQUoxSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF-131</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2KQ7sxSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF-132</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2KRiwBSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF-133</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2KRiwxSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-134</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2KSJ0hSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-135</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2KSw4hSVEeGGzu7fmW9pXw">
    <ruleId>CONF-136</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2KTX8hSVEeGGzu7fmW9pXw">
    <ruleId>CONF-137</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_g8kmkBnSEeGs5a462vYX5Q" base_Class="_2PQJcxSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.2.20" assigningAuthorityName="HL7">
    <ruleId>CONF:10390</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2PWQBBSVEeGGzu7fmW9pXw" severity="WARNING"/>
  <CDA:CDATemplate xmi:id="_n3vB4BnSEeGs5a462vYX5Q" base_Class="_2PcWsRSVEeGGzu7fmW9pXw" templateId="1.3.6.1.4.1.19376.1.5.3.1.3.4">
    <ruleId>CONF:10458</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_uFmSUBnSEeGs5a462vYX5Q" base_Class="_2PidQhSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.2.43">
    <ruleId>CONF:9930</ruleId>
    <ruleId>CONF:10391</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_4MwQEBUSEeG6PvUxSTZnaw" base_Class="_sHrUoBUSEeG6PvUxSTZnaw" templateId="2.16.840.1.113883.10.20.22.4.19">
    <ruleId>CONF:7482</ruleId>
    <ruleId>CONF:10502</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_3iHhABnbEeGs5a462vYX5Q" base_Class="_2G8h9RSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.20">
    <ruleId>CONF:7393</ruleId>
    <ruleId>CONF:10503</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_LeTcQBnUEeGs5a462vYX5Q" base_Class="_2PWQFxSVEeGGzu7fmW9pXw" templateId="1.3.6.1.4.1.19376.1.5.3.1.3.1">
    <ruleId>CONF:10468</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_2LiuEBSVEeGGzu7fmW9pXw" base_Class="_2LiHABSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.32" assigningAuthorityName="HL7">
    <ruleId>CONF:7635</ruleId>
    <ruleId>CONF:10524</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2LjVIRSVEeGGzu7fmW9pXw">
    <ruleId>CONF-474</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2Lj8MBSVEeGGzu7fmW9pXw">
    <ruleId>CONF-475</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2LpbwBSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-476</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2LqC0BSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF-477</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2Lqp4BSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-478</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2LrQ8BSVEeGGzu7fmW9pXw">
    <ruleId>CONF-479</ruleId>
  </CDA:ConstraintValidation>
  <CDA:PropertyValidation xmi:id="_2LjVIBSVEeGGzu7fmW9pXw">
    <ruleId>CONF-473</ruleId>
  </CDA:PropertyValidation>
  <CDA:ConstraintValidation xmi:id="_XbW-ABueEeGnMahsPjlwOw" severity="WARNING" base_Constraint="_VsoLUBueEeGnMahsPjlwOw">
    <ruleId>CONF:15577</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_-oUiEB-WEeGtfPlBCjHWkw" base_Constraint="_8FmGoB-WEeGtfPlBCjHWkw">
    <ruleId>CONF:15579</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_y16OgB-XEeGtfPlBCjHWkw" severity="INFO" base_Constraint="_MtdoIB7kEeGEaLkc3UAsAg">
    <ruleId>CONF:15990</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_bC3lMB-ZEeGtfPlBCjHWkw" severity="INFO" base_Constraint="_U1PlUB-ZEeGtfPlBCjHWkw">
    <ruleId>CONF:7762</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_ei-O4B-ZEeGtfPlBCjHWkw" base_Constraint="_W3fw8B-ZEeGtfPlBCjHWkw">
    <ruleId>CONF:7763</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_h8UJQB-ZEeGtfPlBCjHWkw" severity="INFO" base_Constraint="_X2UwsB-ZEeGtfPlBCjHWkw">
    <ruleId>CONF:16037</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_1EZaMCsaEeGHF88-qhhUMA" base_Class="_oI7CQCsaEeGHF88-qhhUMA" templateId="2.16.840.1.113883.10.20.22.2.13">
    <ruleId>CONF:7840</ruleId>
    <ruleId>CONF:10383</ruleId>
  </CDA:CDATemplate>
  <CDA:ClassValidation xmi:id="_SCS3cCscEeGHF88-qhhUMA" base_Class="_Nm64UCscEeGHF88-qhhUMA">
    <ruleId>CONF:7836</ruleId>
    <ruleId>CONF:10448</ruleId>
  </CDA:ClassValidation>
  <CDA:CDATemplate xmi:id="_Xl_wkCscEeGHF88-qhhUMA" base_Class="_Nm64UCscEeGHF88-qhhUMA" templateId="2.16.840.1.113883.10.20.22.2.12"/>
  <CDA:CDATemplate xmi:id="_xv0kcDV1EeGaW4kr-GbV8Q" base_Class="_eKFbUDVyEeGaW4kr-GbV8Q" templateId="2.16.840.1.113883.10.20.22.2.42">
    <ruleId>CONF:9915</ruleId>
    <ruleId>CONF:10393</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_19h7ADV1EeGaW4kr-GbV8Q" base_Class="_hqzJADVyEeGaW4kr-GbV8Q" templateId="2.16.840.1.113883.10.20.21.2.3">
    <ruleId>CONF:8680</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_7ssdQDV1EeGaW4kr-GbV8Q" base_Class="_mEIgwDVyEeGaW4kr-GbV8Q" templateId="2.16.840.1.113883.10.20.22.2.39">
    <ruleId>CONF:8160</ruleId>
    <ruleId>CONF:10403</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_-ZsPADV1EeGaW4kr-GbV8Q" base_Class="_rNJpADVyEeGaW4kr-GbV8Q" templateId="2.16.840.1.113883.10.20.21.2.1">
    <ruleId>CONF:7869</ruleId>
    <ruleId>CONF:10462</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_lrrAoDV2EeGaW4kr-GbV8Q" base_Class="_iy8nYDVzEeGaW4kr-GbV8Q" templateId="2.16.840.1.113883.10.20.21.2.2">
    <ruleId>CONF:7873</ruleId>
    <ruleId>CONF:10470</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_aByU4DszEeGvzMYhXuqAEA" base_Class="_W8pI4DszEeGvzMYhXuqAEA" templateId="2.16.840.1.113883.10.20.22.2.8">
    <ruleId>CONF:7711</ruleId>
    <ruleId>CONF:10382</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="__hRrIEFHEeGorO80f-Cppg" base_Class="_5K6mAEFHEeGorO80f-Cppg" templateId="2.16.840.1.113883.10.20.22.4.34">
    <ruleId>CONF:16747</ruleId>
    <ruleId>CONF:16748</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_WS1aoFjyEeGRqYkwoeymcA" base_Class="_4qKukEE1EeGdmoWy_aLP0Q" templateId="2.16.840.1.113883.10.20.22.2.45">
    <ruleId>CONF:10112</ruleId>
    <ruleId>CONF:10402</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_9hDO0OMkEeGfv4R-kzpM0g" severity="WARNING" base_Constraint="_1sHS4OMkEeGfv4R-kzpM0g">
    <ruleId>CONF:15578</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_qO6HIOZCEeGINOJ_SD9_dA" base_Constraint="_kCuRsOZCEeGINOJ_SD9_dA">
    <ruleId>CONF:15967</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_tBb5IOZCEeGINOJ_SD9_dA" base_Constraint="_mmOwQOZCEeGINOJ_SD9_dA">
    <ruleId>CONF:15968</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_xXWJcOZCEeGINOJ_SD9_dA" base_Constraint="_npxQ4OZCEeGINOJ_SD9_dA">
    <ruleId>CONF:15969</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_GoiwwOb0EeGINOJ_SD9_dA" base_Class="_zBlUUOZbEeGINOJ_SD9_dA" templateId="2.16.840.1.113883.10.20.22.4.66">
    <ruleId>CONF:14361</ruleId>
    <ruleId>CONF:14362</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_flYBwOb0EeGINOJ_SD9_dA" severity="WARNING" base_Constraint="_flXasOb0EeGINOJ_SD9_dA">
    <ruleId>CONF:14747</ruleId>
    <ruleId>CONF:14748</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_L9KTwObuEeGINOJ_SD9_dA" base_Class="_viRU0OZbEeGINOJ_SD9_dA" templateId="2.16.840.1.113883.10.20.22.4.67">
    <ruleId>CONF:13889</ruleId>
    <ruleId>CONF:13890</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_j2XAsubyEeGINOJ_SD9_dA" severity="WARNING" base_Constraint="_j2XAsObyEeGINOJ_SD9_dA">
    <ruleId>CONF:13927</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_krU50ObyEeGINOJ_SD9_dA" base_Constraint="_krLI0ObyEeGINOJ_SD9_dA">
    <ruleId>CONF:13928</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_pRJ1cubyEeGINOJ_SD9_dA" severity="WARNING" base_Constraint="_pRJ1cObyEeGINOJ_SD9_dA">
    <ruleId>CONF:14234</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_4ZerAOboEeGINOJ_SD9_dA" base_Class="_rVl5AOZbEeGINOJ_SD9_dA" templateId="2.16.840.1.113883.10.20.22.4.68">
    <ruleId>CONF:14312</ruleId>
    <ruleId>CONF:14313</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_4AP2MubpEeGINOJ_SD9_dA" severity="WARNING" base_Constraint="_4AP2MObpEeGINOJ_SD9_dA">
    <ruleId>CONF:15552</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_42ZbEubpEeGINOJ_SD9_dA" severity="WARNING" base_Constraint="_42ZbEObpEeGINOJ_SD9_dA">
    <ruleId>CONF:15553</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_iBSEgubpEeGINOJ_SD9_dA" base_Constraint="_iBSEgObpEeGINOJ_SD9_dA">
    <ruleId>CONF:15554</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_i8gWo-bpEeGINOJ_SD9_dA" base_Constraint="_i8gWoObpEeGINOJ_SD9_dA">
    <ruleId>CONF:14288</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_j7l1E-bpEeGINOJ_SD9_dA" severity="WARNING" base_Constraint="_j7l1EObpEeGINOJ_SD9_dA">
    <ruleId>CONF:14289</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_q-X7UubpEeGINOJ_SD9_dA" severity="INFO" base_Constraint="_q-X7UObpEeGINOJ_SD9_dA">
    <ruleId>CONF:14292</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_if39EPKyEeGFUPBL8qS7yQ" base_Class="_XIE-YPKyEeGFUPBL8qS7yQ" templateId="2.16.840.1.113883.10.20.6.2.4">
    <ruleId>CONF:9194</ruleId>
    <ruleId>CONF:10536</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_OcVjUIkWEeOJGtGyq_dBbA" base_Class="_u_keoIkOEeOJGtGyq_dBbA" templateId="2.16.840.1.113883.10.20.22.4.122">
    <ruleId>CONF:31487</ruleId>
    <ruleId>CONF:31488</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_GTZIUI0eEeOB0eBUISUB4Q" base_Class="_RbbCII0dEeOB0eBUISUB4Q" templateId="2.16.840.1.113883.10.20.22.4.135">
    <ruleId>CONF:31022</ruleId>
    <ruleId>CONF:31023</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_wNdFgJBKEeOZX935IVJfOg" base_Class="_QcUL8JBGEeOZX935IVJfOg" templateId="2.16.840.1.113883.10.20.22.4.115"/>
  <CDA:CDATemplate xmi:id="_ORkBsJm0EeOLJeQez13EkQ" base_Class="_nC0xUJmzEeOLJeQez13EkQ" templateId="2.16.840.1.113883.10.20.22.4.128">
    <ruleId>CONF:28190</ruleId>
    <ruleId>CONF:28457</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_tzRJIJpdEeOK6dzbL4VoTA" base_Class="_KTrEAJpdEeOK6dzbL4VoTA" templateId="2.16.840.1.113883.10.20.22.4.118">
    <ruleId>CONF:31502</ruleId>
    <ruleId>CONF:31503</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_Na0LoKrmEeOxqJAXCMXUYg" base_Class="_7jqj4KrlEeOxqJAXCMXUYg" templateId="2.16.840.1.113883.10.20.22.4.119">
    <ruleId>CONF:32017</ruleId>
    <ruleId>CONF:32018</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_BcRmkMzTEeO93sHu8pHB2g" base_Class="_3WqogMzSEeO93sHu8pHB2g" templateId="2.16.840.1.113883.10.20.22.4.67" templateVersion="2014-06-09">
    <ruleId>CONF:13889</ruleId>
    <ruleId>CONF:13890</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_QrmQcMzTEeO93sHu8pHB2g" base_Generalization="_3WqogczSEeO93sHu8pHB2g"/>
  <CDA:PropertyValidation xmi:id="_3YPq88zUEeO93sHu8pHB2g">
    <ruleId>CONF:13930</ruleId>
  </CDA:PropertyValidation>
  <CDA:CDATemplate xmi:id="_4XOfoOD0EeOmBMTtnrPqww" base_Class="_yU2tgOD0EeOmBMTtnrPqww" templateId="2.16.840.1.113883.10.20.22.4.66" templateVersion="2014-06-09">
    <ruleId>CONF:14361</ruleId>
    <ruleId>CONF:14362</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_GPOxQOD1EeOmBMTtnrPqww" base_Generalization="_yVKPgOD0EeOmBMTtnrPqww"/>
  <CDA:ConstraintValidation xmi:id="_2w6TAOD9EeOmBMTtnrPqww" severity="WARNING" base_Constraint="_s7VVAOD9EeOmBMTtnrPqww">
    <ruleId>CONF:31417</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_O0QywOEIEeOmBMTtnrPqww" base_Class="_GM6icOEIEeOmBMTtnrPqww" templateId="2.16.840.1.113883.10.20.22.4.34" templateVersion="2014-06-09">
    <ruleId>CONF:16767</ruleId>
    <ruleId>CONF:16748</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_aOvSAOEIEeOmBMTtnrPqww" base_Generalization="_GM6iceEIEeOmBMTtnrPqww"/>
  <CDA:CodeSystemConstraint xmi:id="_JV7sYOEJEeOmBMTtnrPqww" code="11535-2" displayName="Hospital discharge diagnosis">
    <reference href="../../org.openhealthtools.mdht.uml.term.models/model/CodeSystems.uml#_3-cwsCWrEd-iTYfpNb4PkQ"/>
    <ruleId>CONF:19148</ruleId>
    <ruleId>CONF:32163</ruleId>
  </CDA:CodeSystemConstraint>
  <CDA:PropertyValidation xmi:id="_NGDIAOEJEeOmBMTtnrPqww">
    <ruleId>CONF:19147</ruleId>
  </CDA:PropertyValidation>
  <CDA:CDATemplate xmi:id="_VcCuQOHoEeO04sHNODkHmQ" base_Class="_PrEOIOHoEeO04sHNODkHmQ" templateId="2.16.840.1.113883.10.20.22.4.19" templateVersion="2014-06-09">
    <ruleId>CONF:7482</ruleId>
    <ruleId>CONF:10502</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_rCn1IOHoEeO04sHNODkHmQ" base_Generalization="_PrE1MOHoEeO04sHNODkHmQ"/>
  <CDA:CDATemplate xmi:id="_sESL0OH7EeO04sHNODkHmQ" base_Class="_D62NwOH7EeO04sHNODkHmQ" templateId="2.16.840.1.113883.10.20.22.4.20" templateVersion="2014-06-09">
    <ruleId>CONF:7393</ruleId>
    <ruleId>CONF:10503</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_-rcUMOH7EeO04sHNODkHmQ" base_Generalization="_D62NweH7EeO04sHNODkHmQ"/>
  <CDA:CDATemplate xmi:id="_u01UoPvVEeOvZJBdQKQrqQ" base_Class="_q_8twPvVEeOvZJBdQKQrqQ" templateId="2.16.840.1.113883.10.20.22.2.9" templateVersion="2014-06-09">
    <ruleId>CONF:7705</ruleId>
    <ruleId>CONF:10381</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="__ToCUPvVEeOvZJBdQKQrqQ" base_Generalization="_q__KAPvVEeOvZJBdQKQrqQ"/>
  <CDA:CDATemplate xmi:id="___nqwPyHEeOozpLKXSm5NA" base_Class="_8rMFkPyHEeOozpLKXSm5NA" templateId="2.16.840.1.113883.10.20.22.2.14" templateVersion="2014-06-09">
    <ruleId>CONF:7920</ruleId>
    <ruleId>CONF:10389</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="__ZwdQPyKEeOozpLKXSm5NA" base_Generalization="_8rQXAPyHEeOozpLKXSm5NA"/>
  <CDA:CDATemplate xmi:id="_xSfwMPyhEeOC19UEcu7MOw" base_Class="_sZlggPyhEeOC19UEcu7MOw" templateId="2.16.840.1.113883.10.20.22.2.20" templateVersion="2014-06-09">
    <ruleId>CONF:7828</ruleId>
    <ruleId>CONF:10390</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_EBY4QPyiEeOC19UEcu7MOw" base_Generalization="_sZn8wPyhEeOC19UEcu7MOw"/>
  <CDA:CDATemplate xmi:id="_h9zhUPylEeOc0tW1-DpN-Q" base_Class="_ctJgAPylEeOc0tW1-DpN-Q" templateId="2.16.840.1.113883.10.20.22.2.43" templateVersion="2014-06-09">
    <ruleId>CONF:9930</ruleId>
    <ruleId>CONF:10391</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_w8AmAPylEeOc0tW1-DpN-Q" base_Generalization="_ctL8QPylEeOc0tW1-DpN-Q"/>
  <CDA:CDATemplate xmi:id="_ql7GEP1HEeOVx4YMwgfjlA" base_Class="_k8L2YP1HEeOVx4YMwgfjlA" templateId="2.16.840.1.113883.10.20.22.2.45" templateVersion="2014-06-09">
    <ruleId>CONF:10112</ruleId>
    <ruleId>CONF:31384</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_7CoJEP1HEeOVx4YMwgfjlA" base_Generalization="_k8O5sP1HEeOVx4YMwgfjlA"/>
  <CDA:CDATemplate xmi:id="_dPAxgP1WEeOW-qBXb0kbTA" base_Class="_YCS1AP1WEeOW-qBXb0kbTA" templateId="2.16.840.1.113883.10.20.21.2.3" templateVersion="2014-06-09">
    <ruleId>CONF:8680</ruleId>
    <ruleId>CONF:10461</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_q-eLIP1WEeOW-qBXb0kbTA" base_Generalization="_YCVRQP1WEeOW-qBXb0kbTA"/>
  <CDA:CDATemplate xmi:id="_j0EfEAB5EeS20Pddu0dxVw" base_Class="_Ya0H0AB5EeS20Pddu0dxVw" templateId="1.3.6.1.4.1.19376.1.5.3.1.3.1" templateVersion="2014-06-09">
    <ruleId>CONF:7844</ruleId>
    <ruleId>CONF:10468</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_ukWKwAB5EeS20Pddu0dxVw" base_Generalization="_Ya3LIAB5EeS20Pddu0dxVw"/>
  <CDA:CDATemplate xmi:id="_2NIphhSVEeGGzu7fmW9pXw" base_Class="_2NIpgBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.2.1.1">
    <ruleId>CONF:7568</ruleId>
    <ruleId>CONF:10433</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2NJ3wBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2NJ3xBSVEeGGzu7fmW9pXw" severity="INFO"/>
  <CDA:CDATemplate xmi:id="_-vKWgBnbEeGs5a462vYX5Q" base_Class="_2GHbgBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.16">
    <ruleId>CONF:7499</ruleId>
    <ruleId>CONF:10504</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2HulEBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2HvMIhSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2HvzMxSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2HwaQhSVEeGGzu7fmW9pXw" severity="WARNING"/>
  <CDA:ConstraintValidation xmi:id="_2HxBUBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2HxBUxSVEeGGzu7fmW9pXw" severity="INFO"/>
  <CDA:ConstraintValidation xmi:id="_2HxoYhSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2HyPcxSVEeGGzu7fmW9pXw" severity="WARNING"/>
  <CDA:ConstraintValidation xmi:id="_2GdZwBSVEeGGzu7fmW9pXw"/>
  <CDA:CDATemplate xmi:id="_HlZ-cBncEeGs5a462vYX5Q" base_Class="_DpoGkBUUEeG6PvUxSTZnaw" templateId="2.16.840.1.113883.10.20.22.4.18">
    <ruleId>CONF:7453</ruleId>
    <ruleId>CONF:10505</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_LKvGYBncEeGs5a462vYX5Q" base_Class="_2T9DQBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.23">
    <ruleId>CONF:7409</ruleId>
    <ruleId>CONF:10506</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_2Poj_xSVEeGGzu7fmW9pXw" base_Class="_2Poj_BSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.2.38">
    <ruleId>CONF:8152</ruleId>
    <ruleId>CONF:10405</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_nvOcIBVeEeGQCvUGzi1kDQ" base_Class="_iAoXEBVdEeGQCvUGzi1kDQ" templateId="2.16.840.1.113883.10.20.22.2.1">
    <ruleId>CONF:7791</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_2KEucxSVEeGGzu7fmW9pXw" base_Class="_2KEucBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.2.23">
    <ruleId>CONF:7944.CONF:10404</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_2HIvYRSVEeGGzu7fmW9pXw" base_Class="_2HIvMBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.50">
    <ruleId>CONF:8747</ruleId>
    <ruleId>CONF:10509</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_2G3CYBSVEeGGzu7fmW9pXw" base_Class="_2G2bUxSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.37">
    <ruleId>CONF:7901</ruleId>
    <ruleId>CONF:10522</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_gOTA8BUUEeG6PvUxSTZnaw" base_Class="_chEhQBUUEeG6PvUxSTZnaw" templateId="2.16.840.1.113883.10.20.22.4.25">
    <ruleId>CONF:7372</ruleId>
    <ruleId>CONF:10517</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_a3-5ABUTEeG6PvUxSTZnaw" base_Class="_VBXq8BUTEeG6PvUxSTZnaw" templateId="2.16.840.1.113883.10.20.22.4.24">
    <ruleId>CONF:7495</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_IYW3oBnXEeGs5a462vYX5Q" base_Class="_2Poj5BSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.2.44">
    <ruleId>CONF:10098</ruleId>
    <ruleId>CONF:10392</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_HhcpcBq2EeGo461UQq-B1g" base_Constraint="_G1AaMBq2EeGo461UQq-B1g">
    <ruleId>CONF:7493</ruleId>
    <ruleId>CONF:10086</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_Sw0r8Bq2EeGo461UQq-B1g"/>
  <CDA:ConstraintValidation xmi:id="_W3bU8Bq2EeGo461UQq-B1g" severity="INFO" base_Constraint="_WgMgsBq2EeGo461UQq-B1g">
    <ruleId>CONF:7494</ruleId>
    <ruleId>CONF:10087</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_uFl-gBrTEeGo461UQq-B1g" base_Class="_j3aTQBrTEeGo461UQq-B1g" templateId="2.16.840.1.113883.10.20.22.4.17">
    <ruleId>CONF:7429</ruleId>
    <ruleId>CONF:10507</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_reiTMB7lEeGEaLkc3UAsAg" base_Constraint="_iZPioB7lEeGEaLkc3UAsAg">
    <ruleId>CONF:7445</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_VmSo8B-zEeGKirKJsFylGA" severity="WARNING" base_Constraint="_K_ZiwB-zEeGKirKJsFylGA">
    <ruleId>CONF:7529</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_RCX1QEFGEeGorO80f-Cppg" base_Class="_LNP08EFGEeGorO80f-Cppg" templateId="2.16.840.1.113883.10.20.22.4.36">
    <ruleId>CONF:16758</ruleId>
    <ruleId>CONF:16759</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_rnBu8EFiEeG2TLeVPbv7pg" severity="WARNING" base_Constraint="_nSTKYEFiEeG2TLeVPbv7pg">
    <ruleId>CONF:15977</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_w4S0QEFiEeG2TLeVPbv7pg" base_Constraint="_ukkeIEFiEeG2TLeVPbv7pg">
    <ruleId>CONF:15979</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_tP3_QEFmEeG2TLeVPbv7pg" base_Constraint="_6ODpwEFiEeG2TLeVPbv7pg">
    <ruleId>CONF:7512</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_t6RnIEFmEeG2TLeVPbv7pg" base_Constraint="_4CqJMEFiEeG2TLeVPbv7pg">
    <ruleId>CONF:7511</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_Wrf3gEIjEeG4bZAl2IGXmQ" base_Constraint="_5BnBgEIiEeG4bZAl2IGXmQ">
    <ruleId>CONF:7508</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_bBg1gEIjEeG4bZAl2IGXmQ" severity="WARNING" base_Constraint="_0bGJYEIiEeG4bZAl2IGXmQ">
    <ruleId>CONF:7513</ruleId>
    <ruleId>CONF:9105</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_do-nAEIjEeG4bZAl2IGXmQ" base_Constraint="_Ldxa0EIjEeG4bZAl2IGXmQ">
    <ruleId>CONF:7513</ruleId>
    <ruleId>CONF:9106</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_s5m7oEInEeG4bZAl2IGXmQ" severity="WARNING" base_Constraint="_cWfuoEInEeG4bZAl2IGXmQ">
    <ruleId>CONF:7526</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_W-JCgEIqEeG4bZAl2IGXmQ" base_Constraint="_1smJUEIpEeG4bZAl2IGXmQ">
    <ruleId>CONF:7524</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_XhPvkEIqEeG4bZAl2IGXmQ" base_Constraint="_L0emcEIqEeG4bZAl2IGXmQ">
    <ruleId>CONF:7542</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_Dl9JoEa7EeG7gbamepbPeA" severity="WARNING" base_Constraint="_uejSEEa6EeG7gbamepbPeA">
    <ruleId>CONF:16867</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_moUDsEa8EeG75M7WNoZ4Xg" base_Constraint="_fELj4Ea8EeG75M7WNoZ4Xg">
    <ruleId>CONF:8754</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_reXCEOL7EeGfv4R-kzpM0g" severity="WARNING" base_Constraint="_ovaIgOL7EeGfv4R-kzpM0g">
    <ruleId>CONF:15978</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_zaRJ4OMVEeGfv4R-kzpM0g" base_Constraint="_vah94OMVEeGfv4R-kzpM0g">
    <ruleId>CONF:15144</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_M6f7sDsiEeKK96MV1iYPgQ" base_Constraint="_M6fUoDsiEeKK96MV1iYPgQ">
    <ruleId>CONF:15607</ruleId>
    <ruleId>CONF:15608</ruleId>
    <ruleId>CONF:9333</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_tJOF8DsiEeKK96MV1iYPgQ" base_Constraint="_tJNe4DsiEeKK96MV1iYPgQ">
    <ruleId>CONF:16870</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_-UVZMAXoEeOc4J5a9hlM-Q" base_Constraint="_0EuxoAXoEeOc4J5a9hlM-Q">
    <ruleId>CONF:7525</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_NDs3IIqwEeOoMZgUoTghIg" base_Class="_MbKs8IqvEeOoMZgUoTghIg" templateId="2.16.840.1.113883.10.20.22.4.123">
    <ruleId>CONF:28657</ruleId>
    <ruleId>CONF:28658</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_hNuQEK-1EeO8duI_7f6kZw" base_Class="_ZQpEwK-1EeO8duI_7f6kZw" templateId="2.16.840.1.113883.10.20.22.4.36" templateVersion="2014-06-09">
    <ruleId>CONF:16758</ruleId>
    <ruleId>CONF:16759</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_yc9jQK-1EeO8duI_7f6kZw" base_Generalization="_ZQxAkK-1EeO8duI_7f6kZw"/>
  <CDA:ConstraintValidation xmi:id="_OTQ4wL59EeO8lb9TgnhnOQ" base_Constraint="_MI3dwL59EeO8lb9TgnhnOQ">
    <ruleId>CONF:NEW</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_iMX2AOLAEeOc7-TVP7Wi6w" base_Class="_WnSCMOLAEeOc7-TVP7Wi6w" templateId="2.16.840.1.113883.10.20.22.4.16" templateVersion="2014-06-09">
    <ruleId>CONF:7499</ruleId>
    <ruleId>CONF:10504</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_86348OLAEeOc7-TVP7Wi6w" base_Generalization="_WnVFgOLAEeOc7-TVP7Wi6w"/>
  <CDA:ConstraintValidation xmi:id="_dSgcsuLDEeOc7-TVP7Wi6w" base_Constraint="_dSgcsOLDEeOc7-TVP7Wi6w">
    <ruleId>CONF:7542</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_S4xW0uLFEeOc7-TVP7Wi6w" severity="WARNING" base_Constraint="_S4xW0OLFEeOc7-TVP7Wi6w">
    <ruleId>CONF:30800</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_dHUjkOLHEeOc7-TVP7Wi6w" base_Constraint="_NeWDkOLHEeOc7-TVP7Wi6w">
    <ruleId>CONF:31517</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_8MFQIOW8EeOkFcFJ9uzEEw" severity="INFO" base_Constraint="_8MCz4OW8EeOkFcFJ9uzEEw">
    <ruleId>CONF:7512</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_0pCDgOW-EeOkFcFJ9uzEEw" severity="WARNING" base_Constraint="_0pBccOW-EeOkFcFJ9uzEEw">
    <ruleId>CONF:7513</ruleId>
    <ruleId>CONF:28499</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_GsKcUuXAEeOkFcFJ9uzEEw" base_Constraint="_GsKcUOXAEeOkFcFJ9uzEEw">
    <ruleId>CONF:7508</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_vPdTwOXfEeOkFcFJ9uzEEw" base_Class="_qH-ckOXfEeOkFcFJ9uzEEw" templateId="2.16.840.1.113883.10.20.22.4.18" templateVersion="2014-06-09">
    <ruleId>CONF:7453</ruleId>
    <ruleId>CONF:10505</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_11pvMOXgEeOkFcFJ9uzEEw" base_Generalization="_qH_DoOXfEeOkFcFJ9uzEEw"/>
  <CDA:ConstraintValidation xmi:id="_AUfTUOXmEeOkFcFJ9uzEEw" severity="INFO" base_Constraint="_oloRUOXlEeOkFcFJ9uzEEw">
    <ruleId>CONF:7459</ruleId>
    <ruleId>CONF:15607</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_KGkRYOXmEeOkFcFJ9uzEEw" severity="INFO" base_Constraint="_joXtIOXlEeOkFcFJ9uzEEw">
    <ruleId>CONF:9331</ruleId>
    <ruleId>CONF:31696</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_VWi7YuXnEeOkFcFJ9uzEEw" base_Constraint="_VWi7YOXnEeOkFcFJ9uzEEw">
    <ruleId>CONF:9333</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConformsTo xmi:id="_MhZi0OXrEeOkFcFJ9uzEEw" base_Generalization="_H0AmoOXrEeOkFcFJ9uzEEw"/>
  <CDA:CDATemplate xmi:id="_NVU6IOXrEeOkFcFJ9uzEEw" base_Class="_Hz__kOXrEeOkFcFJ9uzEEw" templateId="2.16.840.1.113883.10.20.22.4.23" templateVersion="2014-06-09">
    <ruleId>CONF:7409</ruleId>
    <ruleId>CONF:10506</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_MPdmYOZ8EeOmzetP5oaH3A" base_Class="_InVpIOZ8EeOmzetP5oaH3A" templateId="2.16.840.1.113883.10.20.22.4.17" templateVersion="2014-06-09">
    <ruleId>CONF:7429</ruleId>
    <ruleId>CONF:10507</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_YbSDAOZ8EeOmzetP5oaH3A" base_Generalization="_InVpIeZ8EeOmzetP5oaH3A"/>
  <CDA:ConstraintValidation xmi:id="_sPjCQuZ9EeOmzetP5oaH3A" base_Constraint="_sPjCQOZ9EeOmzetP5oaH3A">
    <ruleId>CONF:16870</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_acHK8OZ_EeOmzetP5oaH3A" severity="INFO" base_Constraint="_acGj4OZ_EeOmzetP5oaH3A">
    <ruleId>CONF:7439</ruleId>
    <ruleId>CONF:16093</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_brcr4uZ_EeOmzetP5oaH3A" severity="INFO" base_Constraint="_brcr4OZ_EeOmzetP5oaH3A">
    <ruleId>CONF:9334</ruleId>
    <ruleId>CONF:31695</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_PA4BQOaAEeOmzetP5oaH3A" base_Constraint="_PA3aMOaAEeOmzetP5oaH3A">
    <ruleId>CONF:7445</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_nMp94OaCEeOmzetP5oaH3A" base_Class="_k_C20OaCEeOmzetP5oaH3A" templateId="2.16.840.1.113883.10.20.22.4.50" templateVersion="2014-06-09">
    <ruleId>CONF:8747</ruleId>
    <ruleId>CONF:10509</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_OdUg4OaDEeOmzetP5oaH3A" base_Generalization="_k_C20eaCEeOmzetP5oaH3A"/>
  <CDA:ConstraintValidation xmi:id="_RC5KEOaFEeOmzetP5oaH3A" base_Constraint="_1qtQ8OaEEeOmzetP5oaH3A">
    <ruleId>CONF:30279</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_dxv-UPyqEeOlg_Cnc5bODw" base_Class="_ZLY3MPyqEeOlg_Cnc5bODw" templateId="2.16.840.1.113883.10.20.22.2.44" templateVersion="2014-06-09">
    <ruleId>CONF:10098</ruleId>
    <ruleId>CONF:10392</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_ydsB4PyqEeOlg_Cnc5bODw" base_Generalization="_ZLbTcPyqEeOlg_Cnc5bODw"/>
  <CDA:CDATemplate xmi:id="_-QVEEP1bEeO5Hq-yrsJSmg" base_Class="_5OKxwP1bEeO5Hq-yrsJSmg" templateId="2.16.840.1.113883.10.20.22.2.23" templateVersion="2014-06-09">
    <ruleId>CONF:7944</ruleId>
    <ruleId>CONF:10404</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_NUwskP1cEeO5Hq-yrsJSmg" base_Generalization="_5OOcIP1bEeO5Hq-yrsJSmg"/>
  <CDA:CDATemplate xmi:id="_XzcKgP4jEeOwFalSp0fRiw" base_Class="_F37nMP4jEeOwFalSp0fRiw" templateId="2.16.840.1.113883.10.20.22.2.38" templateVersion="2014-06-09">
    <ruleId>CONF:8152</ruleId>
    <ruleId>CONF:10405</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_elEPUP4jEeOwFalSp0fRiw" base_Generalization="_F3_RkP4jEeOwFalSp0fRiw"/>
  <CDA:CDATemplate xmi:id="_N00TQAFaEeS0nNJt6oyOyQ" base_Class="_JUvaUAFaEeS0nNJt6oyOyQ" templateId="2.16.840.1.113883.10.20.22.2.1" templateVersion="2014-06-09">
    <ruleId>CONF:7791</ruleId>
    <ruleId>CONF:10432</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_eOKgQAFaEeS0nNJt6oyOyQ" base_Generalization="_JUxPgAFaEeS0nNJt6oyOyQ"/>
  <CDA:CDATemplate xmi:id="_V7Gi8ALQEeS0YMHMf4rRtQ" base_Class="_P2mp4ALQEeS0YMHMf4rRtQ" templateId="2.16.840.1.113883.10.20.22.2.1.1" templateVersion="2014-06-09">
    <ruleId>CONF:7568</ruleId>
    <ruleId>CONF:10433</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_e1H3oALQEeS0YMHMf4rRtQ" base_Generalization="_P2ofEALQEeS0YMHMf4rRtQ"/>
  <CDA:CDATemplate xmi:id="_jmRN4DhDEeS1WeMhbm6GZw" base_Class="_XA96QDhDEeS1WeMhbm6GZw" templateId="2.16.840.1.113883.10.20.22.4.25" templateVersion="2014-06-09">
    <ruleId>CONF:1098-7372</ruleId>
    <ruleId>CONF:1098-10517</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_7OGa0DhDEeS1WeMhbm6GZw" base_Generalization="_XA-hUDhDEeS1WeMhbm6GZw"/>
  <CDA:CDATemplate xmi:id="_2SC-shSVEeGGzu7fmW9pXw" base_Class="_2SC-sBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.47" assigningAuthorityName="HL7">
    <ruleId>CONF:8623</ruleId>
    <ruleId>CONF:10495</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2SJFYxSVEeGGzu7fmW9pXw" severity="WARNING"/>
  <CDA:ConstraintValidation xmi:id="_2SJFahSVEeGGzu7fmW9pXw" severity="WARNING"/>
  <CDA:ConstraintValidation xmi:id="_2SJFbRSVEeGGzu7fmW9pXw" severity="WARNING"/>
  <CDA:ConstraintValidation xmi:id="_2SPL_xSVEeGGzu7fmW9pXw"/>
  <CDA:CDATemplate xmi:id="_hWyHQBnbEeGs5a462vYX5Q" base_Class="_2IpyIxSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.46" assigningAuthorityName="HL7">
    <ruleId>CONF:10496</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2IyVAhSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2Iy8EBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2IzjIhSVEeGGzu7fmW9pXw" severity="WARNING"/>
  <CDA:ConstraintValidation xmi:id="_2I0KMxSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2I0xQhSVEeGGzu7fmW9pXw" severity="WARNING"/>
  <CDA:ConstraintValidation xmi:id="_2I1YUBSVEeGGzu7fmW9pXw" severity="WARNING"/>
  <CDA:ConstraintValidation xmi:id="_2I4bpxSVEeGGzu7fmW9pXw"/>
  <CDA:CDATemplate xmi:id="_kKyf8BnbEeGs5a462vYX5Q" base_Class="_2IbIoBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.45" assigningAuthorityName="HL7">
    <ruleId>CONF:10497</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2I634xSVEeGGzu7fmW9pXw" severity="WARNING"/>
  <CDA:ConstraintValidation xmi:id="_2I_wZBSVEeGGzu7fmW9pXw" severity="INFO"/>
  <CDA:ConstraintValidation xmi:id="_2JAXcxSVEeGGzu7fmW9pXw" severity="INFO"/>
  <CDA:ConstraintValidation xmi:id="_2JA-gxSVEeGGzu7fmW9pXw" severity="WARNING"/>
  <CDA:ConstraintValidation xmi:id="_2JBlkxSVEeGGzu7fmW9pXw" severity="INFO"/>
  <CDA:ConstraintValidation xmi:id="_2JCMohSVEeGGzu7fmW9pXw" severity="WARNING"/>
  <CDA:ConstraintValidation xmi:id="_2JCzshSVEeGGzu7fmW9pXw" severity="INFO"/>
  <CDA:ConstraintValidation xmi:id="_2IcWwBSVEeGGzu7fmW9pXw" severity="INFO"/>
  <CDA:ConstraintValidation xmi:id="_2IeL8BSVEeGGzu7fmW9pXw" severity="WARNING"/>
  <CDA:ConstraintValidation xmi:id="_2IezARSVEeGGzu7fmW9pXw" severity="WARNING"/>
  <CDA:ConstraintValidation xmi:id="_2IgBIBSVEeGGzu7fmW9pXw" severity="WARNING"/>
  <CDA:ConstraintValidation xmi:id="_2IhPQBSVEeGGzu7fmW9pXw" severity="WARNING"/>
  <CDA:ConstraintValidation xmi:id="_2Ih2UBSVEeGGzu7fmW9pXw" severity="WARNING"/>
  <CDA:ConstraintValidation xmi:id="_2Ih2URSVEeGGzu7fmW9pXw" severity="INFO"/>
  <CDA:ConstraintValidation xmi:id="_2IidYBSVEeGGzu7fmW9pXw" severity="INFO"/>
  <CDA:ConstraintValidation xmi:id="_2IjEcBSVEeGGzu7fmW9pXw" severity="INFO"/>
  <CDA:ConstraintValidation xmi:id="_2IjrgBSVEeGGzu7fmW9pXw" severity="INFO"/>
  <CDA:ConstraintValidation xmi:id="_2IkSkBSVEeGGzu7fmW9pXw" severity="INFO"/>
  <CDA:PropertyValidation xmi:id="_2Imu0xSVEeGGzu7fmW9pXw"/>
  <CDA:CodeSystemConstraint xmi:id="_2Imu1BSVEeGGzu7fmW9pXw">
    <reference href="../../org.openhealthtools.mdht.uml.term.models/model/CodeSystems.uml#_ywdZ4Gg7Ed-ilOLYnIx0jA"/>
  </CDA:CodeSystemConstraint>
  <CDA:CDATemplate xmi:id="_2IWQLRSVEeGGzu7fmW9pXw" base_Class="_2IWQIxSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.2.15" assigningAuthorityName="HL7">
    <ruleId>CONF:10388</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2HqIYCHiEeGFLIX-2_sWzA" base_Constraint="_web2ECHiEeGFLIX-2_sWzA">
    <ruleId>CONF:8677</ruleId>
    <ruleId>R2.0=CONF:1098-8677</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_e0um0IV5EeSRBMdZotACQg" base_Class="_YvV88IV5EeSRBMdZotACQg" templateId="2.16.840.1.113883.10.20.22.4.46" templateVersion="2014-06-09">
    <ruleId>CONF:1098-8599</ruleId>
    <ruleId>CONF:1098-10496</ruleId>
    <ruleId>CONF:1098-32605</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_chN2oIV6EeSRBMdZotACQg" base_Generalization="_YvZAQIV5EeSRBMdZotACQg"/>
  <CDA:CDATemplate xmi:id="_V0HNsIb0EeSxzopshBnQuw" base_Class="_6whQEIbpEeSxzopshBnQuw" templateId="2.16.840.1.113883.10.20.22.4.45" templateVersion="2014-06-09">
    <ruleId>CONF:1098-8604</ruleId>
    <ruleId>CONF:1098-10497</ruleId>
    <ruleId>CONF:1098-32606</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_XeUbwIevEeSBauRYePLghA" base_Class="_NGivoIevEeSBauRYePLghA" templateId="2.16.840.1.113883.10.20.22.2.15" templateVersion="2014-06-09">
    <ruleId>CONF:1098-7932</ruleId>
    <ruleId>CONF:1098-10388</ruleId>
    <ruleId>CONF:1098-32607</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_ruNcgIevEeSBauRYePLghA" base_Generalization="_NGjWsIevEeSBauRYePLghA"/>
  <CDA:CDATemplate xmi:id="_2JKvhhSVEeGGzu7fmW9pXw" base_Class="_2JKvgBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.2.17">
    <ruleId>CONF:7936</ruleId>
    <ruleId>CONF:10449</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_2JOZ6xSVEeGGzu7fmW9pXw" base_Class="_2JOZ4BSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.38">
    <ruleId>CONF:8550</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2JgtwhSVEeGGzu7fmW9pXw" severity="WARNING"/>
  <CDA:ConstraintValidation xmi:id="_2JhU0hSVEeGGzu7fmW9pXw" severity="WARNING"/>
  <CDA:ConstraintValidation xmi:id="_2Jh74hSVEeGGzu7fmW9pXw" severity="WARNING"/>
  <CDA:ConstraintValidation xmi:id="_2Jii8BSVEeGGzu7fmW9pXw" severity="WARNING"/>
  <CDA:TextValue xmi:id="_2JRdMBSVEeGGzu7fmW9pXw"/>
  <CDA:PropertyValidation xmi:id="_2JQ2IBSVEeGGzu7fmW9pXw" severity="WARNING"/>
  <CDA:CDATemplate xmi:id="_aXMCcBncEeGs5a462vYX5Q" base_Class="_2N6soBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.15.3.8">
    <ruleId>CONF:16768</ruleId>
    <ruleId>CONF:16868</ruleId>
  </CDA:CDATemplate>
  <CDA:PropertyValidation xmi:id="_2N6swxSVEeGGzu7fmW9pXw"/>
  <CDA:PropertyValidation xmi:id="_2N6suBSVEeGGzu7fmW9pXw"/>
  <CDA:PropertyValidation xmi:id="_2N6sthSVEeGGzu7fmW9pXw"/>
  <CDA:PropertyValidation xmi:id="_2N6stxSVEeGGzu7fmW9pXw"/>
  <CDA:PropertyValidation xmi:id="_2N6suRSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_oW16cBtsEeGT89b80j3MTg" severity="WARNING" base_Constraint="_L9YKgBtsEeGT89b80j3MTg">
    <ruleId>CONF:8893</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_BbV5sBttEeGT89b80j3MTg" severity="WARNING" base_Constraint="_4G8WIBtsEeGT89b80j3MTg">
    <ruleId>CONF:8894</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_DA2mUBtqEeGT89b80j3MTg" base_Class="_vBswQBtpEeGT89b80j3MTg" templateId="2.16.840.1.113883.10.20.15.3.1">
    <ruleId>CONF:16762</ruleId>
    <ruleId>CONF:16763</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_p6vxUDyWEeGOm9opnDhYAQ" base_Constraint="_O-ANcBttEeGT89b80j3MTg">
    <ruleId>CONF:8895</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_moWLAOWQEeGKmvzED_He2w" base_Class="_gIH_QOWQEeGKmvzED_He2w" templateId="2.16.840.1.113883.10.20.22.4.85">
    <ruleId>CONF:16566</ruleId>
    <ruleId>CONF:16567</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_jrvIkOWTEeGKmvzED_He2w" base_Constraint="_gBRpAOWTEeGKmvzED_He2w">
    <ruleId>CONF:16565</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_93hgAOWTEeGKmvzED_He2w" base_Class="_RYJj0OWQEeGKmvzED_He2w" templateId="2.16.840.1.113883.10.20.22.4.78">
    <ruleId>CONF:14815</ruleId>
    <ruleId>CONF:14816</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_-ke3MOWUEeGKmvzED_He2w" base_Constraint="_5lXR0OWUEeGKmvzED_He2w">
    <ruleId>CONF:14818</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_WDcQ0InVEeOJGtGyq_dBbA" base_Class="_O-O-IInUEeOJGtGyq_dBbA" templateId="2.16.840.1.113883.10.20.22.4.109">
    <ruleId>CONF:27892</ruleId>
    <ruleId>CONF:27893</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_zT3d4IqZEeOoMZgUoTghIg" base_Class="_H2EzIIqZEeOoMZgUoTghIg" templateId="2.16.840.1.113883.10.20.22.4.111">
    <ruleId>CONF:27926</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_zZuC4I05EeOB0eBUISUB4Q" base_Class="_NP5zMI05EeOB0eBUISUB4Q" templateId="2.16.840.1.113883.10.20.22.4.138">
    <ruleId>CONF:30326</ruleId>
    <ruleId>CONF:30327</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_2DpkYI37EeOB0eBUISUB4Q" base_Class="_T1dcwI37EeOB0eBUISUB4Q" templateId="2.16.840.1.113883.10.20.22.4.124">
    <ruleId>CONF:29843</ruleId>
    <ruleId>CONF:29844</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_hAyLgJ2GEeORR8_YW0n_jQ" base_Class="_MlM4IJ2GEeORR8_YW0n_jQ" templateId="2.16.840.1.113883.10.20.22.2.57">
    <ruleId>CONF:30477</ruleId>
    <ruleId>CONF:30478</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_Nj2T0Lk0EeODDJAC5t5vpw" base_Class="_Hl3ScLk0EeODDJAC5t5vpw" templateId="2.16.840.1.113883.10.20.22.4.78" templateVersion="2014-06-09">
    <ruleId>CONF:14815</ruleId>
    <ruleId>CONF:14816</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_b9FDMLk0EeODDJAC5t5vpw" base_Generalization="_Hl5HoLk0EeODDJAC5t5vpw"/>
  <CDA:CDATemplate xmi:id="_xXkasPJfEeO2NaSiicarcg" base_Class="_b_iGIPJfEeO2NaSiicarcg" templateId="2.16.840.1.113883.10.20.22.4.38" templateVersion="2014-06-09">
    <ruleId>CONF:8550</ruleId>
    <ruleId>CONF:10526</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_GAuQAPJgEeO2NaSiicarcg" base_Generalization="_b_iGIfJfEeO2NaSiicarcg"/>
  <CDA:CDATemplate xmi:id="_uZOR0PMxEeOUvapeh9bVvQ" base_Class="_qHUXwPMxEeOUvapeh9bVvQ" templateId="2.16.840.1.113883.10.20.22.4.85" templateVersion="2014-06-09">
    <ruleId>CONF:16566</ruleId>
    <ruleId>CONF:16567</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_7MV_APMxEeOUvapeh9bVvQ" base_Generalization="_qHW0APMxEeOUvapeh9bVvQ"/>
  <CDA:CDATemplate xmi:id="_1kXFQAFHEeSG_MJH-zNFRw" base_Class="_wLWZMAFHEeSG_MJH-zNFRw" templateId="2.16.840.1.113883.10.20.22.2.17" templateVersion="2014-06-09">
    <ruleId>CONF:7936</ruleId>
    <ruleId>CONF:10449</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_9aG5gAFHEeSG_MJH-zNFRw" base_Generalization="_wLZcgAFHEeSG_MJH-zNFRw"/>
  <CDA:CDATemplate xmi:id="_2KC5QBSVEeGGzu7fmW9pXw" base_Class="_2JxzgBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.1">
    <ruleId>CONF:7126</ruleId>
    <ruleId>CONF:9134</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2J_O4hSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2J_O4BSVEeGGzu7fmW9pXw">
    <ruleId>CONF:7164</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2J_18BSVEeGGzu7fmW9pXw">
    <ruleId>CONF:400</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2J_19BSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF:401</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2KAdAhSVEeGGzu7fmW9pXw">
    <ruleId>CONF:402</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2KBEExSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF:403</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2KBrIxSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF:404</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2KCSMhSVEeGGzu7fmW9pXw">
    <ruleId>CONF:406</ruleId>
  </CDA:ConstraintValidation>
  <CDA:PropertyValidation xmi:id="_2JzosRSVEeGGzu7fmW9pXw">
    <ruleId>CONF:7128</ruleId>
  </CDA:PropertyValidation>
  <CDA:AssociationValidation xmi:id="_2J020BSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF:399</ruleId>
  </CDA:AssociationValidation>
  <CDA:ConstraintValidation xmi:id="_2J69chSVEeGGzu7fmW9pXw" severity="WARNING" base_Constraint="_2J69cBSVEeGGzu7fmW9pXw">
    <ruleId>CONF:7166</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2J7kgxSVEeGGzu7fmW9pXw">
    <ruleId>CONF:415</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2J8LkxSVEeGGzu7fmW9pXw">
    <ruleId>CONF:417</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2J8LlhSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF:419</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2J8yohSVEeGGzu7fmW9pXw">
    <ruleId>CONF:420</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2J9ZshSVEeGGzu7fmW9pXw">
    <ruleId>CONF:421</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_TIHhwBneEeGs5a462vYX5Q" base_Class="_2J1d4BSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.2">
    <ruleId>CONF:9138</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_2JtiEBSVEeGGzu7fmW9pXw" base_Class="_2Js7AxSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.2.3.1" assigningAuthorityName="">
    <ruleId>CONF:7108</ruleId>
    <ruleId>CONF:9137</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2Jv-URSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF:392</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CodeSystemConstraint xmi:id="_2JuJIBSVEeGGzu7fmW9pXw" code="30954-2" displayName="Relevant diagnostic tests and/or laboratory data">
    <reference href="../../org.openhealthtools.mdht.uml.term.models/model/CodeSystems.uml#_3-cwsCWrEd-iTYfpNb4PkQ"/>
    <ruleId>CONF:389</ruleId>
    <ruleId>CONF:390</ruleId>
  </CDA:CodeSystemConstraint>
  <CDA:TextValue xmi:id="_2JvXQBSVEeGGzu7fmW9pXw">
    <ruleId>CONF:391</ruleId>
  </CDA:TextValue>
  <CDA:AssociationValidation xmi:id="_2JwlYxSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF:388</ruleId>
  </CDA:AssociationValidation>
  <CDA:CDATemplate xmi:id="_OydAEBVfEeGQCvUGzi1kDQ" base_Class="_xGqiEBVdEeGQCvUGzi1kDQ" templateId="2.16.840.1.113883.10.20.22.2.3">
    <ruleId>CONF:7116</ruleId>
    <ruleId>CONF:9136</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_76siUBtxEeG4C_iCHrZZ9w" severity="WARNING" base_Constraint="_1dxCgBtuEeG4C_iCHrZZ9w">
    <ruleId>CONF:7165</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_eaFnUBt1EeG4C_iCHrZZ9w" severity="WARNING">
    <ruleId>CONF:9108</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_s1du8Bt5EeG4C_iCHrZZ9w" severity="WARNING">
    <ruleId>CONF:9109</ruleId>
  </CDA:ConstraintValidation>
  <CDA:PropertyValidation xmi:id="_B0fw0Bt-EeG4C_iCHrZZ9w" severity="INFO">
    <ruleId>CONF:7149</ruleId>
  </CDA:PropertyValidation>
  <CDA:CodeSystemConstraint xmi:id="_1-sa4B7HEeGaOZtrEokzNQ"/>
  <CDA:ConstraintValidation xmi:id="_1-YHcB7rEeGaOZtrEokzNQ" severity="WARNING" base_Constraint="_tjUmsB7rEeGaOZtrEokzNQ">
    <ruleId>CONF:15924</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_4nrIIB7vEeGDhvvzMMgVgQ" base_Constraint="_jXJw0B7vEeGDhvvzMMgVgQ">
    <ruleId>CONF:7152</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_VKBKYB-4EeGZsIzHpWxp_Q" severity="INFO" base_Constraint="_OYDHUB-4EeGZsIzHpWxp_Q">
    <ruleId>CONF:7149</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_yL4hMDsOEeGVevaNZNc6DA" base_Constraint="_sq16gDsOEeGVevaNZNc6DA">
    <ruleId>CONF:15926</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_YUIekOJbEeG3cO7ebC3QuA" severity="WARNING" base_Constraint="_VTuBkOJbEeG3cO7ebC3QuA">
    <ruleId>CONF:15925</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_OdUE4PF7EeOmsLWmq5fnqQ" base_Class="_H85E0PF7EeOmsLWmq5fnqQ" templateId="2.16.840.1.113883.10.20.22.4" templateVersion="2014-06-09">
    <ruleId>CONF:7136</ruleId>
    <ruleId>CONF:9138</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_dbBaUPF7EeOmsLWmq5fnqQ" base_Generalization="_H85E0fF7EeOmsLWmq5fnqQ"/>
  <CDA:ConstraintValidation xmi:id="_7FLrMvF9EeOmsLWmq5fnqQ" severity="WARNING" base_Constraint="_7FLrMPF9EeOmsLWmq5fnqQ">
    <ruleId>CONF:19211</ruleId>
    <ruleId>CONF:19212</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_jSlUgPGEEeOmsLWmq5fnqQ" base_Class="_gU40UPGEEeOmsLWmq5fnqQ" templateId="2.16.840.1.113883.10.20.22.4.1" templateVersion="2014-06-09">
    <ruleId>CONF:7126</ruleId>
    <ruleId>CONF:9134</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_4LYIUPGEEeOmsLWmq5fnqQ" base_Generalization="_gU40UfGEEeOmsLWmq5fnqQ"/>
  <CDA:ConstraintValidation xmi:id="_6J_mgPJHEeOA6ZIOnFjrYQ" severity="WARNING" base_Constraint="_6J9xUPJHEeOA6ZIOnFjrYQ">
    <ruleId>CONF:19218</ruleId>
    <ruleId>CONF:19219</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_2-WbMAFAEeSaVZ5WxWd94w" base_Class="_yaJ3QAFAEeSaVZ5WxWd94w" templateId="2.16.840.1.113883.10.20.22.2.3" templateVersion="2014-06-09">
    <ruleId>CONF:7116</ruleId>
    <ruleId>CONF:9136</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_9nLJUAFAEeSaVZ5WxWd94w" base_Generalization="_yaM6kAFAEeSaVZ5WxWd94w"/>
  <CDA:CDATemplate xmi:id="_e0ccAALtEeSueJWOLw5iaQ" base_Class="_bAAhEALtEeSueJWOLw5iaQ" templateId="2.16.840.1.113883.10.20.22.2.3.1" templateVersion="2014-06-09">
    <ruleId>CONF:7108</ruleId>
    <ruleId>CONF:9137</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_sCLBkALtEeSueJWOLw5iaQ" base_Generalization="_bAC9UALtEeSueJWOLw5iaQ"/>
  <CDA:CDATemplate xmi:id="_u5G5QBnaEeGs5a462vYX5Q" base_Class="_2KlEwBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.48">
    <ruleId>CONF:8655</ruleId>
    <ruleId>CONF:10485</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2LEM8hSVEeGGzu7fmW9pXw" severity="INFO"/>
  <CDA:ConstraintValidation xmi:id="_2LE0AhSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2KnhARSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2KoIEBSVEeGGzu7fmW9pXw" base_Constraint="_2KlExRSVEeGGzu7fmW9pXw">
    <ruleId>CONF:8657</ruleId>
    <ruleId>CONF:8658</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2KovIBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2KovIRSVEeGGzu7fmW9pXw" base_Constraint="_2KlEyhSVEeGGzu7fmW9pXw">
    <ruleId>CONF:8659</ruleId>
    <ruleId>CONF:8660</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2KpWMBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2Kp9QBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2Kp9QRSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2KqkUBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2KrLYBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2KrLYRSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2KrycBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2KsZgBSVEeGGzu7fmW9pXw"/>
  <CDA:PropertyValidation xmi:id="_2Kvc0xSVEeGGzu7fmW9pXw"/>
  <CDA:PropertyValidation xmi:id="_2KwD5xSVEeGGzu7fmW9pXw"/>
  <CDA:PropertyValidation xmi:id="_2Kwq8xSVEeGGzu7fmW9pXw"/>
  <CDA:CDATemplate xmi:id="_2KgzVhSVEeGGzu7fmW9pXw" base_Class="_2KgzUBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.2.21.1">
    <ruleId>CONF:8643</ruleId>
    <ruleId>CONF:10377</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_VLe-sBVfEeGQCvUGzi1kDQ" base_Class="_1RZdIBVdEeGQCvUGzi1kDQ" templateId="2.16.840.1.113883.10.20.22.2.21">
    <ruleId>CONF:7928</ruleId>
    <ruleId>CONF:10376</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_v_vnwIlGEeOJGtGyq_dBbA" base_Class="_Z8VQYIlFEeOJGtGyq_dBbA" templateId="2.16.840.1.113883.10.20.22.4.108">
    <ruleId>CONF:28412</ruleId>
    <ruleId>CONF:28413</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_LsOj4K-9EeO8duI_7f6kZw" base_Class="_GnllUK-9EeO8duI_7f6kZw" templateId="2.16.840.1.113883.10.20.22.4.48" templateVersion="2014-06-09">
    <ruleId>CONF:8655</ruleId>
    <ruleId>CONF:10485</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_YFwFUK-9EeO8duI_7f6kZw" base_Generalization="_GnmMYK-9EeO8duI_7f6kZw"/>
  <CDA:CDATemplate xmi:id="_oceOsAFXEeSLIY0bHb-fFQ" base_Class="_jsKhYAFXEeSLIY0bHb-fFQ" templateId="2.16.840.1.113883.10.20.22.2.21" templateVersion="2014-06-09">
    <ruleId>CONF:7928</ruleId>
    <ruleId>CONF:10376</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_6rSIgAFXEeSLIY0bHb-fFQ" base_Generalization="_jsNksAFXEeSLIY0bHb-fFQ"/>
  <CDA:CDATemplate xmi:id="_tbHJUAIPEeS-F85KYVlDyA" base_Class="_ZFbCkAIPEeS-F85KYVlDyA" templateId="2.16.840.1.113883.10.20.22.2.21.1" templateVersion="2014-06-09">
    <ruleId>CONF:30227</ruleId>
    <ruleId>CONF:30228</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_1e-SEAIPEeS-F85KYVlDyA" base_Generalization="_ZFc3wAIPEeS-F85KYVlDyA"/>
  <CDA:CDATemplate xmi:id="_2LXH4BSVEeGGzu7fmW9pXw" base_Class="_2LWg0BSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.2.22.1">
    <ruleId>CONF:10387</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2L6hhBSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF-457</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CodeSystemConstraint xmi:id="_2LYWARSVEeGGzu7fmW9pXw" code="46240-8" displayName="History of encounters">
    <reference href="../../org.openhealthtools.mdht.uml.term.models/model/CodeSystems.uml#_3-cwsCWrEd-iTYfpNb4PkQ"/>
    <ruleId>CONF-454</ruleId>
    <ruleId>CONF-455</ruleId>
  </CDA:CodeSystemConstraint>
  <CDA:PropertyValidation xmi:id="_2LZkIRSVEeGGzu7fmW9pXw">
    <ruleId>CONF-456</ruleId>
  </CDA:PropertyValidation>
  <CDA:PropertyValidation xmi:id="_2LaLMBSVEeGGzu7fmW9pXw">
    <ruleId>CONF-453</ruleId>
  </CDA:PropertyValidation>
  <CDA:CDATemplate xmi:id="_aJLnwBVfEeGQCvUGzi1kDQ" base_Class="_4yj2wBVdEeGQCvUGzi1kDQ" templateId="2.16.840.1.113883.10.20.22.2.22" assigningAuthorityName="HL7">
    <ruleId>CONF:10386</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_2LayXhSVEeGGzu7fmW9pXw" base_Class="_2LayQBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.49" assigningAuthorityName="HL7">
    <ruleId>CONF:8712</ruleId>
    <ruleId>CONF:26353</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2Ld1kBSVEeGGzu7fmW9pXw" severity="INFO"/>
  <CDA:ConstraintValidation xmi:id="_2LecoBSVEeGGzu7fmW9pXw" severity="INFO"/>
  <CDA:ConstraintValidation xmi:id="_2LecoRSVEeGGzu7fmW9pXw" severity="INFO"/>
  <CDA:ConstraintValidation xmi:id="_2LfDsBSVEeGGzu7fmW9pXw">
    <ruleId>CONF-470</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_MrEusCwaEeGKLc4ckmfDag" base_Constraint="_EywuoCwaEeGKLc4ckmfDag">
    <ruleId>CONF:8740</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_d7Xx0CwaEeGKLc4ckmfDag" severity="WARNING" base_Constraint="_a_2b4CwaEeGKLc4ckmfDag">
    <ruleId>CONF:8719</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_iPTFICwaEeGKLc4ckmfDag" severity="WARNING" base_Constraint="_fTZ7wCwaEeGKLc4ckmfDag">
    <ruleId>CONF:15970</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_nZocACwaEeGKLc4ckmfDag" base_Constraint="_ktatYCwaEeGKLc4ckmfDag">
    <ruleId>CONF:15972</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="__KO_4OM0EeGfv4R-kzpM0g" severity="WARNING" base_Constraint="_7xneQOM0EeGfv4R-kzpM0g">
    <ruleId>CONF:15971</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_Pzro8OM2EeGfv4R-kzpM0g" base_Class="_Ker6MOM2EeGfv4R-kzpM0g" templateId="2.16.840.1.113883.10.20.22.4.80">
    <ruleId>CONF:14895</ruleId>
    <ruleId>CONF:14896</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_WBACIMzDEeO93sHu8pHB2g" base_Class="_RGU34MzDEeO93sHu8pHB2g" templateId="2.16.840.1.113883.10.20.22.4.49" templateVersion="2014-06-09">
    <ruleId>CONF:8712</ruleId>
    <ruleId>CONF:26353</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_IkqjYMzEEeO93sHu8pHB2g" base_Generalization="_RGVe8MzDEeO93sHu8pHB2g"/>
  <CDA:ConstraintValidation xmi:id="_tpYvEMzLEeO93sHu8pHB2g" base_Constraint="_tMxrkMzLEeO93sHu8pHB2g">
    <ruleId>CONF:1098-32177</ruleId>
    <ruleId>CONF:1098-32377</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_wJ4rAMzNEeO93sHu8pHB2g" base_Class="_jH6CcMzNEeO93sHu8pHB2g" templateId="2.16.840.1.113883.10.20.22.4.80" templateVersion="2014-06-09">
    <ruleId>CONF:14895</ruleId>
    <ruleId>CONF:14896</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_K3ogAMzOEeO93sHu8pHB2g" base_Generalization="_jH6CcczNEeO93sHu8pHB2g"/>
  <CDA:CDATemplate xmi:id="_roxZkPvbEeOJwYDYIUCQDg" base_Class="_kgM0YPvbEeOJwYDYIUCQDg" templateId="2.16.840.1.113883.10.20.22.2.22" templateVersion="2014-06-09">
    <ruleId>CONF:7940</ruleId>
    <ruleId>CONF:10386</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_JVoEAPvcEeOJwYDYIUCQDg" base_Generalization="_kgOpkPvbEeOJwYDYIUCQDg"/>
  <CDA:CDATemplate xmi:id="_0SqCYAIvEeScubSeRE1upQ" base_Class="_ogD-EAIvEeScubSeRE1upQ" templateId="2.16.840.1.113883.10.20.22.2.22.1" templateVersion="2014-06-09">
    <ruleId>CONF:8705</ruleId>
    <ruleId>CONF:10387</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_8TwyEAIvEeScubSeRE1upQ" base_Generalization="_ogHBYAIvEeScubSeRE1upQ"/>
  <CDA:ConstraintValidation xmi:id="_soEP8kglEeSfpbeq3Ftc1g" base_Constraint="_soEP8EglEeSfpbeq3Ftc1g">
    <ruleId>CONF:9929</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_jfFOMIfLEeSBauRYePLghA" base_Class="_S0oqIIfLEeSBauRYePLghA" templateId="2.16.840.1.113883.10.20.22.2.64">
    <ruleId>CONF:1098-32640</ruleId>
    <ruleId>CONF:1098-32642</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_zh-FUBnbEeGs5a462vYX5Q" base_Class="_2MAoIBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.52">
    <ruleId>CONF:10498</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2MMOUhSVEeGGzu7fmW9pXw">
    <ruleId>CONF-305</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2MM1YhSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF-311</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2MNccBSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-314</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2MNccxSVEeGGzu7fmW9pXw">
    <ruleId>CONF-315</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2MODgxSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-327</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2MOqkxSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-328</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2MPRohSVEeGGzu7fmW9pXw">
    <ruleId>CONF-329</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2MP4shSVEeGGzu7fmW9pXw">
    <ruleId>CONF-354</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2MB2QBSVEeGGzu7fmW9pXw"/>
  <CDA:PropertyValidation xmi:id="_2MHV4BSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-312</ruleId>
  </CDA:PropertyValidation>
  <CDA:CDATemplate xmi:id="_k-AE8BVOEeGbmN_W114JUw" base_Class="_daTqABVOEeGbmN_W114JUw" templateId="2.16.840.1.113883.10.20.22.4.54">
    <ruleId>CONF:9004</ruleId>
    <ruleId>CONF:10499</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_FsB20BVOEeGbmN_W114JUw" base_Class="__qYdcBVNEeGbmN_W114JUw" templateId="2.16.840.1.113883.10.20.22.4.53">
    <ruleId>CONF:8993</ruleId>
    <ruleId>CONF:10500</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2MS8AhSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF-298</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2MTjExSVEeGGzu7fmW9pXw">
    <ruleId>CONF-299</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2MUKIBSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF-303</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2MUxMBSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>3.</ruleId>
    <ruleId>CONF:7967</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_npcu0BVfEeGQCvUGzi1kDQ" base_Class="_EuPloBVeEeGQCvUGzi1kDQ" templateId="2.16.840.1.113883.10.20.22.2.2">
    <ruleId>CONF:7965</ruleId>
    <ruleId>CONF:10399</ruleId>
  </CDA:CDATemplate>
  <CDA:PropertyValidation xmi:id="_wL6S8BqgEeGo461UQq-B1g" severity="WARNING">
    <ruleId>CONF:7969</ruleId>
    <ruleId>CONF:7970</ruleId>
  </CDA:PropertyValidation>
  <CDA:ConstraintValidation xmi:id="_kOty4CQ9EeG4DdjGPr5_Vg" base_Constraint="_aXWsMCQ9EeG4DdjGPr5_Vg">
    <ruleId>CONF:8858</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConformsTo xmi:id="_qn9vwCREEeG4DdjGPr5_Vg" base_Generalization="_QPw2IBVgEeGQCvUGzi1kDQ"/>
  <CDA:CDATemplate xmi:id="_kl0fwCRHEeGPuMK8Qi-Gbg" base_Class="_2L7voBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.2.2.1">
    <ruleId>CONF:9015</ruleId>
    <ruleId>CONF:10400</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_-TSZYEX6EeG6e5lG0YsSyQ" base_Constraint="_4_lrIEX6EeG6e5lG0YsSyQ">
    <ruleId>CONF:15545</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_--EbwEX6EeG6e5lG0YsSyQ" severity="WARNING" base_Constraint="_2MP4sxSVEeGGzu7fmW9pXw">
    <ruleId>CONF:15543</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_GF72UEX7EeG6e5lG0YsSyQ" severity="WARNING" base_Constraint="_COIeUEX7EeG6e5lG0YsSyQ">
    <ruleId>CONF:8842</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_h5HCUEX7EeG6e5lG0YsSyQ" base_Constraint="_bnbB0EX7EeG6e5lG0YsSyQ">
    <ruleId>CONF:8851</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_O3iVUOMsEeGfv4R-kzpM0g" severity="WARNING" base_Constraint="_I32q0OMsEeGfv4R-kzpM0g">
    <ruleId>CONF:15544</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_xKmcQJXGEeOgXcDbh8Igkw" base_Class="_KRcPwJXFEeOgXcDbh8Igkw" templateId="2.16.840.1.113883.10.20.22.4.120">
    <ruleId>CONF:32098</ruleId>
    <ruleId>CONF:32099</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_GXjukOE8EeOTq9XEMvvkWw" base_Class="_zI6vcOE7EeOTq9XEMvvkWw" templateId="2.16.840.1.113883.10.20.22.4.52" templateVersion="2014-06-09">
    <ruleId>CONF:8828</ruleId>
    <ruleId>CONF:10498</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_qqzeMOE8EeOTq9XEMvvkWw" base_Generalization="_zI_A4OE7EeOTq9XEMvvkWw"/>
  <CDA:CDATemplate xmi:id="_W8SwIOHUEeO04sHNODkHmQ" base_Class="_Rx8LIOHUEeO04sHNODkHmQ" templateId="2.16.840.1.113883.10.20.22.4.54" templateVersion="2014-06-09">
    <ruleId>CONF:9004</ruleId>
    <ruleId>CONF:10499</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_jO7mcOHUEeO04sHNODkHmQ" base_Generalization="_Rx8LIeHUEeO04sHNODkHmQ"/>
  <CDA:CDATemplate xmi:id="_qxeRMPy3EeO1SvUcmWeLDQ" base_Class="_kdQhIPy3EeO1SvUcmWeLDQ" templateId="2.16.840.1.113883.10.20.22.2" templateVersion="2014-06-09">
    <ruleId>CONF:7965</ruleId>
    <ruleId>CONF:10399</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_5zZ_UPy3EeO1SvUcmWeLDQ" base_Generalization="_kdS9YPy3EeO1SvUcmWeLDQ"/>
  <CDA:CDATemplate xmi:id="_6KbjQALNEeSIPYXg7AgJzw" base_Class="_14bikALNEeSIPYXg7AgJzw" templateId="2.16.840.1.113883.10.20.22.2.2.1" templateVersion="2014-06-09">
    <ruleId>CONF:9015</ruleId>
    <ruleId>CONF:10400</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_Bq7gQALOEeSIPYXg7AgJzw" base_Generalization="_14dXwALNEeSIPYXg7AgJzw"/>
  <CDA:CDATemplate xmi:id="_2MV_VhSVEeGGzu7fmW9pXw" base_Class="_2MV_UBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.2.18">
    <ruleId>CONF:7924</ruleId>
    <ruleId>CONF:10434</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2NHbYxSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF-34</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_WCTeUBUlEeGvPruliC3crg" base_Class="_PZBdMBUlEeGvPruliC3crg" templateId="2.16.840.1.113883.10.20.22.4.61">
    <ruleId>CONF:8900</ruleId>
    <ruleId>CONF:10516</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_HyrhcBUmEeGvPruliC3crg" base_Class="_Cg3pkBUmEeGvPruliC3crg" templateId="2.16.840.1.113883.10.20.22.4.60">
    <ruleId>CONF:8897</ruleId>
    <ruleId>CONF:10492</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_cVJrUBnZEeGs5a462vYX5Q" base_Class="_XUoXwBnZEeGs5a462vYX5Q" templateId="2.16.840.1.113883.10.20.1.19">
    <ruleId>CONF:8946</ruleId>
    <ruleId>CONF:10529</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="__B5i0DZXEeGUovy31cP2ng" severity="INFO" base_Constraint="_xtqFkDZXEeGUovy31cP2ng">
    <ruleId>CONF:8973</ruleId>
  </CDA:ConstraintValidation>
  <CDA:PropertyValidation xmi:id="_sHmwUDaJEeGUovy31cP2ng">
    <ruleId>CONF:8906</ruleId>
  </CDA:PropertyValidation>
  <CDA:CDATemplate xmi:id="_cp6I4I9DEeOB0eBUISUB4Q" base_Class="_O2I3AI9DEeOB0eBUISUB4Q" templateId="2.16.840.1.113883.10.20.22.4.129">
    <ruleId>CONF:31947</ruleId>
    <ruleId>CONF:31948</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_sazhQLkxEeODDJAC5t5vpw" base_Class="_aJr6ULkxEeODDJAC5t5vpw" templateId="2.16.840.1.113883.10.20.22.4.60" templateVersion="2014-06-09">
    <ruleId>CONF:8897</ruleId>
    <ruleId>CONF:10492</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_d3rHoLk0EeODDJAC5t5vpw" base_Generalization="_aJr6UbkxEeODDJAC5t5vpw"/>
  <CDA:CDATemplate xmi:id="_Vf2sQOwlEeOqa975IP2wug" base_Class="_Q0ODkOwlEeOqa975IP2wug" templateId="2.16.840.1.113883.10.20.22.4.61" templateVersion="2014-06-09">
    <ruleId>CONF:8900</ruleId>
    <ruleId>CONF:10516</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_mUegAOwlEeOqa975IP2wug" base_Generalization="_Q0P4wOwlEeOqa975IP2wug"/>
  <CDA:CDATemplate xmi:id="_yGcSUP4lEeOzC5ykp-XCaA" base_Class="_twgM0P4lEeOzC5ykp-XCaA" templateId="2.16.840.1.113883.10.20.22.2.18" templateVersion="2014-06-09">
    <ruleId>CONF:7924</ruleId>
    <ruleId>CONF:10434</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_GQnsoP4mEeOzC5ykp-XCaA" base_Generalization="_twipEP4lEeOzC5ykp-XCaA"/>
  <CDA:CDATemplate xmi:id="_jeR44BnTEeGs5a462vYX5Q" base_Class="_2NP-QxSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.2.10">
    <ruleId>CONF:10435</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2N0mCBSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF-484</ruleId>
  </CDA:ConstraintValidation>
  <CDA:TextValue xmi:id="_2NP-YBSVEeGGzu7fmW9pXw">
    <ruleId>CONF-483</ruleId>
  </CDA:TextValue>
  <CDA:CDATemplate xmi:id="_2NWE8xSVEeGGzu7fmW9pXw" base_Class="_2NWE5xSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.39">
    <ruleId>CONF:8544</ruleId>
    <ruleId>CONF:10510</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2NWE9hSVEeGGzu7fmW9pXw">
    <ruleId>CONF-488</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2NWE9xSVEeGGzu7fmW9pXw">
    <ruleId>CONF-491</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_2NWFEhSVEeGGzu7fmW9pXw" base_Class="_2NWFBBSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.40">
    <ruleId>CONF:8566</ruleId>
    <ruleId>CONF:10511</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2NcLghSVEeGGzu7fmW9pXw">
    <ruleId>CONF-488</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2NcLgxSVEeGGzu7fmW9pXw">
    <ruleId>CONF-491</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_2NcLmhSVEeGGzu7fmW9pXw" base_Class="_2NcLjhSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.44" assigningAuthorityName="">
    <ruleId>CONF:8583</ruleId>
    <ruleId>CONF:10512</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2NcLnRSVEeGGzu7fmW9pXw">
    <ruleId>CONF-490</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2NcLnhSVEeGGzu7fmW9pXw">
    <ruleId>CONF-491</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_2NiSNhSVEeGGzu7fmW9pXw" base_Class="_2NiSKhSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.41" assigningAuthorityName="">
    <ruleId>CONF:8570</ruleId>
    <ruleId>CONF:10513</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2NiSORSVEeGGzu7fmW9pXw">
    <ruleId>CONF-488</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2NiSOhSVEeGGzu7fmW9pXw">
    <ruleId>CONF-491</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_2NoYzxSVEeGGzu7fmW9pXw" base_Class="_2NoYwxSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.42">
    <ruleId>CONF:8574</ruleId>
    <ruleId>CONF:10514</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2NoY0hSVEeGGzu7fmW9pXw">
    <ruleId>CONF-489</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_2NoY8BSVEeGGzu7fmW9pXw" base_Class="_2NoY5BSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.43">
    <ruleId>CONF:8579</ruleId>
    <ruleId>CONF:10515</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2NufYBSVEeGGzu7fmW9pXw">
    <ruleId>CONF-489</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2NufYRSVEeGGzu7fmW9pXw">
    <ruleId>CONF-491</ruleId>
  </CDA:ConstraintValidation>
  <CDA:PropertyValidation xmi:id="__Lp9wCoMEeGHF88-qhhUMA">
    <ruleId>CONF:8564</ruleId>
  </CDA:PropertyValidation>
  <CDA:CodeSystemConstraint xmi:id="_F5fHsCoNEeGHF88-qhhUMA" identifier="2.16.840.1.113883.5.6" displayName="ENC"/>
  <CDA:CDATemplate xmi:id="_Vaw2MI3FEeOB0eBUISUB4Q" base_Class="_FhAIMI3FEeOB0eBUISUB4Q" templateId="2.16.840.1.113883.10.20.22.4.130">
    <ruleId>CONF:30340</ruleId>
    <ruleId>CONF:30341</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_PeVKkI6iEeOB0eBUISUB4Q" base_Class="_UqXAAI6hEeOB0eBUISUB4Q" templateId="2.16.840.1.113883.10.20.22.4.142">
    <ruleId>CONF:30961</ruleId>
    <ruleId>CONF:30962</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_E1XbQI63EeOB0eBUISUB4Q" base_Class="_50a2UI62EeOB0eBUISUB4Q" templateId="2.16.840.1.113883.10.20.22.4.140">
    <ruleId>CONF:30886</ruleId>
    <ruleId>CONF:30887</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_W7EuEI9UEeOB0eBUISUB4Q" base_Class="_-miMII9TEeOB0eBUISUB4Q" templateId="2.16.840.1.113883.10.20.22.4.121">
    <ruleId>CONF:8583</ruleId>
    <ruleId>CONF:10512</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_iF4mYI9kEeOB0eBUISUB4Q" base_Class="_An8P8I9kEeOB0eBUISUB4Q" templateId="2.16.840.1.113883.10.20.22.4.132">
    <ruleId>CONF:30752</ruleId>
    <ruleId>CONF:30753</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_cpHPEJA9EeOZX935IVJfOg" base_Class="_XD5vgJA8EeOZX935IVJfOg" templateId="2.16.840.1.113883.10.20.22.4.131">
    <ruleId>CONF:30973</ruleId>
    <ruleId>CONF:30974</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_P05_YJmWEeOLJeQez13EkQ" base_Class="_0NewYJmVEeOLJeQez13EkQ" templateId="2.16.840.1.113883.10.20.22.4.110">
    <ruleId>CONF:31420</ruleId>
    <ruleId>CONF:31421</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_1f3zEJmaEeOLJeQez13EkQ" base_Class="_ncafYJmaEeOLJeQez13EkQ" templateId="2.16.840.1.113883.10.20.22.4.143">
    <ruleId>CONF:30951</ruleId>
    <ruleId>CONF:30952</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_ng1ggJ14EeORR8_YW0n_jQ" base_Class="_YPOXoJ14EeORR8_YW0n_jQ" templateId="2.16.840.1.113883.10.20.22.2.60">
    <ruleId>CONF:29584</ruleId>
    <ruleId>CONF:29585</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_oz60oOaYEeOmzetP5oaH3A" base_Class="_lLnRMOaYEeOmzetP5oaH3A" templateId="2.16.840.1.113883.10.20.22.4.39" templateVersion="2014-06-09">
    <ruleId>CONF:30430</ruleId>
    <ruleId>CONF:30431</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_0pQD4OaYEeOmzetP5oaH3A" base_Generalization="_lLn4QOaYEeOmzetP5oaH3A"/>
  <CDA:CDATemplate xmi:id="_ucA3wOdXEeOqBOMhgDlycQ" base_Class="_bDPFMOdXEeOqBOMhgDlycQ" templateId="2.16.840.1.113883.10.20.22.4.40" templateVersion="2014-06-09">
    <ruleId>CONF:30437</ruleId>
    <ruleId>CONF:30438</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_KFeHEOdYEeOqBOMhgDlycQ" base_Generalization="_bDRhcOdXEeOqBOMhgDlycQ"/>
  <CDA:CDATemplate xmi:id="_msiWsOdvEeOqBOMhgDlycQ" base_Class="_jKZssOdvEeOqBOMhgDlycQ" templateId="2.16.840.1.113883.10.20.22.4.44" templateVersion="2014-06-09">
    <ruleId>CONF:30451</ruleId>
    <ruleId>CONF:30452</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_uUCTkOdvEeOqBOMhgDlycQ" base_Generalization="_jKZssedvEeOqBOMhgDlycQ"/>
  <CDA:CDATemplate xmi:id="_hMr2QOeEEeOqBOMhgDlycQ" base_Class="_cs0YsOeEEeOqBOMhgDlycQ" templateId="2.16.840.1.113883.10.20.22.4.41" templateVersion="2014-06-09">
    <ruleId>CONF:30444</ruleId>
    <ruleId>CONF:30445</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_BJHWoOeFEeOqBOMhgDlycQ" base_Generalization="_cs0YseeEEeOqBOMhgDlycQ"/>
  <CDA:ConstraintValidation xmi:id="_nAbYQOgNEeO-iJTuAv7BKQ" base_Constraint="_nAaxMOgNEeO-iJTuAv7BKQ">
    <ruleId>CONF:31987</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_e9gG0OgREeO-iJTuAv7BKQ" base_Class="_Yj45YOgREeO-iJTuAv7BKQ" templateId="2.16.840.1.113883.10.20.22.4.42" templateVersion="2014-06-09">
    <ruleId>CONF:30465</ruleId>
    <ruleId>CONF:30466</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_rlHHkOgREeO-iJTuAv7BKQ" base_Generalization="_Yj5gcOgREeO-iJTuAv7BKQ"/>
  <CDA:CDATemplate xmi:id="_8HEwIOg0EeO-iJTuAv7BKQ" base_Class="_vEd1cOg0EeO-iJTuAv7BKQ" templateId="2.16.840.1.113883.10.20.22.4.43" templateVersion="2014-06-09">
    <ruleId>CONF:30463</ruleId>
    <ruleId>CONF:30464</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_ND3BYOg1EeO-iJTuAv7BKQ" base_Generalization="_vEecgOg0EeO-iJTuAv7BKQ"/>
  <CDA:CDATemplate xmi:id="_4RLqYP4yEeO_Yb9cO8w3bA" base_Class="_bwml0P4yEeO_Yb9cO8w3bA" templateId="2.16.840.1.113883.10.20.22.2.10" templateVersion="2014-06-09">
    <ruleId>CONF:7723</ruleId>
    <ruleId>CONF:10435</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_YSzMwP4zEeO_Yb9cO8w3bA" base_Generalization="_bwppIP4yEeO_Yb9cO8w3bA"/>
  <CDA:CDATemplate xmi:id="_2OAzRhSVEeGGzu7fmW9pXw" base_Class="_2OAzQRSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.2.7.1">
    <ruleId>CONF:10447</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2OfUaRSVEeGGzu7fmW9pXw" base_Constraint="_2OfUZxSVEeGGzu7fmW9pXw">
    <ruleId>CONF:8021</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CodeSystemConstraint xmi:id="_2OAzTBSVEeGGzu7fmW9pXw" code="47519-4" displayName="History of procedures">
    <reference href="../../org.openhealthtools.mdht.uml.term.models/model/CodeSystems.uml#_3-cwsCWrEd-iTYfpNb4PkQ"/>
    <ruleId>CONF-423</ruleId>
    <ruleId>CONF-424</ruleId>
  </CDA:CodeSystemConstraint>
  <CDA:PropertyValidation xmi:id="_2OAzUhSVEeGGzu7fmW9pXw">
    <ruleId>CONF-422</ruleId>
  </CDA:PropertyValidation>
  <CDA:CDATemplate xmi:id="_LbH34BVfEeGQCvUGzi1kDQ" base_Class="_s9Ig4BVdEeGQCvUGzi1kDQ" templateId="2.16.840.1.113883.10.20.22.2.7" assigningAuthorityName="HL7">
    <ruleId>CONF:6271</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_PlWhYBg4EeGs5a462vYX5Q" base_Class="_Aj7JkBg4EeGs5a462vYX5Q" templateId="2.16.840.1.113883.10.20.22.4.13">
    <ruleId>CONF:10520</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_kpdNUBg4EeGs5a462vYX5Q" base_Class="_awdH4Bg4EeGs5a462vYX5Q" templateId="2.16.840.1.113883.10.20.22.4.12">
    <ruleId>CONF:10519</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_2ONAgBSVEeGGzu7fmW9pXw" base_Class="_2OG58RSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.14" assigningAuthorityName="IHE PCC">
    <ruleId>CONF:7654</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2OZN2BSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-442</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2OZN3BSVEeGGzu7fmW9pXw">
    <ruleId>CONF-447</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2OZN4BSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-435</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2OZN5BSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-436</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2OZN6BSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF-444</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2ONAhhSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2ONAhxSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2ONAiBSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2ONAiRSVEeGGzu7fmW9pXw"/>
  <CDA:ConstraintValidation xmi:id="_2ONAihSVEeGGzu7fmW9pXw"/>
  <CDA:TextValue xmi:id="_2ONAghSVEeGGzu7fmW9pXw"/>
  <CDA:PropertyValidation xmi:id="_2ONAhRSVEeGGzu7fmW9pXw" severity="INFO"/>
  <CDA:EntryRelationship xmi:id="_2OTHRhSVEeGGzu7fmW9pXw" severity="INFO" typeCode="RSON"/>
  <CDA:EntryRelationship xmi:id="_2OZNxBSVEeGGzu7fmW9pXw" severity="INFO" typeCode="RSON"/>
  <CDA:EntryRelationship xmi:id="_2OZNyRSVEeGGzu7fmW9pXw" severity="INFO" typeCode="SUBJ"/>
  <CDA:EntryRelationship xmi:id="_2ONAjhSVEeGGzu7fmW9pXw" severity="INFO" typeCode="COMP"/>
  <CDA:ConstraintValidation xmi:id="_-LZhQBrPEeGxIZCGAXKxsQ" severity="WARNING" base_Constraint="_qGzKgBrPEeGxIZCGAXKxsQ">
    <ruleId>CONF:19207</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_Q7LaIBrQEeGxIZCGAXKxsQ" severity="WARNING" base_Constraint="_N4ba0BrQEeGxIZCGAXKxsQ">
    <ruleId>CONF:7658</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_XSCZEBrREeGxIZCGAXKxsQ" severity="WARNING" base_Constraint="_WEQMwBrQEeGxIZCGAXKxsQ">
    <ruleId>CONF:15908</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_Xu5UMBrREeGxIZCGAXKxsQ" base_Constraint="_SSUWwBrREeGxIZCGAXKxsQ">
    <ruleId>CONF:15910</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_xKCRsBxZEeGXP8PxDYviDg" base_Constraint="_t6LqgBxZEeGXP8PxDYviDg">
    <ruleId>CONF:8009</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_H8YoIBxaEeGXP8PxDYviDg" base_Constraint="_9s2SABxZEeGXP8PxDYviDg">
    <ruleId>CONF:7752</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_LXrqUBxaEeGXP8PxDYviDg" base_Constraint="_JHSVABxaEeGXP8PxDYviDg">
    <ruleId>CONF:7766</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_skkvMBxpEeGXP8PxDYviDg" severity="WARNING" base_Constraint="_ilhFEBxpEeGXP8PxDYviDg">
    <ruleId>CONF:19190</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_vD-w4BxpEeGXP8PxDYviDg" severity="WARNING" base_Constraint="_oGW3cBxpEeGXP8PxDYviDg">
    <ruleId>CONF:15596</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_xlcBABxpEeGXP8PxDYviDg" severity="WARNING" base_Constraint="_rX9yIBxpEeGXP8PxDYviDg">
    <ruleId>CONF:15596</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_1T3akBxpEeGXP8PxDYviDg" base_Constraint="_0i4pkBxpEeGXP8PxDYviDg">
    <ruleId>CONF:15598</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_D6CH0BxsEeGXP8PxDYviDg" base_Constraint="_ATZYUBxsEeGXP8PxDYviDg">
    <ruleId>CONF:8316</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_IVsa0BxsEeGXP8PxDYviDg" base_Constraint="_C9KP4BxsEeGXP8PxDYviDg">
    <ruleId>CONF:8312</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_7D4KABxsEeGXP8PxDYviDg" base_Constraint="_5r5qcBxsEeGXP8PxDYviDg">
    <ruleId>CONF:7777</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="__lXYMBxsEeGXP8PxDYviDg" base_Constraint="_zFL1IBxsEeGXP8PxDYviDg">
    <ruleId>CONF:8324</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_E2CVsBxvEeGXP8PxDYviDg" severity="WARNING" base_Constraint="_-WpQYBxuEeGXP8PxDYviDg">
    <ruleId>CONF:19202</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_k1et0BxvEeGXP8PxDYviDg" severity="WARNING" base_Constraint="_gpDwsBxvEeGXP8PxDYviDg">
    <ruleId>CONF:8242</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_leEX0BxvEeGXP8PxDYviDg" severity="WARNING" base_Constraint="_iKsikBxvEeGXP8PxDYviDg">
    <ruleId>CONF:15901</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_mGqB0BxvEeGXP8PxDYviDg" base_Constraint="_jzsgsBxvEeGXP8PxDYviDg">
    <ruleId>CONF:15903</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_s0jAsBxwEeGXP8PxDYviDg" base_Constraint="_oJm7kBxwEeGXP8PxDYviDg">
    <ruleId>CONF:8266</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_tPtSsBxwEeGXP8PxDYviDg" base_Constraint="_p26x8BxwEeGXP8PxDYviDg">
    <ruleId>CONF:8262</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_toQ8oBxwEeGXP8PxDYviDg" base_Constraint="_rOfo4BxwEeGXP8PxDYviDg">
    <ruleId>CONF:8274</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_cLhVgDV1EeGaW4kr-GbV8Q" base_Class="_luQh8DVzEeGaW4kr-GbV8Q" templateId="2.16.840.1.113883.10.20.7.13">
    <ruleId>CONF:8038</ruleId>
    <ruleId>CONF:10473</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_hf3kADV1EeGaW4kr-GbV8Q" base_Class="_OA_Q0DVyEeGaW4kr-GbV8Q" templateId="2.16.840.1.113883.10.20.22.2.25">
    <ruleId>CONF:8066</ruleId>
    <ruleId>CONF:10380</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_kL-k8DV1EeGaW4kr-GbV8Q" base_Class="_R1OXcDVyEeGaW4kr-GbV8Q" templateId="2.16.840.1.113883.10.20.22.2.37">
    <ruleId>CONF:8174</ruleId>
    <ruleId>CONF:10384</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_DIe5YDV2EeGaW4kr-GbV8Q" base_Class="_vHfXoDVyEeGaW4kr-GbV8Q" templateId="2.16.840.1.113883.10.20.7.12">
    <ruleId>CONF:8030</ruleId>
    <ruleId>CONF:10463</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_FHJlgDV2EeGaW4kr-GbV8Q" base_Class="_zel6wDVyEeGaW4kr-GbV8Q" templateId="2.16.840.1.113883.10.20.7.14">
    <ruleId>CONF:8034</ruleId>
    <ruleId>CONF:10464</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_IFlFgDV2EeGaW4kr-GbV8Q" base_Class="_3b6E4DVyEeGaW4kr-GbV8Q" templateId="2.16.840.1.113883.10.20.22.2.30">
    <ruleId>CONF:8082</ruleId>
    <ruleId>CONF:10436</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_K5SjQDV2EeGaW4kr-GbV8Q" base_Class="_7UA-4DVyEeGaW4kr-GbV8Q" templateId="2.16.840.1.113883.10.20.22.2.35">
    <ruleId>CONF:8101</ruleId>
    <ruleId>CONF:10437</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_OjincDV2EeGaW4kr-GbV8Q" base_Class="_-jlSMDVyEeGaW4kr-GbV8Q" templateId="2.16.840.1.113883.10.20.22.2.36">
    <ruleId>CONF:8167</ruleId>
    <ruleId>CONF:10438</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_Rt5DkDV2EeGaW4kr-GbV8Q" base_Class="_Cu6qMDVzEeGaW4kr-GbV8Q" templateId="2.16.840.1.113883.10.20.22.2.34">
    <ruleId>CONF:8097</ruleId>
    <ruleId>CONF:10439</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_U67nUDV2EeGaW4kr-GbV8Q" base_Class="_HNUIIDVzEeGaW4kr-GbV8Q" templateId="2.16.840.1.113883.10.20.22.2.27">
    <ruleId>CONF:8062</ruleId>
    <ruleId>CONF:10442</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_XD4Q0DV2EeGaW4kr-GbV8Q" base_Class="_QhXGYDVzEeGaW4kr-GbV8Q" templateId="2.16.840.1.113883.10.20.18.2.12">
    <ruleId>CONF:8070</ruleId>
    <ruleId>CONF:10466</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_ZcBM4DV2EeGaW4kr-GbV8Q" base_Class="_TvcL8DVzEeGaW4kr-GbV8Q" templateId="2.16.840.1.113883.10.20.18.2.9">
    <ruleId>CONF:8074</ruleId>
    <ruleId>CONF:10467</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_cTJyEDV2EeGaW4kr-GbV8Q" base_Class="_W4UBYDVzEeGaW4kr-GbV8Q" templateId="2.16.840.1.113883.10.20.22.2.28">
    <ruleId>CONF:8078</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_eDgVYDV2EeGaW4kr-GbV8Q" base_Class="_Z662wDVzEeGaW4kr-GbV8Q" templateId="2.16.840.1.113883.10.20.22.2.40">
    <ruleId>CONF:8178</ruleId>
    <ruleId>CONF:10444</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_f1f3cDV2EeGaW4kr-GbV8Q" base_Class="_cjmJMDVzEeGaW4kr-GbV8Q" templateId="2.16.840.1.113883.10.20.22.2.29">
    <ruleId>CONF:8058</ruleId>
    <ruleId>CONF:10445</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_ifYDwDV2EeGaW4kr-GbV8Q" base_Class="_gSUdsDVzEeGaW4kr-GbV8Q" templateId="2.16.840.1.113883.10.20.22.2.31">
    <ruleId>CONF:8086</ruleId>
    <ruleId>CONF:10446</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_vBBKYEEyEeGdmoWy_aLP0Q" base_Generalization="_W4UBYTVzEeGaW4kr-GbV8Q"/>
  <CDA:CDATemplate xmi:id="_7RNbkEEwEeGdmoWy_aLP0Q" base_Class="_0baBYEEwEeGdmoWy_aLP0Q" templateId="2.16.840.1.113883.10.20.22.4.65">
    <ruleId>CONF:16770</ruleId>
    <ruleId>CONF:16771</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_ckEjYEExEeGdmoWy_aLP0Q" base_Class="_0fjXAEEvEeGdmoWy_aLP0Q" templateId="2.16.840.1.113883.10.20.22.4.51">
    <ruleId>CONF:16766</ruleId>
    <ruleId>CONF:16767</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_wMoyQOVwEeGpoIKFyl7L7w" severity="WARNING" base_Constraint="_oeKDoOVwEeGpoIKFyl7L7w">
    <ruleId>CONF:15909</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_YTHewOV4EeGpoIKFyl7L7w" severity="WARNING" base_Constraint="_Q_qfQOV4EeGpoIKFyl7L7w">
    <ruleId>CONF:15902</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_kDiKEOV-EeGpoIKFyl7L7w" severity="INFO" base_Constraint="_XONdcOV-EeGpoIKFyl7L7w">
    <ruleId>CONF:15597</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_EebnEOwvEeOqa975IP2wug" base_Class="__SgUwOwuEeOqa975IP2wug" templateId="2.16.840.1.113883.10.20.22.4.51" templateVersion="2014-06-09">
    <ruleId>CONF:16766</ruleId>
    <ruleId>CONF:16767</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_VIJyYOwvEeOqa975IP2wug" base_Generalization="__SgUwewuEeOqa975IP2wug"/>
  <CDA:CDATemplate xmi:id="_CPNVMOzZEeOnE-G4kptBiw" base_Class="_5l3g0OzYEeOnE-G4kptBiw" templateId="2.16.840.1.113883.10.20.22.4.65" templateVersion="2014-06-09">
    <ruleId>CONF:16770</ruleId>
    <ruleId>CONF:16771</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_EpHWYOzaEeOnE-G4kptBiw" base_Generalization="_5l4H4OzYEeOnE-G4kptBiw"/>
  <CDA:CDATemplate xmi:id="_Iv6S4PDbEeOKPKE9au0oug" base_Class="_CFMuYPDbEeOKPKE9au0oug" templateId="2.16.840.1.113883.10.20.22.4.12" templateVersion="2014-06-09">
    <ruleId>CONF:8291</ruleId>
    <ruleId>CONF:10519</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_UtIS0PDbEeOKPKE9au0oug" base_Generalization="_CFMuYfDbEeOKPKE9au0oug"/>
  <CDA:ConstraintValidation xmi:id="_WdYLoPDfEeOKPKE9au0oug" base_Constraint="_WdXkkPDfEeOKPKE9au0oug">
    <ruleId>CONF:8324</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_UKVOIPDjEeOKPKE9au0oug" base_Class="_QoLWAPDjEeOKPKE9au0oug" templateId="2.16.840.1.113883.10.20.22.4.13" templateVersion="2014-06-09">
    <ruleId>CONF:8238</ruleId>
    <ruleId>CONF:10520</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_vaqLwPDjEeOKPKE9au0oug" base_Generalization="_QoLWAfDjEeOKPKE9au0oug"/>
  <CDA:ConstraintValidation xmi:id="_GUbcAPDoEeOKPKE9au0oug" base_Constraint="_GUa08PDoEeOKPKE9au0oug">
    <ruleId>CONF:8274</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_i9ajwPDqEeOKPKE9au0oug" base_Class="_fCVOQPDqEeOKPKE9au0oug" templateId="2.16.840.1.113883.10.20.22.4.14" templateVersion="2014-06-09">
    <ruleId>CONF:7654</ruleId>
    <ruleId>CONF:10521</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_yyN5QPDqEeOKPKE9au0oug" base_Generalization="_fCV1UPDqEeOKPKE9au0oug"/>
  <CDA:ConstraintValidation xmi:id="_BIXNgPDtEeOKPKE9au0oug" base_Constraint="_BIWmcPDtEeOKPKE9au0oug">
    <ruleId>CONF:7777</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_ia4XYPu_EeOyiMEKhdqMGA" base_Class="_aetyEPu_EeOyiMEKhdqMGA" templateId="2.16.840.1.113883.10.20.22.2.25" templateVersion="2014-06-09">
    <ruleId>CONF:8066</ruleId>
    <ruleId>CONF:10380</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_3X8AIPu_EeOyiMEKhdqMGA" base_Generalization="_aevnQPu_EeOyiMEKhdqMGA"/>
  <CDA:CDATemplate xmi:id="_EuKGcPvYEeOes-3T-2HryA" base_Class="_6M-msPvXEeOes-3T-2HryA" templateId="2.16.840.1.113883.10.20.22.2.37" templateVersion="2014-06-09">
    <ruleId>CONF:8174</ruleId>
    <ruleId>CONF:10384</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_SzN8oPvYEeOes-3T-2HryA" base_Generalization="_6NBC8PvXEeOes-3T-2HryA"/>
  <CDA:CDATemplate xmi:id="_h_DrIP49EeO_F_2qLv6FWQ" base_Class="_dz0ZwP49EeO_F_2qLv6FWQ" templateId="2.16.840.1.113883.10.20.22.2.30" templateVersion="2014-06-09">
    <ruleId>CONF:8082</ruleId>
    <ruleId>CONF:10436</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_loVe8P49EeO_F_2qLv6FWQ" base_Generalization="_dz3dEP49EeO_F_2qLv6FWQ"/>
  <CDA:CDATemplate xmi:id="_rcLJAP5BEeOmw9RN80Tpig" base_Class="_MLNngP5BEeOmw9RN80Tpig" templateId="2.16.840.1.113883.10.20.22.2.36" templateVersion="2014-06-09">
    <ruleId>CONF:8167</ruleId>
    <ruleId>CONF:10438</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_4dWgUP5BEeOmw9RN80Tpig" base_Generalization="_MLRR4P5BEeOmw9RN80Tpig"/>
  <CDA:CDATemplate xmi:id="_NcdsoP5EEeOBnLkJOVC8NQ" base_Class="_JFd3MP5EEeOBnLkJOVC8NQ" templateId="2.16.840.1.113883.10.20.22.2.34" templateVersion="2014-06-09">
    <ruleId>CONF:8097</ruleId>
    <ruleId>CONF:10439</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_Sf6_cP5EEeOBnLkJOVC8NQ" base_Generalization="_JFgTcP5EEeOBnLkJOVC8NQ"/>
  <CDA:CDATemplate xmi:id="_qE4pIP5FEeO_r7yO9mhwnA" base_Class="_lLOykP5FEeO_r7yO9mhwnA" templateId="2.16.840.1.113883.10.20.22.2.28" templateVersion="2014-06-09">
    <ruleId>CONF:8078</ruleId>
    <ruleId>CONF:10443</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_wmzeAP5FEeO_r7yO9mhwnA" base_Generalization="_lLR14P5FEeO_r7yO9mhwnA"/>
  <CDA:CDATemplate xmi:id="_Bht34ABzEeSjnfOPJpFg3A" base_Class="_5_O94AByEeSjnfOPJpFg3A" templateId="2.16.840.1.113883.10.20.22.2.29" templateVersion="2014-06-09">
    <ruleId>CONF:8058</ruleId>
    <ruleId>CONF:10445</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_HrbBEABzEeSjnfOPJpFg3A" base_Generalization="_5_SoQAByEeSjnfOPJpFg3A"/>
  <CDA:CDATemplate xmi:id="_DJmw0AB1EeSLOb2O6vSPzg" base_Class="_80dMoAB0EeSLOb2O6vSPzg" templateId="2.16.840.1.113883.10.20.22.2.7" templateVersion="2014-06-09">
    <ruleId>CONF:6270</ruleId>
    <ruleId>CONF:6271</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_cd1OIAB1EeSLOb2O6vSPzg" base_Generalization="_80fo4AB0EeSLOb2O6vSPzg"/>
  <CDA:CDATemplate xmi:id="_SVwgAALoEeSBA9s7kRnaEg" base_Class="_N6wUUALoEeSBA9s7kRnaEg" templateId="2.16.840.1.113883.10.20.22.2.7.1" templateVersion="2014-06-09">
    <ruleId>CONF:7891</ruleId>
    <ruleId>CONF:10447</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_W4LiUALoEeSBA9s7kRnaEg" base_Generalization="_N6zXoALoEeSBA9s7kRnaEg"/>
  <CDA:ConstraintValidation xmi:id="_kd-XsALqEeSBA9s7kRnaEg" base_Constraint="_kd9woALqEeSBA9s7kRnaEg">
    <ruleId>CONF:8021</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_2OfUeBSVEeGGzu7fmW9pXw" base_Class="_2OfUcxSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.2.4.1">
    <ruleId>CONF:7273</ruleId>
    <ruleId>CONF:10452</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2PD8JhSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF-385</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2OfUeRSVEeGGzu7fmW9pXw">
    <ruleId>C83-[CT-119-2]</ruleId>
  </CDA:ConstraintValidation>
  <CDA:TextValue xmi:id="_2OlbARSVEeGGzu7fmW9pXw">
    <ruleId>CONF-384</ruleId>
  </CDA:TextValue>
  <CDA:CDATemplate xmi:id="_4L3_UBVfEeGQCvUGzi1kDQ" base_Class="_bRH8sBVeEeGQCvUGzi1kDQ" templateId="2.16.840.1.113883.10.20.22.2.4">
    <ruleId>CONF:7268</ruleId>
    <ruleId>CONF:10451</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_shioIBneEeGs5a462vYX5Q" base_Class="_2OrhsRSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.27">
    <ruleId>(CONF:7299</ruleId>
    <ruleId>CONF:10527</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2OxoZRSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF-413</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2OxoaRSVEeGGzu7fmW9pXw">
    <ruleId>CONF-415</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2OxobRSVEeGGzu7fmW9pXw">
    <ruleId>CONF-417</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2OxocBSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF-419</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2O3u4hSVEeGGzu7fmW9pXw">
    <ruleId>CONF-420</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2O3u5RSVEeGGzu7fmW9pXw">
    <ruleId>CONF-421</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2OxoQBSVEeGGzu7fmW9pXw"/>
  <CDA:CDATemplate xmi:id="_vIk70BneEeGs5a462vYX5Q" base_Class="_2OlbCRSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.4.26">
    <ruleId>CONF:7281</ruleId>
    <ruleId>CONF:10528</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2O91hRSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF-398</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2O91iRSVEeGGzu7fmW9pXw">
    <ruleId>CONF-400</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2O91jRSVEeGGzu7fmW9pXw" severity="WARNING">
    <ruleId>CONF-401</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2O91kBSVEeGGzu7fmW9pXw">
    <ruleId>CONF-402</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2O91lBSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-403</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2O91mBSVEeGGzu7fmW9pXw" severity="INFO">
    <ruleId>CONF-404</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2O91nxSVEeGGzu7fmW9pXw">
    <ruleId>CONF-387</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_2OrhoBSVEeGGzu7fmW9pXw">
    <ruleId>6.3.4.21.3</ruleId>
  </CDA:ConstraintValidation>
  <CDA:TextValue xmi:id="__bdqYBwhEeG_RY8fzJjtMw"/>
  <CDA:PropertyValidation xmi:id="_BKszYBwiEeG_RY8fzJjtMw" severity="WARNING">
    <ruleId>CONF:7271</ruleId>
    <ruleId>CONF:7272</ruleId>
  </CDA:PropertyValidation>
  <CDA:ConstraintValidation xmi:id="_hH31AOJvEeG3cO7ebC3QuA" severity="WARNING" base_Constraint="_X1YV8OJvEeG3cO7ebC3QuA">
    <ruleId>CONF:15943</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_mlpsUOJvEeG3cO7ebC3QuA" severity="WARNING" base_Constraint="_acAZ8OJvEeG3cO7ebC3QuA">
    <ruleId>CONF:15944</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_pIQzAOJvEeG3cO7ebC3QuA" base_Constraint="_cfXY0OJvEeG3cO7ebC3QuA">
    <ruleId>CONF:15945</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="__AT6wL86EeOS5KuvmCHHew" base_Class="_4iF6IL86EeOS5KuvmCHHew" templateId="2.16.840.1.113883.10.20.22.4.79" templateVersion="2014-06-09">
    <ruleId>CONF:14871</ruleId>
    <ruleId>CONF:14872</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_JY_l0L87EeOS5KuvmCHHew" base_Generalization="_4iIWYL86EeOS5KuvmCHHew"/>
  <CDA:CDATemplate xmi:id="_D6_icPM4EeOUvapeh9bVvQ" base_Class="__zeTcPM3EeOUvapeh9bVvQ" templateId="2.16.840.1.113883.10.20.22.4.27" templateVersion="2014-06-09">
    <ruleId>CONF:7299</ruleId>
    <ruleId>CONF:10527</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_NJM-cPM4EeOUvapeh9bVvQ" base_Generalization="__ze6gPM3EeOUvapeh9bVvQ"/>
  <CDA:CDATemplate xmi:id="_hsMpkPV2EeONioZkBKP8eQ" base_Class="_dDupoPV2EeONioZkBKP8eQ" templateId="2.16.840.1.113883.10.20.22.4.26" templateVersion="2014-06-09">
    <ruleId>CONF:7281</ruleId>
    <ruleId>CONF:10528</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_tTeOsPV2EeONioZkBKP8eQ" base_Generalization="_dDxF4PV2EeONioZkBKP8eQ"/>
  <CDA:CDATemplate xmi:id="_L4h0cAFUEeSmasYc71ZgMQ" base_Class="_8LkzYAFTEeSmasYc71ZgMQ" templateId="2.16.840.1.113883.10.20.22.2.4" templateVersion="2014-06-09">
    <ruleId>CONF:7268</ruleId>
    <ruleId>CONF:10451</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_43ldoAFUEeSmasYc71ZgMQ" base_Generalization="_8LnPoAFTEeSmasYc71ZgMQ"/>
  <CDA:CDATemplate xmi:id="_G02AkALzEeSM0Jd2D1FgKw" base_Class="_D3010ALzEeSM0Jd2D1FgKw" templateId="2.16.840.1.113883.10.20.22.2.4.1" templateVersion="2014-06-09">
    <ruleId>CONF:7273</ruleId>
    <ruleId>CONF:10452</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_X5hCgALzEeSM0Jd2D1FgKw" base_Generalization="_D33SEALzEeSM0Jd2D1FgKw"/>
  <CDA:CDATemplate xmi:id="_2Pxt8xSVEeGGzu7fmW9pXw" base_Class="_2Pxt6xSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.2.5" assigningAuthorityName="HL7">
    <ruleId>CONF:10457</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_ZHedIBnTEeGs5a462vYX5Q" base_Class="_2Pxt0hSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.2.10" assigningAuthorityName="HL7">
    <ruleId>CONF:10465</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_2Pxt3RSVEeGGzu7fmW9pXw" severity="WARNING"/>
  <CDA:CDATemplate xmi:id="_TYymkBnUEeGs5a462vYX5Q" base_Class="_2RqkMBSVEeGGzu7fmW9pXw" templateId="1.3.6.1.4.1.19376.1.5.3.1.3.18">
    <ruleId>CONF:10469</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_gliW4Ob3EeGINOJ_SD9_dA" base_Class="_4YgVsOZbEeGINOJ_SD9_dA" templateId="2.16.840.1.113883.10.20.22.4.77">
    <ruleId>CONF:14728</ruleId>
    <ruleId>CONF:14729</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_PMNZ8Ob_EeGINOJ_SD9_dA" base_Class="_7c4ssOZbEeGINOJ_SD9_dA" templateId="2.16.840.1.113883.10.20.22.4.76">
    <ruleId>CONF:14707</ruleId>
    <ruleId>CONF:14708</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_VBPo4Jp8EeOK6dzbL4VoTA" base_Class="_94MpsJp7EeOK6dzbL4VoTA" templateId="2.16.840.1.113883.10.20.22.4.133">
    <ruleId>CONF:29928</ruleId>
    <ruleId>CONF:29929</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_XjgNcJqAEeOK6dzbL4VoTA" base_Class="_09uFMJp_EeOK6dzbL4VoTA" templateId="2.16.840.1.113883.10.20.22.4.114">
    <ruleId>CONF:29473</ruleId>
    <ruleId>CONF:29474</ruleId>
  </CDA:CDATemplate>
  <CDA:PropertyValidation xmi:id="_UhUHcJqDEeOK6dzbL4VoTA" severity="WARNING"/>
  <CDA:ValueSetConstraint xmi:id="_5DBe8JqFEeOK6dzbL4VoTA" severity="WARNING">
    <reference href="../../org.openhealthtools.mdht.uml.cda.consol2.model/model/consol-vocab.uml#_2H3vABSVEeGGzu7fmW9pXw"/>
    <ruleId>CONF:29488</ruleId>
  </CDA:ValueSetConstraint>
  <CDA:CDATemplate xmi:id="_Mci5IJ2LEeORR8_YW0n_jQ" base_Class="_CDn9gJ2LEeORR8_YW0n_jQ" templateId="2.16.840.1.113883.10.20.22.2.62">
    <ruleId>CONF:29899</ruleId>
    <ruleId>CONF:29901</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_CtZHYP4vEeObaveuCI77uA" base_Class="_-nZiYP4uEeObaveuCI77uA" templateId="2.16.840.1.113883.10.20.2.10" templateVersion="2014-06-09">
    <ruleId>CONF:7806</ruleId>
    <ruleId>CONF:10465</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_S90o8P4vEeObaveuCI77uA" base_Generalization="_-nb-oP4uEeObaveuCI77uA"/>
  <CDA:CDATemplate xmi:id="_2sh74IC3EeS108flGLVEBA" base_Class="_YYgjwIC3EeS108flGLVEBA" templateId="2.16.840.1.113883.10.20.22.4.76" templateVersion="2014-06-09">
    <ruleId>CONF:1098-14707</ruleId>
    <ruleId>CONF:1098-14708</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_dWmY8IC4EeS108flGLVEBA" base_Generalization="_YZLSIIC3EeS108flGLVEBA"/>
  <CDA:CDATemplate xmi:id="_yJUwEBkaEeGs5a462vYX5Q" base_Class="_2Uz-4xSVEeGGzu7fmW9pXw" templateId="1.3.6.1.4.1.19376.1.5.3.1.3.33">
    <ruleId>CONF:10455</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_lhObMCUPEeGiOPpZVnfEJA" base_Class="_hD-z0CUPEeGiOPpZVnfEJA" templateId="2.16.840.1.113883.10.20.22.4.35" assigningAuthorityName="HL7">
    <ruleId>CONF:16760</ruleId>
    <ruleId>CONF:16761</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_55YpcBnSEeGs5a462vYX5Q" base_Class="_2RqkOxSVEeGGzu7fmW9pXw" templateId="1.3.6.1.4.1.19376.1.5.3.1.3.5" assigningAuthorityName="HL7">
    <ruleId>CONF:10459</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_OJL6kCULEeGiOPpZVnfEJA" base_Class="_KtwVgCULEeGiOPpZVnfEJA" templateId="2.16.840.1.113883.10.20.22.4.33" assigningAuthorityName="HL7">
    <ruleId>CONF:16764</ruleId>
    <ruleId>CONF:16765</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_41cG4BnXEeGs5a462vYX5Q" base_Class="_2PidURSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.2.24" assigningAuthorityName="HL7">
    <ruleId>CONF:7979</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_onB14CUMEeGiOPpZVnfEJA" base_Class="_lBergCUMEeGiOPpZVnfEJA" templateId="2.16.840.1.113883.10.20.22.2.41" assigningAuthorityName="HL7">
    <ruleId>CONF:10395</ruleId>
  </CDA:CDATemplate>
  <CDA:ClassValidation xmi:id="_fQfngCUQEeGiOPpZVnfEJA" base_Class="_TytVkCUQEeGiOPpZVnfEJA">
    <ruleId>CONF:10397</ruleId>
  </CDA:ClassValidation>
  <CDA:CDATemplate xmi:id="_gKw3YCUQEeGiOPpZVnfEJA" base_Class="_TytVkCUQEeGiOPpZVnfEJA" templateId="2.16.840.1.113883.10.20.22.2.11.1" assigningAuthorityName="HL7"/>
  <CDA:CDATemplate xmi:id="__7eHsBnSEeGs5a462vYX5Q" base_Class="_2Poj7RSVEeGGzu7fmW9pXw" templateId="2.16.840.1.113883.10.20.22.2.11" assigningAuthorityName="HL7">
    <ruleId>CONF:10396</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_Z5_VgCUTEeGiOPpZVnfEJA" base_Class="_WikGsCUTEeGiOPpZVnfEJA" templateId="1.3.6.1.4.1.19376.1.5.3.1.3.26" assigningAuthorityName="HL7">
    <ruleId>CONF:10460</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_6g_c4CUTEeGiOPpZVnfEJA" base_Class="_38AXoCUTEeGiOPpZVnfEJA" templateId="2.16.840.1.113883.10.20.22.2.16" assigningAuthorityName="HL7">
    <ruleId>CONF:10398</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_WwJuIIz8EeOoMZgUoTghIg" base_Class="_POfwAIz7EeOoMZgUoTghIg" templateId="2.16.840.1.113883.10.20.22.4.141">
    <ruleId>CONF:30834</ruleId>
    <ruleId>CONF:30835</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_nwaUkI6FEeOB0eBUISUB4Q" base_Class="_ihaWkI55EeOB0eBUISUB4Q" templateId="2.16.840.1.113883.10.20.22.4.144">
    <ruleId>CONF:31221</ruleId>
    <ruleId>CONF:31222</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_KNWesJ2AEeORR8_YW0n_jQ" base_Class="_EHgh0J2AEeORR8_YW0n_jQ" templateId="2.16.840.1.113883.10.20.22.2.61">
    <ruleId>CONF:29578</ruleId>
    <ruleId>CONF:29579</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_DU_AAMykEeO93sHu8pHB2g" base_Class="_EIeu8MyjEeO93sHu8pHB2g" templateId="2.16.840.1.113883.10.20.22.4.35" templateVersion="2014-06-09">
    <ruleId>CONF:16760</ruleId>
    <ruleId>CONF:16761</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_UCOZYMykEeO93sHu8pHB2g" base_Generalization="_EIhLMMyjEeO93sHu8pHB2g"/>
  <CDA:CDATemplate xmi:id="_ex9owOEMEeOmBMTtnrPqww" base_Class="_Trd1cOEMEeOmBMTtnrPqww" templateId="2.16.840.1.113883.10.20.22.4.33" templateVersion="2014-06-09">
    <ruleId>CONF:16764</ruleId>
    <ruleId>CONF:16765</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_oGRswOEMEeOmBMTtnrPqww" base_Generalization="_Trd1ceEMEeOmBMTtnrPqww"/>
  <CDA:CDATemplate xmi:id="_u9a4wPytEeOmn53IDV99zw" base_Class="_jfuGYPytEeOmn53IDV99zw" templateId="2.16.840.1.113883.10.20.22.2.24" templateVersion="2014-06-09">
    <ruleId>CONF:7979</ruleId>
    <ruleId>CONF:10394</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_FiUpEPyuEeOmn53IDV99zw" base_Generalization="_jfv7kPytEeOmn53IDV99zw"/>
  <CDA:CDATemplate xmi:id="_JxnhwPyzEeOfAK77IvEBUw" base_Class="_HlfBYPyzEeOfAK77IvEBUw" templateId="2.16.840.1.113883.10.20.22.2.11" templateVersion="2014-06-09">
    <ruleId>CONF:7816</ruleId>
    <ruleId>CONF:10396</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_Wmtk4PyzEeOfAK77IvEBUw" base_Generalization="_HlhdoPyzEeOfAK77IvEBUw"/>
  <CDA:CDATemplate xmi:id="_Pcn8gAI0EeSRkrs1G7P_XQ" base_Class="_Jt0moAI0EeSRkrs1G7P_XQ" templateId="2.16.840.1.113883.10.20.22.2.11.1" templateVersion="2014-06-09">
    <ruleId>CONF:7822</ruleId>
    <ruleId>CONF:10397</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_Y9iSEAI0EeSRkrs1G7P_XQ" base_Generalization="_Jt3p8AI0EeSRkrs1G7P_XQ"/>
  <CDA:CDATemplate xmi:id="_mE0V4DV1EeGaW4kr-GbV8Q" base_Class="_WPTWEDVyEeGaW4kr-GbV8Q" templateId="2.16.840.1.113883.10.20.6.1.1">
    <ruleId>CONF:8525</ruleId>
    <ruleId>CONF:10454</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_psFXgDV1EeGaW4kr-GbV8Q" base_Class="_ZcC-4DVyEeGaW4kr-GbV8Q" templateId="2.16.840.1.113883.10.20.6.1.2">
    <ruleId>CONF:8531</ruleId>
    <ruleId>CONF:10456</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_On_EEEVEEeGAh_iQGJvI5w" base_Class="_H1UdcEVEEeGAh_iQGJvI5w" templateId="2.16.840.1.113883.10.20.6.2.1">
    <ruleId>CONF:8423</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_s48Y0Eb_EeGp67IkyTw1fg" base_Class="_pmiz8Eb_EeGp67IkyTw1fg" templateId="2.16.840.1.113883.10.20.6.2.13">
    <ruleId>CONF:15523</ruleId>
    <ruleId>CONF:15524</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_LY8_gEb1EeGp67IkyTw1fg" base_Class="_H_izsEb1EeGp67IkyTw1fg" templateId="2.16.840.1.113883.10.20.6.2.2">
    <ruleId>CONF:8440</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_fLTHoEcAEeGp67IkyTw1fg" base_Class="_crHC0EcAEeGp67IkyTw1fg" templateId="2.16.840.1.113883.10.20.6.2.5">
    <ruleId>CONF:9200</ruleId>
    <ruleId>CONF:10530</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_s-z3oEb8EeGp67IkyTw1fg" base_Class="_J-F8UEb7EeGp67IkyTw1fg" templateId="2.16.840.1.113883.10.20.6.2.9">
    <ruleId>CONF:9266</ruleId>
    <ruleId>CONF:10531</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_SaY2YEb_EeGp67IkyTw1fg" base_Class="_Px2t4Eb_EeGp67IkyTw1fg" templateId="2.16.840.1.113883.10.20.6.2.14">
    <ruleId>CONF:9319</ruleId>
    <ruleId>CONF:10532</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_3twtoEb8EeGp67IkyTw1fg" base_Class="_1Zyf4Eb8EeGp67IkyTw1fg" templateId="2.16.840.1.113883.10.20.6.2.10"/>
  <CDA:CDATemplate xmi:id="_O_B8EEb6EeGp67IkyTw1fg" base_Class="_N2wscEb6EeGp67IkyTw1fg" templateId="2.16.840.1.113883.10.20.22.4.63">
    <ruleId>CONF:10918</ruleId>
    <ruleId>CONF:10919</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_AKJ9EEb7EeGp67IkyTw1fg" base_Class="_9o7WcEb6EeGp67IkyTw1fg" templateId="2.16.840.1.113883.10.20.6.2.8"/>
  <CDA:CDATemplate xmi:id="_xF17QEb4EeGp67IkyTw1fg" base_Class="_vjf-wEb4EeGp67IkyTw1fg" templateId="2.16.840.1.113883.10.20.6.2.6">
    <ruleId>CONF:10533</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_AByucEb_EeGp67IkyTw1fg" base_Class="_9xjKIEb-EeGp67IkyTw1fg" templateId="2.16.840.1.113883.10.20.6.2.12">
    <ruleId>CONF:9290</ruleId>
    <ruleId>CONF:10534</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="__So0UEb8EeGp67IkyTw1fg" base_Class="_9Yv6gEb8EeGp67IkyTw1fg" templateId="2.16.840.1.113883.10.20.6.2.11"/>
  <CDA:ConstraintValidation xmi:id="_mJkAUErcEeGJpZWiuxRVIw" base_Constraint="_d5wtUErcEeGJpZWiuxRVIw">
    <ruleId>CONF:9213</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_I9R24ErdEeGJpZWiuxRVIw" base_Constraint="_Be9EIErdEeGJpZWiuxRVIw">
    <ruleId>CONF:9211</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_6kdJoFwTEeG0y_7i0ygc4g" base_Constraint="_2p6msFwTEeG0y_7i0ygc4g">
    <ruleId>CONF:9225</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_HKW6MFwUEeG0y_7i0ygc4g" base_Constraint="_EbZZkFwUEeG0y_7i0ygc4g">
    <ruleId>CONF:9226</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_fPDpUFwUEeG0y_7i0ygc4g" base_Constraint="_arA2YFwUEeG0y_7i0ygc4g">
    <ruleId>CONF:9229</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_i7T4oFwUEeG0y_7i0ygc4g" base_Constraint="_hmNt8FwUEeG0y_7i0ygc4g">
    <ruleId>CONF:9230</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_qEMm4FwUEeG0y_7i0ygc4g" base_Constraint="_oCw6oFwUEeG0y_7i0ygc4g">
    <ruleId>CONF:9231</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_u1LpoFwUEeG0y_7i0ygc4g" base_Constraint="_sPmHcFwUEeG0y_7i0ygc4g">
    <ruleId>CONF:9232</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_7pnwAFwVEeG0y_7i0ygc4g" base_Constraint="_vIPrMErfEeGJpZWiuxRVIw">
    <ruleId>CONF:9251</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_90IfwFwVEeG0y_7i0ygc4g" base_Constraint="_0eEgYErfEeGJpZWiuxRVIw">
    <ruleId>CONF:9252</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="__Xz5AFwVEeG0y_7i0ygc4g" base_Constraint="_5IsccErfEeGJpZWiuxRVIw">
    <ruleId>CONF:9253</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_ObkMEFwWEeG0y_7i0ygc4g" base_Constraint="_H4BmkFwWEeG0y_7i0ygc4g">
    <ruleId>CONF:9247</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_SjCXwFwWEeG0y_7i0ygc4g" base_Constraint="_QcZbYFwWEeG0y_7i0ygc4g">
    <ruleId>CONF:9248</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_YcCLcFwWEeG0y_7i0ygc4g" base_Constraint="_VYPqUFwWEeG0y_7i0ygc4g">
    <ruleId>CONF:9249</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_0JlwQFwZEeG0y_7i0ygc4g" severity="WARNING" base_Constraint="_x-fKoFwZEeG0y_7i0ygc4g">
    <ruleId>CONF:9268</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_a1ea0OZJEeGINOJ_SD9_dA" base_Constraint="_Rqt7cOZJEeGINOJ_SD9_dA">
    <ruleId>CONF:17173</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_MwKsAOZUEeGINOJ_SD9_dA" severity="WARNING" base_Constraint="_BCpU8OZUEeGINOJ_SD9_dA">
    <ruleId>CONF:9322</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_NlubAOZUEeGINOJ_SD9_dA" severity="WARNING" base_Constraint="_ChkKAOZUEeGINOJ_SD9_dA">
    <ruleId>CONF:9323</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_f7LdcOZWEeGINOJ_SD9_dA" severity="WARNING" base_Constraint="_USs-cOZWEeGINOJ_SD9_dA">
    <ruleId>CONF:15995</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_iX1tIOZWEeGINOJ_SD9_dA" severity="WARNING" base_Constraint="_as4MkOZWEeGINOJ_SD9_dA">
    <ruleId>CONF:15996</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_kmEfQOZWEeGINOJ_SD9_dA" base_Constraint="_cGcnkOZWEeGINOJ_SD9_dA">
    <ruleId>CONF:15997</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_s5PSgOZaEeGINOJ_SD9_dA" severity="WARNING" base_Constraint="_k0_vQOZaEeGINOJ_SD9_dA">
    <ruleId>CONF:15938</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_uOLsMOZaEeGINOJ_SD9_dA" severity="WARNING" base_Constraint="_l-ML8OZaEeGINOJ_SD9_dA">
    <ruleId>CONF:15939</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_wRtDIOZaEeGINOJ_SD9_dA" base_Constraint="_nVEfUOZaEeGINOJ_SD9_dA">
    <ruleId>CONF:15940</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_U1uQkOaHEeOmzetP5oaH3A" base_Class="_Ao2HkOaHEeOmzetP5oaH3A" templateId="2.16.840.1.113883.10.20.6.2" templateVersion="2014-06-09">
    <ruleId>CONF:16072</ruleId>
    <ruleId>CONF:16073</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_oFKg8OaHEeOmzetP5oaH3A" base_Generalization="_Ao2HkeaHEeOmzetP5oaH3A"/>
  <CDA:CDATemplate xmi:id="_CclwkIe-EeSBauRYePLghA" base_Class="_zKKIUIe9EeSBauRYePLghA" templateId="2.16.840.1.113883.10.20.6.2.1" templateVersion="2014-06-09">
    <ruleId>CONF:1098-30773</ruleId>
    <ruleId>CONF:1098-30774</ruleId>
    <ruleId>CONF:1098-32564</ruleId>
  </CDA:CDATemplate>
  <CDA:ConformsTo xmi:id="_QTsDQIe-EeSBauRYePLghA" base_Generalization="_zKKvYIe9EeSBauRYePLghA"/>
  <CDA:ConstraintValidation xmi:id="_GoNVEofBEeSBauRYePLghA" base_Constraint="_GoNVEIfBEeSBauRYePLghA">
    <ruleId>CONF:8425</ruleId>
    <ruleId>CONF:10078</ruleId>
    <ruleId>R2.0=CONF:1098-8425</ruleId>
    <ruleId>R2.0=CONF:81-10078</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_Nct5UofCEeSBauRYePLghA" severity="WARNING" base_Constraint="_Nct5UIfCEeSBauRYePLghA">
    <ruleId>CONF:8425</ruleId>
    <ruleId>CONF:10079</ruleId>
    <ruleId>R2.0=CONF:1098-8425</ruleId>
    <ruleId>R2.0=CONF:81-10079</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_8bhMsofCEeSBauRYePLghA" severity="INFO" base_Constraint="_8bhMsIfCEeSBauRYePLghA">
    <ruleId>CONF:8425</ruleId>
    <ruleId>CONF:10080</ruleId>
    <ruleId>R2.0=CONF:1098-8425</ruleId>
    <ruleId>R2.0=CONF:81-10080</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_f6dxkIfDEeSBauRYePLghA" severity="WARNING" base_Constraint="_f6dKgIfDEeSBauRYePLghA">
    <ruleId>CONF:8425</ruleId>
    <ruleId>CONF:10081</ruleId>
    <ruleId>R2.0=CONF:1098-8425</ruleId>
    <ruleId>R2.0=CONF:81-10081</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_SABeQOZjEeGINOJ_SD9_dA" base_Class="_jfoCUOZbEeGINOJ_SD9_dA" templateId="2.16.840.1.113883.10.20.22.4.75">
    <ruleId>CONF:14375</ruleId>
    <ruleId>CONF:14376</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_hRKtEOZjEeGINOJ_SD9_dA" severity="WARNING" base_Constraint="_ckydgOZjEeGINOJ_SD9_dA">
    <ruleId>CONF:14697</ruleId>
    <ruleId>CONF:14698</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_tDnHwOZgEeGINOJ_SD9_dA" base_Class="_gkBM0OZbEeGINOJ_SD9_dA" templateId="2.16.840.1.113883.10.20.22.4.74">
    <ruleId>CONF:14255</ruleId>
    <ruleId>CONF:14256</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_BlR1AuZhEeGINOJ_SD9_dA" severity="WARNING" base_Constraint="_BlR1AOZhEeGINOJ_SD9_dA">
    <ruleId>CONF:15924</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_Cs16AuZhEeGINOJ_SD9_dA" base_Constraint="_Cs16AOZhEeGINOJ_SD9_dA">
    <ruleId>CONF:15926</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_ps-GoOZhEeGINOJ_SD9_dA" severity="WARNING" base_Constraint="_cjM0AOZhEeGINOJ_SD9_dA">
    <ruleId>CONF:14271</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_rHy4IOZcEeGINOJ_SD9_dA" base_Class="_dXKPQOZbEeGINOJ_SD9_dA" templateId="2.16.840.1.113883.10.20.22.4.73">
    <ruleId>CONF:14346</ruleId>
    <ruleId>CONF:14347</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_daqkUuZdEeGINOJ_SD9_dA" severity="WARNING" base_Constraint="_daqkUOZdEeGINOJ_SD9_dA">
    <ruleId>CONF:14342</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_gxDRUuZdEeGINOJ_SD9_dA" base_Constraint="_gxDRUOZdEeGINOJ_SD9_dA">
    <ruleId>CONF:14343</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_jpFOY-ZdEeGINOJ_SD9_dA" base_Constraint="_jpFOYOZdEeGINOJ_SD9_dA">
    <ruleId>CONF:14325</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_kUOdIOZdEeGINOJ_SD9_dA" severity="WARNING" base_Constraint="_kUEsIOZdEeGINOJ_SD9_dA">
    <ruleId>CONF:14326</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_HWZw0OY6EeGINOJ_SD9_dA" base_Class="_1ZKPgOY2EeGINOJ_SD9_dA" templateId="2.16.840.1.113883.10.20.22.4.86">
    <ruleId>CONF:16722</ruleId>
    <ruleId>CONF:16723</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_YLYw8OY6EeGINOJ_SD9_dA" base_Constraint="_W_NRsOY6EeGINOJ_SD9_dA">
    <ruleId>CONF:16738</ruleId>
    <ruleId>CONF:14458</ruleId>
    <ruleId>CONF:16739</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_1IzigOY6EeGINOJ_SD9_dA" severity="INFO" base_Constraint="_u6PHcOY6EeGINOJ_SD9_dA">
    <ruleId>CONF:14639</ruleId>
    <ruleId>CONF:16755</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_iPVmUOYzEeGINOJ_SD9_dA" base_Class="_Zi33YOYxEeGINOJ_SD9_dA" templateId="2.16.840.1.113883.10.20.22.4.69">
    <ruleId>CONF:14436</ruleId>
    <ruleId>CONF:14437</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_uIDgwOYzEeGINOJ_SD9_dA" severity="WARNING" base_Constraint="_rnS0MOYzEeGINOJ_SD9_dA">
    <ruleId>CONF:14440</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_aGxHQOY0EeGINOJ_SD9_dA" severity="INFO" base_Constraint="_WfZX8OY0EeGINOJ_SD9_dA">
    <ruleId>CONF:14888</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_OWVlIOY_EeGINOJ_SD9_dA" base_Class="__pNCUOY-EeGINOJ_SD9_dA" templateId="2.16.840.1.113883.10.20.22.4.72">
    <ruleId>CONF:14221</ruleId>
    <ruleId>CONF:14222</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_r4EksOY_EeGINOJ_SD9_dA" base_Constraint="_kF-hYOY_EeGINOJ_SD9_dA">
    <ruleId>CONF:14600</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_JguTIIoBEeOoMZgUoTghIg" base_Class="_Y_oGkIoAEeOoMZgUoTghIg" templateId="2.16.840.1.113883.10.20.22.4.126">
    <ruleId>CONF:29248</ruleId>
    <ruleId>CONF:29249</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_PtmfUI0mEeOB0eBUISUB4Q" base_Class="_-lJmEI0kEeOB0eBUISUB4Q" templateId="2.16.840.1.113883.10.20.22.4.125">
    <ruleId>CONF:29186</ruleId>
    <ruleId>CONF:29187</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_PYeNIJm5EeOLJeQez13EkQ" base_Class="_kyeGAJm4EeOLJeQez13EkQ" templateId="2.16.840.1.113883.10.20.22.4.127">
    <ruleId>CONF:27959</ruleId>
    <ruleId>CONF:27960</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_AIPvkJ2DEeORR8_YW0n_jQ" base_Class="_4tfOMJ2CEeORR8_YW0n_jQ" templateId="2.16.840.1.113883.10.20.22.2.56">
    <ruleId>CONF:28293</ruleId>
    <ruleId>CONF:28294</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_E6468LkpEeODDJAC5t5vpw" base_Class="_6LYrULkoEeODDJAC5t5vpw" templateId="2.16.840.1.113883.10.20.22.4.75" templateVersion="2014-06-09">
    <ruleId>CONF:14375</ruleId>
    <ruleId>CONF:14376</ruleId>
  </CDA:CDATemplate>
  <CDA:CDATemplate xmi:id="_hOCmgPiuEeOXlK95I8tUew" base_Class="_ze150PitEeOXlK95I8tUew" templateId="2.16.840.1.113883.10.20.22.4.74" templateVersion="2014-06-09">
    <ruleId>CONF:14255</ruleId>
    <ruleId>CONF:14256</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_3zrgMvi6EeOXlK95I8tUew" severity="WARNING" base_Constraint="_3zrgMPi6EeOXlK95I8tUew">
    <ruleId>CONF:14271</ruleId>
  </CDA:ConstraintValidation>
  <Ecore:EPackage xmi:id="_ujTdgIokEeSkH97cUQxLGA" base_Package="_2B30sBSVEeGGzu7fmW9pXw" packageName="consol" nsPrefix="consol" nsURI="http://www.openhealthtools.org/mdht/uml/cda/consol" basePackage="org.openhealthtools.mdht.uml.cda" prefix="Consol">
    <annotation>http://www.openhealthtools.org/mdht/uml initializers='org.openhealthtools.mdht.uml.cda.consol'</annotation>
  </Ecore:EPackage>
  <Ecore:EClass xmi:id="_ujiHAIokEeSkH97cUQxLGA" base_Class="_2DNRcBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='GeneralHeaderConstraintsTemplateId GeneralHeaderConstraintsTypeIdRoot GeneralHeaderConstraintsTypeIdExtension GeneralHeaderConstraintsSetIdVersionNumber GeneralHeaderConstraintsVersionNumberSetId GeneralHeaderConstraintsRealmCode GeneralHeaderConstraintsTypeId GeneralHeaderConstraintsId GeneralHeaderConstraintsCode GeneralHeaderConstraintsTitle GeneralHeaderConstraintsEffectiveTime GeneralHeaderConstraintsConfidentialityCodeP GeneralHeaderConstraintsLanguageCode GeneralHeaderConstraintsAuthor GeneralHeaderConstraintsCustodian GeneralHeaderConstraintsRecordTarget GeneralHeaderConstraintsRecordTargetPatientRoleGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet GeneralHeaderConstraintsRecordTargetPatientRoleGeneralHeaderConstraintsUSRealmAddressCity GeneralHeaderConstraintsRecordTargetPatientRoleGeneralHeaderConstraintsUSRealmAddressStreetAddressLine GeneralHeaderConstraintsRecordTargetPatientRoleGeneralHeaderConstraintsUSRealmAddressUse GeneralHeaderConstraintsRecordTargetPatientRolePatientTSBirthTimePreciseToYear GeneralHeaderConstraintsRecordTargetPatientRolePatientTSValue GeneralHeaderConstraintsRecordTargetPatientRolePatientGeneralHeaderConstraintsUSRealmPatientNameUSRealmPatientNameMixedContent GeneralHeaderConstraintsRecordTargetPatientRolePatientGeneralHeaderConstraintsUSRealmPatientNameFamily GeneralHeaderConstraintsRecordTargetPatientRolePatientGeneralHeaderConstraintsUSRealmPatientNameGiven GeneralHeaderConstraintsRecordTargetPatientRolePatientGeneralHeaderConstraintsUSRealmPatientNameUse GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianGeneralHeaderConstraintsUSRealmAddressCity GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianGeneralHeaderConstraintsUSRealmAddressStreetAddressLine GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianGeneralHeaderConstraintsUSRealmAddressUse GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianPersonName GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianCodeFromPersonalRelationshipOrResponsibleParty GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianGuardianPerson GeneralHeaderConstraintsRecordTargetPatientRolePatientBirthplacePlaceAddr GeneralHeaderConstraintsRecordTargetPatientRolePatientBirthplacePlace GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationProficiencyLevelCode GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationModeCode GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationLanguageCode GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationLanguageCodeP GeneralHeaderConstraintsRecordTargetPatientRolePatientIfSdtcEnforceRaceCode GeneralHeaderConstraintsRecordTargetPatientRolePatientAdministrativeGenderCode GeneralHeaderConstraintsRecordTargetPatientRolePatientBirthTime GeneralHeaderConstraintsRecordTargetPatientRolePatientEthnicGroupCode GeneralHeaderConstraintsRecordTargetPatientRolePatientMaritalStatusCode GeneralHeaderConstraintsRecordTargetPatientRolePatientName GeneralHeaderConstraintsRecordTargetPatientRolePatientRaceCode GeneralHeaderConstraintsRecordTargetPatientRolePatientReligiousAffiliationCode GeneralHeaderConstraintsRecordTargetPatientRolePatientSDTCRaceCode GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationGeneralHeaderConstraintsUSRealmAddressCity GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationGeneralHeaderConstraintsUSRealmAddressStreetAddressLine GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationGeneralHeaderConstraintsUSRealmAddressUse GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationAddr GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationId GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationName GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationTelecom GeneralHeaderConstraintsRecordTargetPatientRoleAddr GeneralHeaderConstraintsRecordTargetPatientRoleId GeneralHeaderConstraintsRecordTargetPatientRoleTelecom GeneralHeaderConstraintsRecordTargetPatientRolePatient GeneralHeaderConstraintsRecordTargetPatientRole GeneralHeaderConstraintsComponentOfEncompassingEncounterEffectiveTime GeneralHeaderConstraintsComponentOfEncompassingEncounterId GeneralHeaderConstraintsComponentOfEncompassingEncounter GeneralHeaderConstraintsAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet GeneralHeaderConstraintsAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressCity GeneralHeaderConstraintsAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressStreetAddressLine GeneralHeaderConstraintsAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressUse GeneralHeaderConstraintsAuthorAssignedAuthorAuthoringDeviceManufacturerModelName GeneralHeaderConstraintsAuthorAssignedAuthorAuthoringDeviceSoftwareName GeneralHeaderConstraintsAuthorAssignedAuthorPersonName GeneralHeaderConstraintsAuthorAssignedAuthorHasOneAssignedPersonOrOneAssignedAuthoringDevice GeneralHeaderConstraintsAuthorAssignedAuthorAddr GeneralHeaderConstraintsAuthorAssignedAuthorId GeneralHeaderConstraintsAuthorAssignedAuthorTelecom GeneralHeaderConstraintsAuthorTime GeneralHeaderConstraintsAuthorAssignedAuthor GeneralHeaderConstraintsDataEntererAssignedEntityGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet GeneralHeaderConstraintsDataEntererAssignedEntityGeneralHeaderConstraintsUSRealmAddressCity GeneralHeaderConstraintsDataEntererAssignedEntityGeneralHeaderConstraintsUSRealmAddressStreetAddressLine GeneralHeaderConstraintsDataEntererAssignedEntityGeneralHeaderConstraintsUSRealmAddressUse GeneralHeaderConstraintsDataEntererAssignedEntityPersonName GeneralHeaderConstraintsDataEntererAssignedEntityAddr GeneralHeaderConstraintsDataEntererAssignedEntityId GeneralHeaderConstraintsDataEntererAssignedEntityTelecom GeneralHeaderConstraintsDataEntererAssignedEntityAssignedPerson GeneralHeaderConstraintsDataEntererAssignedEntity GeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet GeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationGeneralHeaderConstraintsUSRealmAddressCity GeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationGeneralHeaderConstraintsUSRealmAddressStreetAddressLine GeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationGeneralHeaderConstraintsUSRealmAddressUse GeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationAddr GeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationId GeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationName GeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationTelecom GeneralHeaderConstraintsCustodianAssignedCustodianRepresentedCustodianOrganization GeneralHeaderConstraintsCustodianAssignedCustodian GeneralHeaderConstraintsInformationRecipientIntendedRecipientPersonName GeneralHeaderConstraintsInformationRecipientIntendedRecipientOrganizationName GeneralHeaderConstraintsInformationRecipientIntendedRecipient GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressCity GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressStreetAddressLine GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressUse GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityPersonName GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityAddr GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityId GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityTelecom GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityAssignedPerson GeneralHeaderConstraintsLegalAuthenticatorTime GeneralHeaderConstraintsLegalAuthenticatorSignatureCodeP GeneralHeaderConstraintsLegalAuthenticatorSignatureCode GeneralHeaderConstraintsAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet GeneralHeaderConstraintsAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressCity GeneralHeaderConstraintsAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressStreetAddressLine GeneralHeaderConstraintsAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressUse GeneralHeaderConstraintsAuthenticatorAssignedEntityPersonName GeneralHeaderConstraintsAuthenticatorAssignedEntityAddr GeneralHeaderConstraintsAuthenticatorAssignedEntityId GeneralHeaderConstraintsAuthenticatorAssignedEntityTelecom GeneralHeaderConstraintsAuthenticatorAssignedEntityAssignedPerson GeneralHeaderConstraintsAuthenticatorTime GeneralHeaderConstraintsAuthenticatorSignatureCode GeneralHeaderConstraintsAuthenticatorAssignedEntity GeneralHeaderConstraintsInformantAssignedEntityGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet GeneralHeaderConstraintsInformantAssignedEntityGeneralHeaderConstraintsUSRealmAddressCity GeneralHeaderConstraintsInformantAssignedEntityGeneralHeaderConstraintsUSRealmAddressStreetAddressLine GeneralHeaderConstraintsInformantAssignedEntityGeneralHeaderConstraintsUSRealmAddressUse GeneralHeaderConstraintsInformantAssignedEntityPersonName GeneralHeaderConstraintsInformantAssignedEntityId GeneralHeaderConstraintsInformantAssignedEntityAssignedPerson GeneralHeaderConstraintsInformantRelatedEntityGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet GeneralHeaderConstraintsInformantRelatedEntityGeneralHeaderConstraintsUSRealmAddressCity GeneralHeaderConstraintsInformantRelatedEntityGeneralHeaderConstraintsUSRealmAddressStreetAddressLine GeneralHeaderConstraintsInformantRelatedEntityGeneralHeaderConstraintsUSRealmAddressUse GeneralHeaderConstraintsInformantRelatedEntityGeneralHeaderConstraintsInformantAssignedEntityPersonName GeneralHeaderConstraintsInformantRelatedEntityPerson GeneralHeaderConstraintsInformantHasAssignedEntityOrRelatedEntity GeneralHeaderConstraintsParticipantSupportAssociatedEntityHasAssociatedPersonOrScopingOrganization GeneralHeaderConstraintsInFulfillmentOfOrderId GeneralHeaderConstraintsInFulfillmentOfOrder GeneralHeaderConstraintsDocumentationOfServiceEventPerformer1AssignedEntityId GeneralHeaderConstraintsDocumentationOfServiceEventPerformer1TypeCode GeneralHeaderConstraintsDocumentationOfServiceEventPerformer1AssignedEntity GeneralHeaderConstraintsDocumentationOfServiceEventEffectiveTimeLow GeneralHeaderConstraintsDocumentationOfServiceEventEffectiveTime GeneralHeaderConstraintsDocumentationOfServiceEvent GeneralHeaderConstraintsAuthorizationConsentStatusCodeP GeneralHeaderConstraintsAuthorizationConsentStatusCode GeneralHeaderConstraintsAuthorizationConsent' templateId.root='2.16.840.1.113883.10.20.22.1.1' realmCode.code='US' confidentialityCode.codeSystem='2.16.840.1.113883.5.25' confidentialityCode.codeSystemName='ConfidentialityCode' constraints.validation.warning='GeneralHeaderConstraintsConfidentialityCode GeneralHeaderConstraintsLegalAuthenticator GeneralHeaderConstraintsRecordTargetPatientRoleGeneralHeaderConstraintsUSRealmAddressCountry GeneralHeaderConstraintsRecordTargetPatientRoleGeneralHeaderConstraintsUSRealmAddressPostalCode GeneralHeaderConstraintsRecordTargetPatientRoleGeneralHeaderConstraintsUSRealmAddressState GeneralHeaderConstraintsRecordTargetPatientRoleGeneralHeaderConstraintsUSRealmAddressUseP GeneralHeaderConstraintsRecordTargetPatientRoleTELUse GeneralHeaderConstraintsRecordTargetPatientRolePatientTSBirthTimePreciseToDay GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianGeneralHeaderConstraintsUSRealmAddressCountry GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianGeneralHeaderConstraintsUSRealmAddressPostalCode GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianGeneralHeaderConstraintsUSRealmAddressState GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianGeneralHeaderConstraintsUSRealmAddressUseP GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianTELUse GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianAddr GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianCode GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationProficiencyLevelCodeP GeneralHeaderConstraintsRecordTargetPatientRolePatientMaritalStatusCodeP GeneralHeaderConstraintsRecordTargetPatientRolePatientRaceCodeP GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunication GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationGeneralHeaderConstraintsUSRealmAddressCountry GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationGeneralHeaderConstraintsUSRealmAddressPostalCode GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationGeneralHeaderConstraintsUSRealmAddressState GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationGeneralHeaderConstraintsUSRealmAddressUseP GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationTELUse GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationHasNationalProviderIdentifier GeneralHeaderConstraintsAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressCountry GeneralHeaderConstraintsAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressPostalCode GeneralHeaderConstraintsAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressState GeneralHeaderConstraintsAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressUseP GeneralHeaderConstraintsAuthorAssignedAuthorTELUse GeneralHeaderConstraintsAuthorAssignedAuthorHasNationalProviderIdentifier GeneralHeaderConstraintsAuthorAssignedAuthorCodeP GeneralHeaderConstraintsAuthorAssignedAuthorCode GeneralHeaderConstraintsDataEntererAssignedEntityGeneralHeaderConstraintsUSRealmAddressCountry GeneralHeaderConstraintsDataEntererAssignedEntityGeneralHeaderConstraintsUSRealmAddressPostalCode GeneralHeaderConstraintsDataEntererAssignedEntityGeneralHeaderConstraintsUSRealmAddressState GeneralHeaderConstraintsDataEntererAssignedEntityGeneralHeaderConstraintsUSRealmAddressUseP GeneralHeaderConstraintsDataEntererAssignedEntityTELUse GeneralHeaderConstraintsDataEntererAssignedEntityHasNationalProviderIdentifier GeneralHeaderConstraintsDataEntererAssignedEntityCode GeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationGeneralHeaderConstraintsUSRealmAddressCountry GeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationGeneralHeaderConstraintsUSRealmAddressPostalCode GeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationGeneralHeaderConstraintsUSRealmAddressState GeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationGeneralHeaderConstraintsUSRealmAddressUseP GeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationTELUse GeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationHasNationalProviderIdentifier GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressCountry GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressPostalCode GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressState GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressUseP GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityTELUse GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityCode GeneralHeaderConstraintsAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressCountry GeneralHeaderConstraintsAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressPostalCode GeneralHeaderConstraintsAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressState GeneralHeaderConstraintsAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressUseP GeneralHeaderConstraintsAuthenticatorAssignedEntityTELUse GeneralHeaderConstraintsAuthenticatorAssignedEntityHasNationalProviderIdentifier GeneralHeaderConstraintsAuthenticatorAssignedEntityCode GeneralHeaderConstraintsInformantAssignedEntityGeneralHeaderConstraintsUSRealmAddressCountry GeneralHeaderConstraintsInformantAssignedEntityGeneralHeaderConstraintsUSRealmAddressPostalCode GeneralHeaderConstraintsInformantAssignedEntityGeneralHeaderConstraintsUSRealmAddressState GeneralHeaderConstraintsInformantAssignedEntityGeneralHeaderConstraintsUSRealmAddressUseP GeneralHeaderConstraintsInformantAssignedEntityHasNationalProviderIdentifier GeneralHeaderConstraintsInformantAssignedEntityAddr GeneralHeaderConstraintsInformantAssignedEntityCode GeneralHeaderConstraintsInformantRelatedEntityGeneralHeaderConstraintsUSRealmAddressCountry GeneralHeaderConstraintsInformantRelatedEntityGeneralHeaderConstraintsUSRealmAddressPostalCode GeneralHeaderConstraintsInformantRelatedEntityGeneralHeaderConstraintsUSRealmAddressState GeneralHeaderConstraintsInformantRelatedEntityGeneralHeaderConstraintsUSRealmAddressUseP GeneralHeaderConstraintsInformantRelatedEntityAddr GeneralHeaderConstraintsDocumentationOfServiceEventPerformer1AssignedEntityHasNationalProviderIdentifier GeneralHeaderConstraintsDocumentationOfServiceEventPerformer1AssignedEntityCodeP GeneralHeaderConstraintsDocumentationOfServiceEventPerformer1AssignedEntityCode GeneralHeaderConstraintsDocumentationOfServiceEventPerformer1FunctionCode GeneralHeaderConstraintsDocumentationOfServiceEventPerformer' constraints.validation.dependOn.GeneralHeaderConstraintsConfidentialityCode='GeneralHeaderConstraintsConfidentialityCodeP' constraints.validation.info='GeneralHeaderConstraintsSetId GeneralHeaderConstraintsVersionNumber GeneralHeaderConstraintsDataEnterer GeneralHeaderConstraintsInformationRecipient GeneralHeaderConstraintsAuthenticator GeneralHeaderConstraintsComponentOf GeneralHeaderConstraintsInformant GeneralHeaderConstraintsSupportParticipant GeneralHeaderConstraintsInFulfillmentOf GeneralHeaderConstraintsDocumentationOf GeneralHeaderConstraintsAuthorization GeneralHeaderConstraintsRecordTargetPatientRolePatientGeneralHeaderConstraintsUSRealmPatientNamePrefix GeneralHeaderConstraintsRecordTargetPatientRolePatientGeneralHeaderConstraintsUSRealmPatientNameSuffix GeneralHeaderConstraintsRecordTargetPatientRolePatientGeneralHeaderConstraintsUSRealmPatientNameUseP GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianTelecom GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationPreferenceInd GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationModeCodeP GeneralHeaderConstraintsRecordTargetPatientRolePatientEthnicGroupCodeP GeneralHeaderConstraintsRecordTargetPatientRolePatientReligiousAffiliationCodeP GeneralHeaderConstraintsRecordTargetPatientRolePatientSDTCRaceCodeP GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardian GeneralHeaderConstraintsRecordTargetPatientRolePatientBirthplace GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganization GeneralHeaderConstraintsDataEntererAssignedEntityCodeP GeneralHeaderConstraintsInformationRecipientIntendedRecipientInformationRecipient GeneralHeaderConstraintsInformationRecipientIntendedRecipientRecievedOrganization GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityHasNationalProviderIdentifier GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityCodeP GeneralHeaderConstraintsAuthenticatorAssignedEntityCodeP GeneralHeaderConstraintsInformantAssignedEntityCodeP GeneralHeaderConstraintsInformantAssignedEntity GeneralHeaderConstraintsInformantRelatedEntity GeneralHeaderConstraintsParticipantSupportTime GeneralHeaderConstraintsDocumentationOfServiceEventPerformer1FunctionCodeP GeneralHeaderConstraintsAuthorizationConsentCode GeneralHeaderConstraintsAuthorizationConsentId' constraints.validation.query='GeneralHeaderConstraintsRecordTargetPatientRoleGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet GeneralHeaderConstraintsRecordTargetPatientRoleGeneralHeaderConstraintsUSRealmAddressCity GeneralHeaderConstraintsRecordTargetPatientRoleGeneralHeaderConstraintsUSRealmAddressCountry GeneralHeaderConstraintsRecordTargetPatientRoleGeneralHeaderConstraintsUSRealmAddressPostalCode GeneralHeaderConstraintsRecordTargetPatientRoleGeneralHeaderConstraintsUSRealmAddressState GeneralHeaderConstraintsRecordTargetPatientRoleGeneralHeaderConstraintsUSRealmAddressStreetAddressLine GeneralHeaderConstraintsRecordTargetPatientRoleGeneralHeaderConstraintsUSRealmAddressUseP GeneralHeaderConstraintsRecordTargetPatientRoleGeneralHeaderConstraintsUSRealmAddressUse GeneralHeaderConstraintsRecordTargetPatientRoleTELUse GeneralHeaderConstraintsRecordTargetPatientRolePatientTSBirthTimePreciseToYear GeneralHeaderConstraintsRecordTargetPatientRolePatientTSBirthTimePreciseToDay GeneralHeaderConstraintsRecordTargetPatientRolePatientTSValue GeneralHeaderConstraintsRecordTargetPatientRolePatientGeneralHeaderConstraintsUSRealmPatientNameUSRealmPatientNameMixedContent GeneralHeaderConstraintsRecordTargetPatientRolePatientGeneralHeaderConstraintsUSRealmPatientNameFamily GeneralHeaderConstraintsRecordTargetPatientRolePatientGeneralHeaderConstraintsUSRealmPatientNameGiven GeneralHeaderConstraintsRecordTargetPatientRolePatientGeneralHeaderConstraintsUSRealmPatientNamePrefix GeneralHeaderConstraintsRecordTargetPatientRolePatientGeneralHeaderConstraintsUSRealmPatientNameSuffix GeneralHeaderConstraintsRecordTargetPatientRolePatientGeneralHeaderConstraintsUSRealmPatientNameUseP GeneralHeaderConstraintsRecordTargetPatientRolePatientGeneralHeaderConstraintsUSRealmPatientNameUse GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianGeneralHeaderConstraintsUSRealmAddressCity GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianGeneralHeaderConstraintsUSRealmAddressCountry GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianGeneralHeaderConstraintsUSRealmAddressPostalCode GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianGeneralHeaderConstraintsUSRealmAddressState GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianGeneralHeaderConstraintsUSRealmAddressStreetAddressLine GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianGeneralHeaderConstraintsUSRealmAddressUseP GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianGeneralHeaderConstraintsUSRealmAddressUse GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianTELUse GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianPersonName GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianCodeFromPersonalRelationshipOrResponsibleParty GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianAddr GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianCode GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianTelecom GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianGuardianPerson GeneralHeaderConstraintsRecordTargetPatientRolePatientBirthplacePlaceAddr GeneralHeaderConstraintsRecordTargetPatientRolePatientBirthplacePlace GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationPreferenceInd GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationProficiencyLevelCodeP GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationProficiencyLevelCode GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationModeCodeP GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationModeCode GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationLanguageCode GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationLanguageCodeP GeneralHeaderConstraintsRecordTargetPatientRolePatientIfSdtcEnforceRaceCode GeneralHeaderConstraintsRecordTargetPatientRolePatientAdministrativeGenderCode GeneralHeaderConstraintsRecordTargetPatientRolePatientBirthTime GeneralHeaderConstraintsRecordTargetPatientRolePatientEthnicGroupCodeP GeneralHeaderConstraintsRecordTargetPatientRolePatientEthnicGroupCode GeneralHeaderConstraintsRecordTargetPatientRolePatientMaritalStatusCodeP GeneralHeaderConstraintsRecordTargetPatientRolePatientMaritalStatusCode GeneralHeaderConstraintsRecordTargetPatientRolePatientName GeneralHeaderConstraintsRecordTargetPatientRolePatientRaceCodeP GeneralHeaderConstraintsRecordTargetPatientRolePatientRaceCode GeneralHeaderConstraintsRecordTargetPatientRolePatientReligiousAffiliationCodeP GeneralHeaderConstraintsRecordTargetPatientRolePatientReligiousAffiliationCode GeneralHeaderConstraintsRecordTargetPatientRolePatientSDTCRaceCodeP GeneralHeaderConstraintsRecordTargetPatientRolePatientSDTCRaceCode GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardian GeneralHeaderConstraintsRecordTargetPatientRolePatientBirthplace GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunication GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationGeneralHeaderConstraintsUSRealmAddressCity GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationGeneralHeaderConstraintsUSRealmAddressCountry GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationGeneralHeaderConstraintsUSRealmAddressPostalCode GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationGeneralHeaderConstraintsUSRealmAddressState GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationGeneralHeaderConstraintsUSRealmAddressStreetAddressLine GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationGeneralHeaderConstraintsUSRealmAddressUseP GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationGeneralHeaderConstraintsUSRealmAddressUse GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationTELUse GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationHasNationalProviderIdentifier GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationAddr GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationId GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationName GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationTelecom GeneralHeaderConstraintsRecordTargetPatientRoleAddr GeneralHeaderConstraintsRecordTargetPatientRoleId GeneralHeaderConstraintsRecordTargetPatientRoleTelecom GeneralHeaderConstraintsRecordTargetPatientRolePatient GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganization GeneralHeaderConstraintsRecordTargetPatientRole GeneralHeaderConstraintsComponentOfEncompassingEncounterEffectiveTime GeneralHeaderConstraintsComponentOfEncompassingEncounterId GeneralHeaderConstraintsComponentOfEncompassingEncounter GeneralHeaderConstraintsAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet GeneralHeaderConstraintsAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressCity GeneralHeaderConstraintsAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressCountry GeneralHeaderConstraintsAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressPostalCode GeneralHeaderConstraintsAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressState GeneralHeaderConstraintsAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressStreetAddressLine GeneralHeaderConstraintsAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressUseP GeneralHeaderConstraintsAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressUse GeneralHeaderConstraintsAuthorAssignedAuthorTELUse GeneralHeaderConstraintsAuthorAssignedAuthorAuthoringDeviceManufacturerModelName GeneralHeaderConstraintsAuthorAssignedAuthorAuthoringDeviceSoftwareName GeneralHeaderConstraintsAuthorAssignedAuthorPersonName GeneralHeaderConstraintsAuthorAssignedAuthorHasOneAssignedPersonOrOneAssignedAuthoringDevice GeneralHeaderConstraintsAuthorAssignedAuthorHasNationalProviderIdentifier GeneralHeaderConstraintsAuthorAssignedAuthorAddr GeneralHeaderConstraintsAuthorAssignedAuthorCodeP GeneralHeaderConstraintsAuthorAssignedAuthorCode GeneralHeaderConstraintsAuthorAssignedAuthorId GeneralHeaderConstraintsAuthorAssignedAuthorTelecom GeneralHeaderConstraintsAuthorTime GeneralHeaderConstraintsAuthorAssignedAuthor GeneralHeaderConstraintsDataEntererAssignedEntityGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet GeneralHeaderConstraintsDataEntererAssignedEntityGeneralHeaderConstraintsUSRealmAddressCity GeneralHeaderConstraintsDataEntererAssignedEntityGeneralHeaderConstraintsUSRealmAddressCountry GeneralHeaderConstraintsDataEntererAssignedEntityGeneralHeaderConstraintsUSRealmAddressPostalCode GeneralHeaderConstraintsDataEntererAssignedEntityGeneralHeaderConstraintsUSRealmAddressState GeneralHeaderConstraintsDataEntererAssignedEntityGeneralHeaderConstraintsUSRealmAddressStreetAddressLine GeneralHeaderConstraintsDataEntererAssignedEntityGeneralHeaderConstraintsUSRealmAddressUseP GeneralHeaderConstraintsDataEntererAssignedEntityGeneralHeaderConstraintsUSRealmAddressUse GeneralHeaderConstraintsDataEntererAssignedEntityTELUse GeneralHeaderConstraintsDataEntererAssignedEntityPersonName GeneralHeaderConstraintsDataEntererAssignedEntityHasNationalProviderIdentifier GeneralHeaderConstraintsDataEntererAssignedEntityAddr GeneralHeaderConstraintsDataEntererAssignedEntityCodeP GeneralHeaderConstraintsDataEntererAssignedEntityCode GeneralHeaderConstraintsDataEntererAssignedEntityId GeneralHeaderConstraintsDataEntererAssignedEntityTelecom GeneralHeaderConstraintsDataEntererAssignedEntityAssignedPerson GeneralHeaderConstraintsDataEntererAssignedEntity GeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet GeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationGeneralHeaderConstraintsUSRealmAddressCity GeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationGeneralHeaderConstraintsUSRealmAddressCountry GeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationGeneralHeaderConstraintsUSRealmAddressPostalCode GeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationGeneralHeaderConstraintsUSRealmAddressState GeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationGeneralHeaderConstraintsUSRealmAddressStreetAddressLine GeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationGeneralHeaderConstraintsUSRealmAddressUseP GeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationGeneralHeaderConstraintsUSRealmAddressUse GeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationTELUse GeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationHasNationalProviderIdentifier GeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationAddr GeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationId GeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationName GeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationTelecom GeneralHeaderConstraintsCustodianAssignedCustodianRepresentedCustodianOrganization GeneralHeaderConstraintsCustodianAssignedCustodian GeneralHeaderConstraintsInformationRecipientIntendedRecipientPersonName GeneralHeaderConstraintsInformationRecipientIntendedRecipientOrganizationName GeneralHeaderConstraintsInformationRecipientIntendedRecipientInformationRecipient GeneralHeaderConstraintsInformationRecipientIntendedRecipientRecievedOrganization GeneralHeaderConstraintsInformationRecipientIntendedRecipient GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressCity GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressCountry GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressPostalCode GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressState GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressStreetAddressLine GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressUseP GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressUse GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityTELUse GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityPersonName GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityHasNationalProviderIdentifier GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityAddr GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityCodeP GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityCode GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityId GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityTelecom GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityAssignedPerson GeneralHeaderConstraintsLegalAuthenticatorTime GeneralHeaderConstraintsLegalAuthenticatorSignatureCodeP GeneralHeaderConstraintsLegalAuthenticatorSignatureCode GeneralHeaderConstraintsAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet GeneralHeaderConstraintsAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressCity GeneralHeaderConstraintsAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressCountry GeneralHeaderConstraintsAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressPostalCode GeneralHeaderConstraintsAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressState GeneralHeaderConstraintsAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressStreetAddressLine GeneralHeaderConstraintsAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressUseP GeneralHeaderConstraintsAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressUse GeneralHeaderConstraintsAuthenticatorAssignedEntityTELUse GeneralHeaderConstraintsAuthenticatorAssignedEntityPersonName GeneralHeaderConstraintsAuthenticatorAssignedEntityHasNationalProviderIdentifier GeneralHeaderConstraintsAuthenticatorAssignedEntityAddr GeneralHeaderConstraintsAuthenticatorAssignedEntityCodeP GeneralHeaderConstraintsAuthenticatorAssignedEntityCode GeneralHeaderConstraintsAuthenticatorAssignedEntityId GeneralHeaderConstraintsAuthenticatorAssignedEntityTelecom GeneralHeaderConstraintsAuthenticatorAssignedEntityAssignedPerson GeneralHeaderConstraintsAuthenticatorTime GeneralHeaderConstraintsAuthenticatorSignatureCode GeneralHeaderConstraintsAuthenticatorAssignedEntity GeneralHeaderConstraintsInformantAssignedEntityGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet GeneralHeaderConstraintsInformantAssignedEntityGeneralHeaderConstraintsUSRealmAddressCity GeneralHeaderConstraintsInformantAssignedEntityGeneralHeaderConstraintsUSRealmAddressCountry GeneralHeaderConstraintsInformantAssignedEntityGeneralHeaderConstraintsUSRealmAddressPostalCode GeneralHeaderConstraintsInformantAssignedEntityGeneralHeaderConstraintsUSRealmAddressState GeneralHeaderConstraintsInformantAssignedEntityGeneralHeaderConstraintsUSRealmAddressStreetAddressLine GeneralHeaderConstraintsInformantAssignedEntityGeneralHeaderConstraintsUSRealmAddressUseP GeneralHeaderConstraintsInformantAssignedEntityGeneralHeaderConstraintsUSRealmAddressUse GeneralHeaderConstraintsInformantAssignedEntityPersonName GeneralHeaderConstraintsInformantAssignedEntityHasNationalProviderIdentifier GeneralHeaderConstraintsInformantAssignedEntityAddr GeneralHeaderConstraintsInformantAssignedEntityCodeP GeneralHeaderConstraintsInformantAssignedEntityCode GeneralHeaderConstraintsInformantAssignedEntityId GeneralHeaderConstraintsInformantAssignedEntityAssignedPerson GeneralHeaderConstraintsInformantRelatedEntityGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet GeneralHeaderConstraintsInformantRelatedEntityGeneralHeaderConstraintsUSRealmAddressCity GeneralHeaderConstraintsInformantRelatedEntityGeneralHeaderConstraintsUSRealmAddressCountry GeneralHeaderConstraintsInformantRelatedEntityGeneralHeaderConstraintsUSRealmAddressPostalCode GeneralHeaderConstraintsInformantRelatedEntityGeneralHeaderConstraintsUSRealmAddressState GeneralHeaderConstraintsInformantRelatedEntityGeneralHeaderConstraintsUSRealmAddressStreetAddressLine GeneralHeaderConstraintsInformantRelatedEntityGeneralHeaderConstraintsUSRealmAddressUseP GeneralHeaderConstraintsInformantRelatedEntityGeneralHeaderConstraintsUSRealmAddressUse GeneralHeaderConstraintsInformantRelatedEntityGeneralHeaderConstraintsInformantAssignedEntityPersonName GeneralHeaderConstraintsInformantRelatedEntityAddr GeneralHeaderConstraintsInformantRelatedEntityPerson GeneralHeaderConstraintsInformantHasAssignedEntityOrRelatedEntity GeneralHeaderConstraintsInformantAssignedEntity GeneralHeaderConstraintsInformantRelatedEntity GeneralHeaderConstraintsParticipantSupportAssociatedEntityHasAssociatedPersonOrScopingOrganization GeneralHeaderConstraintsParticipantSupportTime GeneralHeaderConstraintsInFulfillmentOfOrderId GeneralHeaderConstraintsInFulfillmentOfOrder GeneralHeaderConstraintsDocumentationOfServiceEventPerformer1AssignedEntityHasNationalProviderIdentifier GeneralHeaderConstraintsDocumentationOfServiceEventPerformer1AssignedEntityCodeP GeneralHeaderConstraintsDocumentationOfServiceEventPerformer1AssignedEntityCode GeneralHeaderConstraintsDocumentationOfServiceEventPerformer1AssignedEntityId GeneralHeaderConstraintsDocumentationOfServiceEventPerformer1FunctionCodeP GeneralHeaderConstraintsDocumentationOfServiceEventPerformer1FunctionCode GeneralHeaderConstraintsDocumentationOfServiceEventPerformer1TypeCode GeneralHeaderConstraintsDocumentationOfServiceEventPerformer1AssignedEntity GeneralHeaderConstraintsDocumentationOfServiceEventEffectiveTimeLow GeneralHeaderConstraintsDocumentationOfServiceEventEffectiveTime GeneralHeaderConstraintsDocumentationOfServiceEventPerformer GeneralHeaderConstraintsDocumentationOfServiceEvent GeneralHeaderConstraintsAuthorizationConsentCode GeneralHeaderConstraintsAuthorizationConsentId GeneralHeaderConstraintsAuthorizationConsentStatusCodeP GeneralHeaderConstraintsAuthorizationConsentStatusCode GeneralHeaderConstraintsAuthorizationConsent' constraints.validation.dependOn.GeneralHeaderConstraintsRecordTargetPatientRoleGeneralHeaderConstraintsUSRealmAddressUse='GeneralHeaderConstraintsUSRealmAddressUseP' constraints.validation.dependOn.GeneralHeaderConstraintsRecordTargetPatientRolePatientGeneralHeaderConstraintsUSRealmPatientNameUse='GeneralHeaderConstraintsUSRealmPatientNameUseP' constraints.validation.dependOn.GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianGeneralHeaderConstraintsUSRealmAddressUse='GeneralHeaderConstraintsUSRealmAddressUseP' constraints.validation.dependOn.GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationProficiencyLevelCode='GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationProficiencyLevelCodeP' constraints.validation.dependOn.GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationModeCode='GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationModeCodeP' constraints.validation.dependOn.GeneralHeaderConstraintsRecordTargetPatientRolePatientEthnicGroupCode='GeneralHeaderConstraintsRecordTargetPatientRolePatientEthnicGroupCodeP' constraints.validation.dependOn.GeneralHeaderConstraintsRecordTargetPatientRolePatientMaritalStatusCode='GeneralHeaderConstraintsRecordTargetPatientRolePatientMaritalStatusCodeP' constraints.validation.dependOn.GeneralHeaderConstraintsRecordTargetPatientRolePatientRaceCode='GeneralHeaderConstraintsRecordTargetPatientRolePatientRaceCodeP' constraints.validation.dependOn.GeneralHeaderConstraintsRecordTargetPatientRolePatientReligiousAffiliationCode='GeneralHeaderConstraintsRecordTargetPatientRolePatientReligiousAffiliationCodeP' constraints.validation.dependOn.GeneralHeaderConstraintsRecordTargetPatientRolePatientSDTCRaceCode='GeneralHeaderConstraintsRecordTargetPatientRolePatientSDTCRaceCodeP' constraints.validation.dependOn.GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationGeneralHeaderConstraintsUSRealmAddressUse='GeneralHeaderConstraintsUSRealmAddressUseP' constraints.validation.dependOn.GeneralHeaderConstraintsAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressUse='GeneralHeaderConstraintsUSRealmAddressUseP' constraints.validation.dependOn.GeneralHeaderConstraintsAuthorAssignedAuthorCode='GeneralHeaderConstraintsAuthorAssignedAuthorCodeP' constraints.validation.dependOn.GeneralHeaderConstraintsDataEntererAssignedEntityGeneralHeaderConstraintsUSRealmAddressUse='GeneralHeaderConstraintsUSRealmAddressUseP' constraints.validation.dependOn.GeneralHeaderConstraintsDataEntererAssignedEntityCode='GeneralHeaderConstraintsDataEntererAssignedEntityCodeP' constraints.validation.dependOn.GeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationGeneralHeaderConstraintsUSRealmAddressUse='GeneralHeaderConstraintsUSRealmAddressUseP' constraints.validation.dependOn.GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressUse='GeneralHeaderConstraintsUSRealmAddressUseP' constraints.validation.dependOn.GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityCode='GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityCodeP' constraints.validation.dependOn.GeneralHeaderConstraintsLegalAuthenticatorSignatureCode='GeneralHeaderConstraintsLegalAuthenticatorSignatureCodeP' constraints.validation.dependOn.GeneralHeaderConstraintsAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressUse='GeneralHeaderConstraintsUSRealmAddressUseP' constraints.validation.dependOn.GeneralHeaderConstraintsAuthenticatorAssignedEntityCode='GeneralHeaderConstraintsAuthenticatorAssignedEntityCodeP' constraints.validation.dependOn.GeneralHeaderConstraintsInformantAssignedEntityGeneralHeaderConstraintsUSRealmAddressUse='GeneralHeaderConstraintsUSRealmAddressUseP' constraints.validation.dependOn.GeneralHeaderConstraintsInformantAssignedEntityCode='GeneralHeaderConstraintsInformantAssignedEntityCodeP' constraints.validation.dependOn.GeneralHeaderConstraintsInformantRelatedEntityGeneralHeaderConstraintsUSRealmAddressUse='GeneralHeaderConstraintsUSRealmAddressUseP' constraints.validation.dependOn.GeneralHeaderConstraintsDocumentationOfServiceEventPerformer1AssignedEntityCode='GeneralHeaderConstraintsDocumentationOfServiceEventPerformer1AssignedEntityCodeP' constraints.validation.dependOn.GeneralHeaderConstraintsDocumentationOfServiceEventPerformer1FunctionCode='GeneralHeaderConstraintsDocumentationOfServiceEventPerformer1FunctionCodeP' constraints.validation.dependOn.GeneralHeaderConstraintsAuthorizationConsentStatusCode='GeneralHeaderConstraintsAuthorizationConsentStatusCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsRecordTarget constraints.validation.error='GeneralHeaderConstraintsRecordTargetPatientRole'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsRecordTargetPatientRole constraints.validation.error='GeneralHeaderConstraintsRecordTargetPatientRoleAddr GeneralHeaderConstraintsRecordTargetPatientRoleId GeneralHeaderConstraintsRecordTargetPatientRoleTelecom GeneralHeaderConstraintsRecordTargetPatientRolePatient GeneralHeaderConstraintsRecordTargetPatientRoleGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet GeneralHeaderConstraintsRecordTargetPatientRoleGeneralHeaderConstraintsUSRealmAddressCity GeneralHeaderConstraintsRecordTargetPatientRoleGeneralHeaderConstraintsUSRealmAddressStreetAddressLine GeneralHeaderConstraintsRecordTargetPatientRoleGeneralHeaderConstraintsUSRealmAddressUse' constraints.validation.info='GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganization' constraints.validation.query='GeneralHeaderConstraintsRecordTargetPatientRoleGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet GeneralHeaderConstraintsRecordTargetPatientRoleGeneralHeaderConstraintsUSRealmAddressCity GeneralHeaderConstraintsRecordTargetPatientRoleGeneralHeaderConstraintsUSRealmAddressCountry GeneralHeaderConstraintsRecordTargetPatientRoleGeneralHeaderConstraintsUSRealmAddressPostalCode GeneralHeaderConstraintsRecordTargetPatientRoleGeneralHeaderConstraintsUSRealmAddressState GeneralHeaderConstraintsRecordTargetPatientRoleGeneralHeaderConstraintsUSRealmAddressStreetAddressLine GeneralHeaderConstraintsRecordTargetPatientRoleGeneralHeaderConstraintsUSRealmAddressUseP GeneralHeaderConstraintsRecordTargetPatientRoleGeneralHeaderConstraintsUSRealmAddressUse GeneralHeaderConstraintsRecordTargetPatientRoleTELUse' constraints.validation.warning='GeneralHeaderConstraintsRecordTargetPatientRoleGeneralHeaderConstraintsUSRealmAddressCountry GeneralHeaderConstraintsRecordTargetPatientRoleGeneralHeaderConstraintsUSRealmAddressPostalCode GeneralHeaderConstraintsRecordTargetPatientRoleGeneralHeaderConstraintsUSRealmAddressState GeneralHeaderConstraintsRecordTargetPatientRoleGeneralHeaderConstraintsUSRealmAddressUseP GeneralHeaderConstraintsRecordTargetPatientRoleTELUse' constraints.validation.dependOn.GeneralHeaderConstraintsRecordTargetPatientRoleGeneralHeaderConstraintsUSRealmAddressUse='GeneralHeaderConstraintsUSRealmAddressUseP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsRecordTargetPatientRolePatient constraints.validation.error='GeneralHeaderConstraintsRecordTargetPatientRolePatientIfSdtcEnforceRaceCode GeneralHeaderConstraintsRecordTargetPatientRolePatientAdministrativeGenderCode GeneralHeaderConstraintsRecordTargetPatientRolePatientBirthTime GeneralHeaderConstraintsRecordTargetPatientRolePatientEthnicGroupCode GeneralHeaderConstraintsRecordTargetPatientRolePatientMaritalStatusCode GeneralHeaderConstraintsRecordTargetPatientRolePatientName GeneralHeaderConstraintsRecordTargetPatientRolePatientRaceCode GeneralHeaderConstraintsRecordTargetPatientRolePatientReligiousAffiliationCode GeneralHeaderConstraintsRecordTargetPatientRolePatientSDTCRaceCode GeneralHeaderConstraintsRecordTargetPatientRolePatientTSBirthTimePreciseToYear GeneralHeaderConstraintsRecordTargetPatientRolePatientTSValue GeneralHeaderConstraintsRecordTargetPatientRolePatientGeneralHeaderConstraintsUSRealmPatientNameUSRealmPatientNameMixedContent GeneralHeaderConstraintsRecordTargetPatientRolePatientGeneralHeaderConstraintsUSRealmPatientNameFamily GeneralHeaderConstraintsRecordTargetPatientRolePatientGeneralHeaderConstraintsUSRealmPatientNameGiven GeneralHeaderConstraintsRecordTargetPatientRolePatientGeneralHeaderConstraintsUSRealmPatientNameUse' administrativeGenderCode.codeSystem='2.16.840.1.113883.5.1' administrativeGenderCode.codeSystemName='AdministrativeGenderCode' ethnicGroupCode.codeSystem='2.16.840.1.113883.6.238' ethnicGroupCode.codeSystemName='Race and Ethnicity - CDC' constraints.validation.info='GeneralHeaderConstraintsRecordTargetPatientRolePatientEthnicGroupCodeP GeneralHeaderConstraintsRecordTargetPatientRolePatientReligiousAffiliationCodeP GeneralHeaderConstraintsRecordTargetPatientRolePatientSDTCRaceCodeP GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardian GeneralHeaderConstraintsRecordTargetPatientRolePatientBirthplace GeneralHeaderConstraintsRecordTargetPatientRolePatientGeneralHeaderConstraintsUSRealmPatientNamePrefix GeneralHeaderConstraintsRecordTargetPatientRolePatientGeneralHeaderConstraintsUSRealmPatientNameSuffix GeneralHeaderConstraintsRecordTargetPatientRolePatientGeneralHeaderConstraintsUSRealmPatientNameUseP' constraints.validation.dependOn.GeneralHeaderConstraintsRecordTargetPatientRolePatientEthnicGroupCode='GeneralHeaderConstraintsRecordTargetPatientRolePatientEthnicGroupCodeP' maritalStatusCode.codeSystem='2.16.840.1.113883.5.2' maritalStatusCode.codeSystemName='MaritalStatus' constraints.validation.warning='GeneralHeaderConstraintsRecordTargetPatientRolePatientMaritalStatusCodeP GeneralHeaderConstraintsRecordTargetPatientRolePatientRaceCodeP GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunication GeneralHeaderConstraintsRecordTargetPatientRolePatientTSBirthTimePreciseToDay' constraints.validation.dependOn.GeneralHeaderConstraintsRecordTargetPatientRolePatientMaritalStatusCode='GeneralHeaderConstraintsRecordTargetPatientRolePatientMaritalStatusCodeP' raceCode.codeSystem='2.16.840.1.113883.6.238' raceCode.codeSystemName='Race and Ethnicity - CDC' constraints.validation.dependOn.GeneralHeaderConstraintsRecordTargetPatientRolePatientRaceCode='GeneralHeaderConstraintsRecordTargetPatientRolePatientRaceCodeP' religiousAffiliationCode.codeSystem='2.16.840.1.113883.5.1076' religiousAffiliationCode.codeSystemName='ReligiousAffiliation' constraints.validation.dependOn.GeneralHeaderConstraintsRecordTargetPatientRolePatientReligiousAffiliationCode='GeneralHeaderConstraintsRecordTargetPatientRolePatientReligiousAffiliationCodeP' sDTCRaceCode.codeSystem='2.16.840.1.113883.6.238' sDTCRaceCode.codeSystemName='Race and Ethnicity - CDC' constraints.validation.dependOn.GeneralHeaderConstraintsRecordTargetPatientRolePatientSDTCRaceCode='GeneralHeaderConstraintsRecordTargetPatientRolePatientSDTCRaceCodeP' constraints.validation.query='GeneralHeaderConstraintsRecordTargetPatientRolePatientTSBirthTimePreciseToYear GeneralHeaderConstraintsRecordTargetPatientRolePatientTSBirthTimePreciseToDay GeneralHeaderConstraintsRecordTargetPatientRolePatientTSValue GeneralHeaderConstraintsRecordTargetPatientRolePatientGeneralHeaderConstraintsUSRealmPatientNameUSRealmPatientNameMixedContent GeneralHeaderConstraintsRecordTargetPatientRolePatientGeneralHeaderConstraintsUSRealmPatientNameFamily GeneralHeaderConstraintsRecordTargetPatientRolePatientGeneralHeaderConstraintsUSRealmPatientNameGiven GeneralHeaderConstraintsRecordTargetPatientRolePatientGeneralHeaderConstraintsUSRealmPatientNamePrefix GeneralHeaderConstraintsRecordTargetPatientRolePatientGeneralHeaderConstraintsUSRealmPatientNameSuffix GeneralHeaderConstraintsRecordTargetPatientRolePatientGeneralHeaderConstraintsUSRealmPatientNameUseP GeneralHeaderConstraintsRecordTargetPatientRolePatientGeneralHeaderConstraintsUSRealmPatientNameUse' constraints.validation.dependOn.GeneralHeaderConstraintsRecordTargetPatientRolePatientGeneralHeaderConstraintsUSRealmPatientNameUse='GeneralHeaderConstraintsUSRealmPatientNameUseP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsRecordTargetPatientRolePatientGuardian constraints.validation.error='GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianCodeFromPersonalRelationshipOrResponsibleParty GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianGuardianPerson GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianGeneralHeaderConstraintsUSRealmAddressCity GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianGeneralHeaderConstraintsUSRealmAddressStreetAddressLine GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianGeneralHeaderConstraintsUSRealmAddressUse' constraints.validation.warning='GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianAddr GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianCode GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianGeneralHeaderConstraintsUSRealmAddressCountry GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianGeneralHeaderConstraintsUSRealmAddressPostalCode GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianGeneralHeaderConstraintsUSRealmAddressState GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianGeneralHeaderConstraintsUSRealmAddressUseP GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianTELUse' constraints.validation.info='GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianTelecom' constraints.validation.query='GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianGeneralHeaderConstraintsUSRealmAddressCity GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianGeneralHeaderConstraintsUSRealmAddressCountry GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianGeneralHeaderConstraintsUSRealmAddressPostalCode GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianGeneralHeaderConstraintsUSRealmAddressState GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianGeneralHeaderConstraintsUSRealmAddressStreetAddressLine GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianGeneralHeaderConstraintsUSRealmAddressUseP GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianGeneralHeaderConstraintsUSRealmAddressUse GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianTELUse' constraints.validation.dependOn.GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianGeneralHeaderConstraintsUSRealmAddressUse='GeneralHeaderConstraintsUSRealmAddressUseP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianTEL constraints.validation.warning='GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianTELUse'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianPerson constraints.validation.error='GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianPersonName'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunication constraints.validation.info='GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationPreferenceInd GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationModeCodeP' proficiencyLevelCode.codeSystem='2.16.840.1.113883.5.61' proficiencyLevelCode.codeSystemName='LanguageAbilityProficiency' constraints.validation.error='GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationProficiencyLevelCode GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationModeCode GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationLanguageCode GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationLanguageCodeP' constraints.validation.warning='GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationProficiencyLevelCodeP' constraints.validation.dependOn.GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationProficiencyLevelCode='GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationProficiencyLevelCodeP' modeCode.codeSystem='2.16.840.1.113883.5.60' modeCode.codeSystemName='LanguageAbilityMode' constraints.validation.dependOn.GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationModeCode='GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationModeCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsRecordTargetPatientRolePatientBirthplace constraints.validation.error='GeneralHeaderConstraintsRecordTargetPatientRolePatientBirthplacePlace'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsRecordTargetPatientRolePatientBirthplacePlace constraints.validation.error='GeneralHeaderConstraintsRecordTargetPatientRolePatientBirthplacePlaceAddr'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsRecordTargetPatientRolePatientTS constraints.validation.error='GeneralHeaderConstraintsRecordTargetPatientRolePatientTSBirthTimePreciseToYear GeneralHeaderConstraintsRecordTargetPatientRolePatientTSValue' constraints.validation.warning='GeneralHeaderConstraintsRecordTargetPatientRolePatientTSBirthTimePreciseToDay'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganization constraints.validation.warning='GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationHasNationalProviderIdentifier GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationGeneralHeaderConstraintsUSRealmAddressCountry GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationGeneralHeaderConstraintsUSRealmAddressPostalCode GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationGeneralHeaderConstraintsUSRealmAddressState GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationGeneralHeaderConstraintsUSRealmAddressUseP GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationTELUse' constraints.validation.error='GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationAddr GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationId GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationName GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationTelecom GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationGeneralHeaderConstraintsUSRealmAddressCity GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationGeneralHeaderConstraintsUSRealmAddressStreetAddressLine GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationGeneralHeaderConstraintsUSRealmAddressUse' constraints.validation.query='GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationGeneralHeaderConstraintsUSRealmAddressCity GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationGeneralHeaderConstraintsUSRealmAddressCountry GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationGeneralHeaderConstraintsUSRealmAddressPostalCode GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationGeneralHeaderConstraintsUSRealmAddressState GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationGeneralHeaderConstraintsUSRealmAddressStreetAddressLine GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationGeneralHeaderConstraintsUSRealmAddressUseP GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationGeneralHeaderConstraintsUSRealmAddressUse GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationTELUse' constraints.validation.dependOn.GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationGeneralHeaderConstraintsUSRealmAddressUse='GeneralHeaderConstraintsUSRealmAddressUseP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationTEL constraints.validation.warning='GeneralHeaderConstraintsRecordTargetPatientRoleProviderOrganizationTELUse'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsRecordTargetPatientRoleTEL constraints.validation.warning='GeneralHeaderConstraintsRecordTargetPatientRoleTELUse'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsComponentOf constraints.validation.error='GeneralHeaderConstraintsComponentOfEncompassingEncounter'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsComponentOfEncompassingEncounter constraints.validation.error='GeneralHeaderConstraintsComponentOfEncompassingEncounterEffectiveTime GeneralHeaderConstraintsComponentOfEncompassingEncounterId'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsAuthor constraints.validation.error='GeneralHeaderConstraintsAuthorTime GeneralHeaderConstraintsAuthorAssignedAuthor'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsAuthorAssignedAuthor constraints.validation.error='GeneralHeaderConstraintsAuthorAssignedAuthorHasOneAssignedPersonOrOneAssignedAuthoringDevice GeneralHeaderConstraintsAuthorAssignedAuthorAddr GeneralHeaderConstraintsAuthorAssignedAuthorId GeneralHeaderConstraintsAuthorAssignedAuthorTelecom GeneralHeaderConstraintsAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet GeneralHeaderConstraintsAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressCity GeneralHeaderConstraintsAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressStreetAddressLine GeneralHeaderConstraintsAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressUse' constraints.validation.warning='GeneralHeaderConstraintsAuthorAssignedAuthorHasNationalProviderIdentifier GeneralHeaderConstraintsAuthorAssignedAuthorCode GeneralHeaderConstraintsAuthorAssignedAuthorCodeP GeneralHeaderConstraintsAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressCountry GeneralHeaderConstraintsAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressPostalCode GeneralHeaderConstraintsAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressState GeneralHeaderConstraintsAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressUseP GeneralHeaderConstraintsAuthorAssignedAuthorTELUse' code.codeSystem='2.16.840.1.113883.6.101' code.codeSystemName='NUCC Health Care Provider Taxonomy' constraints.validation.dependOn.GeneralHeaderConstraintsAuthorAssignedAuthorCode='GeneralHeaderConstraintsAuthorAssignedAuthorCodeP' constraints.validation.query='GeneralHeaderConstraintsAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet GeneralHeaderConstraintsAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressCity GeneralHeaderConstraintsAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressCountry GeneralHeaderConstraintsAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressPostalCode GeneralHeaderConstraintsAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressState GeneralHeaderConstraintsAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressStreetAddressLine GeneralHeaderConstraintsAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressUseP GeneralHeaderConstraintsAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressUse GeneralHeaderConstraintsAuthorAssignedAuthorTELUse' constraints.validation.dependOn.GeneralHeaderConstraintsAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressUse='GeneralHeaderConstraintsUSRealmAddressUseP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsAuthorAssignedAuthorAuthoringDevice constraints.validation.error='GeneralHeaderConstraintsAuthorAssignedAuthorAuthoringDeviceManufacturerModelName GeneralHeaderConstraintsAuthorAssignedAuthorAuthoringDeviceSoftwareName'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsAuthorAssignedAuthorPerson constraints.validation.error='GeneralHeaderConstraintsAuthorAssignedAuthorPersonName'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsAuthorAssignedAuthorTEL constraints.validation.warning='GeneralHeaderConstraintsAuthorAssignedAuthorTELUse'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsDataEnterer constraints.validation.error='GeneralHeaderConstraintsDataEntererAssignedEntity'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsDataEntererAssignedEntity constraints.validation.warning='GeneralHeaderConstraintsDataEntererAssignedEntityHasNationalProviderIdentifier GeneralHeaderConstraintsDataEntererAssignedEntityCode GeneralHeaderConstraintsDataEntererAssignedEntityGeneralHeaderConstraintsUSRealmAddressCountry GeneralHeaderConstraintsDataEntererAssignedEntityGeneralHeaderConstraintsUSRealmAddressPostalCode GeneralHeaderConstraintsDataEntererAssignedEntityGeneralHeaderConstraintsUSRealmAddressState GeneralHeaderConstraintsDataEntererAssignedEntityGeneralHeaderConstraintsUSRealmAddressUseP GeneralHeaderConstraintsDataEntererAssignedEntityTELUse' constraints.validation.error='GeneralHeaderConstraintsDataEntererAssignedEntityAddr GeneralHeaderConstraintsDataEntererAssignedEntityId GeneralHeaderConstraintsDataEntererAssignedEntityTelecom GeneralHeaderConstraintsDataEntererAssignedEntityAssignedPerson GeneralHeaderConstraintsDataEntererAssignedEntityGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet GeneralHeaderConstraintsDataEntererAssignedEntityGeneralHeaderConstraintsUSRealmAddressCity GeneralHeaderConstraintsDataEntererAssignedEntityGeneralHeaderConstraintsUSRealmAddressStreetAddressLine GeneralHeaderConstraintsDataEntererAssignedEntityGeneralHeaderConstraintsUSRealmAddressUse' code.codeSystem='2.16.840.1.113883.6.101' code.codeSystemName='NUCC Health Care Provider Taxonomy' constraints.validation.info='GeneralHeaderConstraintsDataEntererAssignedEntityCodeP' constraints.validation.dependOn.GeneralHeaderConstraintsDataEntererAssignedEntityCode='GeneralHeaderConstraintsDataEntererAssignedEntityCodeP' constraints.validation.query='GeneralHeaderConstraintsDataEntererAssignedEntityGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet GeneralHeaderConstraintsDataEntererAssignedEntityGeneralHeaderConstraintsUSRealmAddressCity GeneralHeaderConstraintsDataEntererAssignedEntityGeneralHeaderConstraintsUSRealmAddressCountry GeneralHeaderConstraintsDataEntererAssignedEntityGeneralHeaderConstraintsUSRealmAddressPostalCode GeneralHeaderConstraintsDataEntererAssignedEntityGeneralHeaderConstraintsUSRealmAddressState GeneralHeaderConstraintsDataEntererAssignedEntityGeneralHeaderConstraintsUSRealmAddressStreetAddressLine GeneralHeaderConstraintsDataEntererAssignedEntityGeneralHeaderConstraintsUSRealmAddressUseP GeneralHeaderConstraintsDataEntererAssignedEntityGeneralHeaderConstraintsUSRealmAddressUse GeneralHeaderConstraintsDataEntererAssignedEntityTELUse' constraints.validation.dependOn.GeneralHeaderConstraintsDataEntererAssignedEntityGeneralHeaderConstraintsUSRealmAddressUse='GeneralHeaderConstraintsUSRealmAddressUseP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsDataEntererAssignedEntityPerson constraints.validation.error='GeneralHeaderConstraintsDataEntererAssignedEntityPersonName'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsDataEntererAssignedEntityTEL constraints.validation.warning='GeneralHeaderConstraintsDataEntererAssignedEntityTELUse'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsCustodian constraints.validation.error='GeneralHeaderConstraintsCustodianAssignedCustodian'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsCustodianAssignedCustodian constraints.validation.error='GeneralHeaderConstraintsCustodianAssignedCustodianRepresentedCustodianOrganization'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganization constraints.validation.warning='GeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationHasNationalProviderIdentifier GeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationGeneralHeaderConstraintsUSRealmAddressCountry GeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationGeneralHeaderConstraintsUSRealmAddressPostalCode GeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationGeneralHeaderConstraintsUSRealmAddressState GeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationGeneralHeaderConstraintsUSRealmAddressUseP GeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationTELUse' constraints.validation.error='GeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationAddr GeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationId GeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationName GeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationTelecom GeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet GeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationGeneralHeaderConstraintsUSRealmAddressCity GeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationGeneralHeaderConstraintsUSRealmAddressStreetAddressLine GeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationGeneralHeaderConstraintsUSRealmAddressUse' constraints.validation.query='GeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet GeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationGeneralHeaderConstraintsUSRealmAddressCity GeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationGeneralHeaderConstraintsUSRealmAddressCountry GeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationGeneralHeaderConstraintsUSRealmAddressPostalCode GeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationGeneralHeaderConstraintsUSRealmAddressState GeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationGeneralHeaderConstraintsUSRealmAddressStreetAddressLine GeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationGeneralHeaderConstraintsUSRealmAddressUseP GeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationGeneralHeaderConstraintsUSRealmAddressUse GeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationTELUse' constraints.validation.dependOn.GeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationGeneralHeaderConstraintsUSRealmAddressUse='GeneralHeaderConstraintsUSRealmAddressUseP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationTEL constraints.validation.warning='GeneralHeaderConstraintsCustodianAssignedCustodianCustodianOrganizationTELUse'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsInformationRecipient constraints.validation.error='GeneralHeaderConstraintsInformationRecipientIntendedRecipient'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsInformationRecipientIntendedRecipient constraints.validation.info='GeneralHeaderConstraintsInformationRecipientIntendedRecipientInformationRecipient GeneralHeaderConstraintsInformationRecipientIntendedRecipientRecievedOrganization'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsInformationRecipientIntendedRecipientOrganization constraints.validation.error='GeneralHeaderConstraintsInformationRecipientIntendedRecipientOrganizationName'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsInformationRecipientIntendedRecipientPerson constraints.validation.error='GeneralHeaderConstraintsInformationRecipientIntendedRecipientPersonName'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsLegalAuthenticator constraints.validation.error='GeneralHeaderConstraintsLegalAuthenticatorTime GeneralHeaderConstraintsLegalAuthenticatorSignatureCode GeneralHeaderConstraintsLegalAuthenticatorSignatureCodeP' signatureCode.code='S' constraints.validation.dependOn.GeneralHeaderConstraintsLegalAuthenticatorSignatureCode='GeneralHeaderConstraintsLegalAuthenticatorSignatureCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsLegalAuthenticatorAssignedEntity constraints.validation.info='GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityHasNationalProviderIdentifier GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityCodeP' constraints.validation.error='GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityAddr GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityId GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityTelecom GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityAssignedPerson GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressCity GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressStreetAddressLine GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressUse' code.codeSystem='2.16.840.1.113883.6.101' code.codeSystemName='NUCC Health Care Provider Taxonomy' constraints.validation.warning='GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityCode GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressCountry GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressPostalCode GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressState GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressUseP GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityTELUse' constraints.validation.dependOn.GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityCode='GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityCodeP' constraints.validation.query='GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressCity GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressCountry GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressPostalCode GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressState GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressStreetAddressLine GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressUseP GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressUse GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityTELUse' constraints.validation.dependOn.GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressUse='GeneralHeaderConstraintsUSRealmAddressUseP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsLegalAuthenticatorAssignedEntityPerson constraints.validation.error='GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityPersonName'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsLegalAuthenticatorAssignedEntityTEL constraints.validation.warning='GeneralHeaderConstraintsLegalAuthenticatorAssignedEntityTELUse'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsAuthenticator constraints.validation.error='GeneralHeaderConstraintsAuthenticatorTime GeneralHeaderConstraintsAuthenticatorSignatureCode GeneralHeaderConstraintsAuthenticatorAssignedEntity' signatureCode.code='S'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsAuthenticatorAssignedEntity constraints.validation.warning='GeneralHeaderConstraintsAuthenticatorAssignedEntityHasNationalProviderIdentifier GeneralHeaderConstraintsAuthenticatorAssignedEntityCode GeneralHeaderConstraintsAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressCountry GeneralHeaderConstraintsAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressPostalCode GeneralHeaderConstraintsAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressState GeneralHeaderConstraintsAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressUseP GeneralHeaderConstraintsAuthenticatorAssignedEntityTELUse' constraints.validation.error='GeneralHeaderConstraintsAuthenticatorAssignedEntityAddr GeneralHeaderConstraintsAuthenticatorAssignedEntityId GeneralHeaderConstraintsAuthenticatorAssignedEntityTelecom GeneralHeaderConstraintsAuthenticatorAssignedEntityAssignedPerson GeneralHeaderConstraintsAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet GeneralHeaderConstraintsAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressCity GeneralHeaderConstraintsAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressStreetAddressLine GeneralHeaderConstraintsAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressUse' code.codeSystem='2.16.840.1.113883.6.101' code.codeSystemName='NUCC Health Care Provider Taxonomy' constraints.validation.info='GeneralHeaderConstraintsAuthenticatorAssignedEntityCodeP' constraints.validation.dependOn.GeneralHeaderConstraintsAuthenticatorAssignedEntityCode='GeneralHeaderConstraintsAuthenticatorAssignedEntityCodeP' constraints.validation.query='GeneralHeaderConstraintsAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet GeneralHeaderConstraintsAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressCity GeneralHeaderConstraintsAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressCountry GeneralHeaderConstraintsAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressPostalCode GeneralHeaderConstraintsAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressState GeneralHeaderConstraintsAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressStreetAddressLine GeneralHeaderConstraintsAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressUseP GeneralHeaderConstraintsAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressUse GeneralHeaderConstraintsAuthenticatorAssignedEntityTELUse' constraints.validation.dependOn.GeneralHeaderConstraintsAuthenticatorAssignedEntityGeneralHeaderConstraintsUSRealmAddressUse='GeneralHeaderConstraintsUSRealmAddressUseP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsAuthenticatorAssignedEntityPerson constraints.validation.error='GeneralHeaderConstraintsAuthenticatorAssignedEntityPersonName'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsAuthenticatorAssignedEntityTEL constraints.validation.warning='GeneralHeaderConstraintsAuthenticatorAssignedEntityTELUse'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsInformant constraints.validation.error='GeneralHeaderConstraintsInformantHasAssignedEntityOrRelatedEntity' constraints.validation.info='GeneralHeaderConstraintsInformantAssignedEntity GeneralHeaderConstraintsInformantRelatedEntity'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsInformantAssignedEntity constraints.validation.warning='GeneralHeaderConstraintsInformantAssignedEntityHasNationalProviderIdentifier GeneralHeaderConstraintsInformantAssignedEntityAddr GeneralHeaderConstraintsInformantAssignedEntityCode GeneralHeaderConstraintsInformantAssignedEntityGeneralHeaderConstraintsUSRealmAddressCountry GeneralHeaderConstraintsInformantAssignedEntityGeneralHeaderConstraintsUSRealmAddressPostalCode GeneralHeaderConstraintsInformantAssignedEntityGeneralHeaderConstraintsUSRealmAddressState GeneralHeaderConstraintsInformantAssignedEntityGeneralHeaderConstraintsUSRealmAddressUseP' code.codeSystem='2.16.840.1.113883.6.101' code.codeSystemName='NUCC Health Care Provider Taxonomy' constraints.validation.info='GeneralHeaderConstraintsInformantAssignedEntityCodeP' constraints.validation.dependOn.GeneralHeaderConstraintsInformantAssignedEntityCode='GeneralHeaderConstraintsInformantAssignedEntityCodeP' constraints.validation.error='GeneralHeaderConstraintsInformantAssignedEntityId GeneralHeaderConstraintsInformantAssignedEntityAssignedPerson GeneralHeaderConstraintsInformantAssignedEntityGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet GeneralHeaderConstraintsInformantAssignedEntityGeneralHeaderConstraintsUSRealmAddressCity GeneralHeaderConstraintsInformantAssignedEntityGeneralHeaderConstraintsUSRealmAddressStreetAddressLine GeneralHeaderConstraintsInformantAssignedEntityGeneralHeaderConstraintsUSRealmAddressUse' constraints.validation.query='GeneralHeaderConstraintsInformantAssignedEntityGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet GeneralHeaderConstraintsInformantAssignedEntityGeneralHeaderConstraintsUSRealmAddressCity GeneralHeaderConstraintsInformantAssignedEntityGeneralHeaderConstraintsUSRealmAddressCountry GeneralHeaderConstraintsInformantAssignedEntityGeneralHeaderConstraintsUSRealmAddressPostalCode GeneralHeaderConstraintsInformantAssignedEntityGeneralHeaderConstraintsUSRealmAddressState GeneralHeaderConstraintsInformantAssignedEntityGeneralHeaderConstraintsUSRealmAddressStreetAddressLine GeneralHeaderConstraintsInformantAssignedEntityGeneralHeaderConstraintsUSRealmAddressUseP GeneralHeaderConstraintsInformantAssignedEntityGeneralHeaderConstraintsUSRealmAddressUse' constraints.validation.dependOn.GeneralHeaderConstraintsInformantAssignedEntityGeneralHeaderConstraintsUSRealmAddressUse='GeneralHeaderConstraintsUSRealmAddressUseP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsInformantAssignedEntityPerson constraints.validation.error='GeneralHeaderConstraintsInformantAssignedEntityPersonName'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsInformantRelatedEntity constraints.validation.warning='GeneralHeaderConstraintsInformantRelatedEntityAddr GeneralHeaderConstraintsInformantRelatedEntityGeneralHeaderConstraintsUSRealmAddressCountry GeneralHeaderConstraintsInformantRelatedEntityGeneralHeaderConstraintsUSRealmAddressPostalCode GeneralHeaderConstraintsInformantRelatedEntityGeneralHeaderConstraintsUSRealmAddressState GeneralHeaderConstraintsInformantRelatedEntityGeneralHeaderConstraintsUSRealmAddressUseP' constraints.validation.error='GeneralHeaderConstraintsInformantRelatedEntityPerson GeneralHeaderConstraintsInformantRelatedEntityGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet GeneralHeaderConstraintsInformantRelatedEntityGeneralHeaderConstraintsUSRealmAddressCity GeneralHeaderConstraintsInformantRelatedEntityGeneralHeaderConstraintsUSRealmAddressStreetAddressLine GeneralHeaderConstraintsInformantRelatedEntityGeneralHeaderConstraintsUSRealmAddressUse' constraints.validation.query='GeneralHeaderConstraintsInformantRelatedEntityGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet GeneralHeaderConstraintsInformantRelatedEntityGeneralHeaderConstraintsUSRealmAddressCity GeneralHeaderConstraintsInformantRelatedEntityGeneralHeaderConstraintsUSRealmAddressCountry GeneralHeaderConstraintsInformantRelatedEntityGeneralHeaderConstraintsUSRealmAddressPostalCode GeneralHeaderConstraintsInformantRelatedEntityGeneralHeaderConstraintsUSRealmAddressState GeneralHeaderConstraintsInformantRelatedEntityGeneralHeaderConstraintsUSRealmAddressStreetAddressLine GeneralHeaderConstraintsInformantRelatedEntityGeneralHeaderConstraintsUSRealmAddressUseP GeneralHeaderConstraintsInformantRelatedEntityGeneralHeaderConstraintsUSRealmAddressUse' constraints.validation.dependOn.GeneralHeaderConstraintsInformantRelatedEntityGeneralHeaderConstraintsUSRealmAddressUse='GeneralHeaderConstraintsUSRealmAddressUseP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsParticipantSupport constraints.validation.error='GeneralHeaderConstraintsParticipantSupportAssociatedEntityHasAssociatedPersonOrScopingOrganization' constraints.validation.info='GeneralHeaderConstraintsParticipantSupportTime'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsInFulfillmentOf constraints.validation.error='GeneralHeaderConstraintsInFulfillmentOfOrder'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsInFulfillmentOfOrder constraints.validation.error='GeneralHeaderConstraintsInFulfillmentOfOrderId'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsDocumentationOf constraints.validation.error='GeneralHeaderConstraintsDocumentationOfServiceEvent'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsDocumentationOfServiceEvent constraints.validation.error='GeneralHeaderConstraintsDocumentationOfServiceEventEffectiveTimeLow GeneralHeaderConstraintsDocumentationOfServiceEventEffectiveTime' constraints.validation.warning='GeneralHeaderConstraintsDocumentationOfServiceEventPerformer'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsDocumentationOfServiceEventPerformer1 functionCode.codeSystem='2.16.840.1.113883.5.88' functionCode.codeSystemName='ParticipationFunction' constraints.validation.warning='GeneralHeaderConstraintsDocumentationOfServiceEventPerformer1FunctionCode' constraints.validation.info='GeneralHeaderConstraintsDocumentationOfServiceEventPerformer1FunctionCodeP' constraints.validation.dependOn.GeneralHeaderConstraintsDocumentationOfServiceEventPerformer1FunctionCode='GeneralHeaderConstraintsDocumentationOfServiceEventPerformer1FunctionCodeP' constraints.validation.error='GeneralHeaderConstraintsDocumentationOfServiceEventPerformer1TypeCode GeneralHeaderConstraintsDocumentationOfServiceEventPerformer1AssignedEntity'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsDocumentationOfServiceEventPerformer1AssignedEntity constraints.validation.warning='GeneralHeaderConstraintsDocumentationOfServiceEventPerformer1AssignedEntityHasNationalProviderIdentifier GeneralHeaderConstraintsDocumentationOfServiceEventPerformer1AssignedEntityCode GeneralHeaderConstraintsDocumentationOfServiceEventPerformer1AssignedEntityCodeP' code.codeSystem='2.16.840.1.113883.6.101' code.codeSystemName='NUCC Health Care Provider Taxonomy' constraints.validation.dependOn.GeneralHeaderConstraintsDocumentationOfServiceEventPerformer1AssignedEntityCode='GeneralHeaderConstraintsDocumentationOfServiceEventPerformer1AssignedEntityCodeP' constraints.validation.error='GeneralHeaderConstraintsDocumentationOfServiceEventPerformer1AssignedEntityId'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsUSRealmAddress constraints.validation.error='GeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet GeneralHeaderConstraintsUSRealmAddressCity GeneralHeaderConstraintsUSRealmAddressStreetAddressLine GeneralHeaderConstraintsUSRealmAddressUse' constraints.validation.warning='GeneralHeaderConstraintsUSRealmAddressCountry GeneralHeaderConstraintsUSRealmAddressPostalCode GeneralHeaderConstraintsUSRealmAddressState GeneralHeaderConstraintsUSRealmAddressUseP' constraints.validation.dependOn.GeneralHeaderConstraintsUSRealmAddressUse='GeneralHeaderConstraintsUSRealmAddressUseP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsUSRealmPatientName constraints.validation.query='GeneralHeaderConstraintsUSRealmPatientNameUSRealmPatientNameMixedContent' constraints.validation.error='GeneralHeaderConstraintsUSRealmPatientNameUSRealmPatientNameMixedContent GeneralHeaderConstraintsUSRealmPatientNameFamily GeneralHeaderConstraintsUSRealmPatientNameGiven GeneralHeaderConstraintsUSRealmPatientNameUse' constraints.validation.info='GeneralHeaderConstraintsUSRealmPatientNamePrefix GeneralHeaderConstraintsUSRealmPatientNameSuffix GeneralHeaderConstraintsUSRealmPatientNameUseP' constraints.validation.dependOn.GeneralHeaderConstraintsUSRealmPatientNameUse='GeneralHeaderConstraintsUSRealmPatientNameUseP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsAuthorization constraints.validation.error='GeneralHeaderConstraintsAuthorizationConsent'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolGeneralHeaderConstraintsAuthorizationConsent constraints.validation.info='GeneralHeaderConstraintsAuthorizationConsentCode GeneralHeaderConstraintsAuthorizationConsentId' statusCode.code='completed' constraints.validation.error='GeneralHeaderConstraintsAuthorizationConsentStatusCode GeneralHeaderConstraintsAuthorizationConsentStatusCodeP' constraints.validation.dependOn.GeneralHeaderConstraintsAuthorizationConsentStatusCode='GeneralHeaderConstraintsAuthorizationConsentStatusCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uqNWwIokEeSkH97cUQxLGA" base_Class="_2EAisBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='AllergyProblemActTemplateId AllergyProblemActEffectiveTimeLow AllergyProblemActEffectiveTimeHigh AllergyProblemActClassCode AllergyProblemActMoodCode AllergyProblemActId AllergyProblemActCode AllergyProblemActStatusCode AllergyProblemActEffectiveTime AllergyProblemActAllergyObservation AllergyProblemActCDCodeAndCodeSystemValues AllergyProblemActCDCode AllergyProblemActCDCodeSystem' templateId.root='2.16.840.1.113883.10.20.22.4.30' classCode='ACT' moodCode='EVN' constraints.validation.query='AllergyProblemActCDCodeAndCodeSystemValues AllergyProblemActCDCode AllergyProblemActCDCodeSystem'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolAllergyProblemActCD constraints.validation.error='AllergyProblemActCDCodeAndCodeSystemValues AllergyProblemActCDCode AllergyProblemActCDCodeSystem'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_urUKAIokEeSkH97cUQxLGA" base_Generalization="_2F5ZERSVEeGGzu7fmW9pXw"/>
  <Ecore:EClass xmi:id="_urUxEIokEeSkH97cUQxLGA" base_Class="_2EaLUBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='SubstanceOrDeviceAllergyObservationTemplateId AllergyObservationReferenceValue AllergyObservationAllergyStatusInversionIndicator AllergyObservationReactionInversionIndicator AllergyObservationSeverityInversionIndicator AllergyObservationClassCode AllergyObservationMoodCode AllergyObservationId AllergyObservationCode AllergyObservationCodeP AllergyObservationStatusCode AllergyObservationEffectiveTime AllergyObservationValue AllergyObservationParticipantParticipantRolePlayingEntityOriginalTextReferenceValue AllergyObservationParticipantParticipantRolePlayingEntityCodeTerminologyValueSetGroupSRFI AllergyObservationParticipantParticipantRolePlayingEntityClassCode AllergyObservationParticipantParticipantRolePlayingEntityCode AllergyObservationParticipantParticipantRoleClassCode AllergyObservationParticipantParticipantRolePlayingEntity AllergyObservationParticipantTypeCode AllergyObservationParticipantParticipantRole' templateId.root='2.16.840.1.113883.10.20.22.4.7' constraints.validation.warning='AllergyObservationValueOriginalText AllergyObservationOriginalTextReference AllergyObservationOriginalTextReferenceValue AllergyObservationReactionObservation AllergyObservationParticipant AllergyObservationParticipantParticipantRolePlayingEntityCEOriginalText AllergyObservationParticipantParticipantRolePlayingEntityReferenceValue AllergyObservationParticipantParticipantRolePlayingEntityOriginalTextReference' classCode='OBS' moodCode='EVN' code.code='ASSERTION' code.codeSystem='2.16.840.1.113883.5.4' code.codeSystemName='HL7ActCode' constraints.validation.dependOn.AllergyObservationCode='AllergyObservationCodeP' statusCode.code='completed' value.codeSystem='2.16.840.1.113883.6.96' value.codeSystemName='SNOMEDCT' constraints.validation.info='AllergyObservationSeverityObservation AllergyObservationAllergyStatusObservation AllergyObservationParticipantParticipantRolePlayingEntityCETranslation' constraints.validation.query='AllergyObservationParticipantParticipantRolePlayingEntityCEOriginalText AllergyObservationParticipantParticipantRolePlayingEntityCETranslation AllergyObservationParticipantParticipantRolePlayingEntityOriginalTextReferenceValue AllergyObservationParticipantParticipantRolePlayingEntityReferenceValue AllergyObservationParticipantParticipantRolePlayingEntityOriginalTextReference AllergyObservationParticipantParticipantRolePlayingEntityCodeTerminologyValueSetGroupSRFI AllergyObservationParticipantParticipantRolePlayingEntityClassCode AllergyObservationParticipantParticipantRolePlayingEntityCode AllergyObservationParticipantParticipantRoleClassCode AllergyObservationParticipantParticipantRolePlayingEntity AllergyObservationParticipantTypeCode AllergyObservationParticipantParticipantRole'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolAllergyObservationParticipant typeCode='CSM' constraints.validation.error='AllergyObservationParticipantTypeCode AllergyObservationParticipantParticipantRole'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolAllergyObservationParticipantParticipantRole classCode='MANU' constraints.validation.error='AllergyObservationParticipantParticipantRoleClassCode AllergyObservationParticipantParticipantRolePlayingEntity'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolAllergyObservationParticipantParticipantRolePlayingEntity constraints.validation.error='AllergyObservationParticipantParticipantRolePlayingEntityOriginalTextReferenceValue AllergyObservationParticipantParticipantRolePlayingEntityCodeTerminologyValueSetGroupSRFI AllergyObservationParticipantParticipantRolePlayingEntityClassCode AllergyObservationParticipantParticipantRolePlayingEntityCode' constraints.validation.warning='AllergyObservationParticipantParticipantRolePlayingEntityReferenceValue AllergyObservationParticipantParticipantRolePlayingEntityOriginalTextReference AllergyObservationParticipantParticipantRolePlayingEntityCEOriginalText' classCode='MMAT' constraints.validation.query='AllergyObservationParticipantParticipantRolePlayingEntityCEOriginalText AllergyObservationParticipantParticipantRolePlayingEntityCETranslation' constraints.validation.info='AllergyObservationParticipantParticipantRolePlayingEntityCETranslation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolAllergyObservationParticipantParticipantRolePlayingEntityCE constraints.validation.warning='AllergyObservationParticipantParticipantRolePlayingEntityCEOriginalText' constraints.validation.info='AllergyObservationParticipantParticipantRolePlayingEntityCETranslation'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_usB7sIokEeSkH97cUQxLGA" base_Class="_2EqqABSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='AgeObservationTemplateId AgeObservationValueUnits AgeObservationClassCode AgeObservationMoodCode AgeObservationCode AgeObservationCodeP AgeObservationStatusCode AgeObservationStatusCodeP AgeObservationValue' templateId.root='2.16.840.1.113883.10.20.22.4.31' classCode='OBS' moodCode='EVN' code.code='445518008' code.codeSystem='2.16.840.1.113883.6.96' code.codeSystemName='SNOMEDCT' code.displayName='Age At Onset' constraints.validation.dependOn.AgeObservationCode='AgeObservationCodeP' statusCode.code='completed'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_usWEwIokEeSkH97cUQxLGA" base_Class="_2ExXsBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='HealthStatusObservationTemplateId HealthStatusObservationHasTextReferenceValue HealthStatusObservationClassCode HealthStatusObservationMoodCode HealthStatusObservationCode HealthStatusObservationStatusCode HealthStatusObservationValue HealthStatusObservationValueP' templateId.root='2.16.840.1.113883.10.20.22.4.5' constraints.validation.warning='HealthStatusObservationHasTextReference HealthStatusObservationTextReferenceValue HealthStatusObservationText' classCode='OBS' moodCode='EVN' code.code='11323-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Health status' statusCode.code='completed' value.codeSystem='2.16.840.1.113883.6.96' value.codeSystemName='SNOMEDCT'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uso_sIokEeSkH97cUQxLGA" base_Class="_2E_aIRSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ReactionObservationTemplateId ReactionObservationReferenceValue ReactionObservationSeverityObservationInversionInd ReactionObservationProcedureActivityProcedureInversionInd ReactionObservationMedicationActivityInversionInd ReactionObservationClassCode ReactionObservationMoodCode ReactionObservationId ReactionObservationCode ReactionObservationStatusCode ReactionObservationValue' templateId.root='2.16.840.1.113883.10.20.22.4.9' constraints.validation.warning='ReactionObservationTextReference ReactionObservationTextReferenceValue ReactionObservationEffectiveTimeLow ReactionObservationEffectiveTimeHigh ReactionObservationText ReactionObservationEffectiveTime ReactionObservationSeverityObservation' classCode='OBS' moodCode='EVN' statusCode.code='completed' value.codeSystem='2.16.840.1.113883.6.96' value.codeSystemName='SNOMEDCT' constraints.validation.info='ReactionObservationProcedureActivityProcedure ReactionObservationMedicationActivity'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_us8hsIokEeSkH97cUQxLGA" base_Class="_2FGu4hSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='SeverityObservationTemplateId SeverityObservationReferenceValue SeverityObservationClassCode SeverityObservationMoodCode SeverityObservationCode SeverityObservationStatusCode SeverityObservationValue' templateId.root='2.16.840.1.113883.10.20.22.4.8' constraints.validation.warning='SeverityObservationTextReference SeverityObservationTextReferenceValue SeverityObservationText' classCode='OBS' moodCode='EVN' code.code='SEV' code.codeSystem='2.16.840.1.113883.5.4' code.codeSystemName='HL7ActCode' code.displayName='Severity observation' statusCode.code='completed' value.codeSystem='2.16.840.1.113883.6.96' value.codeSystemName='SNOMEDCT'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_utNncYokEeSkH97cUQxLGA" base_Class="_2FRuAhSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='AllergyStatusObservationTemplateId AllergyStatusObservationClassCode AllergyStatusObservationMoodCode AllergyStatusObservationCode AllergyStatusObservationStatusCode AllergyStatusObservationValue' templateId.root='2.16.840.1.113883.10.20.22.4.28' classCode='OBS' moodCode='EVN' code.code='33999-4' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Status' statusCode.code='completed' value.codeSystem='2.16.840.1.113883.6.96' value.codeSystemName='SNOMEDCT'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_utabwIokEeSkH97cUQxLGA" base_Class="_2FhloBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='CommentActivityTemplateId CommentActivityTextReference CommentActivityTextReferenceValue CommentActivityReferenceValue CommentActivityClassCode CommentActivityMoodCode CommentActivityCode CommentActivityText CommentActivityAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet CommentActivityAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressCity CommentActivityAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressStreetAddressLine CommentActivityAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressUse CommentActivityAuthorAssignedAuthorHasPersonOrOrganization CommentActivityAuthorAssignedAuthorAssignPersonName CommentActivityAuthorAssignedAuthorAddr CommentActivityAuthorAssignedAuthorId CommentActivityAuthorTime CommentActivityAuthorAssignedAuthor' templateId.root='2.16.840.1.113883.10.20.22.4.64' classCode='ACT' moodCode='EVN' code.code='48767-8' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Annotation comment' constraints.validation.info='CommentActivityAuthor' constraints.validation.query='CommentActivityAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet CommentActivityAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressCity CommentActivityAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressCountry CommentActivityAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressPostalCode CommentActivityAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressState CommentActivityAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressStreetAddressLine CommentActivityAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressUseP CommentActivityAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressUse CommentActivityAuthorAssignedAuthorHasPersonOrOrganization CommentActivityAuthorAssignedAuthorAssignPersonName CommentActivityAuthorAssignedAuthorAddr CommentActivityAuthorAssignedAuthorId CommentActivityAuthorTime CommentActivityAuthorAssignedAuthor' constraints.validation.warning='CommentActivityAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressCountry CommentActivityAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressPostalCode CommentActivityAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressState CommentActivityAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressUseP' constraints.validation.dependOn.CommentActivityAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressUse='GeneralHeaderConstraintsUSRealmAddressUseP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolCommentActivityAuthor constraints.validation.error='CommentActivityAuthorTime CommentActivityAuthorAssignedAuthor'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolCommentActivityAuthorAssignedAuthor constraints.validation.error='CommentActivityAuthorAssignedAuthorHasPersonOrOrganization CommentActivityAuthorAssignedAuthorAssignPersonName CommentActivityAuthorAssignedAuthorAddr CommentActivityAuthorAssignedAuthorId CommentActivityAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet CommentActivityAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressCity CommentActivityAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressStreetAddressLine CommentActivityAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressUse' constraints.validation.query='CommentActivityAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet CommentActivityAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressCity CommentActivityAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressCountry CommentActivityAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressPostalCode CommentActivityAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressState CommentActivityAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressStreetAddressLine CommentActivityAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressUseP CommentActivityAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressUse' constraints.validation.warning='CommentActivityAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressCountry CommentActivityAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressPostalCode CommentActivityAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressState CommentActivityAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressUseP' constraints.validation.dependOn.CommentActivityAuthorAssignedAuthorGeneralHeaderConstraintsUSRealmAddressUse='GeneralHeaderConstraintsUSRealmAddressUseP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_utyPMIokEeSkH97cUQxLGA" base_Class="_2GHbgBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='MedicationActivityTemplateId MedicationActivityTextReferenceValue MedicationActivityEffectiveTimeIVLTSorTS MedicationActivityEffectiveTimeIVLTSLow MedicationActivityEffectiveTimeIVLTSHigh MedicationActivityEffectiveTimeTSValue MedicationActivityEffectiveTimeOperator MedicationActivityDrugVehicleTypeCode MedicationActivityInstructionsInversionInd MedicationActivityRateQuantityUnit MedicationActivityClassCode MedicationActivityMoodCode MedicationActivityId MedicationActivityStatusCode MedicationActivityRouteCode MedicationActivityApproachSiteCode MedicationActivityConsumable MedicationActivityConsumableMedicationInformation MedicationActivityPreconditionTypeCode MedicationActivityPreconditionPreconditionForSubstanceAdministration' templateId.root='2.16.840.1.113883.10.20.22.4.16' constraints.validation.warning='MedicationActivityDoseQuantityorrateQuantity MedicationActivityTextReference MedicationActivityReferenceValue MedicationActivityEffectiveTimePIVLTS MedicationActivityDoseQuantityUnit MedicationActivityDoseQuantity MedicationActivityText' classCode='SBADM' constraints.validation.info='MedicationActivityCode MedicationActivityRouteCodeP MedicationActivityApproachSiteCodeP MedicationActivityRateQuantity MedicationActivityMaxDoseQuantity MedicationActivityAdministrationUnitCode MedicationActivityRepeatNumber MedicationActivityMedicationSupplyOrder MedicationActivityReactionObservation MedicationActivityPerformer MedicationActivityInstructions MedicationActivityIndication MedicationActivityMedicationDispense MedicationActivityDrugVehicle MedicationActivityPrecondition' routeCode.codeSystem='2.16.840.1.113883.3.26.1.1' routeCode.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.MedicationActivityRouteCode='MedicationActivityRouteCodeP' approachSiteCode.codeSystem='2.16.840.1.113883.6.96' approachSiteCode.codeSystemName='SNOMEDCT' constraints.validation.dependOn.MedicationActivityApproachSiteCode='MedicationActivityApproachSiteCodeP' constraints.validation.query='MedicationActivityConsumableMedicationInformation MedicationActivityPreconditionTypeCode MedicationActivityPreconditionPreconditionForSubstanceAdministration'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolMedicationActivityConsumable constraints.validation.error='MedicationActivityConsumableMedicationInformation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolMedicationActivityPrecondition typeCode='PRCN' constraints.validation.error='MedicationActivityPreconditionTypeCode MedicationActivityPreconditionPreconditionForSubstanceAdministration'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uugA4IokEeSkH97cUQxLGA" base_Class="_2G2bUxSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProductInstanceTemplateId ProductInstanceClassCode ProductInstanceId ProductInstanceScopingEntity ProductInstancePlayingDevice ProductInstanceScopingEntityId' templateId.root='2.16.840.1.113883.10.20.22.4.37' classCode='MANU' constraints.validation.query='ProductInstanceScopingEntityId ProductInstancePlayingDeviceCode' constraints.validation.warning='ProductInstancePlayingDeviceCode'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolProductInstanceScopingEntity constraints.validation.error='ProductInstanceScopingEntityId'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolProductInstancePlayingDevice constraints.validation.warning='ProductInstancePlayingDeviceCode'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uupx4IokEeSkH97cUQxLGA" base_Class="_2G8h9RSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='InstructionsTemplateId InstructionsTextReferenceValue InstructionsClassCode InstructionsMoodCode InstructionsCodeP InstructionsStatusCode' templateId.root='2.16.840.1.113883.10.20.22.4.20' constraints.validation.warning='InstructionsTextReference InstructionsReferenceValue InstructionsCode InstructionsText' classCode='ACT' moodCode='INT' code.codeSystem='2.16.840.1.113883.6.96' code.codeSystemName='SNOMEDCT' constraints.validation.dependOn.InstructionsCode='InstructionsCodeP' statusCode.code='completed'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uu_JEIokEeSkH97cUQxLGA" base_Class="_2HIvMBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='NonMedicinalSupplyActivityTemplateId NonMedicinalSupplyActivityProductInstanceTypeCode NonMedicinalSupplyActivityClassCode NonMedicinalSupplyActivityMoodCode NonMedicinalSupplyActivityId NonMedicinalSupplyActivityStatusCode NonMedicinalSupplyActivityProductInstance' templateId.root='2.16.840.1.113883.10.20.22.4.50' constraints.validation.warning='NonMedicinalSupplyActivityEffectiveTimeHigh NonMedicinalSupplyActivityEffectiveTime NonMedicinalSupplyActivityQuantity' classCode='SPLY'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uvMkcIokEeSkH97cUQxLGA" base_Class="_2H6yUBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProblemConcernActTemplateId ProblemConcernActEffectiveTimeLow ProblemConcernActClassCode ProblemConcernActMoodCode ProblemConcernActId ProblemConcernActCode ProblemConcernActCodeP ProblemConcernActStatusCode ProblemConcernActEffectiveTime ProblemConcernActProblemObservation' templateId.root='2.16.840.1.113883.10.20.22.4.3' constraints.validation.warning='ProblemConcernActEffectiveTimeHigh' classCode='ACT' moodCode='EVN' code.code='CONC' code.codeSystem='2.16.840.1.113883.5.6' code.codeSystemName='HL7ActClass' code.displayName='Concern' constraints.validation.dependOn.ProblemConcernActCode='ProblemConcernActCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uvdDIIokEeSkH97cUQxLGA" base_Class="_2IJb0BSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='GeneralHeaderConstraintsTemplateId ContinuityOfCareDocumentCode ContinuityOfCareDocumentCodeP ContinuityOfCareDocumentLanguageCode ContinuityOfCareDocumentDocumentationOf ContinuityOfCareDocumentAuthor ContinuityOfCareDocumentAllergiesSection ContinuityOfCareDocumentMedicationsSection ContinuityOfCareDocumentProblemSection ContinuityOfCareDocumentProceduresSection ContinuityOfCareDocumentResultsSection ContinuityOfCareDocumentDocumentationOfServiceEventEffectiveTimeHigh ContinuityOfCareDocumentDocumentationOfServiceEventEffectiveTimeLow ContinuityOfCareDocumentDocumentationOfServiceEventPerformerAssignedEntityId ContinuityOfCareDocumentDocumentationOfServiceEventPerformerTypeCode ContinuityOfCareDocumentDocumentationOfServiceEventClassCode ContinuityOfCareDocumentDocumentationOfServiceEventEffectiveTime ContinuityOfCareDocumentDocumentationOfServiceEvent ContinuityOfCareDocumentAuthorAssignedAuthorHasAssignedPersonOrRepresentedOrganization ContinuityOfCareDocumentAuthorAssignedAuthorHasRepresentOrganization ContinuityOfCareDocumentAuthorAssignedAuthor' templateId.root='2.16.840.1.113883.10.20.22.1.2' code.code='34133-9' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Summarization of Episode Note' constraints.validation.dependOn.ContinuityOfCareDocumentCode='ContinuityOfCareDocumentCodeP' constraints.validation.info='ContinuityOfCareDocumentAdvanceDirectivesSection ContinuityOfCareDocumentEncountersSection ContinuityOfCareDocumentFamilyHistorySection ContinuityOfCareDocumentFunctionalStatusSection ContinuityOfCareDocumentImmunizationsSectionEntriesOptional ContinuityOfCareDocumentMedicalEquipmentSection ContinuityOfCareDocumentPayersSection ContinuityOfCareDocumentPlanOfCareSection ContinuityOfCareDocumentSocialHistorySection ContinuityOfCareDocumentVitalSignsSectionEntriesOptional ContinuityOfCareDocumentDocumentationOfServiceEventPerformerAssignedEntityCode ContinuityOfCareDocumentDocumentationOfServiceEventPerformerAssignedEntity' constraints.validation.query='ContinuityOfCareDocumentDocumentationOfServiceEventEffectiveTimeHigh ContinuityOfCareDocumentDocumentationOfServiceEventEffectiveTimeLow ContinuityOfCareDocumentDocumentationOfServiceEventPerformerAssignedEntityHasNationalProviderIdentifier ContinuityOfCareDocumentDocumentationOfServiceEventPerformerAssignedEntityCode ContinuityOfCareDocumentDocumentationOfServiceEventPerformerAssignedEntityId ContinuityOfCareDocumentDocumentationOfServiceEventPerformerTypeCode ContinuityOfCareDocumentDocumentationOfServiceEventPerformerAssignedEntity ContinuityOfCareDocumentDocumentationOfServiceEventClassCode ContinuityOfCareDocumentDocumentationOfServiceEventEffectiveTime ContinuityOfCareDocumentDocumentationOfServiceEventPerformer ContinuityOfCareDocumentDocumentationOfServiceEvent ContinuityOfCareDocumentAuthorAssignedAuthorHasAssignedPersonOrRepresentedOrganization ContinuityOfCareDocumentAuthorAssignedAuthorHasRepresentOrganization ContinuityOfCareDocumentAuthorAssignedAuthor' constraints.validation.warning='ContinuityOfCareDocumentDocumentationOfServiceEventPerformerAssignedEntityHasNationalProviderIdentifier ContinuityOfCareDocumentDocumentationOfServiceEventPerformer'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolContinuityOfCareDocumentDocumentationOf constraints.validation.error='ContinuityOfCareDocumentDocumentationOfServiceEvent'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolContinuityOfCareDocumentDocumentationOfServiceEvent classCode='PCPR' constraints.validation.error='ContinuityOfCareDocumentDocumentationOfServiceEventClassCode ContinuityOfCareDocumentDocumentationOfServiceEventEffectiveTime ContinuityOfCareDocumentDocumentationOfServiceEventEffectiveTimeHigh ContinuityOfCareDocumentDocumentationOfServiceEventEffectiveTimeLow' constraints.validation.warning='ContinuityOfCareDocumentDocumentationOfServiceEventPerformer' constraints.validation.query='ContinuityOfCareDocumentDocumentationOfServiceEventEffectiveTimeHigh ContinuityOfCareDocumentDocumentationOfServiceEventEffectiveTimeLow'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolContinuityOfCareDocumentDocumentationOfServiceEventPerformer typeCode='PRF' constraints.validation.error='ContinuityOfCareDocumentDocumentationOfServiceEventPerformerTypeCode' constraints.validation.info='ContinuityOfCareDocumentDocumentationOfServiceEventPerformerAssignedEntity'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolContinuityOfCareDocumentDocumentationOfServiceEventPerformerAssignedEntity constraints.validation.warning='ContinuityOfCareDocumentDocumentationOfServiceEventPerformerAssignedEntityHasNationalProviderIdentifier' constraints.validation.info='ContinuityOfCareDocumentDocumentationOfServiceEventPerformerAssignedEntityCode' constraints.validation.error='ContinuityOfCareDocumentDocumentationOfServiceEventPerformerAssignedEntityId'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolContinuityOfCareDocumentDocumentationOfServiceEventEffectiveTime constraints.validation.error='ContinuityOfCareDocumentDocumentationOfServiceEventEffectiveTimeHigh ContinuityOfCareDocumentDocumentationOfServiceEventEffectiveTimeLow'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolContinuityOfCareDocumentAuthor constraints.validation.error='ContinuityOfCareDocumentAuthorAssignedAuthor'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolContinuityOfCareDocumentAuthorAssignedAuthor constraints.validation.error='ContinuityOfCareDocumentAuthorAssignedAuthorHasAssignedPersonOrRepresentedOrganization ContinuityOfCareDocumentAuthorAssignedAuthorHasRepresentOrganization'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uv2rwIokEeSkH97cUQxLGA" base_Class="_2IWQIxSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='FamilyHistorySectionTemplateId FamilyHistorySectionCode FamilyHistorySectionCodeP FamilyHistorySectionTitle FamilyHistorySectionText' templateId.root='2.16.840.1.113883.10.20.22.2.15' code.code='10157-6' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Family History' constraints.validation.info='FamilyHistorySectionFamilyHistory'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uwBD0YokEeSkH97cUQxLGA" base_Class="_2IbIoBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='FamilyHistoryOrganizerTemplateId FamilyHistoryOrganizerClassCode FamilyHistoryOrganizerMoodCode FamilyHistoryOrganizerStatusCode FamilyHistoryOrganizerStatusCodeP FamilyHistoryOrganizerFamilyHistoryObservation FamilyHistoryOrganizerSubject FamilyHistoryOrganizerSubjectRelatedSubjectSubjectPersonAdministrativeGenderCode FamilyHistoryOrganizerSubjectRelatedSubjectSubjectPersonAdministrativeGenderCodeP FamilyHistoryOrganizerSubjectRelatedSubjectClassCode FamilyHistoryOrganizerSubjectRelatedSubjectCodeP FamilyHistoryOrganizerSubjectRelatedSubject' templateId.root='2.16.840.1.113883.10.20.22.4.45' classCode='CLUSTER' moodCode='EVN' statusCode.code='completed' constraints.validation.dependOn.FamilyHistoryOrganizerStatusCode='FamilyHistoryOrganizerStatusCodeP' constraints.validation.query='FamilyHistoryOrganizerSubjectRelatedSubjectSubjectPersonAdministrativeGenderCode FamilyHistoryOrganizerSubjectRelatedSubjectSubjectPersonAdministrativeGenderCodeP FamilyHistoryOrganizerSubjectRelatedSubjectSubjectPersonBirthTime FamilyHistoryOrganizerSubjectRelatedSubjectSubjectPersonSDTCDeceasedInd FamilyHistoryOrganizerSubjectRelatedSubjectSubjectPersonSDTCDeceasedTime FamilyHistoryOrganizerSubjectRelatedSubjectSubjectPersonSDTCId FamilyHistoryOrganizerSubjectRelatedSubjectClassCode FamilyHistoryOrganizerSubjectRelatedSubjectCode FamilyHistoryOrganizerSubjectRelatedSubjectCodeP FamilyHistoryOrganizerSubjectRelatedSubjectSubject FamilyHistoryOrganizerSubjectRelatedSubject' constraints.validation.warning='FamilyHistoryOrganizerSubjectRelatedSubjectSubjectPersonBirthTime FamilyHistoryOrganizerSubjectRelatedSubjectSubjectPersonSDTCId FamilyHistoryOrganizerSubjectRelatedSubjectCode FamilyHistoryOrganizerSubjectRelatedSubjectSubject' constraints.validation.info='FamilyHistoryOrganizerSubjectRelatedSubjectSubjectPersonSDTCDeceasedInd FamilyHistoryOrganizerSubjectRelatedSubjectSubjectPersonSDTCDeceasedTime'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolFamilyHistoryOrganizerSubject constraints.validation.error='FamilyHistoryOrganizerSubjectRelatedSubject'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolFamilyHistoryOrganizerSubjectRelatedSubject classCode='PRS' constraints.validation.error='FamilyHistoryOrganizerSubjectRelatedSubjectClassCode FamilyHistoryOrganizerSubjectRelatedSubjectCodeP' code.codeSystem='2.16.840.1.113883.5.111' code.codeSystemName='RoleCode' constraints.validation.warning='FamilyHistoryOrganizerSubjectRelatedSubjectCode FamilyHistoryOrganizerSubjectRelatedSubjectSubject'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolFamilyHistoryOrganizerSubjectRelatedSubjectSubjectPerson administrativeGenderCode.codeSystem='2.16.840.1.113883.5.1' administrativeGenderCode.codeSystemName='AdministrativeGenderCode' constraints.validation.error='FamilyHistoryOrganizerSubjectRelatedSubjectSubjectPersonAdministrativeGenderCode FamilyHistoryOrganizerSubjectRelatedSubjectSubjectPersonAdministrativeGenderCodeP' constraints.validation.warning='FamilyHistoryOrganizerSubjectRelatedSubjectSubjectPersonBirthTime FamilyHistoryOrganizerSubjectRelatedSubjectSubjectPersonSDTCId' constraints.validation.info='FamilyHistoryOrganizerSubjectRelatedSubjectSubjectPersonSDTCDeceasedInd FamilyHistoryOrganizerSubjectRelatedSubjectSubjectPersonSDTCDeceasedTime'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uweW0IokEeSkH97cUQxLGA" base_Class="_2IpyIxSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='FamilyHistoryObservationTemplateId FamilyHistoryObservationAgeObservationInversion FamilyHistoryObservationClassCode FamilyHistoryObservationMoodCode FamilyHistoryObservationId FamilyHistoryObservationCodeP FamilyHistoryObservationStatusCode FamilyHistoryObservationStatusCodeP FamilyHistoryObservationValue' templateId.root='2.16.840.1.113883.10.20.22.4.46' classCode='OBS' moodCode='EVN' code.codeSystem='2.16.840.1.113883.6.96' code.codeSystemName='SNOMEDCT' constraints.validation.warning='FamilyHistoryObservationCode FamilyHistoryObservationEffectiveTime' constraints.validation.dependOn.FamilyHistoryObservationCode='FamilyHistoryObservationCodeP' statusCode.code='completed' value.codeSystem='2.16.840.1.113883.6.96' value.codeSystemName='SNOMEDCT' constraints.validation.info='FamilyHistoryObservationAgeObservation FamilyHistoryObservationFamilyHistoryDeathObservation'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uw3YYIokEeSkH97cUQxLGA" base_Class="_2JKvgBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='SocialHistorySectionTemplateId SocialHistorySectionCode SocialHistorySectionCodeP SocialHistorySectionTitle SocialHistorySectionText' templateId.root='2.16.840.1.113883.10.20.22.2.17' code.code='29762-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Social history' constraints.validation.info='SocialHistorySectionSocialHistoryObservation SocialHistorySectionPregnancyObservation SocialHistorySectionTobaccoUse' constraints.validation.warning='SocialHistorySectionSmokingStatusObservation'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uxC-kIokEeSkH97cUQxLGA" base_Class="_2JOZ4BSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='SocialHistoryObservationTemplateId SocialHistoryObservationReferenceValue SocialHistoryObservationClassCode SocialHistoryObservationMoodCode SocialHistoryObservationId SocialHistoryObservationStatusCode' templateId.root='2.16.840.1.113883.10.20.22.4.38' constraints.validation.warning='SocialHistoryObservationOriginalText SocialHistoryObservationReference SocialHistoryObservationCode SocialHistoryObservationCodeP SocialHistoryObservationValue' classCode='OBS' moodCode='EVN' code.codeSystem='2.16.840.1.113883.6.96' code.codeSystemName='SNOMEDCT' constraints.validation.dependOn.SocialHistoryObservationCode='SocialHistoryObservationCodeP' statusCode.code='completed'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_uxTdQIokEeSkH97cUQxLGA" base_Generalization="_ksO6UBVgEeGQCvUGzi1kDQ"/>
  <Ecore:EClass xmi:id="_uxUEUYokEeSkH97cUQxLGA" base_Class="_2Js7AxSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ResultsSectionEntriesOptionalTemplateId ResultsSectionEntriesOptionalCode ResultsSectionEntriesOptionalCodeP ResultsSectionEntriesOptionalTitle ResultsSectionText ResultsSectionResultOrganizer' templateId.root='2.16.840.1.113883.10.20.22.2.3.1' code.code='30954-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Relevant diagnostic tests and/or laboratory data' constraints.validation.dependOn.ResultsSectionEntriesOptionalCode='ResultsSectionEntriesOptionalCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uxfDcIokEeSkH97cUQxLGA" base_Class="_2JxzgBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ResultOrganizerTemplateId ResultOrganizerClassCode ResultOrganizerMoodCode ResultOrganizerId ResultOrganizerStatusCode ResultOrganizerStatusCodeP ResultOrganizerCode ResultOrganizerResultObservation' templateId.root='2.16.840.1.113883.10.20.22.4.1' constraints.validation.warning='ResultOrganizerCodeValue ResultOrganizerClassCodeValue' moodCode='EVN' constraints.validation.dependOn.ResultOrganizerStatusCode='ResultOrganizerStatusCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uxwwQIokEeSkH97cUQxLGA" base_Class="_2J1d4BSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ResultObservationTemplateId ResultObservationTextReferenceValue ResultObservationNoObservationRangeCode ResultObservationClassCode ResultObservationMoodCode ResultObservationId ResultObservationCode ResultObservationStatusCode ResultObservationStatusCodeP ResultObservationEffectiveTime ResultObservationValue' templateId.root='2.16.840.1.113883.10.20.22.4.2' constraints.validation.warning='ResultObservationTextReference ResultObservationReferenceValue ResultObservationCodeValue ResultObservationText ResultObservationInterpretationCode' constraints.validation.info='ResultObservationAuthorMultiplicity ResultObservationMethodCode ResultObservationTargetSiteCode' classCode='OBS' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uyUJ4IokEeSkH97cUQxLGA" base_Class="_2KEucBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='MedicalEquipmentSectionTemplateId MedicalEquipmentSectionCode MedicalEquipmentSectionCodeP MedicalEquipmentSectionTitle MedicalEquipmentSectionText' templateId.root='2.16.840.1.113883.10.20.22.2.23' code.code='46264-8' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Medical Equipment' constraints.validation.warning='MedicalEquipmentSectionNonMedicinalSupplyActivity'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uyd64YokEeSkH97cUQxLGA" base_Class="_2KKOBhSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='FunctionalStatusSectionTemplateId FunctionalStatusSectionCode FunctionalStatusSectionTitle FunctionalStatusSectionText' templateId.root='2.16.840.1.113883.10.20.22.2.14' code.code='47420-5' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Functional status assessment' constraints.validation.info='FunctionalStatusSectionFunctionalStatusResultOrganizer FunctionalStatusSectionCognitiveStatusResultOrganizer FunctionalStatusSectionFunctionalStatusResultObservation FunctionalStatusSectionCognitiveStatusResultObservation FunctionalStatusSectionFunctionalStatusProblemObservation FunctionalStatusSectionCognitiveStatusProblemObservation FunctionalStatusSectionCaregiverCharacteristics FunctionalStatusSectionAssessmentScaleObservation FunctionalStatusSectionNonMedicinalSupplyActivity FunctionalStatusSectionPressureUlcerObservation FunctionalStatusSectionNumberOfPressureUlcersObservation FunctionalStatusSectionHighestPressureUlcerStage'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_uylPoIokEeSkH97cUQxLGA" base_Generalization="_8UhPsBVfEeGQCvUGzi1kDQ"/>
  <Ecore:EClass xmi:id="_uyl2sIokEeSkH97cUQxLGA" base_Class="_2KgzUBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='AdvanceDirectivesSectionEntriesOptionalTemplateId AdvanceDirectivesSectionCode AdvanceDirectivesSectionCodeP AdvanceDirectivesSectionTitle AdvanceDirectivesSectionText AdvanceDirectivesSectionAdvanceDirectiveObservation' templateId.root='2.16.840.1.113883.10.20.22.2.21.1' code.code='42348-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Advance directives' constraints.validation.dependOn.AdvanceDirectivesSectionCode='AdvanceDirectivesSectionCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uyxc4IokEeSkH97cUQxLGA" base_Class="_2KlEwBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='AdvanceDirectiveObservationTemplateId AdvanceDirectiveObservationHasStartingTime AdvanceDirectiveObservationHasEndingTime AdvanceDirectiveObservationClassCode AdvanceDirectiveObservationMoodCode AdvanceDirectiveObservationId AdvanceDirectiveObservationCodeP AdvanceDirectiveObservationStatusCode AdvanceDirectiveObservationEffectiveTime AdvanceDirectiveObservationVerifierTypeCode AdvanceDirectiveObservationVerifierParticipantRole AdvanceDirectiveObservationCustodianCustodianRoleCustodianEntityName AdvanceDirectiveObservationCustodianCustodianRoleClassCode AdvanceDirectiveObservationCustodianCustodianRolePlayingEntity AdvanceDirectiveObservationCustodianTypeCode AdvanceDirectiveObservationCustodianRole AdvanceDirectiveObservationReferenceExternalDocumentId AdvanceDirectiveObservationReferenceTypeCode AdvanceDirectiveObservationReferenceExternalDocument' templateId.root='2.16.840.1.113883.10.20.22.4.48' classCode='OBS' moodCode='EVN' code.codeSystem='2.16.840.1.113883.6.96' code.codeSystemName='SNOMEDCT' constraints.validation.warning='AdvanceDirectiveObservationCode AdvanceDirectiveObservationVerifier AdvanceDirectiveObservationCustodian AdvanceDirectiveObservationReference AdvanceDirectiveObservationVerifierTime AdvanceDirectiveObservationCustodianCustodianRoleAddr AdvanceDirectiveObservationCustodianCustodianRoleTelecom' constraints.validation.dependOn.AdvanceDirectiveObservationCode='AdvanceDirectiveObservationCodeP' statusCode.code='completed' constraints.validation.query='AdvanceDirectiveObservationVerifierTime AdvanceDirectiveObservationVerifierTypeCode AdvanceDirectiveObservationVerifierParticipantRole AdvanceDirectiveObservationCustodianCustodianRoleCustodianEntityName AdvanceDirectiveObservationCustodianCustodianRoleAddr AdvanceDirectiveObservationCustodianCustodianRoleClassCode AdvanceDirectiveObservationCustodianCustodianRoleTelecom AdvanceDirectiveObservationCustodianCustodianRolePlayingEntity AdvanceDirectiveObservationCustodianTypeCode AdvanceDirectiveObservationCustodianRole AdvanceDirectiveObservationReferenceExternalDocumentTextMediaType AdvanceDirectiveObservationReferenceExternalDocumentTextReference AdvanceDirectiveObservationReferenceExternalDocumentId AdvanceDirectiveObservationReferenceExternalDocumentText AdvanceDirectiveObservationReferenceTypeCode AdvanceDirectiveObservationReferenceExternalDocument' constraints.validation.info='AdvanceDirectiveObservationReferenceExternalDocumentTextMediaType AdvanceDirectiveObservationReferenceExternalDocumentTextReference AdvanceDirectiveObservationReferenceExternalDocumentText'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolAdvanceDirectiveObservationReference typeCode='REFR' constraints.validation.error='AdvanceDirectiveObservationReferenceTypeCode AdvanceDirectiveObservationReferenceExternalDocument'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolAdvanceDirectiveObservationReferenceExternalDocument constraints.validation.info='AdvanceDirectiveObservationReferenceExternalDocumentTextMediaType AdvanceDirectiveObservationReferenceExternalDocumentTextReference AdvanceDirectiveObservationReferenceExternalDocumentText' constraints.validation.error='AdvanceDirectiveObservationReferenceExternalDocumentId'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolAdvanceDirectiveObservationCustodian typeCode='CST' constraints.validation.error='AdvanceDirectiveObservationCustodianTypeCode AdvanceDirectiveObservationCustodianRole'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolAdvanceDirectiveObservationCustodianCustodianRole constraints.validation.warning='AdvanceDirectiveObservationCustodianCustodianRoleAddr AdvanceDirectiveObservationCustodianCustodianRoleTelecom' classCode='AGNT' constraints.validation.error='AdvanceDirectiveObservationCustodianCustodianRoleClassCode AdvanceDirectiveObservationCustodianCustodianRolePlayingEntity'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolAdvanceDirectiveObservationCustodianCustodianRoleCustodianEntity constraints.validation.error='AdvanceDirectiveObservationCustodianCustodianRoleCustodianEntityName'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolAdvanceDirectiveObservationVerifier constraints.validation.warning='AdvanceDirectiveObservationVerifierTime' typeCode='VRF' constraints.validation.error='AdvanceDirectiveObservationVerifierTypeCode AdvanceDirectiveObservationVerifierParticipantRole'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_uzRMIIokEeSkH97cUQxLGA" base_Generalization="_EEbhsBVgEeGQCvUGzi1kDQ"/>
  <Ecore:EClass xmi:id="_uzRzMIokEeSkH97cUQxLGA" base_Class="_2LMIwBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='AllergiesSectionEntriesOptionalTemplateId AllergiesSectionCode AllergiesSectionCodeP AllergiesSectionTitle AllergiesSectionText AllergiesSectionAllergyProblemAct' templateId.root='2.16.840.1.113883.10.20.22.2.6.1' code.code='48765-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Allergies, adverse reactions, alerts' constraints.validation.dependOn.AllergiesSectionCode='AllergiesSectionCodeP'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_uzfOkIokEeSkH97cUQxLGA" base_Generalization="_blmF8BVgEeGQCvUGzi1kDQ"/>
  <Ecore:EClass xmi:id="_uzf1oYokEeSkH97cUQxLGA" base_Class="_2LSPYBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProblemSectionEntriesOptionalTemplateId ProblemSectionEntriesOptionalCode ProblemSectionEntriesOptionalCodeP ProblemSectionEntriesOptionalText ProblemSectionEntriesOptionalTitle ProblemSectionEntriesOptionalProblemConcern' templateId.root='2.16.840.1.113883.10.20.22.2.5.1' code.code='11450-4' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Problem List' constraints.validation.dependOn.ProblemSectionEntriesOptionalCode='ProblemSectionEntriesOptionalCodeP'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_uzpmoIokEeSkH97cUQxLGA" base_Generalization="_KVkvoBVgEeGQCvUGzi1kDQ"/>
  <Ecore:EClass xmi:id="_uzqNsIokEeSkH97cUQxLGA" base_Class="_2LWg0BSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='EncountersSectionEntriesOptionalTemplateId EncountersSectionEntriesOptionalCode EncountersSectionEntriesOptionalCodeP EncountersSectionEntriesOptionalText EncountersSectionEntriesOptionalTitle EncountersSectionEncounterActivities' templateId.root='2.16.840.1.113883.10.20.22.2.22.1' code.code='46240-8' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Encounters' constraints.validation.dependOn.EncountersSectionEntriesOptionalCode='EncountersSectionEntriesOptionalCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uz0lwIokEeSkH97cUQxLGA" base_Class="_2LayQBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='EncounterActivitiesTemplateId EncounterActivitiesCodeOriginalTextReferenceValue EncounterActivitiesServiceDeliveryTypeCode EncounterActivitiesSdtcDDCFromNUBCOrDD EncounterActivitiesClassCode EncounterActivitiesMoodCode EncounterActivitiesId EncounterActivitiesEffectiveTime EncounterActivitiesEncounterPerformerEncounterPerformerAssignedEntity' templateId.root='2.16.840.1.113883.10.20.22.4.49' constraints.validation.warning='EncounterActivitiesCodeOriginalText EncounterActivitiesCodeOriginalTextReference EncounterActivitiesReferenceValue EncounterActivitiesCode' classCode='ENC' moodCode='EVN' code.codeSystem='2.16.840.1.113883.6.12' code.codeSystemName='CPT-4' constraints.validation.info='EncounterActivitiesSDTCDischargeDispositionCode EncounterActivitiesServiceDeliveryLocation EncounterActivitiesIndication EncounterActivitiesEncounterPerformer EncounterActivitiesEncounterDiagnosis EncounterActivitiesEncounterPerformerEncounterPerformerAssignedEntityCode' constraints.validation.query='EncounterActivitiesEncounterPerformerEncounterPerformerAssignedEntityCode EncounterActivitiesEncounterPerformerEncounterPerformerAssignedEntity'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolEncounterActivitiesEncounterPerformer constraints.validation.error='EncounterActivitiesEncounterPerformerEncounterPerformerAssignedEntity'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolEncounterActivitiesEncounterPerformerEncounterPerformerAssignedEntity constraints.validation.info='EncounterActivitiesEncounterPerformerEncounterPerformerAssignedEntityCode'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_u0EdYYokEeSkH97cUQxLGA" base_Class="_2LiHABSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ServiceDeliveryLocationTemplateId ServiceDeliveryLocationHasPlayingEntityClassCode ServiceDeliveryLocationClassCode ServiceDeliveryLocationCode' templateId.root='2.16.840.1.113883.10.20.22.4.32' constraints.validation.info='ServiceDeliveryLocationHasPlayingEntity ServiceDeliveryLocationHasPlayingEntityName' classCode='SDLOC' code.codeSystem='2.16.840.1.113883.6.259' code.codeSystemName='HealthcareServiceLocation' constraints.validation.warning='ServiceDeliveryLocationAddr ServiceDeliveryLocationTelecom'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_u0O1cIokEeSkH97cUQxLGA" base_Class="_2L7voBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ImmunizationsSectionEntriesOptionalTemplateId ImmunizationsSectionCode ImmunizationsSectionCodeP ImmunizationsSectionTitle ImmunizationsSectionText ImmunizationsSectionImmunization' templateId.root='2.16.840.1.113883.10.20.22.2.2.1' code.code='11369-6' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' constraints.validation.dependOn.ImmunizationsSectionCode='ImmunizationsSectionCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_u0Z0kIokEeSkH97cUQxLGA" base_Class="_2MAoIBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ImmunizationActivityTemplateId ImmunizationActivityTextReferenceValue ImmunizationActivityInstructionInversion ImmunizationActivityDrugVehicleTypeCode ImmunizationActivityClassCode ImmunizationActivityMoodCode ImmunizationActivityId ImmunizationActivityStatusCode ImmunizationActivityEffectiveTime ImmunizationActivityRouteCode ImmunizationActivityApproachSiteCode ImmunizationActivityNegationInd ImmunizationActivityAdministrationUnitCode ImmunizationActivityConsumable ImmunizationActivityConsumableImmunizationMedicationInformation ImmunizationActivityPreconditionTypeCode ImmunizationActivityPreconditionPreconditionForSubstanceAdministration' templateId.root='2.16.840.1.113883.10.20.22.4.52' constraints.validation.warning='ImmunizationActivityTextReference ImmunizationActivityReferenceValue ImmunizationActivityDoseQuantityUnit ImmunizationActivityDoseQuantity ImmunizationActivityText ImmunizationActivityPerformer' classCode='SBADM' constraints.validation.info='ImmunizationActivityCode ImmunizationActivityRouteCodeP ImmunizationActivityApproachSiteCodeP ImmunizationActivityRepeatNumber ImmunizationActivityAdministrationUnitCodeP ImmunizationActivityDrugVehicle ImmunizationActivityIndication ImmunizationActivityInstructions ImmunizationActivityMedicationDispense ImmunizationActivityReactionObservation ImmunizationActivityImmunizationRefusalReason ImmunizationActivityMedicationSupplyOrder ImmunizationActivityPrecondition' routeCode.codeSystem='2.16.840.1.113883.3.26.1.1' routeCode.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.ImmunizationActivityRouteCode='ImmunizationActivityRouteCodeP' approachSiteCode.codeSystem='2.16.840.1.113883.6.96' approachSiteCode.codeSystemName='SNOMEDCT' constraints.validation.dependOn.ImmunizationActivityApproachSiteCode='ImmunizationActivityApproachSiteCodeP' administrationUnitCode.codeSystem='2.16.840.1.113883.3.26.1.1' administrationUnitCode.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.ImmunizationActivityAdministrationUnitCode='ImmunizationActivityAdministrationUnitCodeP' constraints.validation.query='ImmunizationActivityConsumableImmunizationMedicationInformation ImmunizationActivityPreconditionTypeCode ImmunizationActivityPreconditionPreconditionForSubstanceAdministration'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolImmunizationActivityConsumable constraints.validation.error='ImmunizationActivityConsumableImmunizationMedicationInformation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolImmunizationActivityPrecondition typeCode='PRCN' constraints.validation.error='ImmunizationActivityPreconditionTypeCode ImmunizationActivityPreconditionPreconditionForSubstanceAdministration'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_u1FxEIokEeSkH97cUQxLGA" base_Class="_2MV_UBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PayersSectionTemplateId PayersSectionCode PayersSectionCodeP PayersSectionTitle PayersSectionText' templateId.root='2.16.840.1.113883.10.20.22.2.18' code.code='48768-6' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Payers' constraints.validation.warning='PayersSectionCoverageActivity'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_u1PiEIokEeSkH97cUQxLGA" base_Generalization="_UeEpoBVgEeGQCvUGzi1kDQ"/>
  <Ecore:EClass xmi:id="_u1QwMIokEeSkH97cUQxLGA" base_Class="_2NIpgBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='MedicationsSectionEntriesOptionalTemplateId MedicationsSectionCode MedicationsSectionTitle MedicationsSectionText MedicationsSectionMedication' templateId.root='2.16.840.1.113883.10.20.22.2.1.1' code.code='10160-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='History of medication use'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_u1bvUIokEeSkH97cUQxLGA" base_Class="_2NP-QxSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PlanOfCareSectionTemplateId PlanOfCareSectionCode PlanOfCareSectionCodeP PlanOfCareSectionTitle PlanOfCareSectionText' templateId.root='2.16.840.1.113883.10.20.22.2.10' code.code='18776-5' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Treatment plan' constraints.validation.info='PlanOfCareSectionPlanOfCareActivityAct PlanOfCareSectionPlanOfCareActivityEncounter PlanOfCareSectionPlanOfCareActivityObservation PlanOfCareSectionPlanOfCareActivityProcedure PlanOfCareSectionPlanOfCareActivitySubstanceAdministration PlanOfCareSectionPlanOfCareActivitySupply PlanOfCareSectionInstructions'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_u1k5QYokEeSkH97cUQxLGA" base_Class="_2NWE5xSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PlanOfCareActivityActTemplateId PlanOfCareActivityActClassCode PlanOfCareActivityActMoodCode PlanOfCareActivityActId' templateId.root='2.16.840.1.113883.10.20.22.4.39' classCode='ACT'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_u1tcIIokEeSkH97cUQxLGA" base_Class="_2NWFBBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PlanOfCareActivityEncounterTemplateId PlanOfCareActivityEncounterClassCode PlanOfCareActivityEncounterMoodCode PlanOfCareActivityEncounterId' templateId.root='2.16.840.1.113883.10.20.22.4.40' classCode='ENC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_u11_AYokEeSkH97cUQxLGA" base_Class="_2NcLjhSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PlanOfCareActivityObservationTemplateId PlanOfCareActivityObservationClassCode PlanOfCareActivityObservationMoodCode PlanOfCareActivityObservationId' templateId.root='2.16.840.1.113883.10.20.22.4.44' classCode='OBS'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_u1_I8IokEeSkH97cUQxLGA" base_Class="_2NiSKhSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PlanOfCareActivityProcedureTemplateId PlanOfCareActivityProcedureClassCode PlanOfCareActivityProcedureMoodCode PlanOfCareActivityProcedureId' templateId.root='2.16.840.1.113883.10.20.22.4.41' classCode='PROC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_u2IS4IokEeSkH97cUQxLGA" base_Class="_2NoYwxSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PlanOfCareActivitySubstanceAdministrationTemplateId PlanOfCareActivitySubstanceAdministrationClassCode PlanOfCareActivitySubstanceAdministrationMoodCode PlanOfCareActivitySubstanceAdministrationId' templateId.root='2.16.840.1.113883.10.20.22.4.42' classCode='SBADM'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_u2Q1wIokEeSkH97cUQxLGA" base_Class="_2NoY5BSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PlanOfCareActivitySupplyTemplateId PlanOfCareActivitySupplyClassCode PlanOfCareActivitySupplyMoodCode PlanOfCareActivitySupplyId' templateId.root='2.16.840.1.113883.10.20.22.4.43' classCode='SPLY'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_u2Z_sIokEeSkH97cUQxLGA" base_Class="_2N6soBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PregnancyObservationTemplateId PregnancyObservationClassCode PregnancyObservationMoodCode PregnancyObservationCode PregnancyObservationCodeP PregnancyObservationStatusCode PregnancyObservationValue PregnancyObservationValueP' templateId.root='2.16.840.1.113883.10.20.15.3.8' classCode='OBS' moodCode='EVN' code.code='ASSERTION' code.codeSystem='2.16.840.1.113883.5.4' code.codeSystemName='HL7ActCode' code.displayName='Assertion' constraints.validation.dependOn.PregnancyObservationCode='PregnancyObservationCodeP' statusCode.code='completed' value.code='77386006' value.codeSystem='2.16.840.1.113883.6.96' value.codeSystemName='SNOMEDCT' value.displayName='Pregnant' constraints.validation.warning='PregnancyObservationEffectiveTime' constraints.validation.info='PregnancyObservationEstimatedDateOfDelivery'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_u2sTkIokEeSkH97cUQxLGA" base_Generalization="_gNO_cBVgEeGQCvUGzi1kDQ"/>
  <Ecore:EClass xmi:id="_u2s6oIokEeSkH97cUQxLGA" base_Class="_2OAzQRSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProceduresSectionEntriesOptionalTemplateId ProceduresSectionHasProcedureActivity ProceduresSectionTitle ProceduresSectionEntriesOptionalCode ProceduresSectionEntriesOptionalCodeP ProceduresSectionEntriesOptionalText' templateId.root='2.16.840.1.113883.10.20.22.2.7.1' code.code='47519-4' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='History of procedures' constraints.validation.dependOn.ProceduresSectionEntriesOptionalCode='ProceduresSectionEntriesOptionalCodeP' constraints.validation.info='ProceduresSectionProcedureActivityProcedure ProceduresSectionProcedureActivityObservation ProceduresSectionProcedureActivityAct'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_u235wIokEeSkH97cUQxLGA" base_Class="_2OG58RSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProcedureActivityProcedureTemplateId ProcedureActivityProcedureReferenceValue ProcedureActivityProcedureEncounterInversion ProcedureActivityProcedureProductInstanceTypeCode ProcedureActivityProcedureServiceDeliveryLocationTypeCode ProcedureActivityProcedureInstructionsInversion ProcedureActivityProcedureClassCode ProcedureActivityProcedureMoodCode ProcedureActivityProcedureId ProcedureActivityProcedureCode ProcedureActivityProcedureStatusCode ProcedureActivityProcedurePriorityCode ProcedureActivityProcedureTargetSiteCode ProcedureActivityProcedureProcedureSpecimenSpecimenRole ProcedureActivityProcedureProcedureActivityPerformerProcedureActivityAssignedEntityProcedureActivityRepresentedOrganizationTelecom ProcedureActivityProcedureProcedureActivityPerformerProcedureActivityAssignedEntityProcedureActivityRepresentedOrganizationAddr ProcedureActivityProcedureProcedureActivityPerformerProcedureActivityAssignedEntityId ProcedureActivityProcedureProcedureActivityPerformerProcedureActivityAssignedEntityAddr ProcedureActivityProcedureProcedureActivityPerformerProcedureActivityAssignedEntityTelecom ProcedureActivityProcedureProcedureActivityPerformerAssignedEntity ProcedureActivityProcedureEntryRelationshipProcedureActivityEncounterClassCode ProcedureActivityProcedureEntryRelationshipProcedureActivityEncounterMoodCode ProcedureActivityProcedureEntryRelationshipProcedureActivityEncounterId ProcedureActivityProcedureEntryRelationshipInversionInd ProcedureActivityProcedureEntryRelationshipTypeCode ProcedureActivityProcedureEntryRelationshipProcedureActivityEncounter' templateId.root='2.16.840.1.113883.10.20.22.4.14' constraints.validation.warning='ProcedureActivityProcedureCodeCodeSystems ProcedureActivityProcedureCodeOriginalText ProcedureActivityProcedureOriginalTextReference ProcedureActivityProcedureOriginalTextReferenceValue ProcedureActivityProcedureEffectiveTime ProcedureActivityProcedureTargetSiteCodeP ProcedureActivityProcedurePerformer ProcedureActivityProcedureProcedureSpecimenSpecimentRoleId ProcedureActivityProcedureProcedureActivityPerformerProcedureActivityAssignedEntityProcedureActivityRepresentedOrganizationId ProcedureActivityProcedureProcedureActivityPerformerProcedureActivityAssignedEntityRepresentedOrganization' classCode='PROC' priorityCode.codeSystem='2.16.840.1.113883.5.7' priorityCode.codeSystemName='ActPriority' constraints.validation.info='ProcedureActivityProcedurePriorityCodeP ProcedureActivityProcedureMethodCode ProcedureActivityProcedureIndication ProcedureActivityProcedureSpecimen ProcedureActivityProcedureServiceDeliveryLocation ProcedureActivityProcedureMedicationActivity ProcedureActivityProcedurePatientInstruction ProcedureActivityProcedureProductInstance ProcedureActivityProcedureEntryRelationship ProcedureActivityProcedureProcedureActivityPerformerProcedureActivityAssignedEntityProcedureActivityRepresentedOrganizationName' constraints.validation.dependOn.ProcedureActivityProcedurePriorityCode='ProcedureActivityProcedurePriorityCodeP' targetSiteCode.codeSystem='2.16.840.1.113883.6.96' targetSiteCode.codeSystemName='SNOMEDCT' constraints.validation.dependOn.ProcedureActivityProcedureTargetSiteCode='ProcedureActivityProcedureTargetSiteCodeP' constraints.validation.query='ProcedureActivityProcedureProcedureSpecimenSpecimenRole ProcedureActivityProcedureProcedureSpecimenSpecimentRoleId ProcedureActivityProcedureProcedureActivityPerformerProcedureActivityAssignedEntityProcedureActivityRepresentedOrganizationId ProcedureActivityProcedureProcedureActivityPerformerProcedureActivityAssignedEntityProcedureActivityRepresentedOrganizationName ProcedureActivityProcedureProcedureActivityPerformerProcedureActivityAssignedEntityProcedureActivityRepresentedOrganizationTelecom ProcedureActivityProcedureProcedureActivityPerformerProcedureActivityAssignedEntityProcedureActivityRepresentedOrganizationAddr ProcedureActivityProcedureProcedureActivityPerformerProcedureActivityAssignedEntityId ProcedureActivityProcedureProcedureActivityPerformerProcedureActivityAssignedEntityAddr ProcedureActivityProcedureProcedureActivityPerformerProcedureActivityAssignedEntityTelecom ProcedureActivityProcedureProcedureActivityPerformerProcedureActivityAssignedEntityRepresentedOrganization ProcedureActivityProcedureProcedureActivityPerformerAssignedEntity ProcedureActivityProcedureEntryRelationshipProcedureActivityEncounterClassCode ProcedureActivityProcedureEntryRelationshipProcedureActivityEncounterMoodCode ProcedureActivityProcedureEntryRelationshipProcedureActivityEncounterId ProcedureActivityProcedureEntryRelationshipInversionInd ProcedureActivityProcedureEntryRelationshipTypeCode ProcedureActivityProcedureEntryRelationshipProcedureActivityEncounter'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolProcedureActivityProcedureProcedureSpecimen constraints.validation.error='ProcedureActivityProcedureProcedureSpecimenSpecimenRole' constraints.validation.warning='ProcedureActivityProcedureProcedureSpecimenSpecimentRoleId'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolProcedureActivityProcedureProcedureActivityPerformer constraints.validation.error='ProcedureActivityProcedureProcedureActivityPerformerAssignedEntity'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolProcedureActivityProcedureProcedureActivityPerformerProcedureActivityAssignedEntity constraints.validation.error='ProcedureActivityProcedureProcedureActivityPerformerProcedureActivityAssignedEntityId ProcedureActivityProcedureProcedureActivityPerformerProcedureActivityAssignedEntityAddr ProcedureActivityProcedureProcedureActivityPerformerProcedureActivityAssignedEntityTelecom' constraints.validation.warning='ProcedureActivityProcedureProcedureActivityPerformerProcedureActivityAssignedEntityRepresentedOrganization'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolProcedureActivityProcedureProcedureActivityPerformerProcedureActivityAssignedEntityProcedureActivityRepresentedOrganization constraints.validation.warning='ProcedureActivityProcedureProcedureActivityPerformerProcedureActivityAssignedEntityProcedureActivityRepresentedOrganizationId' constraints.validation.info='ProcedureActivityProcedureProcedureActivityPerformerProcedureActivityAssignedEntityProcedureActivityRepresentedOrganizationName' constraints.validation.error='ProcedureActivityProcedureProcedureActivityPerformerProcedureActivityAssignedEntityProcedureActivityRepresentedOrganizationTelecom ProcedureActivityProcedureProcedureActivityPerformerProcedureActivityAssignedEntityProcedureActivityRepresentedOrganizationAddr'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolProcedureActivityProcedureEntryRelationship inversionInd='true' constraints.validation.error='ProcedureActivityProcedureEntryRelationshipInversionInd ProcedureActivityProcedureEntryRelationshipTypeCode ProcedureActivityProcedureEntryRelationshipProcedureActivityEncounter' typeCode='COMP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolProcedureActivityProcedureEntryRelationshipProcedureActivityEncounter classCode='ENC' constraints.validation.error='ProcedureActivityProcedureEntryRelationshipProcedureActivityEncounterClassCode ProcedureActivityProcedureEntryRelationshipProcedureActivityEncounterMoodCode ProcedureActivityProcedureEntryRelationshipProcedureActivityEncounterId' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_u3vccIokEeSkH97cUQxLGA" base_Generalization="_px07IBVgEeGQCvUGzi1kDQ"/>
  <Ecore:EClass xmi:id="_u3wDgYokEeSkH97cUQxLGA" base_Class="_2OfUcxSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='VitalSignsSectionEntriesOptionalTemplateId VitalSignsSectionCode VitalSignsSectionCodeP VitalSignsSectionText VitalSignsSectionEntriesOptionalTitle VitalSignsSectionVitalSignsOrganizer' templateId.root='2.16.840.1.113883.10.20.22.2.4.1' code.code='8716-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Vital Signs' constraints.validation.dependOn.VitalSignsSectionCode='VitalSignsSectionCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_u36bkIokEeSkH97cUQxLGA" base_Class="_2OlbCRSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='VitalSignsOrganizerTemplateId VitalSignsOrganizerClassCode VitalSignsOrganizerMoodCode VitalSignsOrganizerId VitalSignsOrganizerCode VitalSignsOrganizerStatusCode VitalSignsOrganizerEffectiveTime VitalSignsOrganizerVitalSignObservation' templateId.root='2.16.840.1.113883.10.20.22.4.26' classCode='CLUSTER' moodCode='EVN' code.code='46680005' code.codeSystem='2.16.840.1.113883.6.96' code.codeSystemName='SNOMEDCT' code.displayName='Vital signs' statusCode.code='completed'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_u4H28ookEeSkH97cUQxLGA" base_Class="_2OrhsRSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='VitalSignObservationTemplateId VitalSignObservationTextReferenceValue VitalSignObservationClassCode VitalSignObservationMoodCode VitalSignObservationId VitalSignObservationCodeP VitalSignObservationStatusCode VitalSignObservationEffectiveTime VitalSignObservationValue' templateId.root='2.16.840.1.113883.10.20.22.4.27' constraints.validation.warning='VitalSignObservationTextReference VitalSignObservationReferenceValue VitalSignObservationCode VitalSignObservationText' classCode='OBS' moodCode='EVN' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' constraints.validation.dependOn.VitalSignObservationCode='VitalSignObservationCodeP' statusCode.code='completed' constraints.validation.info='VitalSignObservationInterpretationCode VitalSignObservationMethodCode VitalSignObservationTargetSiteCode VitalSignObservationAuthor'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_u4gRcIokEeSkH97cUQxLGA" base_Class="_2PQJcxSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='HistoryOfPastIllnessSectionTemplateId HistoryOfPastIllnessSectionCode HistoryOfPastIllnessSectionCodeP HistoryOfPastIllnessSectionTitle HistoryOfPastIllnessSectionText' templateId.root='2.16.840.1.113883.10.20.22.2.20' code.code='11348-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='HISTORY OF PAST ILLNESS' constraints.validation.info='HistoryOfPastIllnessSectionProblemObservation'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_u4pbYIokEeSkH97cUQxLGA" base_Class="_2PWQCBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ChiefComplaintSectionTemplateId ChiefComplaintSectionCode ChiefComplaintSectionCodeP ChiefComplaintSectionText ChiefComplaintSectionTitle' templateId.root='1.3.6.1.4.1.19376.1.5.3.1.1.13.2.1' code.code='10154-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='CHIEF COMPLAINT'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_u4ylUIokEeSkH97cUQxLGA" base_Class="_2PWQFxSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ReasonForReferralSectionTemplateId ReasonForReferralSectionCode ReasonForReferralSectionCodeP ReasonForReferralSectionTitle ReasonForReferralSectionText' templateId.root='1.3.6.1.4.1.19376.1.5.3.1.3.1' code.code='42349-1' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='REASON FOR REFERRAL'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_u47IMYokEeSkH97cUQxLGA" base_Class="_2PcWsRSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='HistoryOfPresentIllnessSectionTemplateId HistoryOfPresentIllnessSectionCode HistoryOfPresentIllnessSectionCodeP HistoryOfPresentIllnessSectionTitle HistoryOfPresentIllnessSectionText' templateId.root='1.3.6.1.4.1.19376.1.5.3.1.3.4' code.code='10164-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='HISTORY OF PRESENT ILLNESS'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_u5E5MIokEeSkH97cUQxLGA" base_Class="_2PidQhSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='HospitalAdmissionDiagnosisSectionTemplateId HospitalAdmissionDiagnosisSectionCode HospitalAdmissionDiagnosisSectionCodeP HospitalAdmissionDiagnosisSectionTitle HospitalAdmissionDiagnosisSectionText' templateId.root='2.16.840.1.113883.10.20.22.2.43' code.code='46241-6' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='HOSPITAL ADMISSION DX' constraints.validation.warning='HospitalAdmissionDiagnosisSectionHospitalAdmissionDiagnosis'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_u5S7oIokEeSkH97cUQxLGA" base_Class="_2Poj5BSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='HospitalAdmissionMedicationsSectionEntriesOptionalTemplateId HospitalAdmissionMedicationsSectionEntriesOptionalCode HospitalAdmissionMedicationsSectionEntriesOptionalCodeP HospitalAdmissionMedicationsSectionEntriesOptionalText HospitalAdmissionMedicationsSectionEntriesOptionalTitle' templateId.root='2.16.840.1.113883.10.20.22.2.44' code.code='42346-7' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='MEDICATIONS ON ADMISSION' constraints.validation.warning='HospitalAdmissionMedicationsSectionEntriesOptionalAdmissionMedication'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_u5cFkIokEeSkH97cUQxLGA" base_Class="_2Poj_BSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='MedicationsAdministeredSectionTemplateId MedicationsAdministeredSectionCode MedicationsAdministeredSectionCodeP MedicationsAdministeredSectionText MedicationsAdministeredSectionTitle' templateId.root='2.16.840.1.113883.10.20.22.2.38' code.code='29549-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Medications Administered' constraints.validation.info='MedicationsAdministeredSectionMedicationActivity'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_u5lPgIokEeSkH97cUQxLGA" base_Class="_2Pxt0hSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PhysicalExamSectionTemplateId PhysicalExamSectionCode PhysicalExamSectionCodeP PhysicalExamSectionTitle PhysicalExamSectionText' templateId.root='2.16.840.1.113883.10.20.2.10' code.code='29545-1' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='PHYSICAL EXAMINATION' constraints.validation.info='PhysicalExamSectionPressureUlcerObservation PhysicalExamSectionNumberOfPressureUlcersObservation PhysicalExamSectionHighestPressureUlcerStage'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_u5uZcIokEeSkH97cUQxLGA" base_Class="_2Pxt6xSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='GeneralStatusSectionTemplateId GeneralStatusSectionCode GeneralStatusSectionCodeP GeneralStatusSectionTitle GeneralStatusSectionText' templateId.root='2.16.840.1.113883.10.20.2.5' code.code='10210-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='GENERAL STATUS'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_u56msIokEeSkH97cUQxLGA" base_Class="_2RqkMBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ReviewOfSystemsSectionTemplateId ReviewOfSystemsSectionCode ReviewOfSystemsSectionCodeP ReviewOfSystemsSectionTitle ReviewOfSystemsSectionText' templateId.root='1.3.6.1.4.1.19376.1.5.3.1.3.18' code.code='10187-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='REVIEW OF SYSTEMS'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_u6EXsIokEeSkH97cUQxLGA" base_Class="_2Rwq0BSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='AssessmentAndPlanSectionTemplateId AssessmentAndPlanSectionCode AssessmentAndPlanSectionCodeP AssessmentAndPlanSectionText' templateId.root='2.16.840.1.113883.10.20.22.2.9' code.code='51847-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='ASSESSMENT AND PLAN' constraints.validation.info='AssessmentAndPlanSectionPlanOfCareActivityAct'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_u6M6kIokEeSkH97cUQxLGA" base_Class="_2SC-sBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='FamilyHistoryDeathObservationTemplateId FamilyHistoryDeathObservationClassCode FamilyHistoryDeathObservationMoodCode FamilyHistoryDeathObservationCode FamilyHistoryDeathObservationStatusCode FamilyHistoryDeathObservationValue FamilyHistoryDeathObservationValueP' templateId.root='2.16.840.1.113883.10.20.22.4.47' classCode='OBS' moodCode='EVN' code.code='ASSERTION' code.codeSystem='2.16.840.1.113883.5.4' code.codeSystemName='HL7ActCode' code.displayName='Assertion' statusCode.code='completed' value.code='419099009' value.codeSystem='2.16.840.1.113883.6.96' value.codeSystemName='SNOMEDCT' value.displayName='Dead'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_u6a9AIokEeSkH97cUQxLGA" base_Class="_luQh8DVzEeGaW4kr-GbV8Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='SurgicalDrainsSectionTemplateId SurgicalDrainsSectionCode SurgicalDrainsSectionCodeP SurgicalDrainsSectionText SurgicalDrainsSectionTitle' templateId.root='2.16.840.1.113883.10.20.7.13' code.code='11537-8' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Surgical Drains'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_u6kuAIokEeSkH97cUQxLGA" base_Class="_2TeiIRSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='GeneralHeaderConstraintsTemplateId UnstructuredDocumentRecordTarget UnstructuredDocumentAuthor UnstructuredDocumentComponent UnstructuredDocumentCustodian UnstructuredDocumentRecordTargetPatientRole2Id UnstructuredDocumentRecordTargetPatientRole2 UnstructuredDocumentAuthorAssignedAuthor2Addr UnstructuredDocumentAuthorAssignedAuthor2Telecom UnstructuredDocumentAuthorAssignedAuthor2 UnstructuredDocumentCustodianAssignedCustodian3CustodianOrganizationAddr UnstructuredDocumentCustodianAssignedCustodian3CustodianOrganizationId UnstructuredDocumentCustodianAssignedCustodian3CustodianOrganizationName UnstructuredDocumentCustodianAssignedCustodian3CustodianOrganizationTelecom UnstructuredDocumentCustodianAssignedCustodian3CustodianOrganization UnstructuredDocumentCustodianAssignedCustodian2' templateId.root='2.16.840.1.113883.10.20.22.1.10' constraints.validation.query='UnstructuredDocumentRecordTargetPatientRole2Id UnstructuredDocumentRecordTargetPatientRole2 UnstructuredDocumentAuthorAssignedAuthor2Addr UnstructuredDocumentAuthorAssignedAuthor2Telecom UnstructuredDocumentAuthorAssignedAuthor2 UnstructuredDocumentCustodianAssignedCustodian3CustodianOrganizationAddr UnstructuredDocumentCustodianAssignedCustodian3CustodianOrganizationId UnstructuredDocumentCustodianAssignedCustodian3CustodianOrganizationName UnstructuredDocumentCustodianAssignedCustodian3CustodianOrganizationTelecom UnstructuredDocumentCustodianAssignedCustodian3CustodianOrganization UnstructuredDocumentCustodianAssignedCustodian2'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolUnstructuredDocumentRecordTarget constraints.validation.error='UnstructuredDocumentRecordTargetPatientRole2'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolUnstructuredDocumentRecordTargetPatientRole2 constraints.validation.error='UnstructuredDocumentRecordTargetPatientRole2Id'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolUnstructuredDocumentAuthor constraints.validation.error='UnstructuredDocumentAuthorAssignedAuthor2'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolUnstructuredDocumentAuthorAssignedAuthor2 constraints.validation.error='UnstructuredDocumentAuthorAssignedAuthor2Addr UnstructuredDocumentAuthorAssignedAuthor2Telecom'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolUnstructuredDocumentCustodian constraints.validation.error='UnstructuredDocumentCustodianAssignedCustodian2'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolUnstructuredDocumentCustodianAssignedCustodian3 constraints.validation.error='UnstructuredDocumentCustodianAssignedCustodian3CustodianOrganization'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolUnstructuredDocumentCustodianAssignedCustodian3CustodianOrganization constraints.validation.error='UnstructuredDocumentCustodianAssignedCustodian3CustodianOrganizationAddr UnstructuredDocumentCustodianAssignedCustodian3CustodianOrganizationId UnstructuredDocumentCustodianAssignedCustodian3CustodianOrganizationName UnstructuredDocumentCustodianAssignedCustodian3CustodianOrganizationTelecom'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolUnstructuredDocumentComponentNonXMLBody constraints.validation.error='UnstructuredDocumentComponentNonXMLBodyHasReferenceOrRepresentation UnstructuredDocumentComponentNonXMLBodyMediaTypeFileFormats UnstructuredDocumentComponentNonXMLBodyText'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_u6w7QIokEeSkH97cUQxLGA" base_Class="_2T9DQBSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='MedicationInformationTemplateId MedicationInformationClassCode MedicationInformationManufacturedMaterial MedicationInformationMedicationInformationManufacturedMaterialCode' templateId.root='2.16.840.1.113883.10.20.22.4.23' constraints.validation.info='MedicationInformationId MedicationInformationManufacturerOrganization MedicationInformationMedicationInformationManufacturedMaterialCodeTranslation' classCode='MANU' constraints.validation.warning='MedicationInformationMedicationInformationManufacturedMaterialCodeOriginalText MedicationInformationMedicationInformationManufacturedMaterialReference MedicationInformationMedicationInformationManufacturedMaterialOriginalTextReferenceValue' constraints.validation.query='MedicationInformationMedicationInformationManufacturedMaterialCodeOriginalText MedicationInformationMedicationInformationManufacturedMaterialReference MedicationInformationMedicationInformationManufacturedMaterialOriginalTextReferenceValue MedicationInformationMedicationInformationManufacturedMaterialCodeTranslation MedicationInformationMedicationInformationManufacturedMaterialCode'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolMedicationInformationMedicationInformationManufacturedMaterial constraints.validation.warning='MedicationInformationMedicationInformationManufacturedMaterialCodeOriginalText MedicationInformationMedicationInformationManufacturedMaterialReference MedicationInformationMedicationInformationManufacturedMaterialOriginalTextReferenceValue' constraints.validation.info='MedicationInformationMedicationInformationManufacturedMaterialCodeTranslation' code.codeSystem='2.16.840.1.113883.6.88' code.codeSystemName='RxNorm' constraints.validation.error='MedicationInformationMedicationInformationManufacturedMaterialCode'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_u66FMIokEeSkH97cUQxLGA" base_Class="_2UnxkRSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='GeneralHeaderConstraintsTemplateId DischargeSummaryDoesNotHaveChiefComplaintAndReasonForVisitWithChiefComplaintSectionOrReasonSection DischargeSummaryCode DischargeSummaryCodeP DischargeSummaryHospitalAdmissionDiagnosisSection DischargeSummaryHospitalDischargeDiagnosisSection DischargeSummaryHospitalDischargeMedicationsSectionEntriesOptional DischargeSummaryHospitalCourseSection DischargeSummaryPlanOfCareSection DischargeSummaryComponentOf DischargeSummaryAllergiesSectionEntriesOptional DischargeSummaryComponentOfEncompassingEncounter3ResponsiblePartyAssignedEntityHasPersonOrOrganization DischargeSummaryComponentOfEncompassingEncounter3ResponsiblePartyAssignedEntity DischargeSummaryComponentOfEncompassingEncounter3EncounterParticipantAssignedEntityHasPersonOrOrganization DischargeSummaryComponentOfEncompassingEncounter3EncounterParticipantAssignedEntity DischargeSummaryComponentOfEncompassingEncounter3EncompassingEncounterHasEffectiveTimeLow DischargeSummaryComponentOfEncompassingEncounter3EncompassingEncounterHasEffectiveTimeHigh DischargeSummaryComponentOfEncompassingEncounter3DischargeDispositionCode DischargeSummaryComponentOfEncompassingEncounter3EffectiveTime DischargeSummaryComponentOfEncompassingEncounter' templateId.root='2.16.840.1.113883.10.20.22.1.8' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' constraints.validation.dependOn.DischargeSummaryCode='DischargeSummaryCodeP' constraints.validation.info='DischargeSummaryHospitalAdmissionMedicationsSectionEntriesOptional DischargeSummaryDischargeDietSection DischargeSummaryFunctionalStatusSection DischargeSummaryHistoryOfPresentIllnessSection DischargeSummaryHistoryOfPastIllnessSection DischargeSummaryChiefComplaintAndReasonForVisitSection DischargeSummaryChiefComplaintSection DischargeSummaryFamilyHistorySection DischargeSummaryHospitalConsultationsSection DischargeSummaryHospitalDischargeInstructionsSection DischargeSummaryHospitalDischargePhysicalSection DischargeSummaryHospitalDischargeStudiesSummarySection DischargeSummaryImmunizationsSectionEntriesOptional DischargeSummaryProblemSectionEntriesOptional DischargeSummaryProceduresSectionEntriesOptional DischargeSummaryReasonForVisitSection DischargeSummaryReviewOfSystemsSection DischargeSummarySocialHistorySection DischargeSummaryVitalSignsSectionEntriesOptional DischargeSummaryComponentOfEncompassingEncounter3DischargeDispositionCodeCodeSystem DischargeSummaryComponentOfEncompassingEncounter3ResponsibleParty DischargeSummaryComponentOfEncompassingEncounter3EncounterParticipant' constraints.validation.query='DischargeSummaryComponentOfEncompassingEncounter3ResponsiblePartyAssignedEntityHasPersonOrOrganization DischargeSummaryComponentOfEncompassingEncounter3ResponsiblePartyAssignedEntity DischargeSummaryComponentOfEncompassingEncounter3EncounterParticipantAssignedEntityHasPersonOrOrganization DischargeSummaryComponentOfEncompassingEncounter3EncounterParticipantAssignedEntity DischargeSummaryComponentOfEncompassingEncounter3EncompassingEncounterHasEffectiveTimeLow DischargeSummaryComponentOfEncompassingEncounter3EncompassingEncounterHasEffectiveTimeHigh DischargeSummaryComponentOfEncompassingEncounter3DischargeDispositionCodeValueSet DischargeSummaryComponentOfEncompassingEncounter3DischargeDispositionCodeCodeSystem DischargeSummaryComponentOfEncompassingEncounter3DischargeDispositionCode DischargeSummaryComponentOfEncompassingEncounter3EffectiveTime DischargeSummaryComponentOfEncompassingEncounter3ResponsibleParty DischargeSummaryComponentOfEncompassingEncounter3EncounterParticipant DischargeSummaryComponentOfEncompassingEncounter' constraints.validation.warning='DischargeSummaryComponentOfEncompassingEncounter3DischargeDispositionCodeValueSet'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolDischargeSummaryComponentOf constraints.validation.error='DischargeSummaryComponentOfEncompassingEncounter'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolDischargeSummaryComponentOfEncompassingEncounter3 constraints.validation.error='DischargeSummaryComponentOfEncompassingEncounter3EncompassingEncounterHasEffectiveTimeLow DischargeSummaryComponentOfEncompassingEncounter3EncompassingEncounterHasEffectiveTimeHigh DischargeSummaryComponentOfEncompassingEncounter3DischargeDispositionCode DischargeSummaryComponentOfEncompassingEncounter3EffectiveTime' constraints.validation.warning='DischargeSummaryComponentOfEncompassingEncounter3DischargeDispositionCodeValueSet' constraints.validation.info='DischargeSummaryComponentOfEncompassingEncounter3DischargeDispositionCodeCodeSystem DischargeSummaryComponentOfEncompassingEncounter3ResponsibleParty DischargeSummaryComponentOfEncompassingEncounter3EncounterParticipant'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolDischargeSummaryComponentOfEncompassingEncounter3ResponsibleParty constraints.validation.error='DischargeSummaryComponentOfEncompassingEncounter3ResponsiblePartyAssignedEntityHasPersonOrOrganization DischargeSummaryComponentOfEncompassingEncounter3ResponsiblePartyAssignedEntity'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolDischargeSummaryComponentOfEncompassingEncounter3EncounterParticipant constraints.validation.error='DischargeSummaryComponentOfEncompassingEncounter3EncounterParticipantAssignedEntityHasPersonOrOrganization DischargeSummaryComponentOfEncompassingEncounter3EncounterParticipantAssignedEntity'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_u7UU4IokEeSkH97cUQxLGA" base_Class="_sHrUoBUSEeG6PvUxSTZnaw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='IndicationTemplateId IndicationClassCode IndicationMoodCode IndicationId IndicationCodeP IndicationStatusCode' templateId.root='2.16.840.1.113883.10.20.22.4.19' constraints.validation.info='IndicationCodeNullFlavor' classCode='OBS' moodCode='EVN' code.codeSystem='2.16.840.1.113883.6.96' code.codeSystemName='SNOMEDCT' constraints.validation.warning='IndicationCode IndicationEffectiveTime IndicationValue IndicationValueP' constraints.validation.dependOn.IndicationCode='IndicationCodeP' statusCode.code='completed' value.codeSystem='2.16.840.1.113883.6.96' value.codeSystemName='SNOMEDCT'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_u7qTIYokEeSkH97cUQxLGA" base_Class="_VBXq8BUTEeG6PvUxSTZnaw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='DrugVehicleTemplateId DrugVehiclePlayingEntityCode DrugVehicleClassCode DrugVehicleCode DrugVehiclePlayingEntity' templateId.root='2.16.840.1.113883.10.20.22.4.24' constraints.validation.info='DrugVehiclePlayingEntityName' classCode='MANU' code.code='412307009' code.codeSystem='2.16.840.1.113883.6.96' code.codeSystemName='SNOMEDCT'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_u7xA0IokEeSkH97cUQxLGA" base_Class="_DpoGkBUUEeG6PvUxSTZnaw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='MedicationDispenseTemplateId MedicationDispenseContainsMedicationOrImmunization MedicationDispenseClassCode MedicationDispenseId MedicationDispenseMoodCode MedicationDispenseStatusCode MedicationDispensePerformerMedicationDispenseAssignedEntityGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet MedicationDispensePerformerMedicationDispenseAssignedEntityGeneralHeaderConstraintsUSRealmAddressCity MedicationDispensePerformerMedicationDispenseAssignedEntityGeneralHeaderConstraintsUSRealmAddressStreetAddressLine MedicationDispensePerformerMedicationDispenseAssignedEntityGeneralHeaderConstraintsUSRealmAddressUse MedicationDispensePerformerMedicationDispenseAssignedEntity' templateId.root='2.16.840.1.113883.10.20.22.4.18' classCode='SPLY' constraints.validation.warning='MedicationDispenseEffectiveTime MedicationDispenseRepeatNumber MedicationDispenseQuantity MedicationDispensePerformerMedicationDispenseAssignedEntityGeneralHeaderConstraintsUSRealmAddressCountry MedicationDispensePerformerMedicationDispenseAssignedEntityGeneralHeaderConstraintsUSRealmAddressPostalCode MedicationDispensePerformerMedicationDispenseAssignedEntityGeneralHeaderConstraintsUSRealmAddressState MedicationDispensePerformerMedicationDispenseAssignedEntityGeneralHeaderConstraintsUSRealmAddressUseP MedicationDispensePerformerMedicationDispenseAssignedEntityAddr' moodCode='EVN' constraints.validation.info='MedicationDispenseMedicationSupplyOrder MedicationDispensePerformer' constraints.validation.query='MedicationDispensePerformerMedicationDispenseAssignedEntityGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet MedicationDispensePerformerMedicationDispenseAssignedEntityGeneralHeaderConstraintsUSRealmAddressCity MedicationDispensePerformerMedicationDispenseAssignedEntityGeneralHeaderConstraintsUSRealmAddressCountry MedicationDispensePerformerMedicationDispenseAssignedEntityGeneralHeaderConstraintsUSRealmAddressPostalCode MedicationDispensePerformerMedicationDispenseAssignedEntityGeneralHeaderConstraintsUSRealmAddressState MedicationDispensePerformerMedicationDispenseAssignedEntityGeneralHeaderConstraintsUSRealmAddressStreetAddressLine MedicationDispensePerformerMedicationDispenseAssignedEntityGeneralHeaderConstraintsUSRealmAddressUseP MedicationDispensePerformerMedicationDispenseAssignedEntityGeneralHeaderConstraintsUSRealmAddressUse MedicationDispensePerformerMedicationDispenseAssignedEntityAddr MedicationDispensePerformerMedicationDispenseAssignedEntity' constraints.validation.dependOn.MedicationDispensePerformerMedicationDispenseAssignedEntityGeneralHeaderConstraintsUSRealmAddressUse='GeneralHeaderConstraintsUSRealmAddressUseP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolMedicationDispensePerformer constraints.validation.error='MedicationDispensePerformerMedicationDispenseAssignedEntity'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolMedicationDispensePerformerMedicationDispenseAssignedEntity constraints.validation.warning='MedicationDispensePerformerMedicationDispenseAssignedEntityAddr MedicationDispensePerformerMedicationDispenseAssignedEntityGeneralHeaderConstraintsUSRealmAddressCountry MedicationDispensePerformerMedicationDispenseAssignedEntityGeneralHeaderConstraintsUSRealmAddressPostalCode MedicationDispensePerformerMedicationDispenseAssignedEntityGeneralHeaderConstraintsUSRealmAddressState MedicationDispensePerformerMedicationDispenseAssignedEntityGeneralHeaderConstraintsUSRealmAddressUseP' constraints.validation.error='MedicationDispensePerformerMedicationDispenseAssignedEntityGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet MedicationDispensePerformerMedicationDispenseAssignedEntityGeneralHeaderConstraintsUSRealmAddressCity MedicationDispensePerformerMedicationDispenseAssignedEntityGeneralHeaderConstraintsUSRealmAddressStreetAddressLine MedicationDispensePerformerMedicationDispenseAssignedEntityGeneralHeaderConstraintsUSRealmAddressUse' constraints.validation.query='MedicationDispensePerformerMedicationDispenseAssignedEntityGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet MedicationDispensePerformerMedicationDispenseAssignedEntityGeneralHeaderConstraintsUSRealmAddressCity MedicationDispensePerformerMedicationDispenseAssignedEntityGeneralHeaderConstraintsUSRealmAddressCountry MedicationDispensePerformerMedicationDispenseAssignedEntityGeneralHeaderConstraintsUSRealmAddressPostalCode MedicationDispensePerformerMedicationDispenseAssignedEntityGeneralHeaderConstraintsUSRealmAddressState MedicationDispensePerformerMedicationDispenseAssignedEntityGeneralHeaderConstraintsUSRealmAddressStreetAddressLine MedicationDispensePerformerMedicationDispenseAssignedEntityGeneralHeaderConstraintsUSRealmAddressUseP MedicationDispensePerformerMedicationDispenseAssignedEntityGeneralHeaderConstraintsUSRealmAddressUse' constraints.validation.dependOn.MedicationDispensePerformerMedicationDispenseAssignedEntityGeneralHeaderConstraintsUSRealmAddressUse='GeneralHeaderConstraintsUSRealmAddressUseP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_u8D7wookEeSkH97cUQxLGA" base_Class="_chEhQBUUEeG6PvUxSTZnaw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PreconditionForSubstanceAdministrationTemplateId' templateId.root='2.16.840.1.113883.10.20.22.4.25' constraints.validation.warning='PreconditionForSubstanceAdministrationCode PreconditionForSubstanceAdministrationValue' constraints.validation.info='PreconditionForSubstanceAdministrationText'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_u8KpcIokEeSkH97cUQxLGA" base_Class="_PZBdMBUlEeGvPruliC3crg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PolicyActivityTemplateId PolicyActivityClassCode PolicyActivityCodeP PolicyActivityId PolicyActivityMoodCode PolicyActivityStatusCode PolicyActivityPayer PolicyActivityCoverage PolicyActivityEntryRelationship PolicyActivityPayerPayerAssignedEntityGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet PolicyActivityPayerPayerAssignedEntityGeneralHeaderConstraintsUSRealmAddressCity PolicyActivityPayerPayerAssignedEntityGeneralHeaderConstraintsUSRealmAddressStreetAddressLine PolicyActivityPayerPayerAssignedEntityGeneralHeaderConstraintsUSRealmAddressUse PolicyActivityPayerPayerAssignedEntityId PolicyActivityPayerTemplateId PolicyActivityPayerTypeCode PolicyActivityPayerPayerAssignedEntity PolicyActivityGuarantorGuarantorAssignedEntityGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet PolicyActivityGuarantorGuarantorAssignedEntityGeneralHeaderConstraintsUSRealmAddressCity PolicyActivityGuarantorGuarantorAssignedEntityGeneralHeaderConstraintsUSRealmAddressStreetAddressLine PolicyActivityGuarantorGuarantorAssignedEntityGeneralHeaderConstraintsUSRealmAddressUse PolicyActivityGuarantorGuarantorAssignedEntityCode PolicyActivityGuarantorGuarantorAssignedEntityCodeP PolicyActivityGuarantorTemplateId PolicyActivityGuarantorGuarantorAssignedEntity PolicyActivityCoverageCoverageRoleGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet PolicyActivityCoverageCoverageRoleGeneralHeaderConstraintsUSRealmAddressCity PolicyActivityCoverageCoverageRoleGeneralHeaderConstraintsUSRealmAddressStreetAddressLine PolicyActivityCoverageCoverageRoleGeneralHeaderConstraintsUSRealmAddressUse PolicyActivityCoverageCoverageRoleCoveragePlayingEntityName PolicyActivityCoverageCoverageRoleId PolicyActivityCoverageCoverageRoleCodeP PolicyActivityCoverageTemplateId PolicyActivityCoverageTypeCode PolicyActivityCoverageCoverageRole PolicyActivityHolderHolderRoleGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet PolicyActivityHolderHolderRoleGeneralHeaderConstraintsUSRealmAddressCity PolicyActivityHolderHolderRoleGeneralHeaderConstraintsUSRealmAddressStreetAddressLine PolicyActivityHolderHolderRoleGeneralHeaderConstraintsUSRealmAddressUse PolicyActivityHolderHolderRoleId PolicyActivityHolderTemplateId PolicyActivityHolderTypeCode PolicyActivityHolderHolderRole PolicyActivityEntryRelationshipTargetActActivity PolicyActivityEntryRelationshipDescriptionCoveragePlan PolicyActivityEntryRelationshipTypeCode' templateId.root='2.16.840.1.113883.10.20.22.4.61' classCode='ACT' code.codeSystemName='' constraints.validation.warning='PolicyActivityCode PolicyActivityGuarantor PolicyActivityHolder PolicyActivityPayerPayerAssignedEntityGeneralHeaderConstraintsUSRealmAddressCountry PolicyActivityPayerPayerAssignedEntityGeneralHeaderConstraintsUSRealmAddressPostalCode PolicyActivityPayerPayerAssignedEntityGeneralHeaderConstraintsUSRealmAddressState PolicyActivityPayerPayerAssignedEntityGeneralHeaderConstraintsUSRealmAddressUseP PolicyActivityPayerPayerAssignedEntityPayerOrganizationName PolicyActivityPayerPayerAssignedEntityCodeP PolicyActivityPayerPayerAssignedEntityCode PolicyActivityPayerPayerAssignedEntityPayerOrganization PolicyActivityGuarantorGuarantorAssignedEntityGeneralHeaderConstraintsUSRealmAddressCountry PolicyActivityGuarantorGuarantorAssignedEntityGeneralHeaderConstraintsUSRealmAddressPostalCode PolicyActivityGuarantorGuarantorAssignedEntityGeneralHeaderConstraintsUSRealmAddressState PolicyActivityGuarantorGuarantorAssignedEntityGeneralHeaderConstraintsUSRealmAddressUseP PolicyActivityGuarantorGuarantorAssignedEntityPersonNameAndOrOrgName PolicyActivityGuarantorGuarantorAssignedEntityAddr PolicyActivityGuarantorGuarantorAssignedEntityTelecom PolicyActivityGuarantorTime PolicyActivityGuarantorTypeCode PolicyActivityCoverageCoverageRoleGeneralHeaderConstraintsUSRealmAddressCountry PolicyActivityCoverageCoverageRoleGeneralHeaderConstraintsUSRealmAddressPostalCode PolicyActivityCoverageCoverageRoleGeneralHeaderConstraintsUSRealmAddressState PolicyActivityCoverageCoverageRoleGeneralHeaderConstraintsUSRealmAddressUseP PolicyActivityCoverageCoverageRoleCode PolicyActivityCoverageCoverageRoleAddr PolicyActivityCoverageCoverageRoleCoveragePlayingEntity PolicyActivityCoverageLowTime PolicyActivityCoverageHighTime PolicyActivityCoverageTime PolicyActivityHolderHolderRoleGeneralHeaderConstraintsUSRealmAddressCountry PolicyActivityHolderHolderRoleGeneralHeaderConstraintsUSRealmAddressPostalCode PolicyActivityHolderHolderRoleGeneralHeaderConstraintsUSRealmAddressState PolicyActivityHolderHolderRoleGeneralHeaderConstraintsUSRealmAddressUseP PolicyActivityHolderHolderRoleAddr' constraints.validation.dependOn.PolicyActivityCode='PolicyActivityCodeP' moodCode='EVN' statusCode.code='completed' constraints.validation.query='PolicyActivityPayerPayerAssignedEntityGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet PolicyActivityPayerPayerAssignedEntityGeneralHeaderConstraintsUSRealmAddressCity PolicyActivityPayerPayerAssignedEntityGeneralHeaderConstraintsUSRealmAddressCountry PolicyActivityPayerPayerAssignedEntityGeneralHeaderConstraintsUSRealmAddressPostalCode PolicyActivityPayerPayerAssignedEntityGeneralHeaderConstraintsUSRealmAddressState PolicyActivityPayerPayerAssignedEntityGeneralHeaderConstraintsUSRealmAddressStreetAddressLine PolicyActivityPayerPayerAssignedEntityGeneralHeaderConstraintsUSRealmAddressUseP PolicyActivityPayerPayerAssignedEntityGeneralHeaderConstraintsUSRealmAddressUse PolicyActivityPayerPayerAssignedEntityPayerOrganizationName PolicyActivityPayerPayerAssignedEntityId PolicyActivityPayerPayerAssignedEntityCodeP PolicyActivityPayerPayerAssignedEntityCode PolicyActivityPayerPayerAssignedEntityAddr PolicyActivityPayerPayerAssignedEntityTelecom PolicyActivityPayerPayerAssignedEntityPayerOrganization PolicyActivityPayerTemplateId PolicyActivityPayerTypeCode PolicyActivityPayerPayerAssignedEntity PolicyActivityGuarantorGuarantorAssignedEntityGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet PolicyActivityGuarantorGuarantorAssignedEntityGeneralHeaderConstraintsUSRealmAddressCity PolicyActivityGuarantorGuarantorAssignedEntityGeneralHeaderConstraintsUSRealmAddressCountry PolicyActivityGuarantorGuarantorAssignedEntityGeneralHeaderConstraintsUSRealmAddressPostalCode PolicyActivityGuarantorGuarantorAssignedEntityGeneralHeaderConstraintsUSRealmAddressState PolicyActivityGuarantorGuarantorAssignedEntityGeneralHeaderConstraintsUSRealmAddressStreetAddressLine PolicyActivityGuarantorGuarantorAssignedEntityGeneralHeaderConstraintsUSRealmAddressUseP PolicyActivityGuarantorGuarantorAssignedEntityGeneralHeaderConstraintsUSRealmAddressUse PolicyActivityGuarantorGuarantorAssignedEntityPersonNameAndOrOrgName PolicyActivityGuarantorGuarantorAssignedEntityCode PolicyActivityGuarantorGuarantorAssignedEntityCodeP PolicyActivityGuarantorGuarantorAssignedEntityAddr PolicyActivityGuarantorGuarantorAssignedEntityTelecom PolicyActivityGuarantorTemplateId PolicyActivityGuarantorTime PolicyActivityGuarantorTypeCode PolicyActivityGuarantorGuarantorAssignedEntity PolicyActivityCoverageCoverageRoleGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet PolicyActivityCoverageCoverageRoleGeneralHeaderConstraintsUSRealmAddressCity PolicyActivityCoverageCoverageRoleGeneralHeaderConstraintsUSRealmAddressCountry PolicyActivityCoverageCoverageRoleGeneralHeaderConstraintsUSRealmAddressPostalCode PolicyActivityCoverageCoverageRoleGeneralHeaderConstraintsUSRealmAddressState PolicyActivityCoverageCoverageRoleGeneralHeaderConstraintsUSRealmAddressStreetAddressLine PolicyActivityCoverageCoverageRoleGeneralHeaderConstraintsUSRealmAddressUseP PolicyActivityCoverageCoverageRoleGeneralHeaderConstraintsUSRealmAddressUse PolicyActivityCoverageCoverageRoleCoveragePlayingEntityName PolicyActivityCoverageCoverageRoleId PolicyActivityCoverageCoverageRoleCode PolicyActivityCoverageCoverageRoleCodeP PolicyActivityCoverageCoverageRoleAddr PolicyActivityCoverageCoverageRoleCoveragePlayingEntity PolicyActivityCoverageLowTime PolicyActivityCoverageHighTime PolicyActivityCoverageTemplateId PolicyActivityCoverageTypeCode PolicyActivityCoverageTime PolicyActivityCoverageCoverageRole PolicyActivityHolderHolderRoleGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet PolicyActivityHolderHolderRoleGeneralHeaderConstraintsUSRealmAddressCity PolicyActivityHolderHolderRoleGeneralHeaderConstraintsUSRealmAddressCountry PolicyActivityHolderHolderRoleGeneralHeaderConstraintsUSRealmAddressPostalCode PolicyActivityHolderHolderRoleGeneralHeaderConstraintsUSRealmAddressState PolicyActivityHolderHolderRoleGeneralHeaderConstraintsUSRealmAddressStreetAddressLine PolicyActivityHolderHolderRoleGeneralHeaderConstraintsUSRealmAddressUseP PolicyActivityHolderHolderRoleGeneralHeaderConstraintsUSRealmAddressUse PolicyActivityHolderHolderRoleId PolicyActivityHolderHolderRoleAddr PolicyActivityHolderTemplateId PolicyActivityHolderTypeCode PolicyActivityHolderTime PolicyActivityHolderHolderRole PolicyActivityEntryRelationshipTargetActActivity PolicyActivityEntryRelationshipDescriptionCoveragePlan PolicyActivityEntryRelationshipTypeCode' constraints.validation.dependOn.PolicyActivityPayerPayerAssignedEntityGeneralHeaderConstraintsUSRealmAddressUse='GeneralHeaderConstraintsUSRealmAddressUseP' constraints.validation.dependOn.PolicyActivityPayerPayerAssignedEntityCode='PolicyActivityPayerPayerAssignedEntityCodeP' constraints.validation.info='PolicyActivityPayerPayerAssignedEntityAddr PolicyActivityPayerPayerAssignedEntityTelecom PolicyActivityHolderTime' constraints.validation.dependOn.PolicyActivityGuarantorGuarantorAssignedEntityGeneralHeaderConstraintsUSRealmAddressUse='GeneralHeaderConstraintsUSRealmAddressUseP' constraints.validation.dependOn.PolicyActivityCoverageCoverageRoleGeneralHeaderConstraintsUSRealmAddressUse='GeneralHeaderConstraintsUSRealmAddressUseP' constraints.validation.dependOn.PolicyActivityHolderHolderRoleGeneralHeaderConstraintsUSRealmAddressUse='GeneralHeaderConstraintsUSRealmAddressUseP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolPolicyActivityPayer constraints.validation.error='PolicyActivityPayerTemplateId PolicyActivityPayerTypeCode PolicyActivityPayerPayerAssignedEntity PolicyActivityPayerPayerAssignedEntityGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet PolicyActivityPayerPayerAssignedEntityGeneralHeaderConstraintsUSRealmAddressCity PolicyActivityPayerPayerAssignedEntityGeneralHeaderConstraintsUSRealmAddressStreetAddressLine PolicyActivityPayerPayerAssignedEntityGeneralHeaderConstraintsUSRealmAddressUse PolicyActivityPayerPayerAssignedEntityId' templateId.root='2.16.840.1.113883.10.20.22.4.87' typeCode='PRF' constraints.validation.query='PolicyActivityPayerPayerAssignedEntityGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet PolicyActivityPayerPayerAssignedEntityGeneralHeaderConstraintsUSRealmAddressCity PolicyActivityPayerPayerAssignedEntityGeneralHeaderConstraintsUSRealmAddressCountry PolicyActivityPayerPayerAssignedEntityGeneralHeaderConstraintsUSRealmAddressPostalCode PolicyActivityPayerPayerAssignedEntityGeneralHeaderConstraintsUSRealmAddressState PolicyActivityPayerPayerAssignedEntityGeneralHeaderConstraintsUSRealmAddressStreetAddressLine PolicyActivityPayerPayerAssignedEntityGeneralHeaderConstraintsUSRealmAddressUseP PolicyActivityPayerPayerAssignedEntityGeneralHeaderConstraintsUSRealmAddressUse PolicyActivityPayerPayerAssignedEntityPayerOrganizationName PolicyActivityPayerPayerAssignedEntityId PolicyActivityPayerPayerAssignedEntityCodeP PolicyActivityPayerPayerAssignedEntityCode PolicyActivityPayerPayerAssignedEntityAddr PolicyActivityPayerPayerAssignedEntityTelecom PolicyActivityPayerPayerAssignedEntityPayerOrganization' constraints.validation.warning='PolicyActivityPayerPayerAssignedEntityGeneralHeaderConstraintsUSRealmAddressCountry PolicyActivityPayerPayerAssignedEntityGeneralHeaderConstraintsUSRealmAddressPostalCode PolicyActivityPayerPayerAssignedEntityGeneralHeaderConstraintsUSRealmAddressState PolicyActivityPayerPayerAssignedEntityGeneralHeaderConstraintsUSRealmAddressUseP PolicyActivityPayerPayerAssignedEntityPayerOrganizationName PolicyActivityPayerPayerAssignedEntityCodeP PolicyActivityPayerPayerAssignedEntityCode PolicyActivityPayerPayerAssignedEntityPayerOrganization' constraints.validation.dependOn.PolicyActivityPayerPayerAssignedEntityGeneralHeaderConstraintsUSRealmAddressUse='GeneralHeaderConstraintsUSRealmAddressUseP' constraints.validation.dependOn.PolicyActivityPayerPayerAssignedEntityCode='PolicyActivityPayerPayerAssignedEntityCodeP' constraints.validation.info='PolicyActivityPayerPayerAssignedEntityAddr PolicyActivityPayerPayerAssignedEntityTelecom'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolPolicyActivityPayerPayerAssignedEntity constraints.validation.error='PolicyActivityPayerPayerAssignedEntityId PolicyActivityPayerPayerAssignedEntityGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet PolicyActivityPayerPayerAssignedEntityGeneralHeaderConstraintsUSRealmAddressCity PolicyActivityPayerPayerAssignedEntityGeneralHeaderConstraintsUSRealmAddressStreetAddressLine PolicyActivityPayerPayerAssignedEntityGeneralHeaderConstraintsUSRealmAddressUse' code.codeSystem='2.16.840.1.113883.5.110' code.codeSystemName='HL7RoleClass' constraints.validation.warning='PolicyActivityPayerPayerAssignedEntityCode PolicyActivityPayerPayerAssignedEntityCodeP PolicyActivityPayerPayerAssignedEntityPayerOrganization PolicyActivityPayerPayerAssignedEntityGeneralHeaderConstraintsUSRealmAddressCountry PolicyActivityPayerPayerAssignedEntityGeneralHeaderConstraintsUSRealmAddressPostalCode PolicyActivityPayerPayerAssignedEntityGeneralHeaderConstraintsUSRealmAddressState PolicyActivityPayerPayerAssignedEntityGeneralHeaderConstraintsUSRealmAddressUseP PolicyActivityPayerPayerAssignedEntityPayerOrganizationName' constraints.validation.dependOn.PolicyActivityPayerPayerAssignedEntityCode='PolicyActivityPayerPayerAssignedEntityCodeP' constraints.validation.info='PolicyActivityPayerPayerAssignedEntityAddr PolicyActivityPayerPayerAssignedEntityTelecom' constraints.validation.query='PolicyActivityPayerPayerAssignedEntityGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet PolicyActivityPayerPayerAssignedEntityGeneralHeaderConstraintsUSRealmAddressCity PolicyActivityPayerPayerAssignedEntityGeneralHeaderConstraintsUSRealmAddressCountry PolicyActivityPayerPayerAssignedEntityGeneralHeaderConstraintsUSRealmAddressPostalCode PolicyActivityPayerPayerAssignedEntityGeneralHeaderConstraintsUSRealmAddressState PolicyActivityPayerPayerAssignedEntityGeneralHeaderConstraintsUSRealmAddressStreetAddressLine PolicyActivityPayerPayerAssignedEntityGeneralHeaderConstraintsUSRealmAddressUseP PolicyActivityPayerPayerAssignedEntityGeneralHeaderConstraintsUSRealmAddressUse PolicyActivityPayerPayerAssignedEntityPayerOrganizationName' constraints.validation.dependOn.PolicyActivityPayerPayerAssignedEntityGeneralHeaderConstraintsUSRealmAddressUse='GeneralHeaderConstraintsUSRealmAddressUseP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolPolicyActivityPayerPayerAssignedEntityPayerOrganization constraints.validation.warning='PolicyActivityPayerPayerAssignedEntityPayerOrganizationName'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolPolicyActivityGuarantor constraints.validation.error='PolicyActivityGuarantorTemplateId PolicyActivityGuarantorGuarantorAssignedEntity PolicyActivityGuarantorGuarantorAssignedEntityGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet PolicyActivityGuarantorGuarantorAssignedEntityGeneralHeaderConstraintsUSRealmAddressCity PolicyActivityGuarantorGuarantorAssignedEntityGeneralHeaderConstraintsUSRealmAddressStreetAddressLine PolicyActivityGuarantorGuarantorAssignedEntityGeneralHeaderConstraintsUSRealmAddressUse PolicyActivityGuarantorGuarantorAssignedEntityCode PolicyActivityGuarantorGuarantorAssignedEntityCodeP' templateId.root='2.16.840.1.113883.10.20.22.4.88' constraints.validation.warning='PolicyActivityGuarantorTime PolicyActivityGuarantorTypeCode PolicyActivityGuarantorGuarantorAssignedEntityGeneralHeaderConstraintsUSRealmAddressCountry PolicyActivityGuarantorGuarantorAssignedEntityGeneralHeaderConstraintsUSRealmAddressPostalCode PolicyActivityGuarantorGuarantorAssignedEntityGeneralHeaderConstraintsUSRealmAddressState PolicyActivityGuarantorGuarantorAssignedEntityGeneralHeaderConstraintsUSRealmAddressUseP PolicyActivityGuarantorGuarantorAssignedEntityPersonNameAndOrOrgName PolicyActivityGuarantorGuarantorAssignedEntityAddr PolicyActivityGuarantorGuarantorAssignedEntityTelecom' typeCode='PRF' constraints.validation.query='PolicyActivityGuarantorGuarantorAssignedEntityGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet PolicyActivityGuarantorGuarantorAssignedEntityGeneralHeaderConstraintsUSRealmAddressCity PolicyActivityGuarantorGuarantorAssignedEntityGeneralHeaderConstraintsUSRealmAddressCountry PolicyActivityGuarantorGuarantorAssignedEntityGeneralHeaderConstraintsUSRealmAddressPostalCode PolicyActivityGuarantorGuarantorAssignedEntityGeneralHeaderConstraintsUSRealmAddressState PolicyActivityGuarantorGuarantorAssignedEntityGeneralHeaderConstraintsUSRealmAddressStreetAddressLine PolicyActivityGuarantorGuarantorAssignedEntityGeneralHeaderConstraintsUSRealmAddressUseP PolicyActivityGuarantorGuarantorAssignedEntityGeneralHeaderConstraintsUSRealmAddressUse PolicyActivityGuarantorGuarantorAssignedEntityPersonNameAndOrOrgName PolicyActivityGuarantorGuarantorAssignedEntityCode PolicyActivityGuarantorGuarantorAssignedEntityCodeP PolicyActivityGuarantorGuarantorAssignedEntityAddr PolicyActivityGuarantorGuarantorAssignedEntityTelecom' constraints.validation.dependOn.PolicyActivityGuarantorGuarantorAssignedEntityGeneralHeaderConstraintsUSRealmAddressUse='GeneralHeaderConstraintsUSRealmAddressUseP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolPolicyActivityGuarantorGuarantorAssignedEntity constraints.validation.warning='PolicyActivityGuarantorGuarantorAssignedEntityPersonNameAndOrOrgName PolicyActivityGuarantorGuarantorAssignedEntityAddr PolicyActivityGuarantorGuarantorAssignedEntityTelecom PolicyActivityGuarantorGuarantorAssignedEntityGeneralHeaderConstraintsUSRealmAddressCountry PolicyActivityGuarantorGuarantorAssignedEntityGeneralHeaderConstraintsUSRealmAddressPostalCode PolicyActivityGuarantorGuarantorAssignedEntityGeneralHeaderConstraintsUSRealmAddressState PolicyActivityGuarantorGuarantorAssignedEntityGeneralHeaderConstraintsUSRealmAddressUseP' code.code='GUAR' code.codeSystem='2.16.840.1.113883.5.110' code.codeSystemName='HL7RoleClass' code.displayName='Guarantor' constraints.validation.error='PolicyActivityGuarantorGuarantorAssignedEntityCode PolicyActivityGuarantorGuarantorAssignedEntityCodeP PolicyActivityGuarantorGuarantorAssignedEntityGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet PolicyActivityGuarantorGuarantorAssignedEntityGeneralHeaderConstraintsUSRealmAddressCity PolicyActivityGuarantorGuarantorAssignedEntityGeneralHeaderConstraintsUSRealmAddressStreetAddressLine PolicyActivityGuarantorGuarantorAssignedEntityGeneralHeaderConstraintsUSRealmAddressUse' constraints.validation.query='PolicyActivityGuarantorGuarantorAssignedEntityGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet PolicyActivityGuarantorGuarantorAssignedEntityGeneralHeaderConstraintsUSRealmAddressCity PolicyActivityGuarantorGuarantorAssignedEntityGeneralHeaderConstraintsUSRealmAddressCountry PolicyActivityGuarantorGuarantorAssignedEntityGeneralHeaderConstraintsUSRealmAddressPostalCode PolicyActivityGuarantorGuarantorAssignedEntityGeneralHeaderConstraintsUSRealmAddressState PolicyActivityGuarantorGuarantorAssignedEntityGeneralHeaderConstraintsUSRealmAddressStreetAddressLine PolicyActivityGuarantorGuarantorAssignedEntityGeneralHeaderConstraintsUSRealmAddressUseP PolicyActivityGuarantorGuarantorAssignedEntityGeneralHeaderConstraintsUSRealmAddressUse' constraints.validation.dependOn.PolicyActivityGuarantorGuarantorAssignedEntityGeneralHeaderConstraintsUSRealmAddressUse='GeneralHeaderConstraintsUSRealmAddressUseP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolPolicyActivityCoverage constraints.validation.error='PolicyActivityCoverageTemplateId PolicyActivityCoverageTypeCode PolicyActivityCoverageCoverageRole PolicyActivityCoverageCoverageRoleGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet PolicyActivityCoverageCoverageRoleGeneralHeaderConstraintsUSRealmAddressCity PolicyActivityCoverageCoverageRoleGeneralHeaderConstraintsUSRealmAddressStreetAddressLine PolicyActivityCoverageCoverageRoleGeneralHeaderConstraintsUSRealmAddressUse PolicyActivityCoverageCoverageRoleCoveragePlayingEntityName PolicyActivityCoverageCoverageRoleId PolicyActivityCoverageCoverageRoleCodeP' templateId.root='2.16.840.1.113883.10.20.22.4.89' constraints.validation.warning='PolicyActivityCoverageLowTime PolicyActivityCoverageHighTime PolicyActivityCoverageTime PolicyActivityCoverageCoverageRoleGeneralHeaderConstraintsUSRealmAddressCountry PolicyActivityCoverageCoverageRoleGeneralHeaderConstraintsUSRealmAddressPostalCode PolicyActivityCoverageCoverageRoleGeneralHeaderConstraintsUSRealmAddressState PolicyActivityCoverageCoverageRoleGeneralHeaderConstraintsUSRealmAddressUseP PolicyActivityCoverageCoverageRoleCode PolicyActivityCoverageCoverageRoleAddr PolicyActivityCoverageCoverageRoleCoveragePlayingEntity' typeCode='COV' constraints.validation.query='PolicyActivityCoverageCoverageRoleGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet PolicyActivityCoverageCoverageRoleGeneralHeaderConstraintsUSRealmAddressCity PolicyActivityCoverageCoverageRoleGeneralHeaderConstraintsUSRealmAddressCountry PolicyActivityCoverageCoverageRoleGeneralHeaderConstraintsUSRealmAddressPostalCode PolicyActivityCoverageCoverageRoleGeneralHeaderConstraintsUSRealmAddressState PolicyActivityCoverageCoverageRoleGeneralHeaderConstraintsUSRealmAddressStreetAddressLine PolicyActivityCoverageCoverageRoleGeneralHeaderConstraintsUSRealmAddressUseP PolicyActivityCoverageCoverageRoleGeneralHeaderConstraintsUSRealmAddressUse PolicyActivityCoverageCoverageRoleCoveragePlayingEntityName PolicyActivityCoverageCoverageRoleId PolicyActivityCoverageCoverageRoleCode PolicyActivityCoverageCoverageRoleCodeP PolicyActivityCoverageCoverageRoleAddr PolicyActivityCoverageCoverageRoleCoveragePlayingEntity' constraints.validation.dependOn.PolicyActivityCoverageCoverageRoleGeneralHeaderConstraintsUSRealmAddressUse='GeneralHeaderConstraintsUSRealmAddressUseP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolPolicyActivityCoverageCoverageRole constraints.validation.error='PolicyActivityCoverageCoverageRoleId PolicyActivityCoverageCoverageRoleCodeP PolicyActivityCoverageCoverageRoleGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet PolicyActivityCoverageCoverageRoleGeneralHeaderConstraintsUSRealmAddressCity PolicyActivityCoverageCoverageRoleGeneralHeaderConstraintsUSRealmAddressStreetAddressLine PolicyActivityCoverageCoverageRoleGeneralHeaderConstraintsUSRealmAddressUse PolicyActivityCoverageCoverageRoleCoveragePlayingEntityName' code.codeSystem='2.16.840.1.113883.5.111' code.codeSystemName='RoleCode' constraints.validation.warning='PolicyActivityCoverageCoverageRoleCode PolicyActivityCoverageCoverageRoleAddr PolicyActivityCoverageCoverageRoleCoveragePlayingEntity PolicyActivityCoverageCoverageRoleGeneralHeaderConstraintsUSRealmAddressCountry PolicyActivityCoverageCoverageRoleGeneralHeaderConstraintsUSRealmAddressPostalCode PolicyActivityCoverageCoverageRoleGeneralHeaderConstraintsUSRealmAddressState PolicyActivityCoverageCoverageRoleGeneralHeaderConstraintsUSRealmAddressUseP' constraints.validation.query='PolicyActivityCoverageCoverageRoleGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet PolicyActivityCoverageCoverageRoleGeneralHeaderConstraintsUSRealmAddressCity PolicyActivityCoverageCoverageRoleGeneralHeaderConstraintsUSRealmAddressCountry PolicyActivityCoverageCoverageRoleGeneralHeaderConstraintsUSRealmAddressPostalCode PolicyActivityCoverageCoverageRoleGeneralHeaderConstraintsUSRealmAddressState PolicyActivityCoverageCoverageRoleGeneralHeaderConstraintsUSRealmAddressStreetAddressLine PolicyActivityCoverageCoverageRoleGeneralHeaderConstraintsUSRealmAddressUseP PolicyActivityCoverageCoverageRoleGeneralHeaderConstraintsUSRealmAddressUse PolicyActivityCoverageCoverageRoleCoveragePlayingEntityName' constraints.validation.dependOn.PolicyActivityCoverageCoverageRoleGeneralHeaderConstraintsUSRealmAddressUse='GeneralHeaderConstraintsUSRealmAddressUseP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolPolicyActivityCoverageCoverageRoleCoveragePlayingEntity constraints.validation.error='PolicyActivityCoverageCoverageRoleCoveragePlayingEntityName'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolPolicyActivityHolder constraints.validation.error='PolicyActivityHolderTemplateId PolicyActivityHolderTypeCode PolicyActivityHolderHolderRole PolicyActivityHolderHolderRoleGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet PolicyActivityHolderHolderRoleGeneralHeaderConstraintsUSRealmAddressCity PolicyActivityHolderHolderRoleGeneralHeaderConstraintsUSRealmAddressStreetAddressLine PolicyActivityHolderHolderRoleGeneralHeaderConstraintsUSRealmAddressUse PolicyActivityHolderHolderRoleId' templateId.root='2.16.840.1.113883.10.20.22.4.90' typeCode='HLD' constraints.validation.info='PolicyActivityHolderTime' constraints.validation.query='PolicyActivityHolderHolderRoleGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet PolicyActivityHolderHolderRoleGeneralHeaderConstraintsUSRealmAddressCity PolicyActivityHolderHolderRoleGeneralHeaderConstraintsUSRealmAddressCountry PolicyActivityHolderHolderRoleGeneralHeaderConstraintsUSRealmAddressPostalCode PolicyActivityHolderHolderRoleGeneralHeaderConstraintsUSRealmAddressState PolicyActivityHolderHolderRoleGeneralHeaderConstraintsUSRealmAddressStreetAddressLine PolicyActivityHolderHolderRoleGeneralHeaderConstraintsUSRealmAddressUseP PolicyActivityHolderHolderRoleGeneralHeaderConstraintsUSRealmAddressUse PolicyActivityHolderHolderRoleId PolicyActivityHolderHolderRoleAddr' constraints.validation.warning='PolicyActivityHolderHolderRoleGeneralHeaderConstraintsUSRealmAddressCountry PolicyActivityHolderHolderRoleGeneralHeaderConstraintsUSRealmAddressPostalCode PolicyActivityHolderHolderRoleGeneralHeaderConstraintsUSRealmAddressState PolicyActivityHolderHolderRoleGeneralHeaderConstraintsUSRealmAddressUseP PolicyActivityHolderHolderRoleAddr' constraints.validation.dependOn.PolicyActivityHolderHolderRoleGeneralHeaderConstraintsUSRealmAddressUse='GeneralHeaderConstraintsUSRealmAddressUseP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolPolicyActivityHolderHolderRole constraints.validation.error='PolicyActivityHolderHolderRoleId PolicyActivityHolderHolderRoleGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet PolicyActivityHolderHolderRoleGeneralHeaderConstraintsUSRealmAddressCity PolicyActivityHolderHolderRoleGeneralHeaderConstraintsUSRealmAddressStreetAddressLine PolicyActivityHolderHolderRoleGeneralHeaderConstraintsUSRealmAddressUse' constraints.validation.warning='PolicyActivityHolderHolderRoleAddr PolicyActivityHolderHolderRoleGeneralHeaderConstraintsUSRealmAddressCountry PolicyActivityHolderHolderRoleGeneralHeaderConstraintsUSRealmAddressPostalCode PolicyActivityHolderHolderRoleGeneralHeaderConstraintsUSRealmAddressState PolicyActivityHolderHolderRoleGeneralHeaderConstraintsUSRealmAddressUseP' constraints.validation.query='PolicyActivityHolderHolderRoleGeneralHeaderConstraintsUSRealmAddressUSRealmAddressStreet PolicyActivityHolderHolderRoleGeneralHeaderConstraintsUSRealmAddressCity PolicyActivityHolderHolderRoleGeneralHeaderConstraintsUSRealmAddressCountry PolicyActivityHolderHolderRoleGeneralHeaderConstraintsUSRealmAddressPostalCode PolicyActivityHolderHolderRoleGeneralHeaderConstraintsUSRealmAddressState PolicyActivityHolderHolderRoleGeneralHeaderConstraintsUSRealmAddressStreetAddressLine PolicyActivityHolderHolderRoleGeneralHeaderConstraintsUSRealmAddressUseP PolicyActivityHolderHolderRoleGeneralHeaderConstraintsUSRealmAddressUse' constraints.validation.dependOn.PolicyActivityHolderHolderRoleGeneralHeaderConstraintsUSRealmAddressUse='GeneralHeaderConstraintsUSRealmAddressUseP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolPolicyActivityEntryRelationship constraints.validation.error='PolicyActivityEntryRelationshipTargetActActivity PolicyActivityEntryRelationshipDescriptionCoveragePlan PolicyActivityEntryRelationshipTypeCode' typeCode='REFR'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_u9amoIokEeSkH97cUQxLGA" base_Class="_Cg3pkBUmEeGvPruliC3crg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='CoverageActivityTemplateId CoverageActivityClassCode CoverageActivityCode CoverageActivityId CoverageActivityMoodCode CoverageActivityStatusCode CoverageActivityPolicyActivity' templateId.root='2.16.840.1.113883.10.20.22.4.60' constraints.validation.info='CoverageActivityRelationshipSequenceNumber' classCode='ACT' code.code='48768-6' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Payment Sources' moodCode='EVN' statusCode.code='completed'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_u9p3MIokEeSkH97cUQxLGA" base_Class="_5Ha7ABUyEeGbmN_W114JUw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProblemObservationTemplateId ProblemObservationTextReferenceValue ProblemObservationHasTextReferenceValue ProblemObservationHasOnsetDate ProblemObservationAgeObservationInversion ProblemObservationClassCode ProblemObservationMoodCode ProblemObservationId ProblemObservationCodeP ProblemObservationStatusCode ProblemObservationValueP' templateId.root='2.16.840.1.113883.10.20.22.4.4' constraints.validation.warning='ProblemObservationHasTextReference ProblemObservationCode ProblemObservationText ProblemObservationEffectiveTime ProblemObservationValue' constraints.validation.info='ProblemObservationHasResolutionDate ProblemObservationValueNullFlavor ProblemObservationValueTranslation ProblemObservationValueTranslationCode ProblemObservationNegationInd ProblemObservationAgeObservation ProblemObservationHealthStatusObservation ProblemObservationProblemStatus' classCode='OBS' moodCode='EVN' code.codeSystem='2.16.840.1.113883.6.96' code.codeSystemName='SNOMEDCT' constraints.validation.dependOn.ProblemObservationCode='ProblemObservationCodeP' statusCode.code='completed' value.codeSystem='2.16.840.1.113883.6.96' value.codeSystemName='SNOMEDCT'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_u-I_YIokEeSkH97cUQxLGA" base_Class="_SjN_8BUzEeGbmN_W114JUw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProblemStatusTemplateId ProblemStatusReferenceValue ProblemStatusTextReferenceValue ProblemStatusClassCode ProblemStatusMoodCode ProblemStatusCode ProblemStatusStatusCode ProblemStatusValue' templateId.root='2.16.840.1.113883.10.20.22.4.6' constraints.validation.warning='ProblemStatusTextReference ProblemStatusText' classCode='OBS' moodCode='EVN' code.code='33999-4' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Status' statusCode.code='completed' value.codeSystem='2.16.840.1.113883.6.96' value.codeSystemName='SNOMEDCT'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_u-jPEIokEeSkH97cUQxLGA" base_Class="__qYdcBVNEeGbmN_W114JUw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ImmunizationRefusalReasonTemplateId ImmunizationRefusalReasonClassCode ImmunizationRefusalReasonCode ImmunizationRefusalReasonId ImmunizationRefusalReasonMoodCode ImmunizationRefusalReasonStatusCode' templateId.root='2.16.840.1.113883.10.20.22.4.53' classCode='OBS' code.codeSystem='2.16.840.1.113883.5.8' code.codeSystemName='ActReason' moodCode='EVN' statusCode.code='completed'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_u-u1QIokEeSkH97cUQxLGA" base_Class="_daTqABVOEeGbmN_W114JUw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ImmunizationMedicationInformationTemplateId ImmunizationMedicationInformationClassCode ImmunizationMedicationInformationManufacturedMaterial ImmunizationMedicationInformationImmunizationMedicationInformationManufacturedMaterialCode' templateId.root='2.16.840.1.113883.10.20.22.4.54' classCode='MANU' constraints.validation.info='ImmunizationMedicationInformationId ImmunizationMedicationInformationImmunizationMedicationInformationManufacturedMaterialCodeTranslation' constraints.validation.warning='ImmunizationMedicationInformationManufacturerOrganization ImmunizationMedicationInformationImmunizationMedicationInformationManufacturedMaterialCodeOriginalText ImmunizationMedicationInformationImmunizationMedicationInformationManufacturedMaterialOriginalTextReference ImmunizationMedicationInformationImmunizationMedicationInformationManufacturedMaterialTextReferenceValue ImmunizationMedicationInformationImmunizationMedicationInformationManufacturedMaterialLotNumberText' constraints.validation.query='ImmunizationMedicationInformationImmunizationMedicationInformationManufacturedMaterialCodeOriginalText ImmunizationMedicationInformationImmunizationMedicationInformationManufacturedMaterialOriginalTextReference ImmunizationMedicationInformationImmunizationMedicationInformationManufacturedMaterialTextReferenceValue ImmunizationMedicationInformationImmunizationMedicationInformationManufacturedMaterialCodeTranslation ImmunizationMedicationInformationImmunizationMedicationInformationManufacturedMaterialCode ImmunizationMedicationInformationImmunizationMedicationInformationManufacturedMaterialLotNumberText'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolImmunizationMedicationInformationImmunizationMedicationInformationManufacturedMaterial constraints.validation.warning='ImmunizationMedicationInformationImmunizationMedicationInformationManufacturedMaterialCodeOriginalText ImmunizationMedicationInformationImmunizationMedicationInformationManufacturedMaterialOriginalTextReference ImmunizationMedicationInformationImmunizationMedicationInformationManufacturedMaterialTextReferenceValue ImmunizationMedicationInformationImmunizationMedicationInformationManufacturedMaterialLotNumberText' constraints.validation.info='ImmunizationMedicationInformationImmunizationMedicationInformationManufacturedMaterialCodeTranslation' code.codeSystem='2.16.840.1.113883.12.292' code.codeSystemName='Vaccines administered (CVX)' constraints.validation.error='ImmunizationMedicationInformationImmunizationMedicationInformationManufacturedMaterialCode'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_u-8QoIokEeSkH97cUQxLGA" base_Class="_bGzYgBVdEeGQCvUGzi1kDQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='AllergiesSectionEntriesOptionalTemplateId AllergiesSectionEntriesOptionalCode AllergiesSectionEntriesOptionalCodeP AllergiesSectionEntriesOptionalTitle AllergiesSectionEntriesOptionalText' templateId.root='2.16.840.1.113883.10.20.22.2.6' code.code='48765-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Allergies, adverse reactions, alerts' constraints.validation.warning='AllergiesSectionEntriesOptionalAllergyProblemAct'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_u_GosIokEeSkH97cUQxLGA" base_Class="_iAoXEBVdEeGQCvUGzi1kDQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='MedicationsSectionEntriesOptionalTemplateId MedicationsSectionEntriesOptionalCode MedicationsSectionEntriesOptionalTitle MedicationsSectionEntriesOptionalText' templateId.root='2.16.840.1.113883.10.20.22.2.1' code.code='10160-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='History of medication use' constraints.validation.warning='MedicationsSectionEntriesOptionalMedicationActivity'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_u_OkgIokEeSkH97cUQxLGA" base_Class="_naxrkBVdEeGQCvUGzi1kDQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProblemSectionEntriesOptionalTemplateId ProblemSectionEntriesOptionalCode ProblemSectionEntriesOptionalCodeP ProblemSectionEntriesOptionalTitle ProblemSectionEntriesOptionalText' templateId.root='2.16.840.1.113883.10.20.22.2.5' code.code='11450-4' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Problem List' constraints.validation.warning='ProblemSectionEntriesOptionalProblemConcern'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_u_XucIokEeSkH97cUQxLGA" base_Class="_s9Ig4BVdEeGQCvUGzi1kDQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProceduresSectionEntriesOptionalTemplateId ProceduresSectionEntriesOptionalCode ProceduresSectionEntriesOptionalCodeP ProceduresSectionEntriesOptionalTitle ProceduresSectionEntriesOptionalText' templateId.root='2.16.840.1.113883.10.20.22.2.7' code.code='47519-4' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='History of Procedures' constraints.validation.info='ProceduresSectionEntriesOptionalProcedureActivityProcedure ProceduresSectionEntriesOptionalProcedureActivityObservation ProceduresSectionEntriesOptionalProcedureActivityAct'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_u_gRUIokEeSkH97cUQxLGA" base_Class="_xGqiEBVdEeGQCvUGzi1kDQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ResultsSectionEntriesOptionalTemplateId ResultsSectionEntriesOptionalCode ResultsSectionEntriesOptionalCodeP ResultsSectionEntriesOptionalTitle ResultsSectionEntriesOptionalText' templateId.root='2.16.840.1.113883.10.20.22.2.3' code.code='30954-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Relevant diagnostic tests and/or laboratory data' constraints.validation.warning='ResultsSectionEntriesOptionalResultOrganizer'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_u_pbQYokEeSkH97cUQxLGA" base_Class="_1RZdIBVdEeGQCvUGzi1kDQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='AdvanceDirectivesSectionEntriesOptionalTemplateId AdvanceDirectivesSectionEntriesOptionalCode AdvanceDirectivesSectionEntriesOptionalCodeP AdvanceDirectivesSectionEntriesOptionalTitle AdvanceDirectivesSectionEntriesOptionalText' templateId.root='2.16.840.1.113883.10.20.22.2.21' code.code='42348-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Advance Directives' constraints.validation.info='AdvanceDirectivesSectionEntriesOptionalAdvanceDirectiveObservation'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_u_zMQIokEeSkH97cUQxLGA" base_Class="_4yj2wBVdEeGQCvUGzi1kDQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='EncountersSectionEntriesOptionalTemplateId EncountersSectionEntriesOptionalCode EncountersSectionEntriesOptionalCodeP EncountersSectionEntriesOptionalTitle EncountersSectionEntriesOptionalText' templateId.root='2.16.840.1.113883.10.20.22.2.22' code.code='46240-8' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Encounters' constraints.validation.warning='EncountersSectionEntriesOptionalEncounterActivities'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vACc0IokEeSkH97cUQxLGA" base_Class="_EuPloBVeEeGQCvUGzi1kDQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ImmunizationsSectionEntriesOptionalTemplateId ImmunizationsSectionEntriesOptionalCode ImmunizationsSectionEntriesOptionalCodeP ImmunizationsSectionEntriesOptionalTitle ImmunizationsSectionEntriesOptionalText' templateId.root='2.16.840.1.113883.10.20.22.2.2' code.code='11369-6' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' constraints.validation.warning='ImmunizationsSectionEntriesOptionalImmunizationActivity'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vALmwIokEeSkH97cUQxLGA" base_Class="_bRH8sBVeEeGQCvUGzi1kDQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='VitalSignsSectionEntriesOptionalTemplateId VitalSignsSectionEntriesOptionalCode VitalSignsSectionEntriesOptionalCodeP VitalSignsSectionEntriesOptionalText VitalSignsSectionEntriesOptionalTitle' templateId.root='2.16.840.1.113883.10.20.22.2.4' code.code='8716-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Vital Signs' constraints.validation.warning='VitalSignsSectionEntriesOptionalVitalSignsOrganizer'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vAUwsIokEeSkH97cUQxLGA" base_Class="_Aj7JkBg4EeGs5a462vYX5Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProcedureActivityObservationTemplateId ProcedureActivityObservationReferenceValue ProcedureActivityObservationEncounterInversion ProcedureActivityObservationServiceDeliveryLocationTypeCode ProcedureActivityObservationInstructionsInversion ProcedureActivityObservationClassCode ProcedureActivityObservationMoodCode ProcedureActivityObservationId ProcedureActivityObservationCode ProcedureActivityObservationStatusCode ProcedureActivityObservationValue ProcedureActivityObservationPriorityCode ProcedureActivityObservationTargetSiteCode ProcedureActivityObservationProcedureObservationPerformerProcedureObservationAssignedEntityProcedureObservationRepresentedOrganizationTelecom ProcedureActivityObservationProcedureObservationPerformerProcedureObservationAssignedEntityProcedureObservationRepresentedOrganizationAddr ProcedureActivityObservationProcedureObservationPerformerProcedureObservationAssignedEntityId ProcedureActivityObservationProcedureObservationPerformerProcedureObservationAssignedEntityAddr ProcedureActivityObservationProcedureObservationPerformerProcedureObservationAssignedEntityTelecom ProcedureActivityObservationProcedureObservationPerformerAssignedEntity ProcedureActivityObservationEntryRelationshipProcedureObservationEncounterClassCode ProcedureActivityObservationEntryRelationshipProcedureObservationEncounterMoodCode ProcedureActivityObservationEntryRelationshipProcedureObservationEncounterId ProcedureActivityObservationEntryRelationshipInversionInd ProcedureActivityObservationEntryRelationshipTypeCode ProcedureActivityObservationEntryRelationshipProcedureObservationEncounter' templateId.root='2.16.840.1.113883.10.20.22.4.13' constraints.validation.warning='ProcedureActivityObservationCodeCodeSystems ProcedureActivityObservationCodeOriginalText ProcedureActivityObservationOriginalTextReference ProcedureActivityObservationOriginalTextReferenceValue ProcedureActivityObservationEffectiveTime ProcedureActivityObservationTargetSiteCodeP ProcedureActivityObservationPerformer ProcedureActivityObservationProcedureObservationPerformerProcedureObservationAssignedEntityProcedureObservationRepresentedOrganizationId ProcedureActivityObservationProcedureObservationPerformerProcedureObservationAssignedEntityRepresentedOrganization' classCode='OBS' priorityCode.codeSystem='2.16.840.1.113883.5.7' priorityCode.codeSystemName='ActPriority' constraints.validation.info='ProcedureActivityObservationPriorityCodeP ProcedureActivityObservationMethodCode ProcedureActivityObservationServiceDeliveryLocation ProcedureActivityObservationInstructions ProcedureActivityObservationIndication ProcedureActivityObservationMedicationActivity ProcedureActivityObservationEntryRelationship ProcedureActivityObservationProcedureObservationPerformerProcedureObservationAssignedEntityProcedureObservationRepresentedOrganizationName' constraints.validation.dependOn.ProcedureActivityObservationPriorityCode='ProcedureActivityObservationPriorityCodeP' targetSiteCode.codeSystem='2.16.840.1.113883.6.96' targetSiteCode.codeSystemName='SNOMEDCT' constraints.validation.dependOn.ProcedureActivityObservationTargetSiteCode='ProcedureActivityObservationTargetSiteCodeP' constraints.validation.query='ProcedureActivityObservationProcedureObservationPerformerProcedureObservationAssignedEntityProcedureObservationRepresentedOrganizationId ProcedureActivityObservationProcedureObservationPerformerProcedureObservationAssignedEntityProcedureObservationRepresentedOrganizationName ProcedureActivityObservationProcedureObservationPerformerProcedureObservationAssignedEntityProcedureObservationRepresentedOrganizationTelecom ProcedureActivityObservationProcedureObservationPerformerProcedureObservationAssignedEntityProcedureObservationRepresentedOrganizationAddr ProcedureActivityObservationProcedureObservationPerformerProcedureObservationAssignedEntityId ProcedureActivityObservationProcedureObservationPerformerProcedureObservationAssignedEntityAddr ProcedureActivityObservationProcedureObservationPerformerProcedureObservationAssignedEntityTelecom ProcedureActivityObservationProcedureObservationPerformerProcedureObservationAssignedEntityRepresentedOrganization ProcedureActivityObservationProcedureObservationPerformerAssignedEntity ProcedureActivityObservationEntryRelationshipProcedureObservationEncounterClassCode ProcedureActivityObservationEntryRelationshipProcedureObservationEncounterMoodCode ProcedureActivityObservationEntryRelationshipProcedureObservationEncounterId ProcedureActivityObservationEntryRelationshipInversionInd ProcedureActivityObservationEntryRelationshipTypeCode ProcedureActivityObservationEntryRelationshipProcedureObservationEncounter'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolProcedureActivityObservationProcedureObservationPerformer constraints.validation.error='ProcedureActivityObservationProcedureObservationPerformerAssignedEntity'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolProcedureActivityObservationProcedureObservationPerformerProcedureObservationAssignedEntity constraints.validation.error='ProcedureActivityObservationProcedureObservationPerformerProcedureObservationAssignedEntityId ProcedureActivityObservationProcedureObservationPerformerProcedureObservationAssignedEntityAddr ProcedureActivityObservationProcedureObservationPerformerProcedureObservationAssignedEntityTelecom' constraints.validation.warning='ProcedureActivityObservationProcedureObservationPerformerProcedureObservationAssignedEntityRepresentedOrganization'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolProcedureActivityObservationProcedureObservationPerformerProcedureObservationAssignedEntityProcedureObservationRepresentedOrganization constraints.validation.warning='ProcedureActivityObservationProcedureObservationPerformerProcedureObservationAssignedEntityProcedureObservationRepresentedOrganizationId' constraints.validation.info='ProcedureActivityObservationProcedureObservationPerformerProcedureObservationAssignedEntityProcedureObservationRepresentedOrganizationName' constraints.validation.error='ProcedureActivityObservationProcedureObservationPerformerProcedureObservationAssignedEntityProcedureObservationRepresentedOrganizationTelecom ProcedureActivityObservationProcedureObservationPerformerProcedureObservationAssignedEntityProcedureObservationRepresentedOrganizationAddr'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolProcedureActivityObservationEntryRelationship inversionInd='true' constraints.validation.error='ProcedureActivityObservationEntryRelationshipInversionInd ProcedureActivityObservationEntryRelationshipTypeCode ProcedureActivityObservationEntryRelationshipProcedureObservationEncounter' typeCode='COMP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolProcedureActivityObservationEntryRelationshipProcedureObservationEncounter classCode='ENC' constraints.validation.error='ProcedureActivityObservationEntryRelationshipProcedureObservationEncounterClassCode ProcedureActivityObservationEntryRelationshipProcedureObservationEncounterMoodCode ProcedureActivityObservationEntryRelationshipProcedureObservationEncounterId' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vBAGIIokEeSkH97cUQxLGA" base_Class="_awdH4Bg4EeGs5a462vYX5Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProcedureActivityActTemplateId ProcedureActivityActReferenceValue ProcedureActivityActEncounterInversion ProcedureActivityActServiceDeliveryLocationTypeCode ProcedureActivityActInstructionsInversion ProcedureActivityActClassCode ProcedureActivityActMoodCode ProcedureActivityActId ProcedureActivityActCode ProcedureActivityActStatusCode ProcedureActivityActPriorityCode ProcedureActivityActProcedureActPerformerProcedureActAssignedEntityProcedureActRepresentedOrganizationTelecom ProcedureActivityActProcedureActPerformerProcedureActAssignedEntityProcedureActRepresentedOrganizationAddr ProcedureActivityActProcedureActPerformerProcedureActAssignedEntityId ProcedureActivityActProcedureActPerformerProcedureActAssignedEntityAddr ProcedureActivityActProcedureActPerformerProcedureActAssignedEntityTelecom ProcedureActivityActProcedureActPerformerAssignedEntity ProcedureActivityActEntryRelationshipProcedureActEncounterClassCode ProcedureActivityActEntryRelationshipProcedureActEncounterMoodCode ProcedureActivityActEntryRelationshipProcedureActEncounterId ProcedureActivityActEntryRelationshipInversionInd ProcedureActivityActEntryRelationshipTypeCode ProcedureActivityActEntryRelationshipProcedureActEncounter' templateId.root='2.16.840.1.113883.10.20.22.4.12' constraints.validation.warning='ProcedureActivityActCodeCodeSystems ProcedureActivityActCodeOriginalText ProcedureActivityActOriginalTextReference ProcedureActivityActEffectiveTime ProcedureActivityActPerformer ProcedureActivityActProcedureActPerformerProcedureActAssignedEntityProcedureActRepresentedOrganizationId ProcedureActivityActProcedureActPerformerProcedureActAssignedEntityRepresentedOrganization' constraints.validation.info='ProcedureActivityActOriginalTextReferenceValue ProcedureActivityActPriorityCodeP ProcedureActivityActServiceDeliveryLocation ProcedureActivityActInstructions ProcedureActivityActIndication ProcedureActivityActMedicationActivity ProcedureActivityActEntryRelationship ProcedureActivityActProcedureActPerformerProcedureActAssignedEntityProcedureActRepresentedOrganizationName' classCode='ACT' priorityCode.codeSystem='2.16.840.1.113883.5.7' priorityCode.codeSystemName='ActPriority' constraints.validation.dependOn.ProcedureActivityActPriorityCode='ProcedureActivityActPriorityCodeP' constraints.validation.query='ProcedureActivityActProcedureActPerformerProcedureActAssignedEntityProcedureActRepresentedOrganizationId ProcedureActivityActProcedureActPerformerProcedureActAssignedEntityProcedureActRepresentedOrganizationName ProcedureActivityActProcedureActPerformerProcedureActAssignedEntityProcedureActRepresentedOrganizationTelecom ProcedureActivityActProcedureActPerformerProcedureActAssignedEntityProcedureActRepresentedOrganizationAddr ProcedureActivityActProcedureActPerformerProcedureActAssignedEntityId ProcedureActivityActProcedureActPerformerProcedureActAssignedEntityAddr ProcedureActivityActProcedureActPerformerProcedureActAssignedEntityTelecom ProcedureActivityActProcedureActPerformerProcedureActAssignedEntityRepresentedOrganization ProcedureActivityActProcedureActPerformerAssignedEntity ProcedureActivityActEntryRelationshipProcedureActEncounterClassCode ProcedureActivityActEntryRelationshipProcedureActEncounterMoodCode ProcedureActivityActEntryRelationshipProcedureActEncounterId ProcedureActivityActEntryRelationshipInversionInd ProcedureActivityActEntryRelationshipTypeCode ProcedureActivityActEntryRelationshipProcedureActEncounter'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolProcedureActivityActProcedureActPerformer constraints.validation.error='ProcedureActivityActProcedureActPerformerAssignedEntity'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolProcedureActivityActProcedureActPerformerProcedureActAssignedEntity constraints.validation.error='ProcedureActivityActProcedureActPerformerProcedureActAssignedEntityId ProcedureActivityActProcedureActPerformerProcedureActAssignedEntityAddr ProcedureActivityActProcedureActPerformerProcedureActAssignedEntityTelecom' constraints.validation.warning='ProcedureActivityActProcedureActPerformerProcedureActAssignedEntityRepresentedOrganization'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolProcedureActivityActProcedureActPerformerProcedureActAssignedEntityProcedureActRepresentedOrganization constraints.validation.warning='ProcedureActivityActProcedureActPerformerProcedureActAssignedEntityProcedureActRepresentedOrganizationId' constraints.validation.info='ProcedureActivityActProcedureActPerformerProcedureActAssignedEntityProcedureActRepresentedOrganizationName' constraints.validation.error='ProcedureActivityActProcedureActPerformerProcedureActAssignedEntityProcedureActRepresentedOrganizationTelecom ProcedureActivityActProcedureActPerformerProcedureActAssignedEntityProcedureActRepresentedOrganizationAddr'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolProcedureActivityActEntryRelationship inversionInd='true' constraints.validation.error='ProcedureActivityActEntryRelationshipInversionInd ProcedureActivityActEntryRelationshipTypeCode ProcedureActivityActEntryRelationshipProcedureActEncounter' typeCode='COMP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolProcedureActivityActEntryRelationshipProcedureActEncounter classCode='ENC' constraints.validation.error='ProcedureActivityActEntryRelationshipProcedureActEncounterClassCode ProcedureActivityActEntryRelationshipProcedureActEncounterMoodCode ProcedureActivityActEntryRelationshipProcedureActEncounterId' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vBjfwIokEeSkH97cUQxLGA" base_Class="_XUoXwBnZEeGs5a462vYX5Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='AuthorizationActivityTemplateId AuthorizationActivityClassCode AuthorizationActivityId AuthorizationActivityMoodCode AuthorizationActivityEntryRelationship AuthorizationActivityEntryRelationshipHasClinicalStatement AuthorizationActivityEntryRelationshipTypeCode' templateId.root='2.16.840.1.113883.10.20.1.19' classCode='ACT' moodCode='EVN' constraints.validation.query='AuthorizationActivityEntryRelationshipHasClinicalStatement AuthorizationActivityEntryRelationshipHasAuthorizedPerformers AuthorizationActivityEntryRelationshipTypeCode' constraints.validation.info='AuthorizationActivityEntryRelationshipHasAuthorizedPerformers'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolAuthorizationActivityEntryRelationship constraints.validation.error='AuthorizationActivityEntryRelationshipHasClinicalStatement AuthorizationActivityEntryRelationshipTypeCode' constraints.validation.info='AuthorizationActivityEntryRelationshipHasAuthorizedPerformers' typeCode='SUBJ'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vBvtAIokEeSkH97cUQxLGA" base_Class="_j3aTQBrTEeGo461UQq-B1g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='MedicationSupplyOrderTemplateId MedicationSupplyOrderInstructionInversionInd MedicationSupplyOrderEffectiveTimeHigh MedicationSupplyOrderContainsMedicationOrImmunization MedicationSupplyOrderClassCode MedicationSupplyOrderMoodCode MedicationSupplyOrderStatusCode MedicationSupplyOrderId' templateId.root='2.16.840.1.113883.10.20.22.4.17' classCode='SPLY' constraints.validation.warning='MedicationSupplyOrderEffectiveTime MedicationSupplyOrderQuantity MedicationSupplyOrderRepeatNumber' moodCode='INT' constraints.validation.info='MedicationSupplyOrderAuthor MedicationSupplyOrderInstructions'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vCZ0UIokEeSkH97cUQxLGA" base_Class="_vBswQBtpEeGT89b80j3MTg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='EstimatedDateOfDeliveryTemplateId EstimatedDateOfDeliveryClassCode EstimatedDateOfDeliveryCode EstimatedDateOfDeliveryMoodCode EstimatedDateOfDeliveryStatusCode EstimatedDateOfDeliveryValue' templateId.root='2.16.840.1.113883.10.20.15.3.1' classCode='OBS' code.code='11778-8' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' moodCode='EVN' statusCode.code='completed'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vCukcIokEeSkH97cUQxLGA" base_Class="_hD-z0CUPEeGiOPpZVnfEJA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='DischargeMedicationMedicationActivity DischargeMedicationTemplateId DischargeMedicationClassCode DischargeMedicationMoodCode DischargeMedicationCode' templateId.root='2.16.840.1.113883.10.20.22.4.35' classCode='ACT' moodCode='EVN' code.code='10183-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Discharge Medication'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vCvykIokEeSkH97cUQxLGA" base_Class="_KtwVgCULEeGiOPpZVnfEJA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='HospitalDischargeDiagnosisProblemObservation HospitalDischargeDiagnosisTemplateId HospitalDischargeDiagnosisClassCode HospitalDischargeDiagnosisMoodCode HospitalDischargeDiagnosisCode' templateId.root='2.16.840.1.113883.10.20.22.4.33' classCode='ACT' moodCode='EVN' code.code='11535-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Hospital Discharge Diagnosis'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vCxAsIokEeSkH97cUQxLGA" base_Class="_2PidURSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='HospitalDischargeDiagnosisSectionTemplateId HospitalDischargeDiagnosisSectionCode HospitalDischargeDiagnosisSectionCodeP HospitalDischargeDiagnosisSectionTitle HospitalDischargeDiagnosisSectionText' templateId.root='2.16.840.1.113883.10.20.22.2.24' code.code='11535-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Hospital Discharge Diagnosis' constraints.validation.warning='HospitalDischargeDiagnosisSectionHospitalDischargeDiagnosis'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vC5jkYokEeSkH97cUQxLGA" base_Class="_2Poj7RSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='HospitalDischargeMedicationsSectionEntriesOptionalTemplateId HospitalDischargeMedicationsSectionEntriesOptionalCode HospitalDischargeMedicationsSectionEntriesOptionalCodeP HospitalDischargeMedicationsSectionEntriesOptionalTitle HospitalDischargeMedicationsSectionEntriesOptionalText' templateId.root='2.16.840.1.113883.10.20.22.2.11' code.code='10183-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='HOSPITAL DISCHARGE MEDICATIONS' constraints.validation.warning='HospitalDischargeMedicationsSectionEntriesOptionalDischargeMedication'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vDCtgIokEeSkH97cUQxLGA" base_Class="_2RqkOxSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='HospitalCourseSectionTemplateId HospitalCourseSectionCode HospitalCourseSectionCodeP HospitalCourseSectionTitle HospitalCourseSectionText' templateId.root='1.3.6.1.4.1.19376.1.5.3.1.3.5' code.code='8648-8' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Hospital Course'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vDL3cIokEeSkH97cUQxLGA" base_Class="_2Uz-4xSVEeGGzu7fmW9pXw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='DischargeDietSectionTemplateId DischargeDietSectionCode DischargeDietSectionCodeP DischargeDietSectionTitle DischargeDietSectionText' templateId.root='1.3.6.1.4.1.19376.1.5.3.1.3.33' code.code='42344-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Discharge Diet'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vDUaUIokEeSkH97cUQxLGA" base_Class="_38AXoCUTEeGiOPpZVnfEJA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='HospitalDischargeStudiesSummarySectionTemplateId HospitalDischargeStudiesSummarySectionCode HospitalDischargeStudiesSummarySectionCodeP HospitalDischargeStudiesSummarySectionTitle HospitalDischargeStudiesSummarySectionText' templateId.root='2.16.840.1.113883.10.20.22.2.16' code.code='11493-4' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Hospital Discharge Studies Summary'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vDsNwYokEeSkH97cUQxLGA" base_Class="_lBergCUMEeGiOPpZVnfEJA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='HospitalDischargeInstructionsSectionTemplateId HospitalDischargeInstructionsSectionCode HospitalDischargeInstructionsSectionCodeP HospitalDischargeInstructionsSectionTitle HospitalDischargeInstructionsSectionText' templateId.root='2.16.840.1.113883.10.20.22.2.41' code.code='8653-8' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Hospital Discharge Instructions'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_vD0woIokEeSkH97cUQxLGA" base_Generalization="_TytVkSUQEeGiOPpZVnfEJA"/>
  <Ecore:EClass xmi:id="_vD1-wIokEeSkH97cUQxLGA" base_Class="_TytVkCUQEeGiOPpZVnfEJA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='HospitalDischargeMedicationsSectionEntriesOptionalTemplateId HospitalDischargeMedicationsSectionEntriesOptionalCode HospitalDischargeMedicationsSectionEntriesOptionalCodeP HospitalDischargeMedicationsSectionEntriesOptionalText HospitalDischargeMedicationsSectionEntriesOptionalTitle HospitalDischargeMedicationsSectionEntriesOptionalDischargeMedication' templateId.root='2.16.840.1.113883.10.20.22.2.11.1' code.code='10183-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='HOSPITAL DISCHARGE MEDICATIONS' constraints.validation.dependOn.HospitalDischargeMedicationsSectionEntriesOptionalCode='HospitalDischargeMedicationsSectionEntriesOptionalCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vEGdcIokEeSkH97cUQxLGA" base_Class="_WikGsCUTEeGiOPpZVnfEJA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='HospitalDischargePhysicalSectionTemplateId HospitalDischargePhysicalSectionCode HospitalDischargePhysicalSectionCodeP HospitalDischargePhysicalSectionTitle HospitalDischargePhysicalSectionText' templateId.root='1.3.6.1.4.1.19376.1.5.3.1.3.26' code.code='10184-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Hospital Discharge Physical'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vETRwYokEeSkH97cUQxLGA" base_Class="_oI7CQCsaEeGHF88-qhhUMA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ChiefComplaintAndReasonForVisitSectionTemplateId ChiefComplaintAndReasonForVisitSectionCode ChiefComplaintAndReasonForVisitSectionCodeP ChiefComplaintAndReasonForVisitSectionText ChiefComplaintAndReasonForVisitSectionTitle' templateId.root='2.16.840.1.113883.10.20.22.2.13' code.code='46239-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Chief Complaint and Reason for Visit'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vEcbsYokEeSkH97cUQxLGA" base_Class="_Nm64UCscEeGHF88-qhhUMA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ReasonForVisitSectionTemplateId ReasonForVisitSectionCode ReasonForVisitSectionCodeP ReasonForVisitSectionText ReasonForVisitSectionTitle' templateId.root='2.16.840.1.113883.10.20.22.2.12' code.code='29299-5' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Reason for Visit'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vE7j4YokEeSkH97cUQxLGA" base_Class="_OA_Q0DVyEeGaW4kr-GbV8Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='AnesthesiaSectionTemplateId AnesthesiaSectionCode AnesthesiaSectionCodeP AnesthesiaSectionText AnesthesiaSectionTitle' templateId.root='2.16.840.1.113883.10.20.22.2.25' code.code='59774-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' constraints.validation.info='AnesthesiaSectionProcedureActivityProcedure AnesthesiaSectionMedicationActivity'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vFEt0IokEeSkH97cUQxLGA" base_Class="_R1OXcDVyEeGaW4kr-GbV8Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ComplicationsSectionTemplateId ComplicationsSectionCode ComplicationsSectionCodeP ComplicationsSectionTitle ComplicationsSectionText' templateId.root='2.16.840.1.113883.10.20.22.2.37' code.code='55109-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Complications' constraints.validation.info='ComplicationsSectionProblemObservation'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vFN3wYokEeSkH97cUQxLGA" base_Class="_WPTWEDVyEeGaW4kr-GbV8Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='DICOMObjectCatalogSectionTemplateId DICOMObjectCatalogSectionCode DICOMObjectCatalogSectionCodeP DICOMObjectCatalogSectionStudyAct' templateId.root='2.16.840.1.113883.10.20.6.1.1' code.code='121181' code.codeSystem='1.2.840.10008.2.16.4' code.codeSystemName='DCM' code.displayName='Dicom Object Catalog'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vFUlcIokEeSkH97cUQxLGA" base_Class="_ZcC-4DVyEeGaW4kr-GbV8Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='FindingsSectionTemplateId' templateId.root='2.16.840.1.113883.10.20.6.1.2'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vFVzkYokEeSkH97cUQxLGA" base_Class="_eKFbUDVyEeGaW4kr-GbV8Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='HospitalConsultationsSectionTemplateId HospitalConsultationsSectionCode HospitalConsultationsSectionCodeP HospitalConsultationsSectionText HospitalConsultationsSectionTitle' templateId.root='2.16.840.1.113883.10.20.22.2.42' code.code='18841-7' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vFgLoIokEeSkH97cUQxLGA" base_Class="_hqzJADVyEeGaW4kr-GbV8Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='InterventionsSectionTemplateId InterventionsSectionCode InterventionsSectionCodeP InterventionsSectionText InterventionsSectionTitle' templateId.root='2.16.840.1.113883.10.20.21.2.3' code.code='62387-6' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vFougYokEeSkH97cUQxLGA" base_Class="_mEIgwDVyEeGaW4kr-GbV8Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='MedicalHistorySectionTemplateId MedicalHistorySectionCode MedicalHistorySectionCodeP MedicalHistorySectionText MedicalHistorySectionTitle' templateId.root='2.16.840.1.113883.10.20.22.2.39' code.code='11329-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vFx4cIokEeSkH97cUQxLGA" base_Class="_rNJpADVyEeGaW4kr-GbV8Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ObjectiveSectionTemplateId ObjectiveSectionCode ObjectiveSectionCodeP ObjectiveSectionText ObjectiveSectionTitle' templateId.root='2.16.840.1.113883.10.20.21.2.1' code.code='61149-1' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Objective'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vF6bUYokEeSkH97cUQxLGA" base_Class="_vHfXoDVyEeGaW4kr-GbV8Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='OperativeNoteFluidSectionTemplateId OperativeNoteFluidSectionCode OperativeNoteFluidSectionCodeP OperativeNoteFluidSectionText OperativeNoteFluidSectionTitle' templateId.root='2.16.840.1.113883.10.20.7.12' code.code='10216-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Operative Note Fluids'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vGEMUIokEeSkH97cUQxLGA" base_Class="_zel6wDVyEeGaW4kr-GbV8Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='OperativeNoteSurgicalProcedureSectionTemplateId OperativeNoteSurgicalProcedureSectionCode OperativeNoteSurgicalProcedureSectionCodeP OperativeNoteSurgicalProcedureSectionText OperativeNoteSurgicalProcedureSectionTitle' templateId.root='2.16.840.1.113883.10.20.7.14' code.code='10223-6' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Operative Note Surgical'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vGNWQIokEeSkH97cUQxLGA" base_Class="_3b6E4DVyEeGaW4kr-GbV8Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PlannedProcedureSectionTemplateId PlannedProcedureSectionCode PlannedProcedureSectionCodeP PlannedProcedureSectionText PlannedProcedureSectionTitle' templateId.root='2.16.840.1.113883.10.20.22.2.30' code.code='59772-4' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Planned Procedure' constraints.validation.info='PlannedProcedureSectionPlanOfCareActivityProcedure'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vGV5IYokEeSkH97cUQxLGA" base_Class="_7UA-4DVyEeGaW4kr-GbV8Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PostoperativeDiagnosisSectionTemplateId PostoperativeDiagnosisSectionCode PostoperativeDiagnosisSectionCodeP PostoperativeDiagnosisSectionText PostoperativeDiagnosisSectionTitle' templateId.root='2.16.840.1.113883.10.20.22.2.35' code.code='10218-6' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Postoperative Diagnosis'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vGfDEIokEeSkH97cUQxLGA" base_Class="_-jlSMDVyEeGaW4kr-GbV8Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PostprocedureDiagnosisSectionTemplateId PostprocedureDiagnosisSectionCode PostprocedureDiagnosisSectionCodeP PostprocedureDiagnosisSectionText PostprocedureDiagnosisSectionTitle' templateId.root='2.16.840.1.113883.10.20.22.2.36' code.code='59769-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Postprocedure Diagnosis' constraints.validation.warning='PostprocedureDiagnosisSectionPostprocedureDiagnosis'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vGoNAIokEeSkH97cUQxLGA" base_Class="_Cu6qMDVzEeGaW4kr-GbV8Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PreoperativeDiagnosisSectionTemplateId PreoperativeDiagnosisSectionCode PreoperativeDiagnosisSectionCodeP PreoperativeDiagnosisSectionText PreoperativeDiagnosisSectionTitle' templateId.root='2.16.840.1.113883.10.20.22.2.34' code.code='10219-4' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Preoperative Diagnosis' constraints.validation.warning='PreoperativeDiagnosisSectionPreoperativeDiagnosis'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vGwv4YokEeSkH97cUQxLGA" base_Class="_HNUIIDVzEeGaW4kr-GbV8Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProcedureDescriptionSectionTemplateId ProcedureDescriptionSectionCode ProcedureDescriptionSectionCodeP ProcedureDescriptionSectionText ProcedureDescriptionSectionTitle' templateId.root='2.16.840.1.113883.10.20.22.2.27' code.code='29554-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Procedure Description'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vG550IokEeSkH97cUQxLGA" base_Class="_QhXGYDVzEeGaW4kr-GbV8Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProcedureDispositionSectionTemplateId ProcedureDispositionSectionCode ProcedureDispositionSectionCodeP ProcedureDispositionSectionText ProcedureDispositionSectionTitle' templateId.root='2.16.840.1.113883.10.20.18.2.12' code.code='59775-7' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Procedure Disposition'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vHCcsYokEeSkH97cUQxLGA" base_Class="_TvcL8DVzEeGaW4kr-GbV8Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProcedureEstimatedBloodLossSectionTemplateId ProcedureEstimatedBloodLossSectionCode ProcedureEstimatedBloodLossSectionCodeP ProcedureEstimatedBloodLossSectionText ProcedureEstimatedBloodLossSectionTitle' templateId.root='2.16.840.1.113883.10.20.18.2.9' code.code='59770-8' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Procedure Estimated Blood Loss'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vHLmoYokEeSkH97cUQxLGA" base_Class="_W4UBYDVzEeGaW4kr-GbV8Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProcedureFindingsSectionTemplateId ProcedureFindingsSectionCode ProcedureFindingsSectionCodeP ProcedureFindingsSectionText ProcedureFindingsSectionTitle' templateId.root='2.16.840.1.113883.10.20.22.2.28' code.code='59776-5' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Procedure Findings' constraints.validation.info='ProcedureFindingsSectionProblemObservation'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vHUwkIokEeSkH97cUQxLGA" base_Class="_Z662wDVzEeGaW4kr-GbV8Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProcedureImplantsSectionTemplateId ProcedureImplantsSectionCode ProcedureImplantsSectionCodeP ProcedureImplantsSectionText ProcedureImplantsSectionTitle' templateId.root='2.16.840.1.113883.10.20.22.2.40' code.code='59771-6' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Procedure Implants'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vHd6gYokEeSkH97cUQxLGA" base_Class="_cjmJMDVzEeGaW4kr-GbV8Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProcedureIndicationsSectionTemplateId ProcedureIndicationsSectionCode ProcedureIndicationsSectionCodeP ProcedureIndicationsSectionText ProcedureIndicationsSectionTitle' templateId.root='2.16.840.1.113883.10.20.22.2.29' code.code='59768-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Procedure Indications' constraints.validation.info='ProcedureIndicationsSectionIndication'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vHnEcIokEeSkH97cUQxLGA" base_Class="_gSUdsDVzEeGaW4kr-GbV8Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProcedureSpecimensTakenSectionTemplateId ProcedureSpecimensTakenSectionCode ProcedureSpecimensTakenSectionCodeP ProcedureSpecimensTakenSectionText ProcedureSpecimensTakenSectionTitle' templateId.root='2.16.840.1.113883.10.20.22.2.31' code.code='59773-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Procedure Specimens Taken'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vH1t8IokEeSkH97cUQxLGA" base_Class="_iy8nYDVzEeGaW4kr-GbV8Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='SubjectiveSectionTemplateId SubjectiveSectionCode SubjectiveSectionCodeP SubjectiveSectionText SubjectiveSectionTitle' templateId.root='2.16.840.1.113883.10.20.21.2.2' code.code='61150-9' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Subjective'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vIGzsIokEeSkH97cUQxLGA" base_Class="_R-vIoDssEeGvzMYhXuqAEA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='GeneralHeaderConstraintsTemplateId ConsultationNoteHasAnAssementAndPlanSectionOrIndividualAssementAndPlanSections ConsultationNoteDoesNotHaveIndividualAssementAndPlanSectionsWhenAssementAndPlanSectionPresent ConsultationNoteDoesNotHaveChiefComplaintAndReasonForVisitWithChiefComplaintSectionOrReasonSection ConsultationNoteHasReasonForReferralOrReasonForVisit GeneralHeaderConstraintsCode GeneralHeaderConstraintsCodeP ConsultationNoteComponentOf ConsultationNoteHistoryOfPresentIllness ConsultationNoteInFulfillmentOf ConsultationNoteComponentOfEncompassingEncounter2ResponsiblePartyAssignedEntityHasPersonOrganizationOrBoth ConsultationNoteComponentOfEncompassingEncounter2ResponsiblePartyAssignedEntity ConsultationNoteComponentOfEncompassingEncounter2EncounterParticipantAssignedEntityHasPersonOrganizationOrBoth ConsultationNoteComponentOfEncompassingEncounter2EncounterParticipantAssignedEntity ConsultationNoteComponentOfEncompassingEncounter2PreciseToTheDay ConsultationNoteComponentOfEncompassingEncounter2EffectiveTime ConsultationNoteComponentOfEncompassingEncounter2Id ConsultationNoteComponentOfEncompassingEncounter ConsultationNoteInFulfillmentOfOrderId ConsultationNoteInFulfillmentOfOrder' templateId.root='2.16.840.1.113883.10.20.22.1.4' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' constraints.validation.dependOn.GeneralHeaderConstraintsCode='GeneralHeaderConstraintsCodeP' constraints.validation.info='ConsultationNoteAssessmentSection ConsultationNoteAssessmentAndPlanSection ConsultationNotePlanOfCareSection ConsultationNoteReasonForReferralSection ConsultationNoteReasonForVisitSection ConsultationNoteAllergiesSection ConsultationNoteChiefComplaintSection ConsultationNoteChiefComplaintAndReasonForVisitSection ConsultationNoteFamilyHistorySection ConsultationNoteGeneralStatusSection ConsultationNoteHistoryOfPastIllnessSection ConsultationNoteImmunizationsSection ConsultationNoteMedicationsSectionEntriesOptional ConsultationNoteProblemSectionEntriesOptional ConsultationNoteProceduresSectionEntriesOptional ConsultationNoteResultsSectionEntriesOptional ConsultationNoteReviewOfSystemsSection ConsultationNoteSocialHistorySection ConsultationNoteVitalSignsSectionEntriesOptional ConsultationNoteComponentOfEncompassingEncounter2PreciseToTheSecond ConsultationNoteComponentOfEncompassingEncounter2ResponsibleParty ConsultationNoteComponentOfEncompassingEncounter2EncounterParticipant' constraints.validation.warning='ConsultationNotePhysicalExamSection ConsultationNoteComponentOfEncompassingEncounter2PreciseToTheMinute ConsultationNoteComponentOfEncompassingEncounter2IfMorePreciseThanDayIncludeTimeZoneOffset' constraints.validation.query='ConsultationNoteComponentOfEncompassingEncounter2ResponsiblePartyAssignedEntityHasPersonOrganizationOrBoth ConsultationNoteComponentOfEncompassingEncounter2ResponsiblePartyAssignedEntity ConsultationNoteComponentOfEncompassingEncounter2EncounterParticipantAssignedEntityHasPersonOrganizationOrBoth ConsultationNoteComponentOfEncompassingEncounter2EncounterParticipantAssignedEntity ConsultationNoteComponentOfEncompassingEncounter2PreciseToTheDay ConsultationNoteComponentOfEncompassingEncounter2PreciseToTheMinute ConsultationNoteComponentOfEncompassingEncounter2PreciseToTheSecond ConsultationNoteComponentOfEncompassingEncounter2IfMorePreciseThanDayIncludeTimeZoneOffset ConsultationNoteComponentOfEncompassingEncounter2EffectiveTime ConsultationNoteComponentOfEncompassingEncounter2Id ConsultationNoteComponentOfEncompassingEncounter2ResponsibleParty ConsultationNoteComponentOfEncompassingEncounter2EncounterParticipant ConsultationNoteComponentOfEncompassingEncounter ConsultationNoteInFulfillmentOfOrderId ConsultationNoteInFulfillmentOfOrder'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolConsultationNoteComponentOf constraints.validation.error='ConsultationNoteComponentOfEncompassingEncounter'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolConsultationNoteComponentOfEncompassingEncounter2 constraints.validation.error='ConsultationNoteComponentOfEncompassingEncounter2PreciseToTheDay ConsultationNoteComponentOfEncompassingEncounter2EffectiveTime ConsultationNoteComponentOfEncompassingEncounter2Id' constraints.validation.warning='ConsultationNoteComponentOfEncompassingEncounter2PreciseToTheMinute ConsultationNoteComponentOfEncompassingEncounter2IfMorePreciseThanDayIncludeTimeZoneOffset' constraints.validation.info='ConsultationNoteComponentOfEncompassingEncounter2PreciseToTheSecond ConsultationNoteComponentOfEncompassingEncounter2ResponsibleParty ConsultationNoteComponentOfEncompassingEncounter2EncounterParticipant'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolConsultationNoteComponentOfEncompassingEncounter2ResponsibleParty constraints.validation.error='ConsultationNoteComponentOfEncompassingEncounter2ResponsiblePartyAssignedEntityHasPersonOrganizationOrBoth ConsultationNoteComponentOfEncompassingEncounter2ResponsiblePartyAssignedEntity'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolConsultationNoteComponentOfEncompassingEncounter2EncounterParticipant constraints.validation.error='ConsultationNoteComponentOfEncompassingEncounter2EncounterParticipantAssignedEntityHasPersonOrganizationOrBoth ConsultationNoteComponentOfEncompassingEncounter2EncounterParticipantAssignedEntity'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolConsultationNoteInFulfillmentOf constraints.validation.error='ConsultationNoteInFulfillmentOfOrder'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolConsultationNoteInFulfillmentOfOrder constraints.validation.error='ConsultationNoteInFulfillmentOfOrderId'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vIpmQIokEeSkH97cUQxLGA" base_Class="_W8pI4DszEeGvzMYhXuqAEA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='AssessmentSectionTemplateId AssessmentSectionCode AssessmentSectionCodeP AssessmentSectionText AssessmentSectionTitle' templateId.root='2.16.840.1.113883.10.20.22.2.8' code.code='51848-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Assessments'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vJkMQIokEeSkH97cUQxLGA" base_Class="_-Qa60D1jEeG3tde5scYNWA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='GeneralHeaderConstraintsTemplateId HistoryAndPhysicalNoteHasAnAssementAndPlanSectionOrIndividualAssementAndPlanSections HistoryAndPhysicalNoteDoesNotHaveIndividualAssementAndPlanSectionsWhenAssementAndPlanSectionPresent HistoryAndPhysicalNoteHasChiefComplaintAndReasonForVisitChiefComplaintOrReasonForVisit HistoryAndPhysicalNoteDoesNotHaveChiefComplaintAndReasonForVisitWithChiefComplaintSectionOrReasonSection GeneralHeaderConstraintsCode GeneralHeaderConstraintsCodeP HistoryAndPhysicalNoteComponentOf HistoryAndPhysicalNoteAllergiesSectionEntriesOptional HistoryAndPhysicalNoteFamilyHistorySection HistoryAndPhysicalNoteGeneralStatusSection HistoryAndPhysicalNoteHistoryOfPastIllnessSection HistoryAndPhysicalNoteMedicationsSectionEntriesOptional HistoryAndPhysicalNotePhysicalExamSection HistoryAndPhysicalNoteResultsSectionEntriesOptional HistoryAndPhysicalNoteReviewOfSystemsSection HistoryAndPhysicalNoteSocialHistorySection HistoryAndPhysicalNoteVitalSignsSectionEntriesOptional HistoryAndPhysicalNoteComponentOfEncompassingEncounter4ResponsiblePartyAssignedEntityHasPersonOrOrganization HistoryAndPhysicalNoteComponentOfEncompassingEncounter4ResponsiblePartyAssignedEntity HistoryAndPhysicalNoteComponentOfEncompassingEncounter4EncounterParticipantAssignedEntityHasPersonOrOrganization HistoryAndPhysicalNoteComponentOfEncompassingEncounter4EncounterParticipantAssignedEntity HistoryAndPhysicalNoteComponentOfEncompassingEncounter4PreciseToTheDay HistoryAndPhysicalNoteComponentOfEncompassingEncounter4EffectiveTime HistoryAndPhysicalNoteComponentOfEncompassingEncounter4Id HistoryAndPhysicalNoteComponentOfEncompassingEncounter' templateId.root='2.16.840.1.113883.10.20.22.1.3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' constraints.validation.dependOn.GeneralHeaderConstraintsCode='GeneralHeaderConstraintsCodeP' constraints.validation.info='HistoryAndPhysicalNoteInFulfillmentOf HistoryAndPhysicalNoteAssessmentSection HistoryAndPhysicalNotePlanOfCareSection HistoryAndPhysicalNoteAssessmentAndPlanSection HistoryAndPhysicalNoteChiefComplaintSection HistoryAndPhysicalNoteChiefComplaintAndReasonForVisitSection HistoryAndPhysicalNoteReasonForVisitSection HistoryAndPhysicalNoteImmunizationsSectionEntriesOptional HistoryAndPhysicalNoteProblemSectionEntriesOptional HistoryAndPhysicalNoteProceduresSectionEntriesOptional HistoryAndPhysicalNoteInstructionsSection HistoryAndPhysicalNoteComponentOfEncompassingEncounter4PreciseToTheSecond HistoryAndPhysicalNoteComponentOfEncompassingEncounter4Location HistoryAndPhysicalNoteComponentOfEncompassingEncounter4ResponsibleParty HistoryAndPhysicalNoteComponentOfEncompassingEncounter4EncounterParticipant' constraints.validation.warning='HistoryAndPhysicalNoteHistoryOfPresentIllnessSection HistoryAndPhysicalNoteComponentOfEncompassingEncounter4PreciseToTheMinute HistoryAndPhysicalNoteComponentOfEncompassingEncounter4IfMorePreciseThanDayIncludeTimeZoneOffset' constraints.validation.query='HistoryAndPhysicalNoteComponentOfEncompassingEncounter4ResponsiblePartyAssignedEntityHasPersonOrOrganization HistoryAndPhysicalNoteComponentOfEncompassingEncounter4ResponsiblePartyAssignedEntity HistoryAndPhysicalNoteComponentOfEncompassingEncounter4EncounterParticipantAssignedEntityHasPersonOrOrganization HistoryAndPhysicalNoteComponentOfEncompassingEncounter4EncounterParticipantAssignedEntity HistoryAndPhysicalNoteComponentOfEncompassingEncounter4PreciseToTheDay HistoryAndPhysicalNoteComponentOfEncompassingEncounter4PreciseToTheMinute HistoryAndPhysicalNoteComponentOfEncompassingEncounter4PreciseToTheSecond HistoryAndPhysicalNoteComponentOfEncompassingEncounter4IfMorePreciseThanDayIncludeTimeZoneOffset HistoryAndPhysicalNoteComponentOfEncompassingEncounter4EffectiveTime HistoryAndPhysicalNoteComponentOfEncompassingEncounter4Id HistoryAndPhysicalNoteComponentOfEncompassingEncounter4Location HistoryAndPhysicalNoteComponentOfEncompassingEncounter4ResponsibleParty HistoryAndPhysicalNoteComponentOfEncompassingEncounter4EncounterParticipant HistoryAndPhysicalNoteComponentOfEncompassingEncounter'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolHistoryAndPhysicalNoteComponentOf constraints.validation.error='HistoryAndPhysicalNoteComponentOfEncompassingEncounter'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolHistoryAndPhysicalNoteComponentOfEncompassingEncounter4 constraints.validation.error='HistoryAndPhysicalNoteComponentOfEncompassingEncounter4PreciseToTheDay HistoryAndPhysicalNoteComponentOfEncompassingEncounter4EffectiveTime HistoryAndPhysicalNoteComponentOfEncompassingEncounter4Id' constraints.validation.warning='HistoryAndPhysicalNoteComponentOfEncompassingEncounter4PreciseToTheMinute HistoryAndPhysicalNoteComponentOfEncompassingEncounter4IfMorePreciseThanDayIncludeTimeZoneOffset' constraints.validation.info='HistoryAndPhysicalNoteComponentOfEncompassingEncounter4PreciseToTheSecond HistoryAndPhysicalNoteComponentOfEncompassingEncounter4Location HistoryAndPhysicalNoteComponentOfEncompassingEncounter4ResponsibleParty HistoryAndPhysicalNoteComponentOfEncompassingEncounter4EncounterParticipant'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolHistoryAndPhysicalNoteComponentOfEncompassingEncounter4ResponsibleParty constraints.validation.error='HistoryAndPhysicalNoteComponentOfEncompassingEncounter4ResponsiblePartyAssignedEntityHasPersonOrOrganization HistoryAndPhysicalNoteComponentOfEncompassingEncounter4ResponsiblePartyAssignedEntity'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolHistoryAndPhysicalNoteComponentOfEncompassingEncounter4EncounterParticipant constraints.validation.error='HistoryAndPhysicalNoteComponentOfEncompassingEncounter4EncounterParticipantAssignedEntityHasPersonOrOrganization HistoryAndPhysicalNoteComponentOfEncompassingEncounter4EncounterParticipantAssignedEntity'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vKXdgIokEeSkH97cUQxLGA" base_Class="_xe9MsD4iEeGhnL_c4sBHGg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='GeneralHeaderConstraintsTemplateId GeneralHeaderConstraintsCode GeneralHeaderConstraintsCodeP OperativeNoteDocumentationOf OperativeNoteAnesthesiaSection OperativeNoteComplicationsSection OperativeNotePostoperativeDiagnosisSection OperativeNotePreoperativeDiagnosisSection OperativeNoteProcedureEstimatedBloodLossSection OperativeNoteProcedureFindingsSection OperativeNoteProcedureSpecimensTakenSection OperativeNoteProcedureDescriptionSection OperativeNoteDocumentationOfServiceEventPrimaryPerformerAssignedEntityCode OperativeNoteDocumentationOfServiceEventPrimaryPerformerAssignedEntityCodeP OperativeNoteDocumentationOfServiceEventPrimaryPerformerTypeCode OperativeNoteDocumentationOfServiceEventPrimaryPerformerAssignedEntity OperativeNoteDocumentationOfServiceEventProcedureCodes OperativeNoteDocumentationOfServiceEventEffectiveTimeHasLow OperativeNoteDocumentationOfServiceEventEffectiveTimeHasHighWhenNoWidth OperativeNoteDocumentationOfServiceEventEffectiveTimeNoHighIfWidth OperativeNoteDocumentationOfServiceEventPreciseToTheDay OperativeNoteDocumentationOfServiceEventCode OperativeNoteDocumentationOfServiceEventEffectiveTime OperativeNoteDocumentationOfServiceEventPrimaryPerformer OperativeNoteDocumentationOfServiceEvent' templateId.root='2.16.840.1.113883.10.20.22.1.7' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' constraints.validation.dependOn.GeneralHeaderConstraintsCode='GeneralHeaderConstraintsCodeP' constraints.validation.info='OperativeNoteProcedureImplantsSection OperativeNoteFluidSection OperativeNoteSurgicalProcedureSection OperativeNotePlanOfCareSection OperativeNotePlannedProcedureSection OperativeNoteProcedureDispositionSection OperativeNoteProcedureIndicationsSection OperativeNoteSurgicalDrainsSection OperativeNoteDocumentationOfServiceEventPreciseToTheSecond' constraints.validation.query='OperativeNoteDocumentationOfServiceEventPrimaryPerformerAssignedEntityCode OperativeNoteDocumentationOfServiceEventPrimaryPerformerAssignedEntityCodeP OperativeNoteDocumentationOfServiceEventPrimaryPerformerTypeCode OperativeNoteDocumentationOfServiceEventPrimaryPerformerAssignedEntity OperativeNoteDocumentationOfServiceEventProcedureCodes OperativeNoteDocumentationOfServiceEventEffectiveTimeHasLow OperativeNoteDocumentationOfServiceEventEffectiveTimeHasHighWhenNoWidth OperativeNoteDocumentationOfServiceEventEffectiveTimeNoHighIfWidth OperativeNoteDocumentationOfServiceEventPreciseToTheDay OperativeNoteDocumentationOfServiceEventPreciseToTheMinute OperativeNoteDocumentationOfServiceEventPreciseToTheSecond OperativeNoteDocumentationOfServiceEventIfMorePreciseThanDayIncludeTimeZoneOffset OperativeNoteDocumentationOfServiceEventCode OperativeNoteDocumentationOfServiceEventEffectiveTime OperativeNoteDocumentationOfServiceEventPrimaryPerformer OperativeNoteDocumentationOfServiceEvent' constraints.validation.warning='OperativeNoteDocumentationOfServiceEventPreciseToTheMinute OperativeNoteDocumentationOfServiceEventIfMorePreciseThanDayIncludeTimeZoneOffset'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolOperativeNoteDocumentationOf constraints.validation.error='OperativeNoteDocumentationOfServiceEvent'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolOperativeNoteDocumentationOfServiceEvent constraints.validation.error='OperativeNoteDocumentationOfServiceEventProcedureCodes OperativeNoteDocumentationOfServiceEventEffectiveTimeHasLow OperativeNoteDocumentationOfServiceEventEffectiveTimeHasHighWhenNoWidth OperativeNoteDocumentationOfServiceEventEffectiveTimeNoHighIfWidth OperativeNoteDocumentationOfServiceEventPreciseToTheDay OperativeNoteDocumentationOfServiceEventCode OperativeNoteDocumentationOfServiceEventEffectiveTime OperativeNoteDocumentationOfServiceEventPrimaryPerformer OperativeNoteDocumentationOfServiceEventPrimaryPerformerAssignedEntityCode OperativeNoteDocumentationOfServiceEventPrimaryPerformerAssignedEntityCodeP OperativeNoteDocumentationOfServiceEventPrimaryPerformerTypeCode OperativeNoteDocumentationOfServiceEventPrimaryPerformerAssignedEntity' constraints.validation.warning='OperativeNoteDocumentationOfServiceEventPreciseToTheMinute OperativeNoteDocumentationOfServiceEventIfMorePreciseThanDayIncludeTimeZoneOffset' constraints.validation.info='OperativeNoteDocumentationOfServiceEventPreciseToTheSecond' constraints.validation.query='OperativeNoteDocumentationOfServiceEventPrimaryPerformerAssignedEntityCode OperativeNoteDocumentationOfServiceEventPrimaryPerformerAssignedEntityCodeP OperativeNoteDocumentationOfServiceEventPrimaryPerformerTypeCode OperativeNoteDocumentationOfServiceEventPrimaryPerformerAssignedEntity'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolOperativeNoteDocumentationOfServiceEventPrimaryPerformer typeCode='PPRF' constraints.validation.error='OperativeNoteDocumentationOfServiceEventPrimaryPerformerTypeCode OperativeNoteDocumentationOfServiceEventPrimaryPerformerAssignedEntity'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolOperativeNoteDocumentationOfServiceEventPrimaryPerformerAssignedEntity code.codeSystem='2.16.840.1.113883.6.101' code.codeSystemName='NUCC Health Care Provider Taxonomy' constraints.validation.error='OperativeNoteDocumentationOfServiceEventPrimaryPerformerAssignedEntityCode OperativeNoteDocumentationOfServiceEventPrimaryPerformerAssignedEntityCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vLCy8YokEeSkH97cUQxLGA" base_Class="_LuYEsD7YEeGvOdejHZ7dYg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='GeneralHeaderConstraintsTemplateId ProcedureNoteHasAnAssementAndPlanSectionOrIndividualAssementAndPlanSections ProcedureNoteDoesNotHaveIndividualAssementAndPlanSectionsWhenAssementAndPlanSectionPresent ProcedureNoteDoesNotHaveChiefComplaintAndReasonForVisitWithChiefComplaintSectionOrReasonSection ProcedureNoteSectionTitles GeneralHeaderConstraintsCode GeneralHeaderConstraintsCodeP ProcedureNoteComplicationsSection ProcedureNotePostprocedureDiagnosisSection ProcedureNoteProcedureDescriptionSection ProcedureNoteProcedureIndicationsSection ProcedureNoteDocumentationOf ProcedureNoteComponentOfEncompassingEncounter5LocationHealthCareFacilityId ProcedureNoteComponentOfEncompassingEncounter5LocationHealthCareFacility ProcedureNoteComponentOfEncompassingEncounter5EncounterParticipantTypeCode ProcedureNoteComponentOfEncompassingEncounter5Code ProcedureNoteComponentOfEncompassingEncounter5Location ProcedureNoteDocumentationOfServiceEvent1PrimaryPerformerAssignedEntityCode ProcedureNoteDocumentationOfServiceEvent1PrimaryPerformerTypeCode ProcedureNoteDocumentationOfServiceEvent1PrimaryPerformerAssignedEntity ProcedureNoteDocumentationOfServiceEvent1ProcedureCodes ProcedureNoteDocumentationOfServiceEvent1EffectiveTimeHasLow ProcedureNoteDocumentationOfServiceEvent1EffectiveTimeHasHighWhenNoWidth ProcedureNoteDocumentationOfServiceEvent1EffectiveTimeNoHighIfWidth ProcedureNoteDocumentationOfServiceEvent1PreciseToTheDay ProcedureNoteDocumentationOfServiceEvent1Code ProcedureNoteDocumentationOfServiceEvent1EffectiveTime ProcedureNoteDocumentationOfServiceEvent1PrimaryPerformer ProcedureNoteDocumentationOfServiceEvent1' templateId.root='2.16.840.1.113883.10.20.22.1.6' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' constraints.validation.dependOn.GeneralHeaderConstraintsCode='GeneralHeaderConstraintsCodeP' constraints.validation.warning='ProcedureNoteComponentOf ProcedureNoteComponentOfEncompassingEncounter5 ProcedureNoteDocumentationOfServiceEvent1PrimaryPerformerAssignedEntityCodeP ProcedureNoteDocumentationOfServiceEvent1PreciseToTheMinute ProcedureNoteDocumentationOfServiceEvent1IfMorePreciseThanDayIncludeTimeZoneOffset' constraints.validation.info='ProcedureNoteAssessmentSection ProcedureNotePlanOfCareSection ProcedureNoteAssessmentAndPlanSection ProcedureNoteAllergiesSectionEntriesOptional ProcedureNoteAnesthesiaSection ProcedureNoteChiefComplaintSection ProcedureNoteChiefComplaintAndReasonForVisitSection ProcedureNoteFamilyHistorySection ProcedureNoteHistoryOfPastIllnessSection ProcedureNoteHistoryOfPresentIllnessSection ProcedureNoteMedicalHistorySection ProcedureNoteMedicationsSectionEntriesOptional ProcedureNoteMedicationsAdministeredSection ProcedureNotePhysicalExamSection ProcedureNotePlannedProcedureSection ProcedureNoteProcedureDispositionSection ProcedureNoteProcedureEstimatedBloodLossSection ProcedureNoteProcedureFindingsSection ProcedureNoteProcedureImplantsSection ProcedureNoteProcedureSpecimensTakenSection ProcedureNoteProceduresSectionEntriesOptional ProcedureNoteReasonForVisitSection ProcedureNoteReviewOfSystemsSection ProcedureNoteSocialHistorySection ProcedureNoteParticipant1 ProcedureNoteComponentOfEncompassingEncounter5EncounterParticipant ProcedureNoteDocumentationOfServiceEvent1PreciseToTheSecond' constraints.validation.query='ProcedureNoteComponentOfEncompassingEncounter5LocationHealthCareFacilityId ProcedureNoteComponentOfEncompassingEncounter5LocationHealthCareFacility ProcedureNoteComponentOfEncompassingEncounter5EncounterParticipantTypeCode ProcedureNoteComponentOfEncompassingEncounter5Code ProcedureNoteComponentOfEncompassingEncounter5Location ProcedureNoteComponentOfEncompassingEncounter5EncounterParticipant ProcedureNoteComponentOfEncompassingEncounter5 ProcedureNoteDocumentationOfServiceEvent1PrimaryPerformerAssignedEntityCodeP ProcedureNoteDocumentationOfServiceEvent1PrimaryPerformerAssignedEntityCode ProcedureNoteDocumentationOfServiceEvent1PrimaryPerformerTypeCode ProcedureNoteDocumentationOfServiceEvent1PrimaryPerformerAssignedEntity ProcedureNoteDocumentationOfServiceEvent1ProcedureCodes ProcedureNoteDocumentationOfServiceEvent1EffectiveTimeHasLow ProcedureNoteDocumentationOfServiceEvent1EffectiveTimeHasHighWhenNoWidth ProcedureNoteDocumentationOfServiceEvent1EffectiveTimeNoHighIfWidth ProcedureNoteDocumentationOfServiceEvent1PreciseToTheDay ProcedureNoteDocumentationOfServiceEvent1PreciseToTheMinute ProcedureNoteDocumentationOfServiceEvent1PreciseToTheSecond ProcedureNoteDocumentationOfServiceEvent1IfMorePreciseThanDayIncludeTimeZoneOffset ProcedureNoteDocumentationOfServiceEvent1Code ProcedureNoteDocumentationOfServiceEvent1EffectiveTime ProcedureNoteDocumentationOfServiceEvent1PrimaryPerformer ProcedureNoteDocumentationOfServiceEvent1' constraints.validation.dependOn.ProcedureNoteDocumentationOfServiceEvent1PrimaryPerformerAssignedEntityCode='ProcedureNoteDocumentationOfServiceEvent1PrimaryPerformerAssignedEntityCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolProcedureNoteComponentOf constraints.validation.warning='ProcedureNoteComponentOfEncompassingEncounter5'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolProcedureNoteComponentOfEncompassingEncounter5 constraints.validation.error='ProcedureNoteComponentOfEncompassingEncounter5Code ProcedureNoteComponentOfEncompassingEncounter5Location ProcedureNoteComponentOfEncompassingEncounter5EncounterParticipantTypeCode' constraints.validation.info='ProcedureNoteComponentOfEncompassingEncounter5EncounterParticipant' constraints.validation.query='ProcedureNoteComponentOfEncompassingEncounter5EncounterParticipantTypeCode'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolProcedureNoteComponentOfEncompassingEncounter5Location constraints.validation.error='ProcedureNoteComponentOfEncompassingEncounter5LocationHealthCareFacility'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolProcedureNoteComponentOfEncompassingEncounter5LocationHealthCareFacility constraints.validation.error='ProcedureNoteComponentOfEncompassingEncounter5LocationHealthCareFacilityId'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolProcedureNoteComponentOfEncompassingEncounter5EncounterParticipant typeCode='REF' constraints.validation.error='ProcedureNoteComponentOfEncompassingEncounter5EncounterParticipantTypeCode'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolProcedureNoteDocumentationOf constraints.validation.error='ProcedureNoteDocumentationOfServiceEvent1'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolProcedureNoteDocumentationOfServiceEvent1 constraints.validation.error='ProcedureNoteDocumentationOfServiceEvent1ProcedureCodes ProcedureNoteDocumentationOfServiceEvent1EffectiveTimeHasLow ProcedureNoteDocumentationOfServiceEvent1EffectiveTimeHasHighWhenNoWidth ProcedureNoteDocumentationOfServiceEvent1EffectiveTimeNoHighIfWidth ProcedureNoteDocumentationOfServiceEvent1PreciseToTheDay ProcedureNoteDocumentationOfServiceEvent1Code ProcedureNoteDocumentationOfServiceEvent1EffectiveTime ProcedureNoteDocumentationOfServiceEvent1PrimaryPerformer ProcedureNoteDocumentationOfServiceEvent1PrimaryPerformerAssignedEntityCode ProcedureNoteDocumentationOfServiceEvent1PrimaryPerformerTypeCode ProcedureNoteDocumentationOfServiceEvent1PrimaryPerformerAssignedEntity' constraints.validation.warning='ProcedureNoteDocumentationOfServiceEvent1PreciseToTheMinute ProcedureNoteDocumentationOfServiceEvent1IfMorePreciseThanDayIncludeTimeZoneOffset ProcedureNoteDocumentationOfServiceEvent1PrimaryPerformerAssignedEntityCodeP' constraints.validation.info='ProcedureNoteDocumentationOfServiceEvent1PreciseToTheSecond' constraints.validation.query='ProcedureNoteDocumentationOfServiceEvent1PrimaryPerformerAssignedEntityCodeP ProcedureNoteDocumentationOfServiceEvent1PrimaryPerformerAssignedEntityCode ProcedureNoteDocumentationOfServiceEvent1PrimaryPerformerTypeCode ProcedureNoteDocumentationOfServiceEvent1PrimaryPerformerAssignedEntity' constraints.validation.dependOn.ProcedureNoteDocumentationOfServiceEvent1PrimaryPerformerAssignedEntityCode='ProcedureNoteDocumentationOfServiceEvent1PrimaryPerformerAssignedEntityCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolProcedureNoteDocumentationOfServiceEvent1PrimaryPerformer typeCode='PPRF' constraints.validation.error='ProcedureNoteDocumentationOfServiceEvent1PrimaryPerformerTypeCode ProcedureNoteDocumentationOfServiceEvent1PrimaryPerformerAssignedEntity'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolProcedureNoteDocumentationOfServiceEvent1PrimaryPerformerAssignedEntity code.codeSystem='2.16.840.1.113883.6.101' code.codeSystemName='NUCC Health Care Provider Taxonomy' constraints.validation.error='ProcedureNoteDocumentationOfServiceEvent1PrimaryPerformerAssignedEntityCode' constraints.validation.warning='ProcedureNoteDocumentationOfServiceEvent1PrimaryPerformerAssignedEntityCodeP' constraints.validation.dependOn.ProcedureNoteDocumentationOfServiceEvent1PrimaryPerformerAssignedEntityCode='ProcedureNoteDocumentationOfServiceEvent1PrimaryPerformerAssignedEntityCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vMDfkIokEeSkH97cUQxLGA" base_Class="_UBzvED_LEeGXieeKs7NJjA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='GeneralHeaderConstraintsTemplateId ProgressNoteHasAnAssementAndPlanSectionOrIndividualAssementAndPlanSections ProgressNoteDoesNotHaveIndividualAssementAndPlanSectionsWhenAssementAndPlanSectionPresent GeneralHeaderConstraintsCode GeneralHeaderConstraintsCodeP ProgressNoteComponentOf ProgressNoteDocumentationOfServiceEvent2EffectiveTimeHigh ProgressNoteDocumentationOfServiceEvent2PreciseToTheDay ProgressNoteDocumentationOfServiceEvent2TemplateId ProgressNoteDocumentationOfServiceEvent2ClassCode ProgressNoteDocumentationOfServiceEvent2 ProgressNoteComponentOfEncompassingEncounter6LocationHealthCareFacility1Id ProgressNoteComponentOfEncompassingEncounter6LocationHealthCareFacility ProgressNoteComponentOfEncompassingEncounter6PreciseToTheDay ProgressNoteComponentOfEncompassingEncounter6EffectiveTime ProgressNoteComponentOfEncompassingEncounter6Id ProgressNoteComponentOfEncompassingEncounter6Location ProgressNoteComponentOfEncompassingEncounter6' templateId.root='2.16.840.1.113883.10.20.22.1.9' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' constraints.validation.dependOn.GeneralHeaderConstraintsCode='GeneralHeaderConstraintsCodeP' constraints.validation.warning='ProgressNoteDocumentationOf ProgressNoteDocumentationOfServiceEvent2EffectiveTimeLow ProgressNoteDocumentationOfServiceEvent2PreciseToTheMinute ProgressNoteDocumentationOfServiceEvent2IfMorePreciseThanDayIncludeTimeZoneOffset ProgressNoteDocumentationOfServiceEvent2EffectiveTime ProgressNoteComponentOfEncompassingEncounter6PreciseToTheMinute ProgressNoteComponentOfEncompassingEncounter6IfMorePreciseThanDayIncludeTimeZoneOffset' constraints.validation.info='ProgressNoteAssessmentSection ProgressNotePlanOfCareSection ProgressNoteAssessmentAndPlanSection ProgressNoteAllergiesSectionEntriesOptional ProgressNoteChiefComplaintSection ProgressNoteInterventionsSection ProgressNoteMedicationsSectionEntriesOptional ProgressNoteObjectiveSection ProgressNotePhysicalExamSection ProgressNoteProblemSectionEntriesOptional ProgressNoteResultsSectionEntriesOptional ProgressNoteReviewOfSystemsSection ProgressNoteSubjectiveSection ProgressNoteVitalSignsSectionEntriesOptional ProgressNoteInstructionsSection ProgressNoteDocumentationOfServiceEvent2PreciseToTheSecond ProgressNoteComponentOfEncompassingEncounter6PreciseToTheSecond' constraints.validation.query='ProgressNoteDocumentationOfServiceEvent2EffectiveTimeLow ProgressNoteDocumentationOfServiceEvent2EffectiveTimeHigh ProgressNoteDocumentationOfServiceEvent2PreciseToTheDay ProgressNoteDocumentationOfServiceEvent2PreciseToTheMinute ProgressNoteDocumentationOfServiceEvent2PreciseToTheSecond ProgressNoteDocumentationOfServiceEvent2IfMorePreciseThanDayIncludeTimeZoneOffset ProgressNoteDocumentationOfServiceEvent2TemplateId ProgressNoteDocumentationOfServiceEvent2ClassCode ProgressNoteDocumentationOfServiceEvent2EffectiveTime ProgressNoteDocumentationOfServiceEvent2 ProgressNoteComponentOfEncompassingEncounter6LocationHealthCareFacility1Id ProgressNoteComponentOfEncompassingEncounter6LocationHealthCareFacility ProgressNoteComponentOfEncompassingEncounter6PreciseToTheDay ProgressNoteComponentOfEncompassingEncounter6PreciseToTheMinute ProgressNoteComponentOfEncompassingEncounter6PreciseToTheSecond ProgressNoteComponentOfEncompassingEncounter6IfMorePreciseThanDayIncludeTimeZoneOffset ProgressNoteComponentOfEncompassingEncounter6EffectiveTime ProgressNoteComponentOfEncompassingEncounter6Id ProgressNoteComponentOfEncompassingEncounter6Location ProgressNoteComponentOfEncompassingEncounter6'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolProgressNoteDocumentationOf constraints.validation.error='ProgressNoteDocumentationOfServiceEvent2'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolProgressNoteDocumentationOfServiceEvent2 constraints.validation.error='ProgressNoteDocumentationOfServiceEvent2TemplateId ProgressNoteDocumentationOfServiceEvent2EffectiveTimeHigh ProgressNoteDocumentationOfServiceEvent2PreciseToTheDay ProgressNoteDocumentationOfServiceEvent2ClassCode' templateId.root='2.16.840.1.113883.10.20.21.3.1' constraints.validation.warning='ProgressNoteDocumentationOfServiceEvent2EffectiveTimeLow ProgressNoteDocumentationOfServiceEvent2PreciseToTheMinute ProgressNoteDocumentationOfServiceEvent2IfMorePreciseThanDayIncludeTimeZoneOffset ProgressNoteDocumentationOfServiceEvent2EffectiveTime' constraints.validation.info='ProgressNoteDocumentationOfServiceEvent2PreciseToTheSecond' classCode='PCPR'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolProgressNoteComponentOf constraints.validation.error='ProgressNoteComponentOfEncompassingEncounter6'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolProgressNoteComponentOfEncompassingEncounter6 constraints.validation.error='ProgressNoteComponentOfEncompassingEncounter6PreciseToTheDay ProgressNoteComponentOfEncompassingEncounter6EffectiveTime ProgressNoteComponentOfEncompassingEncounter6Id ProgressNoteComponentOfEncompassingEncounter6Location' constraints.validation.warning='ProgressNoteComponentOfEncompassingEncounter6PreciseToTheMinute ProgressNoteComponentOfEncompassingEncounter6IfMorePreciseThanDayIncludeTimeZoneOffset' constraints.validation.info='ProgressNoteComponentOfEncompassingEncounter6PreciseToTheSecond'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolProgressNoteComponentOfEncompassingEncounter6Location constraints.validation.error='ProgressNoteComponentOfEncompassingEncounter6LocationHealthCareFacility'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolProgressNoteComponentOfEncompassingEncounter6LocationHealthCareFacility1 constraints.validation.error='ProgressNoteComponentOfEncompassingEncounter6LocationHealthCareFacility1Id'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vM1isIokEeSkH97cUQxLGA" base_Class="_0fjXAEEvEeGdmoWy_aLP0Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PostprocedureDiagnosisTemplateId PostprocedureDiagnosisClassCode PostprocedureDiagnosisMoodCode PostprocedureDiagnosisCode PostprocedureDiagnosisProblemObservation' templateId.root='2.16.840.1.113883.10.20.22.4.51' classCode='ACT' moodCode='EVN' code.code='59769-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Postprocedure Diagnosis'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vM-soIokEeSkH97cUQxLGA" base_Class="_0baBYEEwEeGdmoWy_aLP0Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PreoperativeDiagnosisTemplateId PreoperativeDiagnosisClassCode PreoperativeDiagnosisCode PreoperativeDiagnosisMoodCode PreoperativeDiagnosisProblemObservation' templateId.root='2.16.840.1.113883.10.20.22.4.65' classCode='ACT' code.code='10219-4' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Preoperative Diagnosis' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vNKS0IokEeSkH97cUQxLGA" base_Class="_4qKukEE1EeGdmoWy_aLP0Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='InstructionsSectionTemplateId InstructionsSectionCode InstructionsSectionCodeP InstructionsSectionText InstructionsSectionTitle' templateId.root='2.16.840.1.113883.10.20.22.2.45' code.code='69730-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Instructions' constraints.validation.warning='InstructionsSectionInstructions'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vNUq4YokEeSkH97cUQxLGA" base_Class="_LNP08EFGEeGorO80f-Cppg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='AdmissionMedicationTemplateId AdmissionMedicationClassCode AdmissionMedicationCodeP AdmissionMedicationMoodCode AdmissionMedicationMedicationActivity' templateId.root='2.16.840.1.113883.10.20.22.4.36' classCode='ACT' code.code='42346-7' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Medications on Admission' constraints.validation.info='AdmissionMedicationCode' constraints.validation.dependOn.AdmissionMedicationCode='AdmissionMedicationCodeP' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vNgREIokEeSkH97cUQxLGA" base_Class="_5K6mAEFHEeGorO80f-Cppg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='HospitalAdmissionDiagnosisTemplateId HospitalAdmissionDiagnosisClassCode HospitalAdmissionDiagnosisCode HospitalAdmissionDiagnosisMoodCode HospitalAdmissionDiagnosisProblemObservation' templateId.root='2.16.840.1.113883.10.20.22.4.34' classCode='ACT' code.code='46241-6' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Admission diagnosis' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vOLmgIokEeSkH97cUQxLGA" base_Class="_XwBooEUuEeGdQ4KWAmnbhw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='GeneralHeaderConstraintsTemplateId DiagnosticImagingReportSectionsHaveText GeneralHeaderConstraintsCode GeneralHeaderConstraintsCodeP GeneralHeaderConstraintsId DiagnosticImagingReportInformant DiagnosticImagingReportDocumentationOf DiagnosticImagingReportFindingsSection DiagnosticImagingReportParticipantAssociatedEntityPersonName DiagnosticImagingReportParticipantAssociatedEntityAssociatedPerson DiagnosticImagingReportParticipantAssociatedEntity DiagnosticImagingReportDocumentationOfServiceEvent4ClassCode DiagnosticImagingReportDocumentationOfServiceEvent4Code DiagnosticImagingReportDocumentationOfServiceEvent3 DiagnosticImagingReportComponentOfEncompassingEncounter7ResponsiblePartyAssignedEntity DiagnosticImagingReportComponentOfEncompassingEncounter7PreciseToTheDay DiagnosticImagingReportComponentOfEncompassingEncounter7EffectiveTime DiagnosticImagingReportComponentOfEncompassingEncounter7Id DiagnosticImagingReportComponentOfEncompassingEncounter' templateId.root='2.16.840.1.113883.10.20.22.1.5' constraints.validation.warning='DiagnosticImagingReportUseDiagnosticImagingCode DiagnosticImagingReportAllSectionsHaveTitle DiagnosticImagingReportDICOMObjectCatalogSection DiagnosticImagingReportDocumentationOfServiceEvent4Id DiagnosticImagingReportDocumentationOfServiceEvent4PhysicianReadingStudyPerformer DiagnosticImagingReportComponentOfEncompassingEncounter7ResponsiblePartyAssignedEntityHasAssignPersonOrRepresentedOrganization DiagnosticImagingReportComponentOfEncompassingEncounter7PreciseToTheMinute DiagnosticImagingReportComponentOfEncompassingEncounter7IfMorePreciseThanDayIncludeTimeZoneOffset DiagnosticImagingReportComponentOfEncompassingEncounter7PhysicianofRecordParticipant' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' constraints.validation.dependOn.GeneralHeaderConstraintsCode='GeneralHeaderConstraintsCodeP' constraints.validation.info='DiagnosticImagingReportInformationRecipient DiagnosticImagingReportParticipant1 DiagnosticImagingReportInFulfillmentOf DiagnosticImagingReportRelatedDocument DiagnosticImagingReportComponentOf DiagnosticImagingReportComponentOfEncompassingEncounter7PreciseToTheSecond DiagnosticImagingReportComponentOfEncompassingEncounter7ResponsibleParty' constraints.validation.query='DiagnosticImagingReportParticipantAssociatedEntityPersonName DiagnosticImagingReportParticipantAssociatedEntityAssociatedPerson DiagnosticImagingReportParticipantAssociatedEntity DiagnosticImagingReportDocumentationOfServiceEvent4ClassCode DiagnosticImagingReportDocumentationOfServiceEvent4Code DiagnosticImagingReportDocumentationOfServiceEvent4Id DiagnosticImagingReportDocumentationOfServiceEvent4PhysicianReadingStudyPerformer DiagnosticImagingReportDocumentationOfServiceEvent3 DiagnosticImagingReportComponentOfEncompassingEncounter7ResponsiblePartyAssignedEntityHasAssignPersonOrRepresentedOrganization DiagnosticImagingReportComponentOfEncompassingEncounter7ResponsiblePartyAssignedEntity DiagnosticImagingReportComponentOfEncompassingEncounter7PreciseToTheDay DiagnosticImagingReportComponentOfEncompassingEncounter7PreciseToTheMinute DiagnosticImagingReportComponentOfEncompassingEncounter7PreciseToTheSecond DiagnosticImagingReportComponentOfEncompassingEncounter7IfMorePreciseThanDayIncludeTimeZoneOffset DiagnosticImagingReportComponentOfEncompassingEncounter7EffectiveTime DiagnosticImagingReportComponentOfEncompassingEncounter7Id DiagnosticImagingReportComponentOfEncompassingEncounter7PhysicianofRecordParticipant DiagnosticImagingReportComponentOfEncompassingEncounter7ResponsibleParty DiagnosticImagingReportComponentOfEncompassingEncounter'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolDiagnosticImagingReportParticipant constraints.validation.error='DiagnosticImagingReportParticipantAssociatedEntity'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolDiagnosticImagingReportParticipantAssociatedEntity constraints.validation.error='DiagnosticImagingReportParticipantAssociatedEntityAssociatedPerson'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolDiagnosticImagingReportParticipantAssociatedEntityPerson constraints.validation.error='DiagnosticImagingReportParticipantAssociatedEntityPersonName'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolDiagnosticImagingReportDocumentationOf constraints.validation.error='DiagnosticImagingReportDocumentationOfServiceEvent3'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolDiagnosticImagingReportDocumentationOfServiceEvent4 classCode='ACT' constraints.validation.error='DiagnosticImagingReportDocumentationOfServiceEvent4ClassCode DiagnosticImagingReportDocumentationOfServiceEvent4Code' constraints.validation.warning='DiagnosticImagingReportDocumentationOfServiceEvent4Id DiagnosticImagingReportDocumentationOfServiceEvent4PhysicianReadingStudyPerformer'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolDiagnosticImagingReportComponentOf constraints.validation.error='DiagnosticImagingReportComponentOfEncompassingEncounter'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolDiagnosticImagingReportComponentOfEncompassingEncounter7 constraints.validation.error='DiagnosticImagingReportComponentOfEncompassingEncounter7PreciseToTheDay DiagnosticImagingReportComponentOfEncompassingEncounter7EffectiveTime DiagnosticImagingReportComponentOfEncompassingEncounter7Id' constraints.validation.warning='DiagnosticImagingReportComponentOfEncompassingEncounter7PreciseToTheMinute DiagnosticImagingReportComponentOfEncompassingEncounter7IfMorePreciseThanDayIncludeTimeZoneOffset DiagnosticImagingReportComponentOfEncompassingEncounter7PhysicianofRecordParticipant' constraints.validation.info='DiagnosticImagingReportComponentOfEncompassingEncounter7PreciseToTheSecond DiagnosticImagingReportComponentOfEncompassingEncounter7ResponsibleParty'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolDiagnosticImagingReportComponentOfEncompassingEncounter7ResponsibleParty constraints.validation.error='DiagnosticImagingReportComponentOfEncompassingEncounter7ResponsiblePartyAssignedEntity'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolDiagnosticImagingReportComponentOfEncompassingEncounter7ResponsiblePartyAssignedEntity constraints.validation.warning='DiagnosticImagingReportComponentOfEncompassingEncounter7ResponsiblePartyAssignedEntityHasAssignPersonOrRepresentedOrganization'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vOoScIokEeSkH97cUQxLGA" base_Class="_H1UdcEVEEeGAh_iQGJvI5w">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PhysicianReadingStudyPerformerTemplateId PhysicianReadingStudyPerformerPreciseToTheDayIVLTS PhysicianReadingStudyPerformerTypeCode PhysicianReadingStudyPerformerAssignedEntity PhysicianReadingStudyPerformerAssignedEntityHasDICOM PhysicianReadingStudyPerformerAssignedEntityHasAssignedPersonOrRepresentedOrganization PhysicianReadingStudyPerformerAssignedEntityId PhysicianReadingStudyPerformerAssignedEntityCode' templateId.root='2.16.840.1.113883.10.20.6.2.1' constraints.validation.warning='PhysicianReadingStudyPerformerPreciseToTheMinuteIVLTS PhysicianReadingStudyPerformerIfMorePreciseThanDayIncludeTimeZoneOffsetIVLTS PhysicianReadingStudyPerformerAssignedEntityHasNationalProviderId' constraints.validation.info='PhysicianReadingStudyPerformerPreciseToTheSecondIVLTS PhysicianReadingStudyPerformerTime' typeCode='PRF' constraints.validation.query='PhysicianReadingStudyPerformerAssignedEntityHasDICOM PhysicianReadingStudyPerformerAssignedEntityHasAssignedPersonOrRepresentedOrganization PhysicianReadingStudyPerformerAssignedEntityHasNationalProviderId PhysicianReadingStudyPerformerAssignedEntityId PhysicianReadingStudyPerformerAssignedEntityCode'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolPhysicianReadingStudyPerformerAssignedEntity constraints.validation.error='PhysicianReadingStudyPerformerAssignedEntityHasDICOM PhysicianReadingStudyPerformerAssignedEntityHasAssignedPersonOrRepresentedOrganization PhysicianReadingStudyPerformerAssignedEntityId PhysicianReadingStudyPerformerAssignedEntityCode' constraints.validation.warning='PhysicianReadingStudyPerformerAssignedEntityHasNationalProviderId'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vO1GwIokEeSkH97cUQxLGA" base_Class="_H_izsEb1EeGp67IkyTw1fg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PhysicianofRecordParticipantTemplateId PhysicianofRecordParticipantTypeCode PhysicianofRecordParticipantAssignedEntity PhysicianofRecordParticipantAssignedEntityHasDICOMOrNUCCCode PhysicianofRecordParticipantAssignedEntityCode PhysicianofRecordParticipantAssignedEntityId' templateId.root='2.16.840.1.113883.10.20.6.2.2' typeCode='ATND' constraints.validation.warning='PhysicianofRecordParticipantAssignedEntityAssignedPersonName PhysicianofRecordParticipantAssignedEntityHasNationalProviderId PhysicianofRecordParticipantAssignedEntityAssignedPerson' constraints.validation.query='PhysicianofRecordParticipantAssignedEntityAssignedPersonName PhysicianofRecordParticipantAssignedEntityHasDICOMOrNUCCCode PhysicianofRecordParticipantAssignedEntityHasNationalProviderId PhysicianofRecordParticipantAssignedEntityCode PhysicianofRecordParticipantAssignedEntityId PhysicianofRecordParticipantAssignedEntityAssignedPerson'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolPhysicianofRecordParticipantAssignedEntity constraints.validation.error='PhysicianofRecordParticipantAssignedEntityHasDICOMOrNUCCCode PhysicianofRecordParticipantAssignedEntityCode PhysicianofRecordParticipantAssignedEntityId' constraints.validation.warning='PhysicianofRecordParticipantAssignedEntityHasNationalProviderId PhysicianofRecordParticipantAssignedEntityAssignedPerson'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolPhysicianofRecordParticipantAssignedEntityAssignedPerson constraints.validation.warning='PhysicianofRecordParticipantAssignedEntityAssignedPersonName'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vO_e0IokEeSkH97cUQxLGA" base_Class="_vjf-wEb4EeGp67IkyTw1fg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='StudyActTemplateId StudyActIdsHaveRoot StudyActNoIdExtension StudyActReferenceValue StudyActClassCode StudyActMoodCode StudyActId StudyActCode StudyActSeriesAct' templateId.root='2.16.840.1.113883.10.20.6.2.6' constraints.validation.warning='StudyActTextReference StudyActTextReferenceValue StudyActEffectiveTime' classCode='ACT' moodCode='EVN' code.code='113014' code.codeSystem='1.2.840.10008.2.16.4' code.codeSystemName='DCM' constraints.validation.info='StudyActText'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vPM6MIokEeSkH97cUQxLGA" base_Class="_N2wscEb6EeGp67IkyTw1fg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='SeriesActTemplateId SeriesActIdHasRoot SeriesActIdNoExtension SeriesActCodeQualifier SeriesActCodeQualifierCode SeriesActCodeQualifierValue SeriesActCodeQualifierValueCode SeriesActClassCode SeriesActMoodCode SeriesActCode SeriesActId SeriesActSOPInstanceObservation' templateId.root='2.16.840.1.113883.10.20.22.4.63' classCode='ACT' moodCode='EVN' code.code='113015' code.codeSystem='1.2.840.10008.2.16.4' code.codeSystemName='DCM' constraints.validation.warning='SeriesActEffectiveTime' constraints.validation.info='SeriesActText'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vPaVkIokEeSkH97cUQxLGA" base_Class="_9o7WcEb6EeGp67IkyTw1fg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='SOPInstanceObservationTemplateId SOPInstanceObservationEffectiveTimeHasValue SOPInstanceObservationEffectiveTimeNoLow SOPInstanceObservationEffectiveTimeNoHigh SOPInstanceObservationTextMediaType SOPInstanceObservationTextReference SOPInstanceObservationTextReferenceValue SOPInstanceObservationClassCode SOPInstanceObservationId SOPInstanceObservationMoodCode SOPInstanceObservationCode SOPInstanceObservationCodeP' templateId.root='2.16.840.1.113883.10.20.6.2.8' classCode='DGIMG' constraints.validation.warning='SOPInstanceObservationEffectiveTime SOPInstanceObservationText' moodCode='EVN' code.codeSystem='1.2.840.10008.2.6.1' code.codeSystemName='DCMUID' constraints.validation.dependOn.SOPInstanceObservationCode='SOPInstanceObservationCodeP' constraints.validation.info='SOPInstanceObservation SOPInstanceObservationPurposeofReferenceObservation SOPInstanceObservationReferencedFramesObservation'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vPq0QYokEeSkH97cUQxLGA" base_Class="_J-F8UEb7EeGp67IkyTw1fg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PurposeofReferenceObservationTemplateId PurposeofReferenceObservationClassCode PurposeofReferenceObservationCode PurposeofReferenceObservationMoodCode' templateId.root='2.16.840.1.113883.10.20.6.2.9' constraints.validation.warning='PurposeofReferenceObservationCodeCodeSystem PurposeofReferenceObservationValue' classCode='OBS' moodCode='EVN' value.codeSystem='1.2.840.10008.2.16.4' value.codeSystemName='DCM'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vP1zYIokEeSkH97cUQxLGA" base_Class="_1Zyf4Eb8EeGp67IkyTw1fg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ReferencedFramesObservationTemplateId ReferencedFramesObservationClassCode ReferencedFramesObservationMoodCode ReferencedFramesObservationCode ReferencedFramesObservationBoundaryObservation' templateId.root='2.16.840.1.113883.10.20.6.2.10' classCode='ROIBND' moodCode='EVN' code.code='121190' code.codeSystem='1.2.840.10008.2.16.4' code.codeSystemName='DCM' code.displayName='Referenced Frames'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vP76AIokEeSkH97cUQxLGA" base_Class="_9Yv6gEb8EeGp67IkyTw1fg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='BoundaryObservationTemplateId BoundaryObservationClassCode BoundaryObservationCode BoundaryObservationMoodCode BoundaryObservationValue' templateId.root='2.16.840.1.113883.10.20.6.2.11' classCode='OBS' code.code='113036' code.codeSystem='1.2.840.10008.2.16.4' code.codeSystemName='DCM' code.displayName='Frames for Display' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vQG5IIokEeSkH97cUQxLGA" base_Class="_9xjKIEb-EeGp67IkyTw1fg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='TextObservationTemplateId TextObservationReferenceValue TextObservationClassCode TextObservationMoodCode TextObservationCode TextObservationValue' templateId.root='2.16.840.1.113883.10.20.6.2.12' constraints.validation.warning='TextObservationTextReference TextObservationTextReferenceValue TextObservationEffectiveTime' classCode='OBS' moodCode='EVN' constraints.validation.info='TextObservationText TextObservationSOPInstanceObservation TextObservationQuantityMeasurementObservation'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vQVioIokEeSkH97cUQxLGA" base_Class="_Px2t4Eb_EeGp67IkyTw1fg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='QuantityMeasurementObservationTemplateId QuantityMeasurementObservationClassCode QuantityMeasurementObservationMoodCode QuantityMeasurementObservationCode QuantityMeasurementObservationValue' templateId.root='2.16.840.1.113883.10.20.6.2.14' constraints.validation.warning='QuantityMeasurementObservationCodeCodeSystemDIR QuantityMeasurementObservationCodeCodeSystemDICOM QuantityMeasurementObservationEffectiveTime' classCode='OBS' moodCode='EVN' constraints.validation.info='QuantityMeasurementObservationSOPInstanceObservation'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vQiW8IokEeSkH97cUQxLGA" base_Class="_pmiz8Eb_EeGp67IkyTw1fg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='CodeObservationsTemplateId CodeObservationsClassCode CodeObservationsMoodCode CodeObservationsCode CodeObservationsValue' templateId.root='2.16.840.1.113883.10.20.6.2.13' classCode='OBS' moodCode='EVN' constraints.validation.warning='CodeObservationsEffectiveTime' constraints.validation.info='CodeObservationsSOPInstanceObservation CodeObservationsQuantityMeasurementObservation'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vQsH8IokEeSkH97cUQxLGA" base_Class="_crHC0EcAEeGp67IkyTw1fg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProcedureContextTemplateId ProcedureContextEffectiveTimeValue ProcedureContextClassCode ProcedureContextMoodCode ProcedureContextCode' templateId.root='2.16.840.1.113883.10.20.6.2.5' classCode='ACT' moodCode='EVN' constraints.validation.warning='ProcedureContextEffectiveTime'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vRuCsIokEeSkH97cUQxLGA" base_Class="_Ker6MOM2EeGfv4R-kzpM0g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='EncounterDiagnosisTemplateId EncounterDiagnosisClassCode EncounterDiagnosisMoodCode EncounterDiagnosisCode EncounterDiagnosisCodeP EncounterDiagnosisProblemObservation' templateId.root='2.16.840.1.113883.10.20.22.4.80' classCode='ACT' moodCode='EVN' code.code='29308-4' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Diagnosis' constraints.validation.dependOn.EncounterDiagnosisCode='EncounterDiagnosisCodeP'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_vSCLwIokEeSkH97cUQxLGA" base_Generalization="_reIG0OWTEeGKmvzED_He2w"/>
  <Ecore:EClass xmi:id="_vSCy0YokEeSkH97cUQxLGA" base_Class="_RYJj0OWQEeGKmvzED_He2w">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='TobaccoUseTemplateId SmokingStatusObservationEffectiveTimeLow SmokingStatusObservationClassCode SmokingStatusObservationMoodCode SmokingStatusObservationCode SmokingStatusObservationCodeP SmokingStatusObservationEffectiveTime SmokingStatusObservationStatusCode SmokingStatusObservationStatusCodeP SmokingStatusObservationValue SmokingStatusObservationValueP' templateId.root='2.16.840.1.113883.10.20.22.4.78' classCode='OBS' moodCode='EVN' code.code='ASSERTION' code.codeSystem='2.16.840.1.113883.5.4' code.codeSystemName='HL7ActCode' code.displayName='Assertion' constraints.validation.dependOn.SmokingStatusObservationCode='SmokingStatusObservationCodeP' statusCode.code='completed' constraints.validation.dependOn.SmokingStatusObservationStatusCode='SmokingStatusObservationStatusCodeP' value.codeSystem='2.16.840.1.113883.6.96' value.codeSystemName='SNOMEDCT' constraints.validation.dependOn.SmokingStatusObservationValue='SmokingStatusObservationValueP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vSb0YIokEeSkH97cUQxLGA" base_Class="_gIH_QOWQEeGKmvzED_He2w">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='TobaccoUseTemplateId TobaccoUseEffectiveTimeLow TobaccoUseClassCode TobaccoUseMoodCode TobaccoUseCode TobaccoUseCodeP TobaccoUseEffectiveTime TobaccoUseStatusCode TobaccoUseStatusCodeP TobaccoUseValue TobaccoUseValueP' templateId.root='2.16.840.1.113883.10.20.22.4.85' classCode='OBS' moodCode='EVN' code.code='ASSERTION' code.codeSystem='2.16.840.1.113883.5.4' code.codeSystemName='HL7ActCode' code.displayName='Assertion' constraints.validation.dependOn.TobaccoUseCode='TobaccoUseCodeP' statusCode.code='completed' value.codeSystem='2.16.840.1.113883.6.96' value.codeSystemName='SNOMEDCT'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vS0O4IokEeSkH97cUQxLGA" base_Class="_Zi33YOYxEeGINOJ_SD9_dA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='AssessmentScaleObservationTemplateId AssessmentScaleObservationClassCode AssessmentScaleObservationMoodCode AssessmentScaleObservationCode AssessmentScaleObservationEffectiveTime AssessmentScaleObservationId AssessmentScaleObservationStatusCode AssessmentScaleObservationStatusCodeP AssessmentScaleObservationValue AssessmentScaleObservationReferenceRangeObservationRangeReferenceValue AssessmentScaleObservationReferenceRangeObservationRange' templateId.root='2.16.840.1.113883.10.20.22.4.69' constraints.validation.warning='AssessmentScaleObservationCodeCodeSystem AssessmentScaleObservationAssessmentScaleSupportingObservation AssessmentScaleObservationReferenceRangeObservationRangeTextReference AssessmentScaleObservationReferenceRangeObservationRangeText' constraints.validation.info='AssessmentScaleObservationInterpretationCodeTranslation AssessmentScaleObservationDerivationExpr AssessmentScaleObservationInterpretationCode AssessmentScaleObservationAuthor AssessmentScaleObservationReferenceRange AssessmentScaleObservationReferenceRangeObservationRangeTextReferenceValue' classCode='OBS' moodCode='EVN' statusCode.code='completed' constraints.validation.query='AssessmentScaleObservationReferenceRangeObservationRangeTextReference AssessmentScaleObservationReferenceRangeObservationRangeTextReferenceValue AssessmentScaleObservationReferenceRangeObservationRangeReferenceValue AssessmentScaleObservationReferenceRangeObservationRangeText AssessmentScaleObservationReferenceRangeObservationRange'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolAssessmentScaleObservationReferenceRange constraints.validation.error='AssessmentScaleObservationReferenceRangeObservationRange'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolAssessmentScaleObservationReferenceRangeObservationRange constraints.validation.warning='AssessmentScaleObservationReferenceRangeObservationRangeTextReference AssessmentScaleObservationReferenceRangeObservationRangeText' constraints.validation.info='AssessmentScaleObservationReferenceRangeObservationRangeTextReferenceValue' constraints.validation.error='AssessmentScaleObservationReferenceRangeObservationRangeReferenceValue'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vTJmEIokEeSkH97cUQxLGA" base_Class="_1ZKPgOY2EeGINOJ_SD9_dA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='AssessmentScaleSupportingObservationTemplateId AssessmentScaleSupportingObservationCodeCodeSystem AssessmentScaleSupportingObservationClassCode AssessmentScaleSupportingObservationMoodCode AssessmentScaleSupportingObservationCode AssessmentScaleSupportingObservationId AssessmentScaleSupportingObservationStatusCode AssessmentScaleSupportingObservationStatusCodeP AssessmentScaleSupportingObservationValue' templateId.root='2.16.840.1.113883.10.20.22.4.86' constraints.validation.info='AssessmentScaleSupportingObservationValueTranslation' classCode='OBS' moodCode='EVN' statusCode.code='completed'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vTXogIokEeSkH97cUQxLGA" base_Class="__pNCUOY-EeGINOJ_SD9_dA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='CaregiverCharacteristicsTemplateId CaregiverCharacteristicsValueCodeSystem CaregiverCharacteristicsClassCode CaregiverCharacteristicsMoodCode CaregiverCharacteristicsId CaregiverCharacteristicsCode CaregiverCharacteristicsStatusCode CaregiverCharacteristicsStatusCodeP CaregiverCharacteristicsValue CaregiverCharacteristicsParticipant CaregiverCharacteristicsParticipantParticipantRoleClassCode CaregiverCharacteristicsParticipantTimeLow CaregiverCharacteristicsParticipantTypeCode CaregiverCharacteristicsParticipantParticipantRole' templateId.root='2.16.840.1.113883.10.20.22.4.72' classCode='OBS' moodCode='EVN' statusCode.code='completed' constraints.validation.query='CaregiverCharacteristicsParticipantParticipantRoleClassCode CaregiverCharacteristicsParticipantTimeLow CaregiverCharacteristicsParticipantTimeHigh CaregiverCharacteristicsParticipantTypeCode CaregiverCharacteristicsParticipantTime CaregiverCharacteristicsParticipantParticipantRole' constraints.validation.info='CaregiverCharacteristicsParticipantTimeHigh CaregiverCharacteristicsParticipantTime'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolCaregiverCharacteristicsParticipant constraints.validation.error='CaregiverCharacteristicsParticipantTimeLow CaregiverCharacteristicsParticipantTypeCode CaregiverCharacteristicsParticipantParticipantRole' constraints.validation.info='CaregiverCharacteristicsParticipantTimeHigh CaregiverCharacteristicsParticipantTime' typeCode='IND'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolCaregiverCharacteristicsParticipantParticipantRole classCode='CAREGIVER' constraints.validation.error='CaregiverCharacteristicsParticipantParticipantRoleClassCode'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vTsYoIokEeSkH97cUQxLGA" base_Class="_6kIXMOZEEeGINOJ_SD9_dA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='MedicationUseNoneKnownTemplateId MedicationUseNoneKnownReferenceValue MedicationUseNoneKnownClassCode MedicationUseNoneKnownMoodCode MedicationUseNoneKnownId MedicationUseNoneKnownCode MedicationUseNoneKnownCodeP MedicationUseNoneKnownStatusCode MedicationUseNoneKnownStatusCodeP MedicationUseNoneKnownValue MedicationUseNoneKnownValueP' templateId.root='2.16.840.1.113883.10.20.22.4.29' constraints.validation.warning='MedicationUseNoneKnownTextReference MedicationUseNoneKnownTextReferenceValue MedicationUseNoneKnownEffectiveTime' classCode='OBS' moodCode='EVN' code.code='ASSERTION' code.codeSystem='2.16.840.1.113883.5.4' code.codeSystemName='HL7ActCode' code.displayName='Assertion' constraints.validation.dependOn.MedicationUseNoneKnownCode='MedicationUseNoneKnownCodeP' statusCode.code='completed' constraints.validation.info='MedicationUseNoneKnownText' value.code='182904002' value.codeSystem='2.16.840.1.113883.6.96' value.codeSystemName='SNOMEDCT' value.displayName='Drug treatment unknown'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_vUNWAIokEeSkH97cUQxLGA" base_Generalization="_JGpG8OZcEeGINOJ_SD9_dA"/>
  <Ecore:EClass xmi:id="_vUN9EIokEeSkH97cUQxLGA" base_Class="_dXKPQOZbEeGINOJ_SD9_dA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProblemObservationTemplateId CognitiveStatusProblemObservationHasTextReferenceValue CognitiveStatusProblemObservationHasOnsetDate ProblemObservationClassCode ProblemObservationMoodCode ProblemObservationId ProblemObservationCodeP ProblemObservationStatusCode ProblemObservationValueP' templateId.root='2.16.840.1.113883.10.20.22.4.73' constraints.validation.warning='CognitiveStatusProblemObservationHasTextReference CognitiveStatusProblemObservationHasResolutionDate ProblemObservationCode ProblemObservationText ProblemObservationEffectiveTime ProblemObservationValue' classCode='OBS' moodCode='EVN' constraints.validation.info='ProblemObservationNegationInd CognitiveStatusProblemObservationMethodCode CognitiveStatusProblemObservationNonMedicinalSupplyActivity CognitiveStatusProblemObservationCaregiverCharacteristics CognitiveStatusProblemObservationAssessmentScaleObservation' code.code='373930000' code.codeSystem='2.16.840.1.113883.6.96' code.codeSystemName='SNOMEDCT' code.displayName='Cognitive function finding' constraints.validation.dependOn.ProblemObservationCode='ProblemObservationCodeP' statusCode.code='completed' value.codeSystem='2.16.840.1.113883.6.96' value.codeSystemName='SNOMEDCT' constraints.validation.dependOn.ProblemObservationValue='ProblemObservationValueP'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_vUtFQIokEeSkH97cUQxLGA" base_Generalization="_gLy9QOZfEeGINOJ_SD9_dA"/>
  <Ecore:EClass xmi:id="_vUtsUIokEeSkH97cUQxLGA" base_Class="_gkBM0OZbEeGINOJ_SD9_dA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ResultObservationTemplateId CognitiveStatusResultObservationTextReferenceValue ResultObservationClassCode ResultObservationMoodCode ResultObservationId ResultObservationCodeP ResultObservationStatusCode ResultObservationStatusCodeP ResultObservationEffectiveTime ResultObservationValue CognitiveStatusResultObservationReferenceRangeObservationRangeNoCode CognitiveStatusResultObservationReferenceRangeObservationRange' templateId.root='2.16.840.1.113883.10.20.22.4.74' constraints.validation.warning='CognitiveStatusResultObservationTextReference CognitiveStatusResultObservationValueDatatype ResultObservationCode ResultObservationText ResultObservationInterpretationCode CognitiveStatusResultObservationReferenceRange' classCode='OBS' moodCode='EVN' code.code='373930000' code.codeSystem='2.16.840.1.113883.6.96' code.codeSystemName='SNOMEDCT' code.displayName='Cognitive function finding' constraints.validation.dependOn.ResultObservationCode='ResultObservationCodeP' statusCode.code='completed' constraints.validation.dependOn.ResultObservationStatusCode='ResultObservationStatusCodeP' constraints.validation.info='ResultObservationMethodCode ResultObservationTargetSiteCode CognitiveStatusResultObservationAuthor CognitiveStatusResultObservationNonMedicinalSupplyActivity CognitiveStatusResultObservationCaregiverCharacteristics CognitiveStatusResultObservationAssessmentScaleObservation' constraints.validation.query='CognitiveStatusResultObservationReferenceRangeObservationRangeNoCode CognitiveStatusResultObservationReferenceRangeObservationRange'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolCognitiveStatusResultObservationReferenceRange constraints.validation.error='CognitiveStatusResultObservationReferenceRangeObservationRange'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolCognitiveStatusResultObservationReferenceRangeObservationRange constraints.validation.error='CognitiveStatusResultObservationReferenceRangeObservationRangeNoCode'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_vVJxMIokEeSkH97cUQxLGA" base_Generalization="_-QfYkOZiEeGINOJ_SD9_dA"/>
  <Ecore:EClass xmi:id="_vVKYQIokEeSkH97cUQxLGA" base_Class="_jfoCUOZbEeGINOJ_SD9_dA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ResultOrganizerTemplateId ResultOrganizerClassCode ResultOrganizerMoodCode ResultOrganizerId ResultOrganizerCode ResultOrganizerStatusCode ResultOrganizerStatusCodeP CognitiveStatusResultOrganizerCognitiveStatusResultObservation' templateId.root='2.16.840.1.113883.10.20.22.4.75' constraints.validation.warning='CognitiveStatusResultOrganizerCodeCodeSystem' classCode='CLUSTER' moodCode='EVN' statusCode.code='completed' constraints.validation.dependOn.ResultOrganizerStatusCode='ResultOrganizerStatusCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vVWlgIokEeSkH97cUQxLGA" base_Class="_lm3boOZbEeGINOJ_SD9_dA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='DeceasedObservationTemplateId DeceasedObservationEffectiveTimeLow DeceasedObservationClassCode DeceasedObservationMoodCode DeceasedObservationId DeceasedObservationCode DeceasedObservationCodeP DeceasedObservationStatusCode DeceasedObservationStatusCodeP DeceasedObservationEffectiveTime DeceasedObservationValue DeceasedObservationValueP' templateId.root='2.16.840.1.113883.10.20.22.4.79' classCode='OBS' moodCode='EVN' code.code='ASSERTION' code.codeSystem='2.16.840.1.113883.5.4' code.codeSystemName='HL7ActCode' code.displayName='Assertion' constraints.validation.dependOn.DeceasedObservationCode='DeceasedObservationCodeP' statusCode.code='completed' value.code='419099009' value.codeSystem='2.16.840.1.113883.6.96' value.codeSystemName='SNOMEDCT' value.displayName='Dead' constraints.validation.warning='DeceasedObservationProblemObservation'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_vVr8sIokEeSkH97cUQxLGA" base_Generalization="_whRx8ObjEeGINOJ_SD9_dA"/>
  <Ecore:EClass xmi:id="_vVtK0IokEeSkH97cUQxLGA" base_Class="_rVl5AOZbEeGINOJ_SD9_dA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProblemObservationTemplateId FunctionalStatusProblemObservationHasTextReferenceValue FunctionalStatusProblemObservationHasOnsetDate ProblemObservationClassCode ProblemObservationMoodCode ProblemObservationId ProblemObservationCodeP ProblemObservationStatusCode ProblemObservationValueP' templateId.root='2.16.840.1.113883.10.20.22.4.68' constraints.validation.warning='FunctionalStatusProblemObservationHasTextReference FunctionalStatusProblemObservationTextReferenceValue FunctionalStatusProblemObservationHasResolutionDate ProblemObservationCode ProblemObservationText ProblemObservationEffectiveTime ProblemObservationValue' constraints.validation.info='FunctionalStatusProblemObservationValueNullFlavor ProblemObservationNegationInd FunctionalStatusProblemObservationMethodCode FunctionalStatusProblemObservationNonMedicinalSupplyActivity FunctionalStatusProblemObservationCaregiverCharacteristics FunctionalStatusProblemObservationAssessmentScaleObservation' classCode='OBS' moodCode='EVN' code.code='248536006' code.codeSystem='2.16.840.1.113883.6.96' code.codeSystemName='SNOMEDCT' code.displayName='finding of functional performance and activity' constraints.validation.dependOn.ProblemObservationCode='ProblemObservationCodeP' statusCode.code='completed' value.codeSystem='2.16.840.1.113883.6.96' value.codeSystemName='SNOMEDCT' constraints.validation.dependOn.ProblemObservationValue='ProblemObservationValueP'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_vWJPsIokEeSkH97cUQxLGA" base_Generalization="_dM_VcObxEeGINOJ_SD9_dA"/>
  <Ecore:EClass xmi:id="_vWKd0IokEeSkH97cUQxLGA" base_Class="_viRU0OZbEeGINOJ_SD9_dA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ResultObservationTemplateId FunctionalStatusResultObservationTextReferenceValue ResultObservationClassCode ResultObservationMoodCode ResultObservationId ResultObservationCodeP ResultObservationStatusCode ResultObservationStatusCodeP ResultObservationEffectiveTime ResultObservationValue FunctionalStatusResultObservationReferenceRangeObservationRangeNoCode FunctionalStatusResultObservationReferenceRangeObservationRange' templateId.root='2.16.840.1.113883.10.20.22.4.67' constraints.validation.warning='FunctionalStatusResultObservationTextReference FunctionalStatusResultObservationValueDatatype ResultObservationCode ResultObservationText ResultObservationInterpretationCode FunctionalStatusResultObservationReferenceRange' classCode='OBS' moodCode='EVN' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' constraints.validation.dependOn.ResultObservationCode='ResultObservationCodeP' statusCode.code='completed' constraints.validation.dependOn.ResultObservationStatusCode='ResultObservationStatusCodeP' constraints.validation.info='ResultObservationMethodCode ResultObservationTargetSiteCode FunctionalStatusResultObservationAuthor FunctionalStatusResultObservationNonMedicinalSupplyActivity FunctionalStatusResultObservationCaregiverCharacteristics FunctionalStatusResultObservationAssessmentScaleObservation' constraints.validation.query='FunctionalStatusResultObservationReferenceRangeObservationRangeNoCode FunctionalStatusResultObservationReferenceRangeObservationRange'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolFunctionalStatusResultObservationReferenceRange constraints.validation.error='FunctionalStatusResultObservationReferenceRangeObservationRange'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolFunctionalStatusResultObservationReferenceRangeObservationRange constraints.validation.error='FunctionalStatusResultObservationReferenceRangeObservationRangeNoCode'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_vWlUkYokEeSkH97cUQxLGA" base_Generalization="_8KA8YObzEeGINOJ_SD9_dA"/>
  <Ecore:EClass xmi:id="_vWmisIokEeSkH97cUQxLGA" base_Class="_zBlUUOZbEeGINOJ_SD9_dA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ResultOrganizerTemplateId ResultOrganizerClassCode ResultOrganizerMoodCode ResultOrganizerId ResultOrganizerCode ResultOrganizerStatusCode ResultOrganizerStatusCodeP FunctionalStatusResultOrganizerFunctionalStatusResultObservation' templateId.root='2.16.840.1.113883.10.20.22.4.66' constraints.validation.warning='FunctionalStatusResultOrganizerCodeCodeSystem' classCode='CLUSTER' moodCode='EVN' statusCode.code='completed' constraints.validation.dependOn.ResultOrganizerStatusCode='ResultOrganizerStatusCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vW1zQIokEeSkH97cUQxLGA" base_Class="_4YgVsOZbEeGINOJ_SD9_dA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='HighestPressureUlcerStageTemplateId HighestPressureUlcerStageClassCode HighestPressureUlcerStageMoodCode HighestPressureUlcerStageId HighestPressureUlcerStageCode HighestPressureUlcerStageCodeP HighestPressureUlcerStageValue' templateId.root='2.16.840.1.113883.10.20.22.4.77' classCode='OBS' moodCode='EVN' code.code='420905001' code.codeSystem='2.16.840.1.113883.6.96' code.codeSystemName='SNOMEDCT' code.displayName='Highest Pressure Ulcer Stage' constraints.validation.dependOn.HighestPressureUlcerStageCode='HighestPressureUlcerStageCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vXAyYIokEeSkH97cUQxLGA" base_Class="_7c4ssOZbEeGINOJ_SD9_dA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='NumberOfPressureUlcersObservationTemplateId NumberOfPressureUlcersObservationClassCode NumberOfPressureUlcersObservationMoodCode NumberOfPressureUlcersObservationId NumberOfPressureUlcersObservationCode NumberOfPressureUlcersObservationCodeP NumberOfPressureUlcersObservationStatusCode NumberOfPressureUlcersObservationStatusCodeP NumberOfPressureUlcersObservationEffectiveTime NumberOfPressureUlcersObservationValue NumberOfPressureUlcersObservationEntryRelationship NumberOfPressureUlcersObservationEntryRelationshipObservationClassCode NumberOfPressureUlcersObservationEntryRelationshipObservationMoodCode NumberOfPressureUlcersObservationEntryRelationshipObservationValueP NumberOfPressureUlcersObservationEntryRelationshipTypeCode NumberOfPressureUlcersObservationEntryRelationshipObservation' templateId.root='2.16.840.1.113883.10.20.22.4.76' classCode='OBS' moodCode='EVN' code.code='2264892003' code.codeSystem='2.16.840.1.113883.6.96' code.codeSystemName='SNOMEDCT' code.displayName='number of pressure ulcers' constraints.validation.dependOn.NumberOfPressureUlcersObservationCode='NumberOfPressureUlcersObservationCodeP' statusCode.code='completed' constraints.validation.info='NumberOfPressureUlcersObservationAuthor' constraints.validation.query='NumberOfPressureUlcersObservationEntryRelationshipObservationClassCode NumberOfPressureUlcersObservationEntryRelationshipObservationMoodCode NumberOfPressureUlcersObservationEntryRelationshipObservationValue NumberOfPressureUlcersObservationEntryRelationshipObservationValueP NumberOfPressureUlcersObservationEntryRelationshipTypeCode NumberOfPressureUlcersObservationEntryRelationshipObservation' constraints.validation.warning='NumberOfPressureUlcersObservationEntryRelationshipObservationValue'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolNumberOfPressureUlcersObservationEntryRelationship typeCode='SUBJ' constraints.validation.error='NumberOfPressureUlcersObservationEntryRelationshipTypeCode NumberOfPressureUlcersObservationEntryRelationshipObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolNumberOfPressureUlcersObservationEntryRelationshipObservation classCode='OBS' constraints.validation.error='NumberOfPressureUlcersObservationEntryRelationshipObservationClassCode NumberOfPressureUlcersObservationEntryRelationshipObservationMoodCode NumberOfPressureUlcersObservationEntryRelationshipObservationValueP' moodCode='EVN' value.codeSystem='2.16.840.1.113883.6.96' value.codeSystemName='SNOMEDCT' constraints.validation.warning='NumberOfPressureUlcersObservationEntryRelationshipObservationValue'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vXZM4YokEeSkH97cUQxLGA" base_Class="_9rQowOZbEeGINOJ_SD9_dA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PressureUlcerObservationTemplateId PressureUlcerObservationTextReferenceValue PressureUlcerObservationHasTextReferenceValue PressureUlcerObservationTargetSiteQualifierName PressureUlcerObservationTargetSiteQualifierValue PressureUlcerObservationClassCode PressureUlcerObservationMoodCode PressureUlcerObservationId PressureUlcerObservationCodeP PressureUlcerObservationValueP PressureUlcerObservationEntryRelationship1Observation1ClassCode PressureUlcerObservationEntryRelationship1Observation1MoodCode PressureUlcerObservationEntryRelationship1Observation1CodeP PressureUlcerObservationEntryRelationship1Observation1Code PressureUlcerObservationEntryRelationship1Observation1Value PressureUlcerObservationEntryRelationship1TypeCode PressureUlcerObservationEntryRelationship1Observation1 PressureUlcerObservationEntryRelationship2Observation2ClassCode PressureUlcerObservationEntryRelationship2Observation2MoodCode PressureUlcerObservationEntryRelationship2Observation2CodeP PressureUlcerObservationEntryRelationship2Observation2Code PressureUlcerObservationEntryRelationship2Observation2Value PressureUlcerObservationEntryRelationship2TypeCode PressureUlcerObservationEntryRelationship2Observation2 PressureUlcerObservationEntryRelationship3Observation3ClassCode PressureUlcerObservationEntryRelationship3Observation3MoodCode PressureUlcerObservationEntryRelationship3Observation3CodeP PressureUlcerObservationEntryRelationship3Observation3Code PressureUlcerObservationEntryRelationship3Observation3Value PressureUlcerObservationEntryRelationship3TypeCode PressureUlcerObservationEntryRelationship3Observation3' templateId.root='2.16.840.1.113883.10.20.22.4.70' constraints.validation.warning='PressureUlcerObservationHasTextReference PressureUlcerObservationTargetSiteQualifier PressureUlcerObservationTargetSiteQualifierNameCode PressureUlcerObservationTargetSiteQualifierValueCode PressureUlcerObservationCode PressureUlcerObservationText PressureUlcerObservationValue PressureUlcerObservationTargetSiteCode PressureUlcerObservationTargetSiteCodeP PressureUlcerObservationEntryRelationship PressureUlcerObservationEntryRelationship2 PressureUlcerObservationEntryRelationship3' constraints.validation.info='PressureUlcerObservationValueNullFlavor PressureUlcerObservationNegationInd' classCode='OBS' moodCode='EVN' code.code='ASSERTION' code.codeSystem='2.16.840.1.113883.5.4' code.codeSystemName='HL7ActCode' code.displayName='Assertion' constraints.validation.dependOn.PressureUlcerObservationCode='PressureUlcerObservationCodeP' value.codeSystem='2.16.840.1.113883.6.96' value.codeSystemName='SNOMEDCT' targetSiteCode.codeSystem='2.16.840.1.113883.6.96' targetSiteCode.codeSystemName='SNOMEDCT' constraints.validation.dependOn.PressureUlcerObservationTargetSiteCode='PressureUlcerObservationTargetSiteCodeP' constraints.validation.query='PressureUlcerObservationEntryRelationship1Observation1ClassCode PressureUlcerObservationEntryRelationship1Observation1MoodCode PressureUlcerObservationEntryRelationship1Observation1CodeP PressureUlcerObservationEntryRelationship1Observation1Code PressureUlcerObservationEntryRelationship1Observation1Value PressureUlcerObservationEntryRelationship1TypeCode PressureUlcerObservationEntryRelationship1Observation1 PressureUlcerObservationEntryRelationship2Observation2ClassCode PressureUlcerObservationEntryRelationship2Observation2MoodCode PressureUlcerObservationEntryRelationship2Observation2CodeP PressureUlcerObservationEntryRelationship2Observation2Code PressureUlcerObservationEntryRelationship2Observation2Value PressureUlcerObservationEntryRelationship2TypeCode PressureUlcerObservationEntryRelationship2Observation2 PressureUlcerObservationEntryRelationship3Observation3ClassCode PressureUlcerObservationEntryRelationship3Observation3MoodCode PressureUlcerObservationEntryRelationship3Observation3CodeP PressureUlcerObservationEntryRelationship3Observation3Code PressureUlcerObservationEntryRelationship3Observation3Value PressureUlcerObservationEntryRelationship3TypeCode PressureUlcerObservationEntryRelationship3Observation3' constraints.validation.dependOn.PressureUlcerObservationEntryRelationship1Observation1Code='PressureUlcerObservationEntryRelationship1Observation1CodeP' constraints.validation.dependOn.PressureUlcerObservationEntryRelationship2Observation2Code='PressureUlcerObservationEntryRelationship2Observation2CodeP' constraints.validation.dependOn.PressureUlcerObservationEntryRelationship3Observation3Code='PressureUlcerObservationEntryRelationship3Observation3CodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolPressureUlcerObservationEntryRelationship1 typeCode='COMP' constraints.validation.error='PressureUlcerObservationEntryRelationship1TypeCode PressureUlcerObservationEntryRelationship1Observation1'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolPressureUlcerObservationEntryRelationship1Observation1 classCode='OBS' constraints.validation.error='PressureUlcerObservationEntryRelationship1Observation1ClassCode PressureUlcerObservationEntryRelationship1Observation1MoodCode PressureUlcerObservationEntryRelationship1Observation1Code PressureUlcerObservationEntryRelationship1Observation1CodeP PressureUlcerObservationEntryRelationship1Observation1Value' moodCode='EVN' code.code='401238003' code.codeSystem='2.16.840.1.113883.6.96' code.codeSystemName='SNOMEDCT' code.displayName='Length of Wound' constraints.validation.dependOn.PressureUlcerObservationEntryRelationship1Observation1Code='PressureUlcerObservationEntryRelationship1Observation1CodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolPressureUlcerObservationEntryRelationship2 typeCode='COMP' constraints.validation.error='PressureUlcerObservationEntryRelationship2TypeCode PressureUlcerObservationEntryRelationship2Observation2'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolPressureUlcerObservationEntryRelationship2Observation2 classCode='OBS' constraints.validation.error='PressureUlcerObservationEntryRelationship2Observation2ClassCode PressureUlcerObservationEntryRelationship2Observation2MoodCode PressureUlcerObservationEntryRelationship2Observation2Code PressureUlcerObservationEntryRelationship2Observation2CodeP PressureUlcerObservationEntryRelationship2Observation2Value' moodCode='EVN' code.code='401239006' code.codeSystem='2.16.840.1.113883.6.96' code.codeSystemName='SNOMEDCT' code.displayName='Width of Wound' constraints.validation.dependOn.PressureUlcerObservationEntryRelationship2Observation2Code='PressureUlcerObservationEntryRelationship2Observation2CodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolPressureUlcerObservationEntryRelationship3 typeCode='COMP' constraints.validation.error='PressureUlcerObservationEntryRelationship3TypeCode PressureUlcerObservationEntryRelationship3Observation3'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolPressureUlcerObservationEntryRelationship3Observation3 classCode='OBS' constraints.validation.error='PressureUlcerObservationEntryRelationship3Observation3ClassCode PressureUlcerObservationEntryRelationship3Observation3MoodCode PressureUlcerObservationEntryRelationship3Observation3Code PressureUlcerObservationEntryRelationship3Observation3CodeP PressureUlcerObservationEntryRelationship3Observation3Value' moodCode='EVN' code.code='425094009' code.codeSystem='2.16.840.1.113883.6.96' code.codeSystemName='SNOMEDCT' code.displayName='Depth of Wound' constraints.validation.dependOn.PressureUlcerObservationEntryRelationship3Observation3Code='PressureUlcerObservationEntryRelationship3Observation3CodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vZLVkIokEeSkH97cUQxLGA" base_Class="_TkyvwPKwEeGFUPBL8qS7yQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='FetusSubjectContextTemplateId FetusSubjectContextCode FetusSubjectContextSubject' templateId.root='2.16.840.1.113883.10.20.6.2.3' code.code='121026' code.codeSystem='1.2.840.10008.2.16.4' code.codeSystemName='DCM'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolFetusSubjectContextSubjectPerson constraints.validation.error='FetusSubjectContextSubjectPersonName'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vZSqUIokEeSkH97cUQxLGA" base_Class="_XIE-YPKyEeGFUPBL8qS7yQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ObserverContextTemplateId ObserverContextAssignedAuthor' templateId.root='2.16.840.1.113883.10.20.6.2.4'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolObserverContextAssignedAuthor constraints.validation.error='ObserverContextAssignedAuthorHasAssignedPersonorAuthoringDevice ObserverContextAssignedAuthorId'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vZjJAIokEeSkH97cUQxLGA" base_Class="_u_keoIkOEeOJGtGyq_dBbA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ActReferenceTemplateId ActReferenceClassCode ActReferenceMoodCode ActReferenceId ActReferenceCode ActReferenceStatusCodeP ActReferenceCDNullFlavor ActReferenceCDNullFlavorP' templateId.root='2.16.840.1.113883.10.20.22.4.122' classCode='ACT' moodCode='EVN' statusCode.code='completed' constraints.validation.info='ActReferenceStatusCode' constraints.validation.query='ActReferenceCDNullFlavor ActReferenceCDNullFlavorP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolActReferenceCD nullFlavor='NP' constraints.validation.error='ActReferenceCDNullFlavor ActReferenceCDNullFlavorP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vZzAoIokEeSkH97cUQxLGA" base_Class="_Z8VQYIlFEeOJGtGyq_dBbA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='AdvanceDirectiveOrganizerTemplateId AdvanceDirectiveOrganizerClassCode AdvanceDirectiveOrganizerMoodCode AdvanceDirectiveOrganizerId AdvanceDirectiveOrganizerCode AdvanceDirectiveOrganizerCodeP AdvanceDirectiveOrganizerStatusCode AdvanceDirectiveOrganizerStatusCodeP AdvanceDirectiveOrganizerAdvanceDirectiveObservation2' templateId.root='2.16.840.1.113883.10.20.22.4.108' classCode='CLUSTER' moodCode='EVN' code.code='45473-6' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Advance directive - living will' statusCode.code='completed' constraints.validation.dependOn.AdvanceDirectiveOrganizerStatusCode='AdvanceDirectiveOrganizerStatusCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vaCRMIokEeSkH97cUQxLGA" base_Class="_O-O-IInUEeOJGtGyq_dBbA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='CharacteristicsOfHomeEnvironmentTemplateId CharacteristicsOfHomeEnvironmentClassCode CharacteristicsOfHomeEnvironmentMoodCode CharacteristicsOfHomeEnvironmentId CharacteristicsOfHomeEnvironmentCode CharacteristicsOfHomeEnvironmentCodeP CharacteristicsOfHomeEnvironmentStatusCode CharacteristicsOfHomeEnvironmentStatusCodeP CharacteristicsOfHomeEnvironmentValue' templateId.root='2.16.840.1.113883.10.20.22.4.109' classCode='OBS' moodCode='EVN' code.code='224249004' code.codeSystem='2.16.840.1.113883.6.96' code.codeSystemName='SNOMEDCT' code.displayName='Characteristics of Home Environment' constraints.validation.dependOn.CharacteristicsOfHomeEnvironmentCode='CharacteristicsOfHomeEnvironmentCodeP' statusCode.code='completed'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vaRhwIokEeSkH97cUQxLGA" base_Class="_Y_oGkIoAEeOoMZgUoTghIg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='CognitiveAbilitiesObservationTemplateId CognitiveAbilitiesObservationClassCode CognitiveAbilitiesObservationMoodCode CognitiveAbilitiesObservationId CognitiveAbilitiesObservationCodeP CognitiveAbilitiesObservationStatusCode CognitiveAbilitiesObservationStatusCodeP CognitiveAbilitiesObservationEffectiveTime CognitiveAbilitiesObservationValueP' templateId.root='2.16.840.1.113883.10.20.22.4.126' classCode='OBS' moodCode='EVN' code.codeSystem='2.16.840.1.113883.6.96' code.codeSystemName='SNOMEDCT' constraints.validation.warning='CognitiveAbilitiesObservationCode CognitiveAbilitiesObservationText CognitiveAbilitiesObservationValue CognitiveAbilitiesObservationAuthorParticipation' constraints.validation.dependOn.CognitiveAbilitiesObservationCode='CognitiveAbilitiesObservationCodeP' statusCode.code='completed' value.codeSystem='2.16.840.1.113883.6.96' value.codeSystemName='SNOMEDCT' constraints.validation.info='CognitiveAbilitiesObservationAssessmentScaleObservation'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vaouIIokEeSkH97cUQxLGA" base_Class="_H2EzIIqZEeOoMZgUoTghIg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='CulturalAndReligiousObservationTemplateId CulturalAndReligiousObservationClassCode CulturalAndReligiousObservationMoodCode CulturalAndReligiousObservationId CulturalAndReligiousObservationCode CulturalAndReligiousObservationCodeP CulturalAndReligiousObservationStatusCode CulturalAndReligiousObservationStatusCodeP CulturalAndReligiousObservationValue' templateId.root='2.16.840.1.113883.10.20.22.4.111' classCode='OBS' moodCode='EVN' code.code='406198009' code.codeSystem='2.16.840.1.113883.6.96' code.codeSystemName='SNOMEDCT' code.displayName='personal belief pattern (observable entity)' constraints.validation.dependOn.CulturalAndReligiousObservationCode='CulturalAndReligiousObservationCodeP' statusCode.code='completed'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_va3-sIokEeSkH97cUQxLGA" base_Class="_MbKs8IqvEeOoMZgUoTghIg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='DrugMonitoringActTemplateId DrugMonitoringActClassCode DrugMonitoringActMoodCode DrugMonitoringActId DrugMonitoringActCode DrugMonitoringActCodeP DrugMonitoringActStatusCode DrugMonitoringActEffectiveTime DrugMonitoringActParticipant DrugMonitoringActParticipantParticipantRolePlayingEntityClassCode DrugMonitoringActParticipantParticipantRolePlayingEntityName DrugMonitoringActParticipantParticipantRoleClassCode DrugMonitoringActParticipantParticipantRoleId DrugMonitoringActParticipantParticipantRolePlayingEntity DrugMonitoringActParticipantTypeCode DrugMonitoringActParticipantParticipantRole' templateId.root='2.16.840.1.113883.10.20.22.4.123' classCode='ACT' moodCode='INT' code.code='395170001' code.codeSystem='2.16.840.1.113883.6.96' code.codeSystemName='SNOMEDCT' code.displayName='medication monitoring (regime/therapy)' constraints.validation.dependOn.DrugMonitoringActCode='DrugMonitoringActCodeP' constraints.validation.query='DrugMonitoringActParticipantParticipantRolePlayingEntityClassCode DrugMonitoringActParticipantParticipantRolePlayingEntityName DrugMonitoringActParticipantParticipantRoleClassCode DrugMonitoringActParticipantParticipantRoleId DrugMonitoringActParticipantParticipantRolePlayingEntity DrugMonitoringActParticipantTypeCode DrugMonitoringActParticipantParticipantRole'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolDrugMonitoringActParticipant typeCode='RESP' constraints.validation.error='DrugMonitoringActParticipantTypeCode DrugMonitoringActParticipantParticipantRole'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolDrugMonitoringActParticipantParticipantRole classCode='ASSIGNED' constraints.validation.error='DrugMonitoringActParticipantParticipantRoleClassCode DrugMonitoringActParticipantParticipantRoleId DrugMonitoringActParticipantParticipantRolePlayingEntity'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolDrugMonitoringActParticipantParticipantRolePlayingEntity classCode='PSN' constraints.validation.error='DrugMonitoringActParticipantParticipantRolePlayingEntityClassCode DrugMonitoringActParticipantParticipantRolePlayingEntityName'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vbQZMYokEeSkH97cUQxLGA" base_Class="_POfwAIz7EeOoMZgUoTghIg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='HandoffCommunicationTemplateId HandoffCommunicationClassCode HandoffCommunicationMoodCode HandoffCommunicationCode HandoffCommunicationCodeP HandoffCommunicationStatusCode HandoffCommunicationStatusCodeP HandoffCommunicationEffectiveTime HandoffCommunicationParticipant HandoffCommunicationAuthorParticipation HandoffCommunicationParticipantTypeCode HandoffCommunicationParticipantParticipantRole' templateId.root='2.16.840.1.113883.10.20.22.4.141' classCode='ACT' moodCode='EVN' code.code='432138007' code.codeSystem='2.16.840.1.113883.6.96' code.codeSystemName='SNOMEDCT' code.displayName='handoff communication (procedure)' constraints.validation.dependOn.HandoffCommunicationCode='HandoffCommunicationCodeP' statusCode.code='completed' constraints.validation.warning='HandoffCommunicationParticipantParticipantRoleCodeP HandoffCommunicationParticipantParticipantRoleCode' constraints.validation.query='HandoffCommunicationParticipantParticipantRoleCodeP HandoffCommunicationParticipantParticipantRoleCode HandoffCommunicationParticipantTypeCode HandoffCommunicationParticipantParticipantRole' constraints.validation.dependOn.HandoffCommunicationParticipantParticipantRoleCode='HandoffCommunicationParticipantParticipantRoleCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolHandoffCommunicationParticipant typeCode='IRCP' constraints.validation.error='HandoffCommunicationParticipantTypeCode HandoffCommunicationParticipantParticipantRole'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolHandoffCommunicationParticipantParticipantRole code.codeSystem='2.16.840.1.113883.6.101' code.codeSystemName='NUCC Health Care Provider Taxonomy' constraints.validation.warning='HandoffCommunicationParticipantParticipantRoleCode HandoffCommunicationParticipantParticipantRoleCodeP' constraints.validation.dependOn.HandoffCommunicationParticipantParticipantRoleCode='HandoffCommunicationParticipantParticipantRoleCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vbzLwIokEeSkH97cUQxLGA" base_Class="_RbbCII0dEeOB0eBUISUB4Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='MedicalEquipmentOrganizerTemplateId MedicalEquipmentOrganizerClassCode MedicalEquipmentOrganizerMoodCode MedicalEquipmentOrganizerId MedicalEquipmentOrganizerStatusCode MedicalEquipmentOrganizerStatusCodeP' templateId.root='2.16.840.1.113883.10.20.22.4.135' classCode='CLUSTER' moodCode='EVN' constraints.validation.info='MedicalEquipmentOrganizerCode MedicalEquipmentOrganizerNonMedicinalSupplyActivity2 MedicalEquipmentOrganizerProcedureActivityProcedure2' constraints.validation.dependOn.MedicalEquipmentOrganizerStatusCode='MedicalEquipmentOrganizerStatusCodeP' constraints.validation.warning='MedicalEquipmentOrganizerEffectiveTime'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vcGGsIokEeSkH97cUQxLGA" base_Class="_-lJmEI0kEeOB0eBUISUB4Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='MentalStatusObservationTemplateId MentalStatusObservationClassCode MentalStatusObservationMoodCode MentalStatusObservationId MentalStatusObservationCodeP MentalStatusObservationStatusCode MentalStatusObservationStatusCodeP MentalStatusObservationEffectiveTime MentalStatusObservationValueP' templateId.root='2.16.840.1.113883.10.20.22.4.125' classCode='OBS' moodCode='EVN' code.codeSystem='2.16.840.1.113883.6.96' code.codeSystemName='SNOMEDCT' constraints.validation.warning='MentalStatusObservationCode MentalStatusObservationValue MentalStatusObservationAuthorParticipation' constraints.validation.dependOn.MentalStatusObservationCode='MentalStatusObservationCodeP' statusCode.code='completed' value.codeSystem='2.16.840.1.113883.6.96' value.codeSystemName='SNOMEDCT' constraints.validation.info='MentalStatusObservationAssessmentScaleObservation'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vcbd4IokEeSkH97cUQxLGA" base_Class="_NP5zMI05EeOB0eBUISUB4Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='NutritionAssessmentTemplateId NutritionAssessmentClassCode NutritionAssessmentMoodCode NutritionAssessmentId NutritionAssessmentCodeP NutritionAssessmentStatusCode NutritionAssessmentStatusCodeP NutritionAssessmentEffectiveTime NutritionAssessmentValue' templateId.root='2.16.840.1.113883.10.20.22.4.138' classCode='OBS' moodCode='EVN' code.codeSystem='2.16.840.1.113883.6.96' code.codeSystemName='SNOMEDCT' constraints.validation.warning='NutritionAssessmentCode NutritionAssessmentAuthorParticipation' constraints.validation.dependOn.NutritionAssessmentCode='NutritionAssessmentCodeP' statusCode.code='completed'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vcsjoIokEeSkH97cUQxLGA" base_Class="_FhAIMI3FEeOB0eBUISUB4Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='NutritionRecommendationsTemplateId NutritionRecommendationsClassCode NutritionRecommendationsMoodCode NutritionRecommendationsMoodCodeP NutritionRecommendationsCodeP NutritionRecommendationsStatusCode NutritionRecommendationsStatusCodeP' templateId.root='2.16.840.1.113883.10.20.22.4.130' classCode='ACT' constraints.validation.dependOn.NutritionRecommendationsMoodCode='NutritionRecommendationsMoodCodeP' code.codeSystem='2.16.840.1.113883.6.96' code.codeSystemName='SNOMEDCT' constraints.validation.warning='NutritionRecommendationsCode NutritionRecommendationsEffectiveTime' constraints.validation.dependOn.NutritionRecommendationsCode='NutritionRecommendationsCodeP' statusCode.code='active'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vc-3gIokEeSkH97cUQxLGA" base_Class="_T1dcwI37EeOB0eBUISUB4Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='NutritionalStatusObservationTemplateId NutritionalStatusObservationClassCode NutritionalStatusObservationMoodCode NutritionalStatusObservationId NutritionalStatusObservationCode NutritionalStatusObservationCodeP NutritionalStatusObservationStatusCode NutritionalStatusObservationStatusCodeP NutritionalStatusObservationEffectiveTime NutritionalStatusObservationValueP NutritionalStatusObservationNutritionAssessment' templateId.root='2.16.840.1.113883.10.20.22.4.124' classCode='OBS' moodCode='EVN' code.code='87276001' code.codeSystem='2.16.840.1.113883.6.96' code.codeSystemName='SNOMEDCT' code.displayName='nutritional status (observable entity)' constraints.validation.dependOn.NutritionalStatusObservationCode='NutritionalStatusObservationCodeP' statusCode.code='completed' value.codeSystem='2.16.840.1.113883.6.96' value.codeSystemName='SNOMEDCT' constraints.validation.warning='NutritionalStatusObservationValue'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vdTAkookEeSkH97cUQxLGA" base_Class="_ihaWkI55EeOB0eBUISUB4Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='OutcomeObservationTemplateId OutcomeObservationClassCode OutcomeObservationMoodCode OutcomeObservationId' templateId.root='2.16.840.1.113883.10.20.22.4.144' classCode='OBS' moodCode='EVN' constraints.validation.info='OutcomeObservationActReference OutcomeObservationActReference2 OutcomeObservationInterventionAct OutcomeObservationExternalDocumentReference' constraints.validation.warning='OutcomeObservationAuthorParticipation OutcomeObservationGoalObservation OutcomeObservationProgressTowardGoalObservation'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vdbjcIokEeSkH97cUQxLGA" base_Class="_UqXAAI6hEeOB0eBUISUB4Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PatientPriorityPreferenceTemplateId PatientPriorityPreferenceClassCode PatientPriorityPreferenceMoodCode PatientPriorityPreferenceId PatientPriorityPreferenceCode PatientPriorityPreferenceCodeP PatientPriorityPreferenceValue PatientPriorityPreferenceValueP' templateId.root='2.16.840.1.113883.10.20.22.4.142' classCode='OBS' moodCode='EVN' code.code='PAT' code.displayName='Patient request' constraints.validation.dependOn.PatientPriorityPreferenceCode='PatientPriorityPreferenceCodeP' priorityCode.codeSystem='2.16.840.1.113883.6.96' priorityCode.codeSystemName='SNOMEDCT' constraints.validation.warning='PatientPriorityPreferencePriorityCode PatientPriorityPreferencePriorityCodeP' constraints.validation.dependOn.PatientPriorityPreferencePriorityCode='PatientPriorityPreferencePriorityCodeP' value.codeSystem='2.16.840.1.113883.6.96' value.codeSystemName='SNOMEDCT' constraints.validation.info='PatientPriorityPreferenceCDCodeSystem' constraints.validation.query='PatientPriorityPreferenceCDCodeSystem'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolPatientPriorityPreferenceCD constraints.validation.info='PatientPriorityPreferenceCDCodeSystem'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vdw6oookEeSkH97cUQxLGA" base_Class="_50a2UI62EeOB0eBUISUB4Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PatientReferralActTemplateId PatientReferralActClassCode PatientReferralActMoodCode PatientReferralActId PatientReferralActCode PatientReferralActCodeP PatientReferralActStatusCode PatientReferralActStatusCodeP PatientReferralActEffectiveTime PatientReferralActEntryRelationshipObservationClassCode PatientReferralActEntryRelationshipObservationMoodCode PatientReferralActEntryRelationshipObservationCodeP PatientReferralActEntryRelationshipObservationCode PatientReferralActEntryRelationshipObservationStatusCode PatientReferralActEntryRelationshipObservationStatusCodeP PatientReferralActEntryRelationshipObservationValueP PatientReferralActEntryRelationshipTypeCode PatientReferralActEntryRelationshipObservation' templateId.root='2.16.840.1.113883.10.20.22.4.140' classCode='ACT' moodCode='INT' code.codeSystem='2.16.840.1.113883.6.96' code.codeSystemName='SNOMEDCT' constraints.validation.dependOn.PatientReferralActCode='PatientReferralActCodeP' statusCode.code='active' constraints.validation.info='PatientReferralActActReference PatientReferralActEntryRelationship' constraints.validation.warning='PatientReferralActAuthorParticipation PatientReferralActEntryRelationshipObservationValue' constraints.validation.query='PatientReferralActEntryRelationshipObservationClassCode PatientReferralActEntryRelationshipObservationMoodCode PatientReferralActEntryRelationshipObservationCodeP PatientReferralActEntryRelationshipObservationCode PatientReferralActEntryRelationshipObservationStatusCode PatientReferralActEntryRelationshipObservationStatusCodeP PatientReferralActEntryRelationshipObservationValue PatientReferralActEntryRelationshipObservationValueP PatientReferralActEntryRelationshipTypeCode PatientReferralActEntryRelationshipObservation' constraints.validation.dependOn.PatientReferralActEntryRelationshipObservationCode='PatientReferralActEntryRelationshipObservationCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolPatientReferralActEntryRelationship typeCode='SUBJ' constraints.validation.error='PatientReferralActEntryRelationshipTypeCode PatientReferralActEntryRelationshipObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolPatientReferralActEntryRelationshipObservation classCode='OBS' constraints.validation.error='PatientReferralActEntryRelationshipObservationClassCode PatientReferralActEntryRelationshipObservationMoodCode PatientReferralActEntryRelationshipObservationCode PatientReferralActEntryRelationshipObservationCodeP PatientReferralActEntryRelationshipObservationStatusCode PatientReferralActEntryRelationshipObservationStatusCodeP PatientReferralActEntryRelationshipObservationValueP' moodCode='EVN' code.code='ASSERTION' code.codeSystem='2.16.840.1.113883.5.4' code.codeSystemName='HL7ActCode' code.displayName='assertion' constraints.validation.dependOn.PatientReferralActEntryRelationshipObservationCode='PatientReferralActEntryRelationshipObservationCodeP' statusCode.code='completed' value.codeSystem='2.16.840.1.113883.6.96' value.codeSystemName='SNOMEDCT' constraints.validation.warning='PatientReferralActEntryRelationshipObservationValue'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_veUUQIokEeSkH97cUQxLGA" base_Class="_O2I3AI9DEeOB0eBUISUB4Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PlannedCoverageTemplateId PlannedCoverageClassCode PlannedCoverageMoodCode PlannedCoverageId PlannedCoverageCode PlannedCoverageCodeP PlannedCoverageStatusCode PlannedCoverageStatusCodeP PlannedCoverageEntryRelationship PlannedCoverageEntryRelationshipActClassCode PlannedCoverageEntryRelationshipActMoodCode PlannedCoverageEntryRelationshipActId PlannedCoverageEntryRelationshipActCodeP PlannedCoverageEntryRelationshipActCode PlannedCoverageEntryRelationshipActStatusCode PlannedCoverageEntryRelationshipActStatusCodeP PlannedCoverageEntryRelationshipTypeCode PlannedCoverageEntryRelationshipAct' templateId.root='2.16.840.1.113883.10.20.22.4.129' classCode='ACT' moodCode='INT' code.code='48768-6' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Payment Sources' constraints.validation.dependOn.PlannedCoverageCode='PlannedCoverageCodeP' statusCode.code='active' constraints.validation.query='PlannedCoverageEntryRelationshipActClassCode PlannedCoverageEntryRelationshipActMoodCode PlannedCoverageEntryRelationshipActId PlannedCoverageEntryRelationshipActCodeP PlannedCoverageEntryRelationshipActCode PlannedCoverageEntryRelationshipActStatusCode PlannedCoverageEntryRelationshipActStatusCodeP PlannedCoverageEntryRelationshipTypeCode PlannedCoverageEntryRelationshipAct' constraints.validation.dependOn.PlannedCoverageEntryRelationshipActCode='PlannedCoverageEntryRelationshipActCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolPlannedCoverageEntryRelationship typeCode='COMP' constraints.validation.error='PlannedCoverageEntryRelationshipTypeCode PlannedCoverageEntryRelationshipAct'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolPlannedCoverageEntryRelationshipAct classCode='ACT' constraints.validation.error='PlannedCoverageEntryRelationshipActClassCode PlannedCoverageEntryRelationshipActMoodCode PlannedCoverageEntryRelationshipActId PlannedCoverageEntryRelationshipActCode PlannedCoverageEntryRelationshipActCodeP PlannedCoverageEntryRelationshipActStatusCode PlannedCoverageEntryRelationshipActStatusCodeP' moodCode='INT' code.codeSystem='2.16.840.1.113883.3.221.5' code.codeSystemName='Source of Payment Typology (PHDSC)' constraints.validation.dependOn.PlannedCoverageEntryRelationshipActCode='PlannedCoverageEntryRelationshipActCodeP' statusCode.code='active'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_vevyEIokEeSkH97cUQxLGA" base_Generalization="_-miMIY9TEeOB0eBUISUB4Q"/>
  <Ecore:EClass xmi:id="_vexAMIokEeSkH97cUQxLGA" base_Class="_-miMII9TEeOB0eBUISUB4Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PlanOfCareActivityObservationTemplateId GoalObservationClassCode GoalObservationMoodCode GoalObservationCode GoalObservationAuthorParticipation' templateId.root='2.16.840.1.113883.10.20.22.4.121' classCode='OBS' moodCode='GOL' constraints.validation.warning='GoalObservationPatientPriorityPreference GoalObservationHealthConcernAct GoalObservationProviderPriorityPreference' constraints.validation.info='GoalObservation GoalObservationActReference GoalObservationExternalDocumentReference GoalObservationPlannedEncounter2 GoalObservationPlannedObservation2 GoalObservationPlannedProcedure2 GoalObservationPlannedMedicationActivity2 GoalObservationPlannedSupply2 GoalObservationPlannedAct2'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_ve6KIYokEeSkH97cUQxLGA" base_Class="_An8P8I9kEeOB0eBUISUB4Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='HealthConcernActTemplateId HealthConcernActClassCode HealthConcernActMoodCode HealthConcernActId HealthConcernActCode HealthConcernActCodeP HealthConcernActStatusCode' templateId.root='2.16.840.1.113883.10.20.22.4.132' classCode='ACT' moodCode='EVN' code.codeSystem='2.16.840.1.113883.5.6' code.codeSystemName='HL7ActClass' constraints.validation.dependOn.HealthConcernActCode='HealthConcernActCodeP' constraints.validation.info='HealthConcernActEffectiveTime HealthConcernActActReference HealthConcernActActReferenceExtra HealthConcernActAssessmentScaleObservation HealthConcernActCognitiveAbilitiesObservation HealthConcernActFamilyHistoryOrganizer HealthConcernActMentalStatusObservation HealthConcernActNutritionAssessment HealthConcernActNutritionAssessmentExtra HealthConcernActPregnancyObservation HealthConcernActCaregiverCharacteristics HealthConcernActCulturalAndReligiousObservation HealthConcernActCharacteristicsOfHomeEnvironment HealthConcernActNutritionalStatusObservation HealthConcernActPatientPriorityPreference HealthConcernActActReferenceExtra3 HealthConcernActSelfCareActivities HealthConcernActSensoryAndSpeechStatus HealthConcernActWoundObservation HealthConcernActProviderPriorityPreference HealthConcernActExternalDocumentReference HealthConcernActProblemObservation2 HealthConcernActAllergyObservation2 HealthConcernActCognitiveStatusObservation2 HealthConcernActCognitiveStatusObservation2Extra HealthConcernActCurrentSmokingStatus2 HealthConcernActEncounterDiagnosis2 HealthConcernActFunctionalStatusObservation2 HealthConcernActHospitalAdmissionDiagnosis2 HealthConcernActPostprocedureDiagnosis2 HealthConcernActPreoperativeDiagnosis2 HealthConcernActReactionObservation2 HealthConcernActResultObservation2 HealthConcernActSocialHistoryObservation2 HealthConcernActSubstanceOrDeviceAllergyObservation2 HealthConcernActTobaccoUse2 HealthConcernActVitalSignObservation2 HealthConcernActProblemObservation2Support HealthConcernActResultOrganizer2 HealthConcernActProblemConcernAct2' constraints.validation.warning='HealthConcernActAuthorParticipation'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vfZ5YIokEeSkH97cUQxLGA" base_Class="_XD5vgJA8EeOZX935IVJfOg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='InterventionActTemplateId InterventionActClassCode InterventionActMoodCode InterventionActMoodCodeP InterventionActId InterventionActCode InterventionActCodeP InterventionActStatusCode' templateId.root='2.16.840.1.113883.10.20.22.4.131' classCode='ACT' constraints.validation.dependOn.InterventionActMoodCode='InterventionActMoodCodeP' code.code='362956003' code.codeSystem='2.16.840.1.113883.6.96' code.codeSystemName='SNOMEDCT' code.displayName='procedure / intervention (navigational concept)' constraints.validation.dependOn.InterventionActCode='InterventionActCodeP' constraints.validation.warning='InterventionActEffectiveTime InterventionActGoalObservation InterventionActAuthorParticipation' constraints.validation.info='InterventionAct InterventionActNutritionRecommendations InterventionActActReference InterventionActActReferenceGoal InterventionActExternalDocumentReference InterventionActAdvanceDirectiveObservation2 InterventionActImmunizationActivity2 InterventionActMedicationActivity2 InterventionActProcedureActivityAct2 InterventionActProcedureActivityObservation2 InterventionActProcedureActivityProcedure2 InterventionActEncounterActivity2 InterventionActNonMedicinalSupplyActivity2 InterventionActInstruction2 InterventionActPlannedAct2 InterventionActPlannedEncounter2 InterventionActPlannedObservation2 InterventionActPlannedProcedure2 InterventionActPlannedMedicationActivity2 InterventionActPlannedSupply2'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vfziAookEeSkH97cUQxLGA" base_Class="_QcUL8JBGEeOZX935IVJfOg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ExternalDocumentReferenceTemplateId ExternalDocumentReferenceClassCode ExternalDocumentReferenceMoodCode ExternalDocumentReferenceCode ExternalDocumentReferenceCodeP ExternalDocumentReferenceReference ExternalDocumentReferenceReferenceExternalDocumentMoodCode ExternalDocumentReferenceReferenceExternalDocumentId ExternalDocumentReferenceReferenceExternalDocumentCode ExternalDocumentReferenceReferenceTypeCode ExternalDocumentReferenceReferenceExternalDocument' templateId.root='2.16.840.1.113883.10.20.22.4.115' moodCode='EVN' code.code='DOCCLIN' code.codeSystem='2.16.840.1.113883.5.6' code.codeSystemName='HL7ActClass' code.displayName='Clinical Document' constraints.validation.dependOn.ExternalDocumentReferenceCode='ExternalDocumentReferenceCodeP' constraints.validation.info='ExternalDocumentReferenceReferenceExternalDocumentClassCode' constraints.validation.query='ExternalDocumentReferenceReferenceExternalDocumentClassCode ExternalDocumentReferenceReferenceExternalDocumentMoodCode ExternalDocumentReferenceReferenceExternalDocumentId ExternalDocumentReferenceReferenceExternalDocumentCode ExternalDocumentReferenceReferenceExternalDocumentSetId ExternalDocumentReferenceReferenceExternalDocumentVersionNumber ExternalDocumentReferenceReferenceTypeCode ExternalDocumentReferenceReferenceExternalDocument' constraints.validation.warning='ExternalDocumentReferenceReferenceExternalDocumentSetId ExternalDocumentReferenceReferenceExternalDocumentVersionNumber'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolExternalDocumentReferenceReference typeCode='REFR' constraints.validation.error='ExternalDocumentReferenceReferenceTypeCode ExternalDocumentReferenceReferenceExternalDocument'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolExternalDocumentReferenceReferenceExternalDocument classCode='DOCCLIN' constraints.validation.info='ExternalDocumentReferenceReferenceExternalDocumentClassCode' moodCode='EVN' constraints.validation.error='ExternalDocumentReferenceReferenceExternalDocumentMoodCode ExternalDocumentReferenceReferenceExternalDocumentId ExternalDocumentReferenceReferenceExternalDocumentCode' constraints.validation.warning='ExternalDocumentReferenceReferenceExternalDocumentSetId ExternalDocumentReferenceReferenceExternalDocumentVersionNumber'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vgI5MIokEeSkH97cUQxLGA" base_Class="_KRcPwJXFEeOgXcDbh8Igkw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PlannedImmunizationActivityTemplateId PlannedImmunizationActivityClassCode PlannedImmunizationActivityMoodCode PlannedImmunizationActivityMoodCodeP PlannedImmunizationActivityId PlannedImmunizationActivityStatusCode PlannedImmunizationActivityStatusCodeP PlannedImmunizationActivityRouteCode PlannedImmunizationActivityApproachSiteCode PlannedImmunizationActivityApproachSiteCodeP PlannedImmunizationActivityConsumable PlannedImmunizationActivityConsumableImmunizationMedicationInformation2 PlannedImmunizationActivityPreconditionTypeCode PlannedImmunizationActivityPreconditionPreconditionForSubstanceAdministration2' templateId.root='2.16.840.1.113883.10.20.22.4.120' classCode='SBADM' constraints.validation.dependOn.PlannedImmunizationActivityMoodCode='PlannedImmunizationActivityMoodCodeP' statusCode.code='active' constraints.validation.info='PlannedImmunizationActivityEffectiveTime PlannedImmunizationActivityRepeatNumber PlannedImmunizationActivityRouteCodeP PlannedImmunizationActivityDoseQuantity PlannedImmunizationActivityPerformer PlannedImmunizationActivityPatientPriorityPreference PlannedImmunizationActivityAuthorParticipation PlannedImmunizationActivityProviderPriorityPreference PlannedImmunizationActivityIndication2 PlannedImmunizationActivityInstruction2 PlannedImmunizationActivityPrecondition' routeCode.codeSystem='2.16.840.1.113883.3.26.1.1' routeCode.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.PlannedImmunizationActivityRouteCode='PlannedImmunizationActivityRouteCodeP' approachSiteCode.codeSystem='2.16.840.1.113883.6.96' approachSiteCode.codeSystemName='SNOMEDCT' constraints.validation.warning='PlannedImmunizationActivityIVLPQUnit' constraints.validation.query='PlannedImmunizationActivityIVLPQUnit PlannedImmunizationActivityConsumableImmunizationMedicationInformation2 PlannedImmunizationActivityPreconditionTypeCode PlannedImmunizationActivityPreconditionPreconditionForSubstanceAdministration2'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolPlannedImmunizationActivityIVLPQ unit='1' constraints.validation.warning='PlannedImmunizationActivityIVLPQUnit'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolPlannedImmunizationActivityPrecondition typeCode='PRCN' constraints.validation.error='PlannedImmunizationActivityPreconditionTypeCode PlannedImmunizationActivityPreconditionPreconditionForSubstanceAdministration2'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolPlannedImmunizationActivityConsumable constraints.validation.error='PlannedImmunizationActivityConsumableImmunizationMedicationInformation2'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vgvWIYokEeSkH97cUQxLGA" base_Class="_GXlxYJmLEeOeSLwbllPCyw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PrognosisObservationTemplateId PrognosisObservationClassCode PrognosisObservationMoodCode PrognosisObservationCode PrognosisObservationCodeP PrognosisObservationStatusCode PrognosisObservationStatusCodeP PrognosisObservationEffectiveTime PrognosisObservationValue' templateId.root='2.16.840.1.113883.10.20.22.4.113' classCode='OBS' moodCode='EVN' code.code='170967006' code.codeSystem='2.16.840.1.113883.6.96' code.codeSystemName='SNOMEDCT' code.displayName='prognosis/outlook' constraints.validation.dependOn.PrognosisObservationCode='PrognosisObservationCodeP' statusCode.code='completed'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vg-msIokEeSkH97cUQxLGA" base_Class="_0NewYJmVEeOLJeQez13EkQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProgressTowardGoalObservationTemplateId ProgressTowardGoalObservationClassCode ProgressTowardGoalObservationMoodCode ProgressTowardGoalObservationId ProgressTowardGoalObservationCode ProgressTowardGoalObservationCodeP ProgressTowardGoalObservationStatusCode ProgressTowardGoalObservationStatusCodeP ProgressTowardGoalObservationValue ProgressTowardGoalObservationValueP' templateId.root='2.16.840.1.113883.10.20.22.4.110' classCode='OBS' moodCode='EVN' code.code='ASSERTION' code.codeSystem='2.16.840.1.113883.5.4' code.codeSystemName='HL7ActCode' code.displayName='Assertion' constraints.validation.dependOn.ProgressTowardGoalObservationCode='ProgressTowardGoalObservationCodeP' statusCode.code='completed' value.codeSystem='2.16.840.1.113883.6.96' value.codeSystemName='SNOMEDCT'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vhRhoIokEeSkH97cUQxLGA" base_Class="_ncafYJmaEeOLJeQez13EkQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProviderPriorityPreferenceTemplateId ProviderPriorityPreferenceClassCode ProviderPriorityPreferenceMoodCode ProviderPriorityPreferenceId ProviderPriorityPreferenceCode ProviderPriorityPreferenceCodeP ProviderPriorityPreferenceValue ProviderPriorityPreferenceValueP' templateId.root='2.16.840.1.113883.10.20.22.4.143' classCode='OBS' moodCode='EVN' code.code='103323008' code.codeSystem='2.16.840.1.113883.6.96' code.codeSystemName='SNOMEDCT' code.displayName='Provider preference' constraints.validation.dependOn.ProviderPriorityPreferenceCode='ProviderPriorityPreferenceCodeP' priorityCode.codeSystem='2.16.840.1.113883.6.96' priorityCode.codeSystemName='SNOMEDCT' constraints.validation.warning='ProviderPriorityPreferencePriorityCode ProviderPriorityPreferencePriorityCodeP ProviderPriorityPreferenceAuthorParticipation' constraints.validation.dependOn.ProviderPriorityPreferencePriorityCode='ProviderPriorityPreferencePriorityCodeP' value.codeSystem='2.16.840.1.113883.6.96' value.codeSystemName='SNOMEDCT'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vhkckYokEeSkH97cUQxLGA" base_Class="_nC0xUJmzEeOLJeQez13EkQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='SelfCareActivitiesTemplateId SelfCareActivitiesClassCode SelfCareActivitiesMoodCode SelfCareActivitiesCode SelfCareActivitiesCodeP SelfCareActivitiesValue SelfCareActivitiesValueP' templateId.root='2.16.840.1.113883.10.20.22.4.128' classCode='OBS' moodCode='EVN' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' constraints.validation.dependOn.SelfCareActivitiesCode='SelfCareActivitiesCodeP' value.codeSystem='2.16.840.1.113883.6.96' value.codeSystemName='SNOMEDCT'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vhx38YokEeSkH97cUQxLGA" base_Class="_kyeGAJm4EeOLJeQez13EkQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='SensoryAndSpeechStatusTemplateId SensoryAndSpeechStatusClassCode SensoryAndSpeechStatusMoodCode SensoryAndSpeechStatusCodeP SensoryAndSpeechStatusStatusCode SensoryAndSpeechStatusStatusCodeP SensoryAndSpeechStatusEffectiveTime SensoryAndSpeechStatusValueP SensoryAndSpeechStatusAuthorTime' templateId.root='2.16.840.1.113883.10.20.22.4.127' classCode='OBS' moodCode='EVN' code.codeSystem='2.16.840.1.113883.6.96' code.codeSystemName='SNOMEDCT' constraints.validation.warning='SensoryAndSpeechStatusCode SensoryAndSpeechStatusValue SensoryAndSpeechStatusAuthor' constraints.validation.dependOn.SensoryAndSpeechStatusCode='SensoryAndSpeechStatusCodeP' statusCode.code='completed' value.codeSystem='2.16.840.1.113883.6.96' value.codeSystemName='SNOMEDCT' constraints.validation.info='SensoryAndSpeechStatusAssessmentScaleObservation' constraints.validation.query='SensoryAndSpeechStatusAuthorTime'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolSensoryAndSpeechStatusAuthor constraints.validation.error='SensoryAndSpeechStatusAuthorTime'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_viH2MYokEeSkH97cUQxLGA" base_Class="_KTrEAJpdEeOK6dzbL4VoTA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='SubstanceAdministeredActTemplateId SubstanceAdministeredActClassCode SubstanceAdministeredActMoodCode SubstanceAdministeredActId SubstanceAdministeredActCode SubstanceAdministeredActCodeP SubstanceAdministeredActStatusCode SubstanceAdministeredActStatusCodeP' templateId.root='2.16.840.1.113883.10.20.22.4.118' classCode='ACT' moodCode='EVN' code.code='416118004' code.codeSystem='2.16.840.1.113883.6.96' code.codeSystemName='SNOMEDCT' code.displayName='Administration' constraints.validation.dependOn.SubstanceAdministeredActCode='SubstanceAdministeredActCodeP' statusCode.code='completed' constraints.validation.info='SubstanceAdministeredActEffectiveTime'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_viaKEIokEeSkH97cUQxLGA" base_Class="_D6Lm0JpnEeOK6dzbL4VoTA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='WoundCharacteristicsTemplateId WoundCharacteristicsClassCode WoundCharacteristicsMoodCode WoundCharacteristicsId WoundCharacteristicsCode WoundCharacteristicsCodeP WoundCharacteristicsStatusCode WoundCharacteristicsStatusCodeP WoundCharacteristicsEffectiveTime WoundCharacteristicsValue WoundCharacteristicsValueP' templateId.root='2.16.840.1.113883.10.20.22.4.134' classCode='OBS' moodCode='EVN' code.code='ASSERTION' code.displayName='assertion' constraints.validation.dependOn.WoundCharacteristicsCode='WoundCharacteristicsCodeP' statusCode.code='completed' value.codeSystem='2.16.840.1.113883.6.96' value.codeSystemName='SNOMEDCT' constraints.validation.info='WoundCharacteristicsCDCodeSystem' constraints.validation.query='WoundCharacteristicsCDCodeSystem'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolWoundCharacteristicsCD constraints.validation.info='WoundCharacteristicsCDCodeSystem'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vix9gIokEeSkH97cUQxLGA" base_Class="_94MpsJp7EeOK6dzbL4VoTA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='WoundMeasurementObservationTemplateId WoundMeasurementObservationClassCode WoundMeasurementObservationMoodCode WoundMeasurementObservationId WoundMeasurementObservationCode WoundMeasurementObservationCodeP WoundMeasurementObservationStatusCode WoundMeasurementObservationStatusCodeP WoundMeasurementObservationEffectiveTime WoundMeasurementObservationValue' templateId.root='2.16.840.1.113883.10.20.22.4.133' classCode='OBS' moodCode='EVN' code.codeSystem='2.16.840.1.113883.6.96' code.codeSystemName='SNOMEDCT' constraints.validation.dependOn.WoundMeasurementObservationCode='WoundMeasurementObservationCodeP' statusCode.code='completed'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_vjB1IIokEeSkH97cUQxLGA" base_Generalization="_09uFMZp_EeOK6dzbL4VoTA"/>
  <Ecore:EClass xmi:id="_vjCcMYokEeSkH97cUQxLGA" base_Class="_09uFMJp_EeOK6dzbL4VoTA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProblemObservationTemplateId WoundObservationClassCode WoundObservationMoodCode WoundObservationCode WoundObservationCodeP WoundObservationValueP WoundObservationCDCRCDCode WoundObservationCDCRName WoundObservationCDCRNameP WoundObservationCDCRValue' templateId.root='2.16.840.1.113883.10.20.22.4.114' classCode='OBS' moodCode='EVN' code.code='ASSERTION' code.codeSystem='2.16.840.1.113883.5.4' code.codeSystemName='HL7ActCode' code.displayName='assertion' constraints.validation.dependOn.WoundObservationCode='WoundObservationCodeP' value.codeSystem='2.16.840.1.113883.6.96' value.codeSystemName='SNOMEDCT' constraints.validation.warning='WoundObservationValue WoundObservationTargetSiteCode WoundObservationTargetSiteCodeP WoundObservationWoundMeasurementObservation WoundObservationWoundCharacteristics WoundObservationHighestPressureUlcerStage WoundObservationAuthorParticipation' constraints.validation.dependOn.WoundObservationValue='WoundObservationValueP' targetSiteCode.codeSystem='2.16.840.1.113883.6.96' targetSiteCode.codeSystemName='SNOMEDCT' constraints.validation.dependOn.WoundObservationTargetSiteCode='WoundObservationTargetSiteCodeP' constraints.validation.info='WoundObservationNumberOfPressureUlcersObservation2 WoundObservationCDQualifier' constraints.validation.query='WoundObservationCDCRCDCode WoundObservationCDCRName WoundObservationCDCRNameP WoundObservationCDCRValue WoundObservationCDQualifier'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolWoundObservationCD constraints.validation.info='WoundObservationCDQualifier' constraints.validation.error='WoundObservationCDCRCDCode WoundObservationCDCRName WoundObservationCDCRNameP WoundObservationCDCRValue' constraints.validation.query='WoundObservationCDCRCDCode WoundObservationCDCRName WoundObservationCDCRNameP WoundObservationCDCRValue'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolWoundObservationCDCR name.code='272741003' name.codeSystem='2.16.840.1.113883.6.96' name.codeSystemName='SNOMEDCT' name.displayName='laterality' constraints.validation.error='WoundObservationCDCRName WoundObservationCDCRNameP WoundObservationCDCRValue WoundObservationCDCRCDCode' constraints.validation.query='WoundObservationCDCRCDCode'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolWoundObservationCDCRCD constraints.validation.error='WoundObservationCDCRCDCode'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vjrVYIokEeSkH97cUQxLGA" base_Class="_YPOXoJ14EeORR8_YW0n_jQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='GoalsSectionTemplateId GoalsSectionCode GoalsSectionCodeP GoalsSectionTitle GoalsSectionText GoalsSectionGoalObservation' templateId.root='2.16.840.1.113883.10.20.22.2.60' code.code='61146-7' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Goals'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vj1GYIokEeSkH97cUQxLGA" base_Class="_2umuYJ18EeORR8_YW0n_jQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='HealthConcernsSectionTemplateId HealthConcernsSectionCode HealthConcernsSectionCodeP HealthConcernsSectionTitle HealthConcernsSectionText HealthConcernsSectionHealthConcernAct' templateId.root='2.16.840.1.113883.10.20.22.2.58' code.code='46030-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Health Conditions Section' constraints.validation.warning='HealthConcernsSectionHealthStatusObservation2'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vj-3YIokEeSkH97cUQxLGA" base_Class="_EHgh0J2AEeORR8_YW0n_jQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='HealthStatusEvaluationsOutcomesSectionTemplateId HealthStatusEvaluationsOutcomesSectionCode HealthStatusEvaluationsOutcomesSectionCodeP HealthStatusEvaluationsOutcomesSectionTitle HealthStatusEvaluationsOutcomesSectionText HealthStatusEvaluationsOutcomesSectionOutcomeObservation' templateId.root='2.16.840.1.113883.10.20.22.2.61' code.code='11383-7' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Patient Problem Outcome'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vkIoYYokEeSkH97cUQxLGA" base_Class="_4tfOMJ2CEeORR8_YW0n_jQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='MentalStatusSectionTemplateId MentalStatusSectionCode MentalStatusSectionCodeP MentalStatusSectionTitle MentalStatusSectionText' templateId.root='2.16.840.1.113883.10.20.22.2.56' code.code='10190-7' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Mental Status' constraints.validation.info='MentalStatusSectionCaregiverCharacteristics MentalStatusSectionAssessmentScaleObservation MentalStatusSectionCognitiveAbilitiesObservation MentalStatusSectionMentalStatusObservation MentalStatusSectionCognitiveStatusOrganizer2 MentalStatusSectionCognitiveStatusObservation2 MentalStatusSectionNonMedicinalSupplyActivity2'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vkWDwIokEeSkH97cUQxLGA" base_Class="_MlM4IJ2GEeORR8_YW0n_jQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='NutritionSectionTemplateId NutritionSectionCode NutritionSectionCodeP NutritionSectionTitle NutritionSectionText' templateId.root='2.16.840.1.113883.10.20.22.2.57' code.code='61144-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Diet and nutrition' constraints.validation.warning='NutritionSectionNutritionalStatusObservation'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vkfNsYokEeSkH97cUQxLGA" base_Class="_CDn9gJ2LEeORR8_YW0n_jQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PhysicalFindingsOfSkinSectionTemplateId PhysicalFindingsOfSkinSectionCode PhysicalFindingsOfSkinSectionCodeP PhysicalFindingsOfSkinSectionTitle PhysicalFindingsOfSkinSectionText' templateId.root='2.16.840.1.113883.10.20.22.2.62' code.code='10206-1' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Physical findings of Skin Narrative' constraints.validation.info='PhysicalFindingsOfSkinSectionWoundObservation'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vko-sYokEeSkH97cUQxLGA" base_Class="_dduXkJ5OEeOr4eM3k36wAg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='GeneralHeaderConstraintsTemplateId GeneralHeaderConstraintsTitle GeneralHeaderConstraintsRealmCode GeneralHeaderConstraintsRecordTarget GeneralHeaderConstraintsAuthor GeneralHeaderConstraintsCustodian USRealmHeader2RecordTargetPatientRolePatientGuardianCodeFromPersonalRelationshipOrResponsibleParty USRealmHeader2RecordTargetPatientRolePatientGeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianCode USRealmHeader2RecordTargetPatientRolePatientGeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationLanguageCode USRealmHeader2RecordTargetPatientRoleGeneralHeaderConstraintsRecordTargetPatientRolePatientRaceCode USRealmHeader2RecordTargetPatientRoleGeneralHeaderConstraintsRecordTargetPatientRolePatientEthnicGroupCode USRealmHeader2RecordTargetGeneralHeaderConstraintsRecordTargetPatientRolePatient USRealmHeader2GeneralHeaderConstraintsRecordTargetPatientRole USRealmHeader2InformantHasAssignedEntityOrRelatedEntity USRealmHeader2GeneralHeaderConstraintsComponentOfEncompassingEncounter USRealmHeader2ParticipantSupportAssociatedEntityHasAssociatedPersonOrScopingOrganization USRealmHeader2GeneralHeaderConstraintsDocumentationOfServiceEvent' templateId.root='2.16.840.1.113883.10.20.22.1.1' templateId.extension='2014-06-09' realmCode.code='US' constraints.validation.info='GeneralHeaderConstraintsDataEnterer GeneralHeaderConstraintsInformationRecipient GeneralHeaderConstraintsAuthenticator GeneralHeaderConstraintsInformant GeneralHeaderConstraintsInFulfillmentOf GeneralHeaderConstraintsComponentOf GeneralHeaderConstraintsSupportParticipant GeneralHeaderConstraintsDocumentationOf GeneralHeaderConstraintsAuthorization USRealmHeader2RecordTargetPatientRoleGeneralHeaderConstraintsRecordTargetPatientRolePatientGuardian USRealmHeader2LegalAuthenticatorSDTCSignatureText USRealmHeader2AuthenticatorSDTCSignatureText' constraints.validation.warning='GeneralHeaderConstraintsLegalAuthenticator USRealmHeader2RecordTargetPatientRolePatientGeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianCodeP USRealmHeader2RecordTargetPatientRolePatientGeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationPreferenceInd USRealmHeader2RecordTargetPatientRoleGeneralHeaderConstraintsRecordTargetPatientRolePatientRaceCodeP USRealmHeader2RecordTargetPatientRoleGeneralHeaderConstraintsRecordTargetPatientRolePatientEthnicGroupCodeP USRealmHeader2RecordTargetPatientRoleGeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunication USRealmHeader2DocumentationOfGeneralHeaderConstraintsDocumentationOfServiceEventPerformer' constraints.validation.query='USRealmHeader2RecordTargetPatientRolePatientGuardianCodeFromPersonalRelationshipOrResponsibleParty USRealmHeader2RecordTargetPatientRolePatientGeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianCodeP USRealmHeader2RecordTargetPatientRolePatientGeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianCode USRealmHeader2RecordTargetPatientRolePatientGeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationLanguageCode USRealmHeader2RecordTargetPatientRolePatientGeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationPreferenceInd USRealmHeader2RecordTargetPatientRoleGeneralHeaderConstraintsRecordTargetPatientRolePatientRaceCodeP USRealmHeader2RecordTargetPatientRoleGeneralHeaderConstraintsRecordTargetPatientRolePatientRaceCode USRealmHeader2RecordTargetPatientRoleGeneralHeaderConstraintsRecordTargetPatientRolePatientEthnicGroupCodeP USRealmHeader2RecordTargetPatientRoleGeneralHeaderConstraintsRecordTargetPatientRolePatientEthnicGroupCode USRealmHeader2RecordTargetPatientRoleGeneralHeaderConstraintsRecordTargetPatientRolePatientGuardian USRealmHeader2RecordTargetPatientRoleGeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunication USRealmHeader2RecordTargetGeneralHeaderConstraintsRecordTargetPatientRolePatient USRealmHeader2GeneralHeaderConstraintsRecordTargetPatientRole USRealmHeader2LegalAuthenticatorSDTCSignatureText USRealmHeader2AuthenticatorSDTCSignatureText USRealmHeader2InformantHasAssignedEntityOrRelatedEntity USRealmHeader2GeneralHeaderConstraintsComponentOfEncompassingEncounter USRealmHeader2ParticipantSupportAssociatedEntityHasAssociatedPersonOrScopingOrganization USRealmHeader2DocumentationOfGeneralHeaderConstraintsDocumentationOfServiceEventPerformer USRealmHeader2GeneralHeaderConstraintsDocumentationOfServiceEvent' constraints.validation.dependOn.USRealmHeader2RecordTargetPatientRolePatientGeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianCode='GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianCodeP' constraints.validation.dependOn.USRealmHeader2RecordTargetPatientRoleGeneralHeaderConstraintsRecordTargetPatientRolePatientRaceCode='GeneralHeaderConstraintsRecordTargetPatientRolePatientRaceCodeP' constraints.validation.dependOn.USRealmHeader2RecordTargetPatientRoleGeneralHeaderConstraintsRecordTargetPatientRolePatientEthnicGroupCode='GeneralHeaderConstraintsRecordTargetPatientRolePatientEthnicGroupCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolUSRealmHeader2RecordTarget constraints.validation.error='GeneralHeaderConstraintsRecordTargetPatientRole'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolUSRealmHeader2RecordTargetPatientRole constraints.validation.error='GeneralHeaderConstraintsRecordTargetPatientRolePatient'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolUSRealmHeader2RecordTargetPatientRolePatient raceCode.codeSystem='2.16.840.1.113883.6.238' raceCode.codeSystemName='Race and Ethnicity - CDC' constraints.validation.error='GeneralHeaderConstraintsRecordTargetPatientRolePatientRaceCode GeneralHeaderConstraintsRecordTargetPatientRolePatientEthnicGroupCode' constraints.validation.warning='GeneralHeaderConstraintsRecordTargetPatientRolePatientRaceCodeP GeneralHeaderConstraintsRecordTargetPatientRolePatientEthnicGroupCodeP GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunication' constraints.validation.dependOn.GeneralHeaderConstraintsRecordTargetPatientRolePatientRaceCode='GeneralHeaderConstraintsRecordTargetPatientRolePatientRaceCodeP' ethnicGroupCode.codeSystem='2.16.840.1.113883.6.238' ethnicGroupCode.codeSystemName='Race and Ethnicity - CDC' constraints.validation.dependOn.GeneralHeaderConstraintsRecordTargetPatientRolePatientEthnicGroupCode='GeneralHeaderConstraintsRecordTargetPatientRolePatientEthnicGroupCodeP' constraints.validation.info='GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardian'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolUSRealmHeader2RecordTargetPatientRolePatientGuardian code.codeSystem='2.16.840.1.113883.5.111' code.codeSystemName='RoleCode' constraints.validation.error='GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianCode' constraints.validation.warning='GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianCodeP' constraints.validation.dependOn.GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianCode='GeneralHeaderConstraintsRecordTargetPatientRolePatientGuardianCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolUSRealmHeader2RecordTargetPatientRolePatientLanguageCommunication constraints.validation.error='GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationLanguageCode' constraints.validation.warning='GeneralHeaderConstraintsRecordTargetPatientRolePatientLanguageCommunicationPreferenceInd'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolUSRealmHeader2LegalAuthenticator constraints.validation.info='USRealmHeader2LegalAuthenticatorSDTCSignatureText'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolUSRealmHeader2Authenticator constraints.validation.info='USRealmHeader2AuthenticatorSDTCSignatureText'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolUSRealmHeader2Informant constraints.validation.error='USRealmHeader2InformantHasAssignedEntityOrRelatedEntity'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolUSRealmHeader2ComponentOf constraints.validation.error='GeneralHeaderConstraintsComponentOfEncompassingEncounter'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolUSRealmHeader2ParticipantSupport constraints.validation.error='USRealmHeader2ParticipantSupportAssociatedEntityHasAssociatedPersonOrScopingOrganization'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolUSRealmHeader2DocumentationOf constraints.validation.error='GeneralHeaderConstraintsDocumentationOfServiceEvent'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolUSRealmHeader2DocumentationOfServiceEvent constraints.validation.warning='GeneralHeaderConstraintsDocumentationOfServiceEventPerformer'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vmTyoIokEeSkH97cUQxLGA" base_Class="_2jWfwJ5wEeOr4eM3k36wAg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='GeneralHeaderConstraintsTemplateId CarePlanDoesNotHavePlanOfTreatmentSectionV2 CarePlanId CarePlanCode CarePlanCodeP CarePlanTitle CarePlanDocumentationOf CarePlanHealthConcernsSection CarePlanGoalsSection CarePlanIIRoot CarePlanInformationRecipientIntendedRecipientInformationRecipientName CarePlanInformationRecipientIntendedRecipientReceivedOrganizationName CarePlanInformationRecipientIntendedRecipientReceivedOrganizationStandardIndustryClassCode CarePlanInformationRecipientIntendedRecipientId CarePlanInformationRecipientIntendedRecipient CarePlanAuthenticatorAssignedEntityId CarePlanAuthenticatorAssignedEntityCode CarePlanAuthenticatorAssignedEntityCodeP CarePlanAuthenticatorTime CarePlanAuthenticatorSignatureCode CarePlanAuthenticatorAssignedEntity CarePlanParticipantCarePlanReviewAssociatedEntityClassCode CarePlanParticipantCarePlanReviewAssociatedEntityId CarePlanParticipantCarePlanReviewTypeCode CarePlanParticipantCarePlanReviewFunctionCode CarePlanParticipantCarePlanReviewFunctionCodeP CarePlanParticipantCarePlanReviewTime CarePlanParticipantCarePlanReviewAssociatedEntity CarePlanParticipantCaregiverAssociatedEntityAssociatedPersonName CarePlanParticipantCaregiverAssociatedEntityClassCodeP CarePlanParticipantCaregiverAssociatedEntityClassCode CarePlanParticipantCaregiverAssociatedEntityAssociatedPerson CarePlanParticipantCaregiverTypeCode CarePlanParticipantCaregiverAssociatedEntity CarePlanDocumentationOfServiceEventPerformerAssignedEntityId CarePlanDocumentationOfServiceEventPerformerTypeCode CarePlanDocumentationOfServiceEventClassCode CarePlanDocumentationOfServiceEventEffectiveTime CarePlanDocumentationOfServiceEventPerformer1 CarePlanDocumentationOfServiceEvent CarePlanRelatedDocumentParentDocumentSetId CarePlanRelatedDocumentParentDocumentVersionNumber CarePlanRelatedDocumentTypeCodeP CarePlanRelatedDocumentTypeCode CarePlanRelatedDocumentParentDocument CarePlanComponentOfEncompassingEncounterEffectiveTime CarePlanComponentOfEncompassingEncounter' templateId.root='2.16.840.1.113883.10.20.22.1.15' code.code='CarePlan-X' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Care Plan' constraints.validation.dependOn.CarePlanCode='CarePlanCodeP' constraints.validation.warning='CarePlanInformationRecipient CarePlanAuthenticator CarePlanParticipantCarePlanReview CarePlanParticipantCaregiver CarePlanComponentOf CarePlanHealthStatusEvaluationsOutcomesSection CarePlanInterventionsSection2 CarePlanInformationRecipientIntendedRecipientReceivedOrganizationId CarePlanInformationRecipientIntendedRecipientReceivedOrganizationStandardIndustryClassCodeP CarePlanInformationRecipientIntendedRecipientAddr CarePlanInformationRecipientIntendedRecipientTelecom CarePlanInformationRecipientIntendedRecipientInformationRecipient CarePlanInformationRecipientIntendedRecipientReceivedOrganization CarePlanParticipantCarePlanReviewAssociatedEntityCodeP CarePlanParticipantCarePlanReviewAssociatedEntityCode CarePlanDocumentationOfServiceEventPerformerAssignedEntity CarePlanComponentOfEncompassingEncounterCode' constraints.validation.info='CarePlanRelatedDocument CarePlanAuthenticatorSDTCSignatureText CarePlanDocumentationOfServiceEventPerformerAssignedEntityCode' constraints.validation.query='CarePlanIIRoot CarePlanInformationRecipientIntendedRecipientInformationRecipientName CarePlanInformationRecipientIntendedRecipientReceivedOrganizationId CarePlanInformationRecipientIntendedRecipientReceivedOrganizationName CarePlanInformationRecipientIntendedRecipientReceivedOrganizationStandardIndustryClassCodeP CarePlanInformationRecipientIntendedRecipientReceivedOrganizationStandardIndustryClassCode CarePlanInformationRecipientIntendedRecipientId CarePlanInformationRecipientIntendedRecipientAddr CarePlanInformationRecipientIntendedRecipientTelecom CarePlanInformationRecipientIntendedRecipientInformationRecipient CarePlanInformationRecipientIntendedRecipientReceivedOrganization CarePlanInformationRecipientIntendedRecipient CarePlanAuthenticatorAssignedEntityId CarePlanAuthenticatorAssignedEntityCode CarePlanAuthenticatorAssignedEntityCodeP CarePlanAuthenticatorTime CarePlanAuthenticatorSignatureCode CarePlanAuthenticatorSDTCSignatureText CarePlanAuthenticatorAssignedEntity CarePlanParticipantCarePlanReviewAssociatedEntityClassCode CarePlanParticipantCarePlanReviewAssociatedEntityId CarePlanParticipantCarePlanReviewAssociatedEntityCodeP CarePlanParticipantCarePlanReviewAssociatedEntityCode CarePlanParticipantCarePlanReviewTypeCode CarePlanParticipantCarePlanReviewFunctionCode CarePlanParticipantCarePlanReviewFunctionCodeP CarePlanParticipantCarePlanReviewTime CarePlanParticipantCarePlanReviewAssociatedEntity CarePlanParticipantCaregiverAssociatedEntityAssociatedPersonName CarePlanParticipantCaregiverAssociatedEntityClassCodeP CarePlanParticipantCaregiverAssociatedEntityClassCode CarePlanParticipantCaregiverAssociatedEntityAssociatedPerson CarePlanParticipantCaregiverTypeCode CarePlanParticipantCaregiverAssociatedEntity CarePlanDocumentationOfServiceEventPerformerAssignedEntityId CarePlanDocumentationOfServiceEventPerformerAssignedEntityCode CarePlanDocumentationOfServiceEventPerformerTypeCode CarePlanDocumentationOfServiceEventPerformerAssignedEntity CarePlanDocumentationOfServiceEventClassCode CarePlanDocumentationOfServiceEventEffectiveTime CarePlanDocumentationOfServiceEventPerformer1 CarePlanDocumentationOfServiceEvent CarePlanRelatedDocumentParentDocumentSetId CarePlanRelatedDocumentParentDocumentVersionNumber CarePlanRelatedDocumentTypeCodeP CarePlanRelatedDocumentTypeCode CarePlanRelatedDocumentParentDocument CarePlanComponentOfEncompassingEncounterCode CarePlanComponentOfEncompassingEncounterEffectiveTime CarePlanComponentOfEncompassingEncounter' constraints.validation.dependOn.CarePlanInformationRecipientIntendedRecipientReceivedOrganizationStandardIndustryClassCode='CarePlanInformationRecipientIntendedRecipientReceivedOrganizationStandardIndustryClassCodeP' constraints.validation.dependOn.CarePlanParticipantCarePlanReviewAssociatedEntityCode='CarePlanParticipantCarePlanReviewAssociatedEntityCodeP' constraints.validation.dependOn.CarePlanParticipantCaregiverAssociatedEntityClassCode='CarePlanParticipantCaregiverAssociatedEntityClassCodeP' constraints.validation.dependOn.CarePlanRelatedDocumentTypeCode='CarePlanRelatedDocumentTypeCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolCarePlanII constraints.validation.error='CarePlanIIRoot'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolCarePlanInformationRecipient constraints.validation.error='CarePlanInformationRecipientIntendedRecipient'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolCarePlanInformationRecipientIntendedRecipient constraints.validation.error='CarePlanInformationRecipientIntendedRecipientId' constraints.validation.warning='CarePlanInformationRecipientIntendedRecipientAddr CarePlanInformationRecipientIntendedRecipientTelecom CarePlanInformationRecipientIntendedRecipientInformationRecipient CarePlanInformationRecipientIntendedRecipientReceivedOrganization'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolCarePlanInformationRecipientIntendedRecipientInformationRecipient constraints.validation.error='CarePlanInformationRecipientIntendedRecipientInformationRecipientName'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolCarePlanInformationRecipientIntendedRecipientReceivedOrganization constraints.validation.warning='CarePlanInformationRecipientIntendedRecipientReceivedOrganizationId CarePlanInformationRecipientIntendedRecipientReceivedOrganizationStandardIndustryClassCodeP' constraints.validation.error='CarePlanInformationRecipientIntendedRecipientReceivedOrganizationName CarePlanInformationRecipientIntendedRecipientReceivedOrganizationStandardIndustryClassCode' standardIndustryClassCode.codeSystem='2.16.840.1.113883.6.101' standardIndustryClassCode.codeSystemName='NUCC Health Care Provider Taxonomy' constraints.validation.dependOn.CarePlanInformationRecipientIntendedRecipientReceivedOrganizationStandardIndustryClassCode='CarePlanInformationRecipientIntendedRecipientReceivedOrganizationStandardIndustryClassCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolCarePlanAuthenticator constraints.validation.error='CarePlanAuthenticatorTime CarePlanAuthenticatorSignatureCode CarePlanAuthenticatorAssignedEntity' constraints.validation.info='CarePlanAuthenticatorSDTCSignatureText'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolCarePlanAuthenticatorAssignedEntity constraints.validation.error='CarePlanAuthenticatorAssignedEntityId CarePlanAuthenticatorAssignedEntityCode CarePlanAuthenticatorAssignedEntityCodeP' code.code='SELF' code.codeSystem='2.16.840.1.113883.5.111' code.codeSystemName='RoleCode' code.displayName='self'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolCarePlanParticipantCarePlanReview typeCode='IND' constraints.validation.error='CarePlanParticipantCarePlanReviewTypeCode CarePlanParticipantCarePlanReviewFunctionCode CarePlanParticipantCarePlanReviewFunctionCodeP CarePlanParticipantCarePlanReviewTime CarePlanParticipantCarePlanReviewAssociatedEntity' functionCode.code='425268008' functionCode.codeSystem='2.16.840.1.113883.6.96' functionCode.codeSystemName='SNOMEDCT' functionCode.displayName='Review of Care Plan'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolCarePlanParticipantCarePlanReviewAssociatedEntity classCode='ASSIGNED' constraints.validation.error='CarePlanParticipantCarePlanReviewAssociatedEntityClassCode CarePlanParticipantCarePlanReviewAssociatedEntityId' code.codeSystem='2.16.840.1.113883.5.111' code.codeSystemName='RoleCode' constraints.validation.warning='CarePlanParticipantCarePlanReviewAssociatedEntityCode CarePlanParticipantCarePlanReviewAssociatedEntityCodeP' constraints.validation.dependOn.CarePlanParticipantCarePlanReviewAssociatedEntityCode='CarePlanParticipantCarePlanReviewAssociatedEntityCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolCarePlanParticipantCaregiver typeCode='IND' constraints.validation.error='CarePlanParticipantCaregiverTypeCode CarePlanParticipantCaregiverAssociatedEntity'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolCarePlanParticipantCaregiverAssociatedEntity constraints.validation.error='CarePlanParticipantCaregiverAssociatedEntityClassCode CarePlanParticipantCaregiverAssociatedEntityClassCodeP CarePlanParticipantCaregiverAssociatedEntityAssociatedPerson' constraints.validation.dependOn.CarePlanParticipantCaregiverAssociatedEntityClassCode='CarePlanParticipantCaregiverAssociatedEntityClassCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolCarePlanParticipantCaregiverAssociatedEntityAssociatedPerson constraints.validation.error='CarePlanParticipantCaregiverAssociatedEntityAssociatedPersonName'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolCarePlanDocumentationOf constraints.validation.error='CarePlanDocumentationOfServiceEvent'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolCarePlanDocumentationOfServiceEvent classCode='PCPR' constraints.validation.error='CarePlanDocumentationOfServiceEventClassCode CarePlanDocumentationOfServiceEventEffectiveTime CarePlanDocumentationOfServiceEventPerformer1'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolCarePlanDocumentationOfServiceEventPerformer typeCode='PRF' constraints.validation.error='CarePlanDocumentationOfServiceEventPerformerTypeCode' constraints.validation.warning='CarePlanDocumentationOfServiceEventPerformerAssignedEntity'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolCarePlanDocumentationOfServiceEventPerformerAssignedEntity constraints.validation.error='CarePlanDocumentationOfServiceEventPerformerAssignedEntityId' constraints.validation.info='CarePlanDocumentationOfServiceEventPerformerAssignedEntityCode'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolCarePlanRelatedDocument constraints.validation.error='CarePlanRelatedDocumentTypeCode CarePlanRelatedDocumentTypeCodeP CarePlanRelatedDocumentParentDocument' constraints.validation.dependOn.CarePlanRelatedDocumentTypeCode='CarePlanRelatedDocumentTypeCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolCarePlanRelatedDocumentParentDocument constraints.validation.error='CarePlanRelatedDocumentParentDocumentSetId CarePlanRelatedDocumentParentDocumentVersionNumber'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolCarePlanComponentOf constraints.validation.error='CarePlanComponentOfEncompassingEncounter'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolCarePlanComponentOfEncompassingEncounter constraints.validation.warning='CarePlanComponentOfEncompassingEncounterCode' constraints.validation.error='CarePlanComponentOfEncompassingEncounterEffectiveTime'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vn01kIokEeSkH97cUQxLGA" base_Class="_itRPkKAEEeOQs7VC4HptuQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='GeneralHeaderConstraintsTemplateId ReferralNoteHasAnAssementAndPlanSection2OrBothAssementSectionAndPlanOfTreatmentSection2 ReferralNoteDoesNotHaveAssementAndPlanSection2WhenAssementAndPlanOfTreatment2ArePresent ReferralNoteCode ReferralNoteCodeP ReferralNoteTitle ReferralNoteInformationRecipient ReferralNoteChiefComplaintAndReasonForVisitSection ReferralNoteProblemSection2 ReferralNoteAllergiesSection2 ReferralNoteMedicationsSection2 ReferralNoteReasonForReferralSection2 ReferralNoteInformationRecipientIntendedRecipientPersonPNFamily ReferralNoteInformationRecipientIntendedRecipientPersonPNGiven ReferralNoteInformationRecipientIntendedRecipientPersonName ReferralNoteInformationRecipientIntendedRecipientInformationRecipient ReferralNoteInformationRecipientIntendedRecipient ReferralNoteParticipantCaregiverAssociatedEntityAssociatedPersonName ReferralNoteParticipantCaregiverAssociatedEntityClassCodeP ReferralNoteParticipantCaregiverAssociatedEntityClassCode ReferralNoteParticipantCaregiverAssociatedEntityAssociatedPerson ReferralNoteParticipantCaregiverNullFlavor ReferralNoteParticipantCaregiverAssociatedEntity ReferralNoteParticipantCallbackContactAssociatedEntityId ReferralNoteParticipantCallbackContactAssociatedEntityTelecom ReferralNoteParticipantCallbackContactAssociatedEntityAssociatedPerson ReferralNoteParticipantCallbackContactTypeCode ReferralNoteParticipantCallbackContactAssociatedEntity' templateId.root='2.16.840.1.113883.10.20.22.1.14' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' constraints.validation.dependOn.ReferralNoteCode='ReferralNoteCodeP' constraints.validation.warning='ReferralNoteParticipantCaregiver ReferralNoteParticipantCallbackContact ReferralNotePlanOfTreatmentSection2 ReferralNoteResultsSection2 ReferralNoteFunctionalStatusSection2 ReferralNoteNutritionSection ReferralNoteMentalStatusSection ReferralNoteInformationRecipientIntendedRecipientAddr ReferralNoteParticipantCallbackContactAssociatedEntityAddr' constraints.validation.info='ReferralNoteChiefComplaintSection ReferralNoteAdvanceDirectivesSectionEntriesOptional2 ReferralNoteHistoryOfPresentIllnessSection ReferralNoteFamilyHistorySection ReferralNoteImmunizationsSection2 ReferralNoteProceduresSectionEntriesOptional2 ReferralNoteReviewOfSystemsSection ReferralNoteSocialHistorySection2 ReferralNoteVitalSignsSection2 ReferralNotePhysicalExamSection2 ReferralNoteAdvanceDirectivesSectionEntriesOptional22 ReferralNoteMedicalEquipmentSection2 ReferralNoteAssessmentSection ReferralNoteAssessmentAndPlanSection2 ReferralNoteHistoryOfPastIllnessSection2 ReferralNoteGeneralStatusSection ReferralNoteInformationRecipientIntendedRecipientTelecom ReferralNoteInformationRecipientIntendedRecipientReceivedOrganization ReferralNoteParticipantCallbackContactAssociatedEntityAssociatedPersonName ReferralNoteParticipantCallbackContactAssociatedEntityScopingOrganization' constraints.validation.query='ReferralNoteInformationRecipientIntendedRecipientPersonPNFamily ReferralNoteInformationRecipientIntendedRecipientPersonPNGiven ReferralNoteInformationRecipientIntendedRecipientPersonName ReferralNoteInformationRecipientIntendedRecipientAddr ReferralNoteInformationRecipientIntendedRecipientTelecom ReferralNoteInformationRecipientIntendedRecipientReceivedOrganization ReferralNoteInformationRecipientIntendedRecipientInformationRecipient ReferralNoteInformationRecipientIntendedRecipient ReferralNoteParticipantCaregiverAssociatedEntityAssociatedPersonName ReferralNoteParticipantCaregiverAssociatedEntityClassCodeP ReferralNoteParticipantCaregiverAssociatedEntityClassCode ReferralNoteParticipantCaregiverAssociatedEntityAssociatedPerson ReferralNoteParticipantCaregiverNullFlavor ReferralNoteParticipantCaregiverAssociatedEntity ReferralNoteParticipantCallbackContactAssociatedEntityAssociatedPersonName ReferralNoteParticipantCallbackContactAssociatedEntityId ReferralNoteParticipantCallbackContactAssociatedEntityAddr ReferralNoteParticipantCallbackContactAssociatedEntityTelecom ReferralNoteParticipantCallbackContactAssociatedEntityAssociatedPerson ReferralNoteParticipantCallbackContactAssociatedEntityScopingOrganization ReferralNoteParticipantCallbackContactTypeCode ReferralNoteParticipantCallbackContactAssociatedEntity' constraints.validation.dependOn.ReferralNoteParticipantCaregiverAssociatedEntityClassCode='ReferralNoteParticipantCaregiverAssociatedEntityClassCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolReferralNoteInformationRecipient constraints.validation.error='ReferralNoteInformationRecipientIntendedRecipient'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolReferralNoteInformationRecipientIntendedRecipient constraints.validation.warning='ReferralNoteInformationRecipientIntendedRecipientAddr' constraints.validation.info='ReferralNoteInformationRecipientIntendedRecipientTelecom ReferralNoteInformationRecipientIntendedRecipientReceivedOrganization' constraints.validation.error='ReferralNoteInformationRecipientIntendedRecipientInformationRecipient'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolReferralNoteInformationRecipientIntendedRecipientPerson constraints.validation.error='ReferralNoteInformationRecipientIntendedRecipientPersonName ReferralNoteInformationRecipientIntendedRecipientPersonPNFamily ReferralNoteInformationRecipientIntendedRecipientPersonPNGiven' constraints.validation.query='ReferralNoteInformationRecipientIntendedRecipientPersonPNFamily ReferralNoteInformationRecipientIntendedRecipientPersonPNGiven'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolReferralNoteInformationRecipientIntendedRecipientPersonPN constraints.validation.error='ReferralNoteInformationRecipientIntendedRecipientPersonPNFamily ReferralNoteInformationRecipientIntendedRecipientPersonPNGiven'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolReferralNoteParticipantCaregiver constraints.validation.error='ReferralNoteParticipantCaregiverNullFlavor ReferralNoteParticipantCaregiverAssociatedEntity'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolReferralNoteParticipantCaregiverAssociatedEntity constraints.validation.error='ReferralNoteParticipantCaregiverAssociatedEntityClassCode ReferralNoteParticipantCaregiverAssociatedEntityClassCodeP ReferralNoteParticipantCaregiverAssociatedEntityAssociatedPerson' constraints.validation.dependOn.ReferralNoteParticipantCaregiverAssociatedEntityClassCode='ReferralNoteParticipantCaregiverAssociatedEntityClassCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolReferralNoteParticipantCaregiverAssociatedEntityAssociatedPerson constraints.validation.error='ReferralNoteParticipantCaregiverAssociatedEntityAssociatedPersonName'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolReferralNoteParticipantCallbackContact typeCode='CALLBCK' constraints.validation.error='ReferralNoteParticipantCallbackContactTypeCode ReferralNoteParticipantCallbackContactAssociatedEntity'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolReferralNoteParticipantCallbackContactAssociatedEntity constraints.validation.error='ReferralNoteParticipantCallbackContactAssociatedEntityId ReferralNoteParticipantCallbackContactAssociatedEntityTelecom ReferralNoteParticipantCallbackContactAssociatedEntityAssociatedPerson' constraints.validation.warning='ReferralNoteParticipantCallbackContactAssociatedEntityAddr' constraints.validation.info='ReferralNoteParticipantCallbackContactAssociatedEntityScopingOrganization'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolReferralNoteParticipantCallbackContactAssociatedEntityAssociatedPerson constraints.validation.info='ReferralNoteParticipantCallbackContactAssociatedEntityAssociatedPersonName'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_voduwIokEeSkH97cUQxLGA" base_Class="_mgnrsKDQEeOPqKnBFQcY_A">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='GeneralHeaderConstraintsTemplateId TransferSummaryHasAnAssementAndPlanSection2OrBothAssementSectionAndPlanOfTreatmentSection2 TransferSummaryDoesNotHaveAssementAndPlanSection2WhenAssementAndPlanOfTreatment2ArePresent TransferSummaryId TransferSummaryCode TransferSummaryCodeP TransferSummaryTitle TransferSummaryDocumentationOf TransferSummaryAllergiesSection2 TransferSummaryMedicationsSection2 TransferSummaryProblemSection2 TransferSummaryResultsSection2 TransferSummaryVitalSignsSection2 TransferSummaryReasonForReferralSection2 TransferSummaryIIRoot TransferSummaryParticipantSupportAssociatedEntityAssociatedPersonName TransferSummaryParticipantSupportAssociatedEntityClassCodeP TransferSummaryParticipantSupportAssociatedEntityClassCode TransferSummaryParticipantSupportAssociatedEntityAssociatedPerson TransferSummaryParticipantSupportTypeCode TransferSummaryParticipantSupportAssociatedEntity TransferSummaryParticipantCallbackContactAssociatedEntityAssociatedPersonName TransferSummaryParticipantCallbackContactAssociatedEntityClassCode TransferSummaryParticipantCallbackContactAssociatedEntityId TransferSummaryParticipantCallbackContactAssociatedEntityTelecom TransferSummaryParticipantCallbackContactAssociatedEntityAssociatedPerson TransferSummaryParticipantCallbackContactTypeCode TransferSummaryParticipantCallbackContactAssociatedEntity TransferSummaryDocumentationOfServiceEventPerformerTypeCode TransferSummaryDocumentationOfServiceEventClassCode TransferSummaryDocumentationOfServiceEventEffectiveTime TransferSummaryDocumentationOfServiceEventPerformer1 TransferSummaryDocumentationOfServiceEvent' templateId.root='2.16.840.1.113883.10.20.22.1.13' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' constraints.validation.dependOn.TransferSummaryCode='TransferSummaryCodeP' constraints.validation.warning='TransferSummaryParticipantSupport TransferSummaryParticipantCallbackContact TransferSummaryAdvanceDirectivesSection2 TransferSummaryFunctionalStatusSection2 TransferSummaryHospitalDischargeDiagnosis2 TransferSummaryProceduresSection2 TransferSummarySocialHistorySection2 TransferSummaryMentalStatusSection TransferSummaryNutritionSection TransferSummaryHistoryOfPresentIllnessSection TransferSummaryParticipantCallbackContactAssociatedEntityAddr TransferSummaryDocumentationOfServiceEventPerformerAssignedEntityId TransferSummaryDocumentationOfServiceEventPerformerAssignedEntity' constraints.validation.info='TransferSummaryPhysicalExamSection2 TransferSummaryEncountersSection2 TransferSummaryFamilyHistorySection TransferSummaryImmunizationsSectionEntriesOptional2 TransferSummaryMedicalEquipmentSection2 TransferSummaryPayersSection2 TransferSummaryPlanOfTreatmentSection2 TransferSummaryGeneralStatusSection TransferSummaryReviewOfSystemsSection TransferSummaryHistoryOfPastIllnessSection2 TransferSummaryAssessmentAndPlanSection2 TransferSummaryAssessmentSection TransferSummaryParticipantCallbackContactAssociatedEntityScopingOrganization TransferSummaryDocumentationOfServiceEventPerformerAssignedEntityCode' constraints.validation.query='TransferSummaryIIRoot TransferSummaryParticipantSupportAssociatedEntityAssociatedPersonName TransferSummaryParticipantSupportAssociatedEntityClassCodeP TransferSummaryParticipantSupportAssociatedEntityClassCode TransferSummaryParticipantSupportAssociatedEntityAssociatedPerson TransferSummaryParticipantSupportTypeCode TransferSummaryParticipantSupportAssociatedEntity TransferSummaryParticipantCallbackContactAssociatedEntityAssociatedPersonName TransferSummaryParticipantCallbackContactAssociatedEntityClassCode TransferSummaryParticipantCallbackContactAssociatedEntityId TransferSummaryParticipantCallbackContactAssociatedEntityAddr TransferSummaryParticipantCallbackContactAssociatedEntityTelecom TransferSummaryParticipantCallbackContactAssociatedEntityAssociatedPerson TransferSummaryParticipantCallbackContactAssociatedEntityScopingOrganization TransferSummaryParticipantCallbackContactTypeCode TransferSummaryParticipantCallbackContactAssociatedEntity TransferSummaryDocumentationOfServiceEventPerformerAssignedEntityId TransferSummaryDocumentationOfServiceEventPerformerAssignedEntityCode TransferSummaryDocumentationOfServiceEventPerformerTypeCode TransferSummaryDocumentationOfServiceEventPerformerAssignedEntity TransferSummaryDocumentationOfServiceEventClassCode TransferSummaryDocumentationOfServiceEventEffectiveTime TransferSummaryDocumentationOfServiceEventPerformer1 TransferSummaryDocumentationOfServiceEvent' constraints.validation.dependOn.TransferSummaryParticipantSupportAssociatedEntityClassCode='TransferSummaryParticipantSupportAssociatedEntityClassCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolTransferSummaryII constraints.validation.error='TransferSummaryIIRoot'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolTransferSummaryParticipantSupport typeCode='IND' constraints.validation.error='TransferSummaryParticipantSupportTypeCode TransferSummaryParticipantSupportAssociatedEntity'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolTransferSummaryParticipantSupportAssociatedEntity constraints.validation.error='TransferSummaryParticipantSupportAssociatedEntityClassCode TransferSummaryParticipantSupportAssociatedEntityClassCodeP TransferSummaryParticipantSupportAssociatedEntityAssociatedPerson' constraints.validation.dependOn.TransferSummaryParticipantSupportAssociatedEntityClassCode='TransferSummaryParticipantSupportAssociatedEntityClassCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolTransferSummaryParticipantSupportAssociatedEntityAssociatedPerson constraints.validation.error='TransferSummaryParticipantSupportAssociatedEntityAssociatedPersonName'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolTransferSummaryParticipantCallbackContact typeCode='CALLBCK' constraints.validation.error='TransferSummaryParticipantCallbackContactTypeCode TransferSummaryParticipantCallbackContactAssociatedEntity'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolTransferSummaryParticipantCallbackContactAssociatedEntity classCode='ASSIGNED' constraints.validation.error='TransferSummaryParticipantCallbackContactAssociatedEntityClassCode TransferSummaryParticipantCallbackContactAssociatedEntityId TransferSummaryParticipantCallbackContactAssociatedEntityTelecom TransferSummaryParticipantCallbackContactAssociatedEntityAssociatedPerson' constraints.validation.warning='TransferSummaryParticipantCallbackContactAssociatedEntityAddr' constraints.validation.info='TransferSummaryParticipantCallbackContactAssociatedEntityScopingOrganization'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolTransferSummaryParticipantCallbackContactAssociatedEntityAssociatedPerson constraints.validation.error='TransferSummaryParticipantCallbackContactAssociatedEntityAssociatedPersonName'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolTransferSummaryDocumentationOf constraints.validation.error='TransferSummaryDocumentationOfServiceEvent'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolTransferSummaryDocumentationOfServiceEvent classCode='PCPR' constraints.validation.error='TransferSummaryDocumentationOfServiceEventClassCode TransferSummaryDocumentationOfServiceEventEffectiveTime TransferSummaryDocumentationOfServiceEventPerformer1'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolTransferSummaryDocumentationOfServiceEventPerformer typeCode='PRF' constraints.validation.error='TransferSummaryDocumentationOfServiceEventPerformerTypeCode' constraints.validation.warning='TransferSummaryDocumentationOfServiceEventPerformerAssignedEntity'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolTransferSummaryDocumentationOfServiceEventPerformerAssignedEntity constraints.validation.warning='TransferSummaryDocumentationOfServiceEventPerformerAssignedEntityId' constraints.validation.info='TransferSummaryDocumentationOfServiceEventPerformerAssignedEntityCode'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vpH2EIokEeSkH97cUQxLGA" base_Class="_OA1xkKi8EeOTwZftO6CV5g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='GeneralHeaderConstraintsTemplateId USRealmHeaderPatientGeneratedDocumentRecordTarget USRealmHeaderPatientGeneratedDocumentAuthor USRealmHeaderPatientGeneratedDocumentCustodian USRealmHeaderPatientGeneratedDocumentRecordTargetPatientRoleIIRoot USRealmHeaderPatientGeneratedDocumentRecordTargetPatientRolePatientGuardianIIRoot USRealmHeaderPatientGeneratedDocumentRecordTargetPatientRolePatientGuardianCode USRealmHeaderPatientGeneratedDocumentRecordTargetPatientRoleId USRealmHeaderPatientGeneratedDocumentRecordTargetPatientRolePatient USRealmHeaderPatientGeneratedDocumentRecordTargetPatientRole USRealmHeaderPatientGeneratedDocumentAuthorAssignedAuthorCECode USRealmHeaderPatientGeneratedDocumentAuthorAssignedAuthorId USRealmHeaderPatientGeneratedDocumentAuthorAssignedAuthorCode USRealmHeaderPatientGeneratedDocumentAuthorAssignedAuthor USRealmHeaderPatientGeneratedDocumentDataEntererAssignedEntity USRealmHeaderPatientGeneratedDocumentInformantRelatedEntity USRealmHeaderPatientGeneratedDocumentCustodianAssignedCustodianRepresentedCustodianOrganizationIIRoot USRealmHeaderPatientGeneratedDocumentCustodianAssignedCustodianRepresentedCustodianOrganizationId USRealmHeaderPatientGeneratedDocumentCustodianAssignedCustodianRepresentedCustodianOrganization USRealmHeaderPatientGeneratedDocumentCustodianAssignedCustodian USRealmHeaderPatientGeneratedDocumentInformationRecipientIntendedRecipient USRealmHeaderPatientGeneratedDocumentLegalAuthenticatorAssignedEntityId USRealmHeaderPatientGeneratedDocumentLegalAuthenticatorAssignedEntity USRealmHeaderPatientGeneratedDocumentAuthenticatorAssignedEntityId USRealmHeaderPatientGeneratedDocumentAuthenticatorAssignedEntity USRealmHeaderPatientGeneratedDocumentParticipantTypeCode USRealmHeaderPatientGeneratedDocumentParticipantAssociatedEntity USRealmHeaderPatientGeneratedDocumentInFulfillmentOfOrderId USRealmHeaderPatientGeneratedDocumentInFulfillmentOfOrder USRealmHeaderPatientGeneratedDocumentDocumentationOfServiceEventPerformerAssignedEntityId USRealmHeaderPatientGeneratedDocumentDocumentationOfServiceEventPerformerFunctionCode USRealmHeaderPatientGeneratedDocumentDocumentationOfServiceEventPerformerAssignedEntity USRealmHeaderPatientGeneratedDocumentDocumentationOfServiceEvent' templateId.root='2.16.840.1.113883.10.20.29.1' constraints.validation.info='USRealmHeaderPatientGeneratedDocumentDataEnterer USRealmHeaderPatientGeneratedDocumentInformant USRealmHeaderPatientGeneratedDocumentInformationRecipient USRealmHeaderPatientGeneratedDocumentLegalAuthenticator USRealmHeaderPatientGeneratedDocumentAuthenticator USRealmHeaderPatientGeneratedDocumentParticipant USRealmHeaderPatientGeneratedDocumentInFulfillmentOf USRealmHeaderPatientGeneratedDocumentDocumentationOf USRealmHeaderPatientGeneratedDocumentRecordTargetPatientRolePatientLanguageCommunicationPreferenceInd USRealmHeaderPatientGeneratedDocumentRecordTargetPatientRolePatientGuardian USRealmHeaderPatientGeneratedDocumentRecordTargetPatientRoleProviderOrganization USRealmHeaderPatientGeneratedDocumentDataEntererAssignedEntityCodeP USRealmHeaderPatientGeneratedDocumentInformantRelatedEntityCodeP USRealmHeaderPatientGeneratedDocumentLegalAuthenticatorAssignedEntityCECode USRealmHeaderPatientGeneratedDocumentLegalAuthenticatorAssignedEntityCode USRealmHeaderPatientGeneratedDocumentDocumentationOfServiceEventPerformerAssignedEntityCodeP USRealmHeaderPatientGeneratedDocumentDocumentationOfServiceEventPerformerFunctionCodeP' constraints.validation.query='USRealmHeaderPatientGeneratedDocumentRecordTargetPatientRoleIIRoot USRealmHeaderPatientGeneratedDocumentRecordTargetPatientRoleIIExtension USRealmHeaderPatientGeneratedDocumentRecordTargetPatientRolePatientGuardianIIRoot USRealmHeaderPatientGeneratedDocumentRecordTargetPatientRolePatientGuardianIIExtension USRealmHeaderPatientGeneratedDocumentRecordTargetPatientRolePatientGuardianId USRealmHeaderPatientGeneratedDocumentRecordTargetPatientRolePatientGuardianCodeP USRealmHeaderPatientGeneratedDocumentRecordTargetPatientRolePatientGuardianCode USRealmHeaderPatientGeneratedDocumentRecordTargetPatientRolePatientLanguageCommunicationPreferenceInd USRealmHeaderPatientGeneratedDocumentRecordTargetPatientRolePatientGuardian USRealmHeaderPatientGeneratedDocumentRecordTargetPatientRolePatientLanguageCommunication USRealmHeaderPatientGeneratedDocumentRecordTargetPatientRoleId USRealmHeaderPatientGeneratedDocumentRecordTargetPatientRolePatient USRealmHeaderPatientGeneratedDocumentRecordTargetPatientRoleProviderOrganization USRealmHeaderPatientGeneratedDocumentRecordTargetPatientRole USRealmHeaderPatientGeneratedDocumentAuthorAssignedAuthorIIRoot USRealmHeaderPatientGeneratedDocumentAuthorAssignedAuthorCECode USRealmHeaderPatientGeneratedDocumentAuthorAssignedAuthorId USRealmHeaderPatientGeneratedDocumentAuthorAssignedAuthorCode USRealmHeaderPatientGeneratedDocumentAuthorAssignedAuthor USRealmHeaderPatientGeneratedDocumentDataEntererAssignedEntityCodeP USRealmHeaderPatientGeneratedDocumentDataEntererAssignedEntityCode USRealmHeaderPatientGeneratedDocumentDataEntererAssignedEntity USRealmHeaderPatientGeneratedDocumentInformantRelatedEntityCodeP USRealmHeaderPatientGeneratedDocumentInformantRelatedEntityCode USRealmHeaderPatientGeneratedDocumentInformantRelatedEntity USRealmHeaderPatientGeneratedDocumentCustodianAssignedCustodianRepresentedCustodianOrganizationIIRoot USRealmHeaderPatientGeneratedDocumentCustodianAssignedCustodianRepresentedCustodianOrganizationId USRealmHeaderPatientGeneratedDocumentCustodianAssignedCustodianRepresentedCustodianOrganization USRealmHeaderPatientGeneratedDocumentCustodianAssignedCustodian USRealmHeaderPatientGeneratedDocumentInformationRecipientIntendedRecipientIIRoot USRealmHeaderPatientGeneratedDocumentInformationRecipientIntendedRecipientId USRealmHeaderPatientGeneratedDocumentInformationRecipientIntendedRecipient USRealmHeaderPatientGeneratedDocumentLegalAuthenticatorAssignedEntityCECode USRealmHeaderPatientGeneratedDocumentLegalAuthenticatorAssignedEntityId USRealmHeaderPatientGeneratedDocumentLegalAuthenticatorAssignedEntityCode USRealmHeaderPatientGeneratedDocumentLegalAuthenticatorAssignedEntity USRealmHeaderPatientGeneratedDocumentAuthenticatorAssignedEntityId USRealmHeaderPatientGeneratedDocumentAuthenticatorAssignedEntityCodeP USRealmHeaderPatientGeneratedDocumentAuthenticatorAssignedEntityCode USRealmHeaderPatientGeneratedDocumentAuthenticatorAssignedEntity USRealmHeaderPatientGeneratedDocumentParticipantAssociatedEntityCodeP USRealmHeaderPatientGeneratedDocumentParticipantAssociatedEntityCode USRealmHeaderPatientGeneratedDocumentParticipantTypeCode USRealmHeaderPatientGeneratedDocumentParticipantAssociatedEntity USRealmHeaderPatientGeneratedDocumentInFulfillmentOfOrderId USRealmHeaderPatientGeneratedDocumentInFulfillmentOfOrder USRealmHeaderPatientGeneratedDocumentDocumentationOfServiceEventPerformerAssignedEntityId USRealmHeaderPatientGeneratedDocumentDocumentationOfServiceEventPerformerAssignedEntityCodeP USRealmHeaderPatientGeneratedDocumentDocumentationOfServiceEventPerformerAssignedEntityCode USRealmHeaderPatientGeneratedDocumentDocumentationOfServiceEventPerformerFunctionCodeP USRealmHeaderPatientGeneratedDocumentDocumentationOfServiceEventPerformerFunctionCode USRealmHeaderPatientGeneratedDocumentDocumentationOfServiceEventPerformerAssignedEntity USRealmHeaderPatientGeneratedDocumentDocumentationOfServiceEventCode USRealmHeaderPatientGeneratedDocumentDocumentationOfServiceEventPerformer USRealmHeaderPatientGeneratedDocumentDocumentationOfServiceEvent' constraints.validation.warning='USRealmHeaderPatientGeneratedDocumentRecordTargetPatientRoleIIExtension USRealmHeaderPatientGeneratedDocumentRecordTargetPatientRolePatientGuardianIIExtension USRealmHeaderPatientGeneratedDocumentRecordTargetPatientRolePatientGuardianId USRealmHeaderPatientGeneratedDocumentRecordTargetPatientRolePatientGuardianCodeP USRealmHeaderPatientGeneratedDocumentRecordTargetPatientRolePatientLanguageCommunication USRealmHeaderPatientGeneratedDocumentAuthorAssignedAuthorIIRoot USRealmHeaderPatientGeneratedDocumentDataEntererAssignedEntityCode USRealmHeaderPatientGeneratedDocumentInformantRelatedEntityCode USRealmHeaderPatientGeneratedDocumentInformationRecipientIntendedRecipientIIRoot USRealmHeaderPatientGeneratedDocumentInformationRecipientIntendedRecipientId USRealmHeaderPatientGeneratedDocumentAuthenticatorAssignedEntityCodeP USRealmHeaderPatientGeneratedDocumentAuthenticatorAssignedEntityCode USRealmHeaderPatientGeneratedDocumentParticipantAssociatedEntityCodeP USRealmHeaderPatientGeneratedDocumentParticipantAssociatedEntityCode USRealmHeaderPatientGeneratedDocumentDocumentationOfServiceEventPerformerAssignedEntityCode USRealmHeaderPatientGeneratedDocumentDocumentationOfServiceEventCode USRealmHeaderPatientGeneratedDocumentDocumentationOfServiceEventPerformer' constraints.validation.dependOn.USRealmHeaderPatientGeneratedDocumentRecordTargetPatientRolePatientGuardianCode='USRealmHeaderPatientGeneratedDocumentRecordTargetPatientRolePatientGuardianCodeP' constraints.validation.dependOn.USRealmHeaderPatientGeneratedDocumentDataEntererAssignedEntityCode='USRealmHeaderPatientGeneratedDocumentDataEntererAssignedEntityCodeP' constraints.validation.dependOn.USRealmHeaderPatientGeneratedDocumentInformantRelatedEntityCode='USRealmHeaderPatientGeneratedDocumentInformantRelatedEntityCodeP' constraints.validation.dependOn.USRealmHeaderPatientGeneratedDocumentAuthenticatorAssignedEntityCode='USRealmHeaderPatientGeneratedDocumentAuthenticatorAssignedEntityCodeP' constraints.validation.dependOn.USRealmHeaderPatientGeneratedDocumentParticipantAssociatedEntityCode='USRealmHeaderPatientGeneratedDocumentParticipantAssociatedEntityCodeP' constraints.validation.dependOn.USRealmHeaderPatientGeneratedDocumentDocumentationOfServiceEventPerformerAssignedEntityCode='USRealmHeaderPatientGeneratedDocumentDocumentationOfServiceEventPerformerAssignedEntityCodeP' constraints.validation.dependOn.USRealmHeaderPatientGeneratedDocumentDocumentationOfServiceEventPerformerFunctionCode='USRealmHeaderPatientGeneratedDocumentDocumentationOfServiceEventPerformerFunctionCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolUSRealmHeaderPatientGeneratedDocumentRecordTarget constraints.validation.error='USRealmHeaderPatientGeneratedDocumentRecordTargetPatientRole'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolUSRealmHeaderPatientGeneratedDocumentRecordTargetPatientRole constraints.validation.error='USRealmHeaderPatientGeneratedDocumentRecordTargetPatientRoleId USRealmHeaderPatientGeneratedDocumentRecordTargetPatientRolePatient USRealmHeaderPatientGeneratedDocumentRecordTargetPatientRoleIIRoot' constraints.validation.info='USRealmHeaderPatientGeneratedDocumentRecordTargetPatientRoleProviderOrganization' constraints.validation.query='USRealmHeaderPatientGeneratedDocumentRecordTargetPatientRoleIIRoot USRealmHeaderPatientGeneratedDocumentRecordTargetPatientRoleIIExtension' constraints.validation.warning='USRealmHeaderPatientGeneratedDocumentRecordTargetPatientRoleIIExtension'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolUSRealmHeaderPatientGeneratedDocumentRecordTargetPatientRoleII constraints.validation.error='USRealmHeaderPatientGeneratedDocumentRecordTargetPatientRoleIIRoot' constraints.validation.warning='USRealmHeaderPatientGeneratedDocumentRecordTargetPatientRoleIIExtension'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolUSRealmHeaderPatientGeneratedDocumentRecordTargetPatientRolePatient constraints.validation.info='USRealmHeaderPatientGeneratedDocumentRecordTargetPatientRolePatientGuardian' constraints.validation.warning='USRealmHeaderPatientGeneratedDocumentRecordTargetPatientRolePatientLanguageCommunication'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolUSRealmHeaderPatientGeneratedDocumentRecordTargetPatientRolePatientGuardian constraints.validation.warning='USRealmHeaderPatientGeneratedDocumentRecordTargetPatientRolePatientGuardianId USRealmHeaderPatientGeneratedDocumentRecordTargetPatientRolePatientGuardianCodeP USRealmHeaderPatientGeneratedDocumentRecordTargetPatientRolePatientGuardianIIExtension' code.codeSystem='2.16.840.1.113883.5.111' code.codeSystemName='RoleCode' constraints.validation.error='USRealmHeaderPatientGeneratedDocumentRecordTargetPatientRolePatientGuardianCode USRealmHeaderPatientGeneratedDocumentRecordTargetPatientRolePatientGuardianIIRoot' constraints.validation.dependOn.USRealmHeaderPatientGeneratedDocumentRecordTargetPatientRolePatientGuardianCode='USRealmHeaderPatientGeneratedDocumentRecordTargetPatientRolePatientGuardianCodeP' constraints.validation.query='USRealmHeaderPatientGeneratedDocumentRecordTargetPatientRolePatientGuardianIIRoot USRealmHeaderPatientGeneratedDocumentRecordTargetPatientRolePatientGuardianIIExtension'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolUSRealmHeaderPatientGeneratedDocumentRecordTargetPatientRolePatientGuardianII constraints.validation.error='USRealmHeaderPatientGeneratedDocumentRecordTargetPatientRolePatientGuardianIIRoot' constraints.validation.warning='USRealmHeaderPatientGeneratedDocumentRecordTargetPatientRolePatientGuardianIIExtension'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolUSRealmHeaderPatientGeneratedDocumentRecordTargetPatientRolePatientLanguageCommunication constraints.validation.info='USRealmHeaderPatientGeneratedDocumentRecordTargetPatientRolePatientLanguageCommunicationPreferenceInd'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolUSRealmHeaderPatientGeneratedDocumentAuthor constraints.validation.error='USRealmHeaderPatientGeneratedDocumentAuthorAssignedAuthor'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolUSRealmHeaderPatientGeneratedDocumentAuthorAssignedAuthor constraints.validation.error='USRealmHeaderPatientGeneratedDocumentAuthorAssignedAuthorId USRealmHeaderPatientGeneratedDocumentAuthorAssignedAuthorCode USRealmHeaderPatientGeneratedDocumentAuthorAssignedAuthorCECode' constraints.validation.warning='USRealmHeaderPatientGeneratedDocumentAuthorAssignedAuthorIIRoot' constraints.validation.query='USRealmHeaderPatientGeneratedDocumentAuthorAssignedAuthorIIRoot USRealmHeaderPatientGeneratedDocumentAuthorAssignedAuthorCECode'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolUSRealmHeaderPatientGeneratedDocumentAuthorAssignedAuthorII constraints.validation.warning='USRealmHeaderPatientGeneratedDocumentAuthorAssignedAuthorIIRoot'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolUSRealmHeaderPatientGeneratedDocumentAuthorAssignedAuthorCE constraints.validation.error='USRealmHeaderPatientGeneratedDocumentAuthorAssignedAuthorCECode'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolUSRealmHeaderPatientGeneratedDocumentDataEnterer constraints.validation.error='USRealmHeaderPatientGeneratedDocumentDataEntererAssignedEntity'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolUSRealmHeaderPatientGeneratedDocumentDataEntererAssignedEntity code.codeSystem='2.16.840.1.113883.5.111' code.codeSystemName='RoleCode' constraints.validation.warning='USRealmHeaderPatientGeneratedDocumentDataEntererAssignedEntityCode' constraints.validation.info='USRealmHeaderPatientGeneratedDocumentDataEntererAssignedEntityCodeP' constraints.validation.dependOn.USRealmHeaderPatientGeneratedDocumentDataEntererAssignedEntityCode='USRealmHeaderPatientGeneratedDocumentDataEntererAssignedEntityCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolUSRealmHeaderPatientGeneratedDocumentInformant constraints.validation.error='USRealmHeaderPatientGeneratedDocumentInformantRelatedEntity'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolUSRealmHeaderPatientGeneratedDocumentInformantRelatedEntity code.codeSystem='2.16.840.1.113883.5.111' code.codeSystemName='RoleCode' constraints.validation.warning='USRealmHeaderPatientGeneratedDocumentInformantRelatedEntityCode' constraints.validation.info='USRealmHeaderPatientGeneratedDocumentInformantRelatedEntityCodeP' constraints.validation.dependOn.USRealmHeaderPatientGeneratedDocumentInformantRelatedEntityCode='USRealmHeaderPatientGeneratedDocumentInformantRelatedEntityCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolUSRealmHeaderPatientGeneratedDocumentCustodian constraints.validation.error='USRealmHeaderPatientGeneratedDocumentCustodianAssignedCustodian'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolUSRealmHeaderPatientGeneratedDocumentCustodianAssignedCustodian constraints.validation.error='USRealmHeaderPatientGeneratedDocumentCustodianAssignedCustodianRepresentedCustodianOrganization'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolUSRealmHeaderPatientGeneratedDocumentCustodianAssignedCustodianRepresentedCustodianOrganization constraints.validation.error='USRealmHeaderPatientGeneratedDocumentCustodianAssignedCustodianRepresentedCustodianOrganizationId USRealmHeaderPatientGeneratedDocumentCustodianAssignedCustodianRepresentedCustodianOrganizationIIRoot' constraints.validation.query='USRealmHeaderPatientGeneratedDocumentCustodianAssignedCustodianRepresentedCustodianOrganizationIIRoot'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolUSRealmHeaderPatientGeneratedDocumentCustodianAssignedCustodianRepresentedCustodianOrganizationII constraints.validation.error='USRealmHeaderPatientGeneratedDocumentCustodianAssignedCustodianRepresentedCustodianOrganizationIIRoot'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolUSRealmHeaderPatientGeneratedDocumentInformationRecipient constraints.validation.error='USRealmHeaderPatientGeneratedDocumentInformationRecipientIntendedRecipient'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolUSRealmHeaderPatientGeneratedDocumentInformationRecipientIntendedRecipient constraints.validation.warning='USRealmHeaderPatientGeneratedDocumentInformationRecipientIntendedRecipientId USRealmHeaderPatientGeneratedDocumentInformationRecipientIntendedRecipientIIRoot' constraints.validation.query='USRealmHeaderPatientGeneratedDocumentInformationRecipientIntendedRecipientIIRoot'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolUSRealmHeaderPatientGeneratedDocumentInformationRecipientIntendedRecipientII constraints.validation.warning='USRealmHeaderPatientGeneratedDocumentInformationRecipientIntendedRecipientIIRoot'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolUSRealmHeaderPatientGeneratedDocumentLegalAuthenticator constraints.validation.error='USRealmHeaderPatientGeneratedDocumentLegalAuthenticatorAssignedEntity'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolUSRealmHeaderPatientGeneratedDocumentLegalAuthenticatorAssignedEntity constraints.validation.error='USRealmHeaderPatientGeneratedDocumentLegalAuthenticatorAssignedEntityId' constraints.validation.info='USRealmHeaderPatientGeneratedDocumentLegalAuthenticatorAssignedEntityCode USRealmHeaderPatientGeneratedDocumentLegalAuthenticatorAssignedEntityCECode' constraints.validation.query='USRealmHeaderPatientGeneratedDocumentLegalAuthenticatorAssignedEntityCECode'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolUSRealmHeaderPatientGeneratedDocumentLegalAuthenticatorAssignedEntityCE constraints.validation.info='USRealmHeaderPatientGeneratedDocumentLegalAuthenticatorAssignedEntityCECode'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolUSRealmHeaderPatientGeneratedDocumentAuthenticator constraints.validation.error='USRealmHeaderPatientGeneratedDocumentAuthenticatorAssignedEntity'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolUSRealmHeaderPatientGeneratedDocumentAuthenticatorAssignedEntity constraints.validation.error='USRealmHeaderPatientGeneratedDocumentAuthenticatorAssignedEntityId' code.codeSystem='2.16.840.1.113883.5.111' code.codeSystemName='RoleCode' constraints.validation.warning='USRealmHeaderPatientGeneratedDocumentAuthenticatorAssignedEntityCode USRealmHeaderPatientGeneratedDocumentAuthenticatorAssignedEntityCodeP' constraints.validation.dependOn.USRealmHeaderPatientGeneratedDocumentAuthenticatorAssignedEntityCode='USRealmHeaderPatientGeneratedDocumentAuthenticatorAssignedEntityCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolUSRealmHeaderPatientGeneratedDocumentParticipant constraints.validation.error='USRealmHeaderPatientGeneratedDocumentParticipantTypeCode USRealmHeaderPatientGeneratedDocumentParticipantAssociatedEntity'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolUSRealmHeaderPatientGeneratedDocumentParticipantAssociatedEntity code.codeSystem='2.16.840.1.113883.5.111' code.codeSystemName='RoleCode' constraints.validation.warning='USRealmHeaderPatientGeneratedDocumentParticipantAssociatedEntityCode USRealmHeaderPatientGeneratedDocumentParticipantAssociatedEntityCodeP' constraints.validation.dependOn.USRealmHeaderPatientGeneratedDocumentParticipantAssociatedEntityCode='USRealmHeaderPatientGeneratedDocumentParticipantAssociatedEntityCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolUSRealmHeaderPatientGeneratedDocumentInFulfillmentOf constraints.validation.error='USRealmHeaderPatientGeneratedDocumentInFulfillmentOfOrder'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolUSRealmHeaderPatientGeneratedDocumentInFulfillmentOfOrder constraints.validation.error='USRealmHeaderPatientGeneratedDocumentInFulfillmentOfOrderId'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolUSRealmHeaderPatientGeneratedDocumentDocumentationOf constraints.validation.error='USRealmHeaderPatientGeneratedDocumentDocumentationOfServiceEvent'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolUSRealmHeaderPatientGeneratedDocumentDocumentationOfServiceEvent constraints.validation.warning='USRealmHeaderPatientGeneratedDocumentDocumentationOfServiceEventCode USRealmHeaderPatientGeneratedDocumentDocumentationOfServiceEventPerformer'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolUSRealmHeaderPatientGeneratedDocumentDocumentationOfServiceEventPerformer functionCode.codeSystem='2.16.840.1.113883.5.90' functionCode.codeSystemName='HL7ParticipationType' constraints.validation.error='USRealmHeaderPatientGeneratedDocumentDocumentationOfServiceEventPerformerFunctionCode USRealmHeaderPatientGeneratedDocumentDocumentationOfServiceEventPerformerAssignedEntity' constraints.validation.info='USRealmHeaderPatientGeneratedDocumentDocumentationOfServiceEventPerformerFunctionCodeP' constraints.validation.dependOn.USRealmHeaderPatientGeneratedDocumentDocumentationOfServiceEventPerformerFunctionCode='USRealmHeaderPatientGeneratedDocumentDocumentationOfServiceEventPerformerFunctionCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolUSRealmHeaderPatientGeneratedDocumentDocumentationOfServiceEventPerformerAssignedEntity constraints.validation.error='USRealmHeaderPatientGeneratedDocumentDocumentationOfServiceEventPerformerAssignedEntityId' code.codeSystem='2.16.840.1.113883.5.111' code.codeSystemName='RoleCode' constraints.validation.warning='USRealmHeaderPatientGeneratedDocumentDocumentationOfServiceEventPerformerAssignedEntityCode' constraints.validation.info='USRealmHeaderPatientGeneratedDocumentDocumentationOfServiceEventPerformerAssignedEntityCodeP' constraints.validation.dependOn.USRealmHeaderPatientGeneratedDocumentDocumentationOfServiceEventPerformerAssignedEntityCode='USRealmHeaderPatientGeneratedDocumentDocumentationOfServiceEventPerformerAssignedEntityCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vqoR8IokEeSkH97cUQxLGA" base_Class="_7jqj4KrlEeOxqJAXCMXUYg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='AuthorParticipationTemplateId AuthorParticipationTime AuthorParticipationAssignedAuthor AuthorParticipationAssignedAuthorRepresentedOrganizationClassCode AuthorParticipationAssignedAuthorId' templateId.root='2.16.840.1.113883.10.20.22.4.119' constraints.validation.info='AuthorParticipationAssignedAuthorAssignedPersonName AuthorParticipationAssignedAuthorRepresentedOrganizationId AuthorParticipationAssignedAuthorRepresentedOrganizationName AuthorParticipationAssignedAuthorRepresentedOrganizationTelecom AuthorParticipationAssignedAuthorRepresentedOrganizationAddr AuthorParticipationAssignedAuthorAssignedPerson AuthorParticipationAssignedAuthorRepresentedOrganization' constraints.validation.query='AuthorParticipationAssignedAuthorAssignedPersonName AuthorParticipationAssignedAuthorRepresentedOrganizationClassCode AuthorParticipationAssignedAuthorRepresentedOrganizationId AuthorParticipationAssignedAuthorRepresentedOrganizationName AuthorParticipationAssignedAuthorRepresentedOrganizationTelecom AuthorParticipationAssignedAuthorRepresentedOrganizationAddr AuthorParticipationAssignedAuthorId AuthorParticipationAssignedAuthorCodeP AuthorParticipationAssignedAuthorCode AuthorParticipationAssignedAuthorAssignedPerson AuthorParticipationAssignedAuthorRepresentedOrganization' constraints.validation.warning='AuthorParticipationAssignedAuthorCodeP AuthorParticipationAssignedAuthorCode' constraints.validation.dependOn.AuthorParticipationAssignedAuthorCode='AuthorParticipationAssignedAuthorCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolAuthorParticipationAssignedAuthor constraints.validation.error='AuthorParticipationAssignedAuthorId' code.codeSystem='2.16.840.1.113883.6.101' code.codeSystemName='NUCC Health Care Provider Taxonomy' constraints.validation.warning='AuthorParticipationAssignedAuthorCode AuthorParticipationAssignedAuthorCodeP' constraints.validation.dependOn.AuthorParticipationAssignedAuthorCode='AuthorParticipationAssignedAuthorCodeP' constraints.validation.info='AuthorParticipationAssignedAuthorAssignedPerson AuthorParticipationAssignedAuthorRepresentedOrganization'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolAuthorParticipationAssignedAuthorAssignedPerson constraints.validation.info='AuthorParticipationAssignedAuthorAssignedPersonName'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolAuthorParticipationAssignedAuthorRepresentedOrganization classCode='ORG' constraints.validation.error='AuthorParticipationAssignedAuthorRepresentedOrganizationClassCode' constraints.validation.info='AuthorParticipationAssignedAuthorRepresentedOrganizationId AuthorParticipationAssignedAuthorRepresentedOrganizationName AuthorParticipationAssignedAuthorRepresentedOrganizationTelecom AuthorParticipationAssignedAuthorRepresentedOrganizationAddr'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vrZG8IokEeSkH97cUQxLGA" base_Class="_ZQpEwK-1EeO8duI_7f6kZw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='AdmissionMedicationTemplateId AdmissionMedicationCode AdmissionMedicationCodeP AdmissionMedicationMedicationActivity2' templateId.root='2.16.840.1.113883.10.20.22.4.36' templateId.extension='2014-06-09' code.code='42346-7' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Medications on Admission' constraints.validation.dependOn.AdmissionMedicationCode='AdmissionMedicationCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vrf0oIokEeSkH97cUQxLGA" base_Class="_GnllUK-9EeO8duI_7f6kZw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='AdvanceDirectiveObservationTemplateId AdvanceDirectiveObservationCode AdvanceDirectiveObservationCodeP AdvanceDirectiveObservationEffectiveTime AdvanceDirectiveObservation2IVLTSLow AdvanceDirectiveObservation2AdvanceDirectiveObservationVerifierParticipantRole AdvanceDirectiveObservation2CustodianCustodianRoleAdvanceDirectiveObservationCustodianCustodianRoleCustodianEntityName AdvanceDirectiveObservation2CustodianAdvanceDirectiveObservationCustodianCustodianRolePlayingEntity AdvanceDirectiveObservation2AdvanceDirectiveObservationCustodianRole AdvanceDirectiveObservationReferenceExternalDocumentId AdvanceDirectiveObservation2AdvanceDirectiveObservationReferenceTypeCode AdvanceDirectiveObservation2AdvanceDirectiveObservationReferenceExternalDocument' templateId.root='2.16.840.1.113883.10.20.22.4.48' templateId.extension='2014-06-09' code.codeSystem='2.16.840.1.113883.6.96' code.codeSystemName='SNOMEDCT' constraints.validation.dependOn.AdvanceDirectiveObservationCode='AdvanceDirectiveObservationCodeP' constraints.validation.warning='AdvanceDirectiveObservation2Value AdvanceDirectiveObservationVerifier AdvanceDirectiveObservationCustodian AdvanceDirectiveObservationReference AdvanceDirectiveObservation2VerifierParticipantRolePlayingEntityCodeP AdvanceDirectiveObservation2VerifierParticipantRolePlayingEntityCode AdvanceDirectiveObservation2VerifierParticipantRoleCodeP AdvanceDirectiveObservation2VerifierParticipantRoleCode AdvanceDirectiveObservation2CustodianCustodianRoleCustodianEntityCodeP AdvanceDirectiveObservation2CustodianCustodianRoleCustodianEntityCode AdvanceDirectiveObservation2CustodianCustodianRoleCodeP AdvanceDirectiveObservation2CustodianCustodianRoleCode AdvanceDirectiveObservation2CustodianAdvanceDirectiveObservationCustodianCustodianRoleAddr AdvanceDirectiveObservation2CustodianAdvanceDirectiveObservationCustodianCustodianRoleTelecom' constraints.validation.query='AdvanceDirectiveObservation2IVLTSLow AdvanceDirectiveObservation2VerifierParticipantRolePlayingEntityCodeP AdvanceDirectiveObservation2VerifierParticipantRolePlayingEntityCode AdvanceDirectiveObservation2VerifierParticipantRolePlayingEntityName AdvanceDirectiveObservation2VerifierParticipantRoleCodeP AdvanceDirectiveObservation2VerifierParticipantRoleCode AdvanceDirectiveObservation2VerifierParticipantRoleAddr AdvanceDirectiveObservation2VerifierParticipantRolePlayingEntity AdvanceDirectiveObservation2AdvanceDirectiveObservationVerifierParticipantRole AdvanceDirectiveObservation2CustodianCustodianRoleCustodianEntityCodeP AdvanceDirectiveObservation2CustodianCustodianRoleCustodianEntityCode AdvanceDirectiveObservation2CustodianCustodianRoleAdvanceDirectiveObservationCustodianCustodianRoleCustodianEntityName AdvanceDirectiveObservation2CustodianCustodianRoleCodeP AdvanceDirectiveObservation2CustodianCustodianRoleCode AdvanceDirectiveObservation2CustodianAdvanceDirectiveObservationCustodianCustodianRoleAddr AdvanceDirectiveObservation2CustodianAdvanceDirectiveObservationCustodianCustodianRoleTelecom AdvanceDirectiveObservation2CustodianAdvanceDirectiveObservationCustodianCustodianRolePlayingEntity AdvanceDirectiveObservation2AdvanceDirectiveObservationCustodianRole AdvanceDirectiveObservationReferenceExternalDocumentTextMediaType AdvanceDirectiveObservationReferenceExternalDocumentTextReference AdvanceDirectiveObservationReferenceExternalDocumentId AdvanceDirectiveObservationReferenceExternalDocumentText AdvanceDirectiveObservation2AdvanceDirectiveObservationReferenceTypeCode AdvanceDirectiveObservation2AdvanceDirectiveObservationReferenceExternalDocument' constraints.validation.dependOn.AdvanceDirectiveObservation2VerifierParticipantRolePlayingEntityCode='AdvanceDirectiveObservation2VerifierParticipantRolePlayingEntityCodeP' constraints.validation.info='AdvanceDirectiveObservation2VerifierParticipantRolePlayingEntityName AdvanceDirectiveObservation2VerifierParticipantRoleAddr AdvanceDirectiveObservation2VerifierParticipantRolePlayingEntity AdvanceDirectiveObservationReferenceExternalDocumentTextMediaType AdvanceDirectiveObservationReferenceExternalDocumentTextReference AdvanceDirectiveObservationReferenceExternalDocumentText' constraints.validation.dependOn.AdvanceDirectiveObservation2VerifierParticipantRoleCode='AdvanceDirectiveObservation2VerifierParticipantRoleCodeP' constraints.validation.dependOn.AdvanceDirectiveObservation2CustodianCustodianRoleCustodianEntityCode='AdvanceDirectiveObservation2CustodianCustodianRoleCustodianEntityCodeP' constraints.validation.dependOn.AdvanceDirectiveObservation2CustodianCustodianRoleCode='AdvanceDirectiveObservation2CustodianCustodianRoleCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolAdvanceDirectiveObservation2IVLTS constraints.validation.error='AdvanceDirectiveObservation2IVLTSLow'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolAdvanceDirectiveObservation2Custodian constraints.validation.error='AdvanceDirectiveObservationCustodianRole'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolAdvanceDirectiveObservation2CustodianCustodianRole code.codeSystem='2.16.840.1.113883.5.111' code.codeSystemName='RoleCode' constraints.validation.warning='AdvanceDirectiveObservation2CustodianCustodianRoleCode AdvanceDirectiveObservation2CustodianCustodianRoleCodeP AdvanceDirectiveObservationCustodianCustodianRoleAddr AdvanceDirectiveObservationCustodianCustodianRoleTelecom' constraints.validation.dependOn.AdvanceDirectiveObservation2CustodianCustodianRoleCode='AdvanceDirectiveObservation2CustodianCustodianRoleCodeP' constraints.validation.error='AdvanceDirectiveObservationCustodianCustodianRolePlayingEntity'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolAdvanceDirectiveObservation2CustodianCustodianRoleCustodianEntity code.codeSystem='2.16.840.1.113883.6.96' code.codeSystemName='SNOMEDCT' constraints.validation.warning='AdvanceDirectiveObservation2CustodianCustodianRoleCustodianEntityCode AdvanceDirectiveObservation2CustodianCustodianRoleCustodianEntityCodeP' constraints.validation.dependOn.AdvanceDirectiveObservation2CustodianCustodianRoleCustodianEntityCode='AdvanceDirectiveObservation2CustodianCustodianRoleCustodianEntityCodeP' constraints.validation.error='AdvanceDirectiveObservationCustodianCustodianRoleCustodianEntityName'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolAdvanceDirectiveObservation2Verifier constraints.validation.error='AdvanceDirectiveObservationVerifierParticipantRole'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolAdvanceDirectiveObservation2VerifierParticipantRole code.codeSystem='2.16.840.1.113883.6.101' code.codeSystemName='NUCC Health Care Provider Taxonomy' constraints.validation.warning='AdvanceDirectiveObservation2VerifierParticipantRoleCode AdvanceDirectiveObservation2VerifierParticipantRoleCodeP' constraints.validation.dependOn.AdvanceDirectiveObservation2VerifierParticipantRoleCode='AdvanceDirectiveObservation2VerifierParticipantRoleCodeP' constraints.validation.info='AdvanceDirectiveObservation2VerifierParticipantRoleAddr AdvanceDirectiveObservation2VerifierParticipantRolePlayingEntity'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolAdvanceDirectiveObservation2VerifierParticipantRolePlayingEntity code.codeSystem='2.16.840.1.113883.6.96' code.codeSystemName='SNOMEDCT' constraints.validation.warning='AdvanceDirectiveObservation2VerifierParticipantRolePlayingEntityCode AdvanceDirectiveObservation2VerifierParticipantRolePlayingEntityCodeP' constraints.validation.dependOn.AdvanceDirectiveObservation2VerifierParticipantRolePlayingEntityCode='AdvanceDirectiveObservation2VerifierParticipantRolePlayingEntityCodeP' constraints.validation.info='AdvanceDirectiveObservation2VerifierParticipantRolePlayingEntityName'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vsJ78IokEeSkH97cUQxLGA" base_Class="_uCiIYLNwEeOtlapy2HWYww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='AllergyProblemActTemplateId AllergyProblemActEffectiveTime AllergyProblemActAllergyObservation2 AllergyConcernAct2IVLTSLow' templateId.root='2.16.840.1.113883.10.20.22.4.30' templateId.extension='2014-06-09' constraints.validation.warning='AllergyConcernAct2AuthorParticipation' constraints.validation.query='AllergyConcernAct2IVLTSLow AllergyConcernAct2IVLTSHigh' constraints.validation.info='AllergyConcernAct2IVLTSHigh'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolAllergyConcernAct2IVLTS constraints.validation.error='AllergyConcernAct2IVLTSLow' constraints.validation.info='AllergyConcernAct2IVLTSHigh'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vsSe0IokEeSkH97cUQxLGA" base_Class="_uVJogLj5EeODDJAC5t5vpw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='SubstanceOrDeviceAllergyObservationTemplateId AllergyObservation2ReactionInversionIndicator AllergyObservation2SeverityInversionIndicator AllergyObservationCodeP AllergyObservationValue AllergyObservationValueP AllergyObservationStatusCode AllergyObservationStatusCodeP AllergyObservationEffectiveTime AllergyObservationParticipant AllergyObservation2EDTELValue AllergyObservation2IVLTSLow AllergyObservation2ParticipantParticipantRolePlayingEntityOriginalTextReference AllergyObservation2ParticipantParticipantRolePlayingEntityAllergyClassMedication AllergyObservation2ParticipantParticipantRolePlayingEntityAllergyFoodOtherSubstance AllergyObservation2ParticipantParticipantRolePlayingEntityReferenceValue AllergyObservation2ParticipantParticipantRolePlayingEntityOriginalTextReferenceValue AllergyObservation2ParticipantParticipantRolePlayingEntityAllergySpecificMedication AllergyObservation2ParticipantParticipantRoleAllergyObservationParticipantParticipantRolePlayingEntityCode AllergyObservation2ParticipantAllergyObservationParticipantParticipantRolePlayingEntity AllergyObservation2AllergyObservationParticipantParticipantRole' templateId.root='2.16.840.1.113883.10.20.22.4.7' templateId.extension='2014-06-09' constraints.validation.info='AllergyObservation2NegationInd AllergyObservationCode AllergyObservation2SeverityObservation2 AllergyObservation2IVLTSHigh' constraints.validation.warning='AllergyObservation2Text AllergyObservation2AuthorParticipation AllergyObservationReactionObservation2 AllergyObservation2EDReference' code.code='ASSERTION' code.codeSystem='2.16.840.1.113883.5.4' code.codeSystemName='HL7ActCode' constraints.validation.dependOn.AllergyObservationCode='AllergyObservationCodeP' value.codeSystem='2.16.840.1.113883.6.96' value.codeSystemName='SNOMEDCT' constraints.validation.dependOn.AllergyObservationValue='AllergyObservationValueP' statusCode.code='completed' constraints.validation.dependOn.AllergyObservationStatusCode='AllergyObservationStatusCodeP' constraints.validation.query='AllergyObservation2EDTELValue AllergyObservation2EDReference AllergyObservation2IVLTSLow AllergyObservation2IVLTSHigh AllergyObservation2ParticipantParticipantRolePlayingEntityOriginalTextReference AllergyObservation2ParticipantParticipantRolePlayingEntityAllergyClassMedication AllergyObservation2ParticipantParticipantRolePlayingEntityAllergyFoodOtherSubstance AllergyObservation2ParticipantParticipantRolePlayingEntityReferenceValue AllergyObservation2ParticipantParticipantRolePlayingEntityOriginalTextReferenceValue AllergyObservation2ParticipantParticipantRolePlayingEntityAllergySpecificMedication AllergyObservation2ParticipantParticipantRoleAllergyObservationParticipantParticipantRolePlayingEntityCode AllergyObservation2ParticipantAllergyObservationParticipantParticipantRolePlayingEntity AllergyObservation2AllergyObservationParticipantParticipantRole'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolAllergyObservation2ED constraints.validation.warning='AllergyObservation2EDReference' constraints.validation.error='AllergyObservation2EDTELValue' constraints.validation.query='AllergyObservation2EDTELValue'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolAllergyObservation2EDTEL constraints.validation.error='AllergyObservation2EDTELValue'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolAllergyObservation2IVLTS constraints.validation.error='AllergyObservation2IVLTSLow' constraints.validation.info='AllergyObservation2IVLTSHigh'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolAllergyObservation2Participant constraints.validation.error='AllergyObservationParticipantParticipantRole'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolAllergyObservation2ParticipantParticipantRole constraints.validation.error='AllergyObservationParticipantParticipantRolePlayingEntity'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolAllergyObservation2ParticipantParticipantRolePlayingEntity constraints.validation.error='AllergyObservationParticipantParticipantRolePlayingEntityCode'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_vs2fhYokEeSkH97cUQxLGA" base_Generalization="_6LYrUbkoEeODDJAC5t5vpw"/>
  <Ecore:EClass xmi:id="_vs3toIokEeSkH97cUQxLGA" base_Class="_6LYrULkoEeODDJAC5t5vpw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ResultOrganizerTemplateId ResultOrganizerCode CognitiveStatusResultOrganizerCognitiveStatusObservation2' templateId.root='2.16.840.1.113883.10.20.22.4.75' templateId.extension='2014-06-09'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vs6w8IokEeSkH97cUQxLGA" base_Class="_aJr6ULkxEeODDJAC5t5vpw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='CoverageActivityTemplateId CoverageActivityCode CoverageActivityCodeP CoverageActivityPolicyActivity2' templateId.root='2.16.840.1.113883.10.20.22.4.60' templateId.extension='2014-06-09' code.code='48768-6' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Payment Sources' constraints.validation.dependOn.CoverageActivityCode='CoverageActivityCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vtCswIokEeSkH97cUQxLGA" base_Class="_Hl3ScLk0EeODDJAC5t5vpw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='TobaccoUseTemplateId SmokingStatusObservationValue SmokingStatusObservationValueP SmokingStatusObservationCode SmokingStatusObservationCodeP SmokingStatusObservationEffectiveTime' templateId.root='2.16.840.1.113883.10.20.22.4.78' templateId.extension='2014-06-09' value.codeSystem='2.16.840.1.113883.6.96' value.codeSystemName='SNOMEDCT' constraints.validation.dependOn.SmokingStatusObservationValue='SmokingStatusObservationValueP' code.code='229819007' code.codeSystem='2.16.840.1.113883.6.96' code.codeSystemName='SNOMEDCT' code.displayName='Tobacco use and exposure' constraints.validation.dependOn.SmokingStatusObservationCode='SmokingStatusObservationCodeP' constraints.validation.warning='CurrentSmokingStatus2AuthorParticipation'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vthN4YokEeSkH97cUQxLGA" base_Class="_4iF6IL86EeOS5KuvmCHHew">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='DeceasedObservationTemplateId DeceasedObservationCode DeceasedObservationCodeP' templateId.root='2.16.840.1.113883.10.20.22.4.79' templateId.extension='2014-06-09' code.code='ASSERTION' code.codeSystem='2.16.840.1.113883.6.96' code.codeSystemName='SNOMEDCT' code.displayName='Assertion' constraints.validation.dependOn.DeceasedObservationCode='DeceasedObservationCodeP' constraints.validation.warning='DeceasedObservationProblemObservation2'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vtpJsIokEeSkH97cUQxLGA" base_Class="_EIeu8MyjEeO93sHu8pHB2g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='DischargeMedicationTemplateId DischargeMedicationCode DischargeMedicationCodeP DischargeMedicationMedicationActivity2' templateId.root='2.16.840.1.113883.10.20.22.4.35' templateId.extension='2014-06-09' code.code='10183-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Discharge Medication' constraints.validation.dependOn.DischargeMedicationCode='DischargeMedicationCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vtv3YIokEeSkH97cUQxLGA" base_Class="_RGU34MzDEeO93sHu8pHB2g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='EncounterActivitiesTemplateId EncounterActivity2SdtcDDCFromNUBCOrDD' templateId.root='2.16.840.1.113883.10.20.22.4.49' templateId.extension='2014-06-09' constraints.validation.info='EncounterActivitiesSDTCDischargeDispositionCode EncounterActivitiesIndication2 EncounterActivitiesEncounterDiagnosis2'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vtzhwIokEeSkH97cUQxLGA" base_Class="_jH6CcMzNEeO93sHu8pHB2g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='EncounterDiagnosisTemplateId EncounterDiagnosisCode EncounterDiagnosisCodeP EncounterDiagnosisProblemObservation2' templateId.root='2.16.840.1.113883.10.20.22.4.80' templateId.extension='2014-06-09' code.code='29308-4' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Diagnosis' constraints.validation.dependOn.EncounterDiagnosisCode='EncounterDiagnosisCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vt6PcYokEeSkH97cUQxLGA" base_Class="_3WqogMzSEeO93sHu8pHB2g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ResultObservationTemplateId ResultObservationCode ResultObservationCodeP FunctionalStatusObservation2ReferenceRangeObservationRangeNoCode' templateId.root='2.16.840.1.113883.10.20.22.4.67' templateId.extension='2014-06-09' code.code='364644000' code.codeSystem='2.16.840.1.113883.6.96' code.codeSystemName='SNOMEDCT' code.displayName='functional observable' constraints.validation.dependOn.ResultObservationCode='ResultObservationCodeP' constraints.validation.info='FunctionalStatusResultObservationReferenceRange FunctionalStatusResultObservationNonMedicinalSupplyActivity2' constraints.validation.warning='FunctionalStatusObservation2AuthorParticipation' constraints.validation.query='FunctionalStatusObservation2ReferenceRangeObservationRangeNoCode'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vuEAcIokEeSkH97cUQxLGA" base_Class="_mgny4NF8EeOHUokOVP95oQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='SubstanceOrDeviceAllergyObservationTemplateId SubstanceOrDeviceAllergyObservationAllergyStatusInversionIndicator SubstanceOrDeviceAllergyObservationReactionInversionIndicator SubstanceOrDeviceAllergyObservationSeverityInversionIndicator SubstanceOrDeviceAllergyObservationClassCode SubstanceOrDeviceAllergyObservationMoodCode SubstanceOrDeviceAllergyObservationId SubstanceOrDeviceAllergyObservationCode SubstanceOrDeviceAllergyObservationCodeP SubstanceOrDeviceAllergyObservationStatusCode SubstanceOrDeviceAllergyObservationStatusCodeP SubstanceOrDeviceAllergyObservationEffectiveTime SubstanceOrDeviceAllergyObservationValue SubstanceOrDeviceAllergyObservationValueP SubstanceOrDeviceAllergyObservationParticipantParticipantRolePlayingEntityOriginalTextReferenceValue SubstanceOrDeviceAllergyObservationParticipantParticipantRolePlayingEntityClassCode SubstanceOrDeviceAllergyObservationParticipantParticipantRolePlayingEntityCode SubstanceOrDeviceAllergyObservationParticipantParticipantRoleClassCode SubstanceOrDeviceAllergyObservationParticipantParticipantRolePlayingEntity SubstanceOrDeviceAllergyObservationParticipantTypeCode SubstanceOrDeviceAllergyObservationParticipantParticipantRole' templateId.root='2.16.840.1.113883.10.20.24.3.90' classCode='OBS' moodCode='EVN' code.code='ASSERTION' code.codeSystem='2.16.840.1.113883.5.4' code.codeSystemName='HL7ActCode' code.displayName='Assertion' constraints.validation.dependOn.SubstanceOrDeviceAllergyObservationCode='SubstanceOrDeviceAllergyObservationCodeP' statusCode.code='completed' value.codeSystem='2.16.840.1.113883.6.96' value.codeSystemName='SNOMEDCT' constraints.validation.info='SubstanceOrDeviceAllergyObservationAllergyStatusObservation SubstanceOrDeviceAllergyObservationSeverityObservation SubstanceOrDeviceAllergyObservationParticipantParticipantRolePlayingEntityCETranslation SubstanceOrDeviceAllergyObservationParticipantParticipantRolePlayingEntityCodeTerminologyValueSetGroupSRFI' constraints.validation.warning='SubstanceOrDeviceAllergyObservationReactionObservation SubstanceOrDeviceAllergyObservationParticipant SubstanceOrDeviceAllergyObservationParticipantParticipantRolePlayingEntityCEOriginalText SubstanceOrDeviceAllergyObservationParticipantParticipantRolePlayingEntityReferenceValue SubstanceOrDeviceAllergyObservationParticipantParticipantRolePlayingEntityOriginalTextReference' constraints.validation.query='SubstanceOrDeviceAllergyObservationParticipantParticipantRolePlayingEntityCEOriginalText SubstanceOrDeviceAllergyObservationParticipantParticipantRolePlayingEntityCETranslation SubstanceOrDeviceAllergyObservationParticipantParticipantRolePlayingEntityOriginalTextReferenceValue SubstanceOrDeviceAllergyObservationParticipantParticipantRolePlayingEntityReferenceValue SubstanceOrDeviceAllergyObservationParticipantParticipantRolePlayingEntityOriginalTextReference SubstanceOrDeviceAllergyObservationParticipantParticipantRolePlayingEntityCodeTerminologyValueSetGroupSRFI SubstanceOrDeviceAllergyObservationParticipantParticipantRolePlayingEntityClassCode SubstanceOrDeviceAllergyObservationParticipantParticipantRolePlayingEntityCode SubstanceOrDeviceAllergyObservationParticipantParticipantRoleClassCode SubstanceOrDeviceAllergyObservationParticipantParticipantRolePlayingEntity SubstanceOrDeviceAllergyObservationParticipantTypeCode SubstanceOrDeviceAllergyObservationParticipantParticipantRole'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolSubstanceOrDeviceAllergyObservationParticipant typeCode='CSM' constraints.validation.error='SubstanceOrDeviceAllergyObservationParticipantTypeCode SubstanceOrDeviceAllergyObservationParticipantParticipantRole'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolSubstanceOrDeviceAllergyObservationParticipantParticipantRole classCode='MANU' constraints.validation.error='SubstanceOrDeviceAllergyObservationParticipantParticipantRoleClassCode SubstanceOrDeviceAllergyObservationParticipantParticipantRolePlayingEntity'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolSubstanceOrDeviceAllergyObservationParticipantParticipantRolePlayingEntity constraints.validation.error='SubstanceOrDeviceAllergyObservationParticipantParticipantRolePlayingEntityOriginalTextReferenceValue SubstanceOrDeviceAllergyObservationParticipantParticipantRolePlayingEntityClassCode SubstanceOrDeviceAllergyObservationParticipantParticipantRolePlayingEntityCode' constraints.validation.warning='SubstanceOrDeviceAllergyObservationParticipantParticipantRolePlayingEntityReferenceValue SubstanceOrDeviceAllergyObservationParticipantParticipantRolePlayingEntityOriginalTextReference SubstanceOrDeviceAllergyObservationParticipantParticipantRolePlayingEntityCEOriginalText' constraints.validation.info='SubstanceOrDeviceAllergyObservationParticipantParticipantRolePlayingEntityCodeTerminologyValueSetGroupSRFI SubstanceOrDeviceAllergyObservationParticipantParticipantRolePlayingEntityCETranslation' classCode='MMAT' constraints.validation.query='SubstanceOrDeviceAllergyObservationParticipantParticipantRolePlayingEntityCEOriginalText SubstanceOrDeviceAllergyObservationParticipantParticipantRolePlayingEntityCETranslation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolSubstanceOrDeviceAllergyObservationParticipantParticipantRolePlayingEntityCE constraints.validation.warning='SubstanceOrDeviceAllergyObservationParticipantParticipantRolePlayingEntityCEOriginalText' constraints.validation.info='SubstanceOrDeviceAllergyObservationParticipantParticipantRolePlayingEntityCETranslation'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vus5oIokEeSkH97cUQxLGA" base_Class="_yU2tgOD0EeOmBMTtnrPqww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ResultOrganizerTemplateId ResultOrganizerCode ResultOrganizerStatusCode ResultOrganizerStatusCodeP FunctionalStatusResultOrganizerFunctionalStatusObservation2 FunctionalStatusOrganizer2SelfCareActivities' templateId.root='2.16.840.1.113883.10.20.22.4.66' templateId.extension='2014-06-09' constraints.validation.warning='FunctionalStatusOrganizer2CodeCodeSystem FunctionalStatusOrganizer2AuthorParticipation' statusCode.code='completed' constraints.validation.dependOn.ResultOrganizerStatusCode='ResultOrganizerStatusCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vu5t8IokEeSkH97cUQxLGA" base_Class="_DMvdYOEFEeOmBMTtnrPqww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='HealthStatusObservationTemplateId HealthStatusObservationCode HealthStatusObservationCodeP' templateId.root='2.16.840.1.113883.10.20.22.4.5' templateId.extension='2014-06-09' code.code='11323-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Health status' constraints.validation.dependOn.HealthStatusObservationCode='HealthStatusObservationCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vvAboYokEeSkH97cUQxLGA" base_Class="_GM6icOEIEeOmBMTtnrPqww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='HospitalAdmissionDiagnosisTemplateId HospitalAdmissionDiagnosisCode HospitalAdmissionDiagnosisCodeP HospitalAdmissionDiagnosisProblemObservation2' templateId.root='2.16.840.1.113883.10.20.22.4.34' templateId.extension='2014-06-09' code.code='46241-6' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Admission diagnosis' constraints.validation.dependOn.HospitalAdmissionDiagnosisCode='HospitalAdmissionDiagnosisCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vvHJUYokEeSkH97cUQxLGA" base_Class="_Trd1cOEMEeOmBMTtnrPqww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='HospitalDischargeDiagnosisTemplateId HospitalDischargeDiagnosisCode HospitalDischargeDiagnosisCodeP HospitalDischargeDiagnosisProblemObservation2' templateId.root='2.16.840.1.113883.10.20.22.4.33' templateId.extension='2014-06-09' code.code='11535-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Hospital discharge diagnosis' constraints.validation.dependOn.HospitalDischargeDiagnosisCode='HospitalDischargeDiagnosisCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vvN3AYokEeSkH97cUQxLGA" base_Class="_zI6vcOE7EeOTq9XEMvvkWw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ImmunizationActivityTemplateId ImmunizationActivityStatusCode ImmunizationActivityStatusCodeP ImmunizationActivityAdministrationUnitCode ImmunizationActivityConsumable ImmunizationActivity2ImmunizationActivityConsumableImmunizationMedicationInformation2 ImmunizationActivity2ImmunizationActivityPreconditionTypeCode ImmunizationActivity2ImmunizationActivityPreconditionPreconditionForSubstanceAdministration2' templateId.root='2.16.840.1.113883.10.20.22.4.52' templateId.extension='2014-06-09' constraints.validation.info='ImmunizationActivityCode ImmunizationActivityRepeatNumber ImmunizationActivityAdministrationUnitCodeP ImmunizationActivityNegationInd ImmunizationActivity2SubstanceAdministeredAct ImmunizationActivityDrugVehicle ImmunizationActivityIndication2 ImmunizationActivityMedicationSupplyOrder2 ImmunizationActivityMedicationDispense2 ImmunizationActivityReactionObservation2 ImmunizationActivityInstruction2 ImmunizationActivityPrecondition' constraints.validation.dependOn.ImmunizationActivityStatusCode='ImmunizationActivityStatusCodeP' administrationUnitCode.codeSystemName='' constraints.validation.dependOn.ImmunizationActivityAdministrationUnitCode='ImmunizationActivityAdministrationUnitCodeP' constraints.validation.warning='ImmunizationActivity2AuthorParticipation' constraints.validation.query='ImmunizationActivity2ImmunizationActivityConsumableImmunizationMedicationInformation2 ImmunizationActivity2ImmunizationActivityPreconditionTypeCode ImmunizationActivity2ImmunizationActivityPreconditionPreconditionForSubstanceAdministration2'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolImmunizationActivity2Consumable constraints.validation.error='ImmunizationActivityConsumableImmunizationMedicationInformation2'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolImmunizationActivity2Precondition typeCode='PRCN' constraints.validation.error='ImmunizationActivityPreconditionTypeCode ImmunizationActivityPreconditionPreconditionForSubstanceAdministration2'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vvotwIokEeSkH97cUQxLGA" base_Class="_Rx8LIOHUEeO04sHNODkHmQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ImmunizationMedicationInformationTemplateId ImmunizationMedicationInformationManufacturedMaterial ImmunizationMedicationInformation2ImmunizationMedicationInformationManufacturedMaterialCodeOriginalText ImmunizationMedicationInformation2ImmunizationMedicationInformationManufacturedMaterialOriginalTextReference ImmunizationMedicationInformation2ImmunizationMedicationInformationManufacturedMaterialTextReferenceValue ImmunizationMedicationInformation2ImmunizationMedicationInformationManufacturedMaterialOriginalTextReferenceValue ImmunizationMedicationInformation2ImmunizationMedicationInformationManufacturedMaterialCodeTranslation ImmunizationMedicationInformation2ImmunizationMedicationInformationImmunizationMedicationInformationManufacturedMaterialCode' templateId.root='2.16.840.1.113883.10.20.22.4.54' templateId.extension='2014-06-09' constraints.validation.info='ImmunizationMedicationInformation2ImmunizationMedicationInformationManufacturedMaterialCETranslation' constraints.validation.query='ImmunizationMedicationInformation2ImmunizationMedicationInformationManufacturedMaterialCETranslation ImmunizationMedicationInformation2ImmunizationMedicationInformationManufacturedMaterialCodeOriginalText ImmunizationMedicationInformation2ImmunizationMedicationInformationManufacturedMaterialOriginalTextReference ImmunizationMedicationInformation2ImmunizationMedicationInformationManufacturedMaterialTextReferenceValue ImmunizationMedicationInformation2ImmunizationMedicationInformationManufacturedMaterialOriginalTextReferenceValue ImmunizationMedicationInformation2ImmunizationMedicationInformationManufacturedMaterialCodeTranslation ImmunizationMedicationInformation2ImmunizationMedicationInformationImmunizationMedicationInformationManufacturedMaterialCode'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolImmunizationMedicationInformation2ImmunizationMedicationInformationManufacturedMaterial code.codeSystemName='' constraints.validation.error='ImmunizationMedicationInformationImmunizationMedicationInformationManufacturedMaterialCode' constraints.validation.info='ImmunizationMedicationInformation2ImmunizationMedicationInformationManufacturedMaterialCETranslation' constraints.validation.query='ImmunizationMedicationInformation2ImmunizationMedicationInformationManufacturedMaterialCETranslation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolImmunizationMedicationInformation2ImmunizationMedicationInformationManufacturedMaterialCE constraints.validation.info='ImmunizationMedicationInformation2ImmunizationMedicationInformationManufacturedMaterialCETranslation'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vvxQoIokEeSkH97cUQxLGA" base_Class="_PrEOIOHoEeO04sHNODkHmQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='IndicationTemplateId IndicationCodeP IndicationId' templateId.root='2.16.840.1.113883.10.20.22.4.19' templateId.extension='2014-06-09' constraints.validation.warning='Indication2Text IndicationValue' code.codeSystem='2.16.840.1.113883.6.96' code.codeSystemName='SNOMEDCT' constraints.validation.info='IndicationCode IndicationValueP' constraints.validation.dependOn.IndicationCode='IndicationCodeP' value.codeSystem='2.16.840.1.113883.6.96' value.codeSystemName='SNOMEDCT' constraints.validation.dependOn.IndicationValue='IndicationValueP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vwBIQIokEeSkH97cUQxLGA" base_Class="_D62NwOH7EeO04sHNODkHmQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='InstructionsTemplateId' templateId.root='2.16.840.1.113883.10.20.22.4.20' templateId.extension='2014-06-09'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vwCWYookEeSkH97cUQxLGA" base_Class="_WnSCMOLAEeOc7-TVP7Wi6w">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='MedicationActivityTemplateId MedicationActivity2InstructionsInversionInd MedicationActivity2SubstanceAdministeredActInversionInd MedicationActivity2EffectiveTimeIVLTSorTS MedicationActivityStatusCode MedicationActivityStatusCodeP MedicationActivityAdministrationUnitCode MedicationActivityConsumable MedicationActivity2MedicationActivityPreconditionTypeCode MedicationActivity2MedicationActivityPreconditionPreconditionForSubstanceAdministration2 MedicationActivity2MedicationActivityConsumableMedicationInformation2' templateId.root='2.16.840.1.113883.10.20.22.4.16' templateId.extension='2014-06-09' constraints.validation.warning='MedicationActivity2DoseQuantityorrateQuantity MedicationActivity2EffectiveTimePIVLTS MedicationActivityDoseQuantity MedicationActivity2AuthorParticipation' constraints.validation.info='MedicationActivity2EffectiveTimeIVLTSHigh MedicationActivityRepeatNumber MedicationActivityCode MedicationActivityAdministrationUnitCodeP MedicationActivity2DrugMonitoringAct MedicationActivityInstruction2 MedicationActivity2SubstanceAdministeredAct MedicationActivityIndication2 MedicationActivityMedicationSupplyOrder2 MedicationActivityMedicationDispense2 MedicationActivityReactionObservation2 MedicationActivityPrecondition' constraints.validation.dependOn.MedicationActivityStatusCode='MedicationActivityStatusCodeP' administrationUnitCode.codeSystemName='' constraints.validation.dependOn.MedicationActivityAdministrationUnitCode='MedicationActivityAdministrationUnitCodeP' constraints.validation.query='MedicationActivity2MedicationActivityPreconditionTypeCode MedicationActivity2MedicationActivityPreconditionPreconditionForSubstanceAdministration2 MedicationActivity2MedicationActivityConsumableMedicationInformation2'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolMedicationActivity2Consumable constraints.validation.error='MedicationActivityConsumableMedicationInformation2'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolMedicationActivity2Precondition typeCode='PRCN' constraints.validation.error='MedicationActivityPreconditionTypeCode MedicationActivityPreconditionPreconditionForSubstanceAdministration2'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vwd0MIokEeSkH97cUQxLGA" base_Class="_qH-ckOXfEeOkFcFJ9uzEEw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='MedicationDispenseTemplateId MedicationDispense2ContainsMedicationOrImmunization' templateId.root='2.16.840.1.113883.10.20.22.4.18' templateId.extension='2014-06-09' constraints.validation.info='MedicationDispense2ContainsMedicationInformation2 MedicationDispense2ContainsImmunizationMedicationInformation2 MedicationDispenseMedicationSupplyOrder2'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vwg3gYokEeSkH97cUQxLGA" base_Class="_Hz__kOXrEeOkFcFJ9uzEEw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='MedicationInformationTemplateId MedicationInformationManufacturedMaterial MedicationInformation2MedicationInformationManufacturedMaterialCodeOriginalText MedicationInformation2MedicationInformationManufacturedMaterialCodeTranslation MedicationInformation2MedicationInformationManufacturedMaterialReference MedicationInformation2MedicationInformationManufacturedMaterialOriginalTextReferenceValue MedicationInformation2MedicationInformationManufacturedMaterialReferenceValue MedicationInformation2MedicationInformationMedicationInformationManufacturedMaterialCodeP MedicationInformation2MedicationInformationMedicationInformationManufacturedMaterialCode' templateId.root='2.16.840.1.113883.10.20.22.4.23' templateId.extension='2014-06-09' constraints.validation.info='MedicationInformation2MedicationInformationManufacturedMaterialCETranslation' constraints.validation.query='MedicationInformation2MedicationInformationManufacturedMaterialCETranslation MedicationInformation2MedicationInformationManufacturedMaterialCodeOriginalText MedicationInformation2MedicationInformationManufacturedMaterialCodeTranslation MedicationInformation2MedicationInformationManufacturedMaterialReference MedicationInformation2MedicationInformationManufacturedMaterialOriginalTextReferenceValue MedicationInformation2MedicationInformationManufacturedMaterialReferenceValue MedicationInformation2MedicationInformationMedicationInformationManufacturedMaterialCodeP MedicationInformation2MedicationInformationMedicationInformationManufacturedMaterialCode' constraints.validation.dependOn.MedicationInformation2MedicationInformationMedicationInformationManufacturedMaterialCode='MedicationInformationMedicationInformationManufacturedMaterialCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolMedicationInformation2MedicationInformationManufacturedMaterial code.codeSystem='2.16.840.1.113883.6.88' code.codeSystemName='RxNorm' constraints.validation.error='MedicationInformationMedicationInformationManufacturedMaterialCode MedicationInformationMedicationInformationManufacturedMaterialCodeP' constraints.validation.dependOn.MedicationInformationMedicationInformationManufacturedMaterialCode='MedicationInformationMedicationInformationManufacturedMaterialCodeP' constraints.validation.info='MedicationInformation2MedicationInformationManufacturedMaterialCETranslation' constraints.validation.query='MedicationInformation2MedicationInformationManufacturedMaterialCETranslation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolMedicationInformation2MedicationInformationManufacturedMaterialCE constraints.validation.info='MedicationInformation2MedicationInformationManufacturedMaterialCETranslation'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vwtEwIokEeSkH97cUQxLGA" base_Class="_InVpIOZ8EeOmzetP5oaH3A">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='MedicationSupplyOrderTemplateId MedicationSupplyOrder2ContainsMedicationOrImmunization MedicationSupplyOrder2InstructionInversionInd' templateId.root='2.16.840.1.113883.10.20.22.4.17' templateId.extension='2014-06-09' constraints.validation.info='MedicationSupplyOrder2ContainsMedicationInformation2 MedicationSupplyOrder2ContainsImmunizationMedicationInformation2 MedicationSupplyOrderInstruction2'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vwx9QIokEeSkH97cUQxLGA" base_Class="_k_C20OaCEeOmzetP5oaH3A">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='NonMedicinalSupplyActivityTemplateId NonMedicinalSupplyActivity2Instruction2InversionInd' templateId.root='2.16.840.1.113883.10.20.22.4.50' templateId.extension='2014-06-09' constraints.validation.info='NonMedicinalSupplyActivity2Instruction2'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vw1AkIokEeSkH97cUQxLGA" base_Class="_Ao2HkOaHEeOmzetP5oaH3A">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PhysicianofRecordParticipantTemplateId PhysicianofRecordParticipantAssignedEntity PhysicianofRecordParticipant2AssignedEntityPhysicianofRecordParticipantAssignedEntityAssignedPersonName' templateId.root='2.16.840.1.113883.10.20.6.2' templateId.extension='2014-06-09' constraints.validation.query='PhysicianofRecordParticipant2AssignedEntityPhysicianofRecordParticipantAssignedEntityAssignedPersonName PhysicianofRecordParticipant2AssignedEntityRepresentedOrganizationName PhysicianofRecordParticipant2AssignedEntityHasNationalProviderId PhysicianofRecordParticipant2PhysicianofRecordParticipantAssignedEntityAssignedPerson PhysicianofRecordParticipant2AssignedEntityRepresentedOrganization' constraints.validation.warning='PhysicianofRecordParticipant2AssignedEntityRepresentedOrganizationName PhysicianofRecordParticipant2AssignedEntityHasNationalProviderId PhysicianofRecordParticipant2PhysicianofRecordParticipantAssignedEntityAssignedPerson' constraints.validation.info='PhysicianofRecordParticipant2AssignedEntityRepresentedOrganization'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolPhysicianofRecordParticipant2AssignedEntity constraints.validation.warning='PhysicianofRecordParticipant2AssignedEntityHasNationalProviderId PhysicianofRecordParticipantAssignedEntityAssignedPerson' constraints.validation.info='PhysicianofRecordParticipant2AssignedEntityRepresentedOrganization'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolPhysicianofRecordParticipant2AssignedEntityAssignedPerson constraints.validation.error='PhysicianofRecordParticipantAssignedEntityAssignedPersonName'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolPhysicianofRecordParticipant2AssignedEntityRepresentedOrganization constraints.validation.warning='PhysicianofRecordParticipant2AssignedEntityRepresentedOrganizationName'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vw7HMIokEeSkH97cUQxLGA" base_Class="_lLnRMOaYEeOmzetP5oaH3A">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PlanOfCareActivityActTemplateId PlannedAct2Code PlannedAct2StatusCode PlannedAct2StatusCodeP' templateId.root='2.16.840.1.113883.10.20.22.4.39' templateId.extension='2014-06-09' statusCode.code='active' constraints.validation.warning='PlannedAct2EffectiveTime PlannedAct2AuthorParticipation' constraints.validation.info='PlannedAct2Indication2 PlannedAct2Instruction2 PlannedAct2PatientPriorityPreference PlannedAct2ProviderPriorityPreference PlannedAct2Performer'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vxKXwYokEeSkH97cUQxLGA" base_Class="_bDPFMOdXEeOqBOMhgDlycQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PlanOfCareActivityEncounterTemplateId PlannedEncounter2CodeP PlannedEncounter2StatusCode PlannedEncounter2StatusCodeP PlannedEncounter2EffectiveTime PlannedEncounter2PerformerAssignedEntity' templateId.root='2.16.840.1.113883.10.20.22.4.40' templateId.extension='2014-06-09' code.codeSystem='2.16.840.1.113883.6.96' code.codeSystemName='SNOMEDCT' constraints.validation.warning='PlannedEncounter2Code PlannedEncounter2Author' statusCode.code='active' constraints.validation.info='PlannedEncounter2Performer PlannedEncounter2ServiceDeliveryLocation PlannedEncounter2PatientPriorityPreference PlannedEncounter2ProviderPriorityPreference PlannedEncounter2Indication2' constraints.validation.query='PlannedEncounter2PerformerAssignedEntity'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolPlannedEncounter2Performer constraints.validation.error='PlannedEncounter2PerformerAssignedEntity'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vxeg0IokEeSkH97cUQxLGA" base_Class="_jKZssOdvEeOqBOMhgDlycQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PlanOfCareActivityObservationTemplateId PlannedObservation2Code PlannedObservation2StatusCode PlannedObservation2StatusCodeP PlannedObservation2TargetSiteCode' templateId.root='2.16.840.1.113883.10.20.22.4.44' templateId.extension='2014-06-09' statusCode.code='active' constraints.validation.warning='PlannedObservation2EffectiveTime PlannedObservation2TargetSiteCodeP PlannedObservation2AuthorParticipation' constraints.validation.info='PlannedObservation2Value PlannedObservation2MethodCode PlannedObservation2Performer PlannedObservation2PatientPriorityPreference PlannedObservation2ProviderPriorityPreference PlannedObservation2Indication2 PlannedObservation2Instruction2 PlannedObservation2PlannedCoverage' targetSiteCode.codeSystem='2.16.840.1.113883.6.96' targetSiteCode.codeSystemName='SNOMEDCT' constraints.validation.dependOn.PlannedObservation2TargetSiteCode='PlannedObservation2TargetSiteCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vx27UIokEeSkH97cUQxLGA" base_Class="_cs0YsOeEEeOqBOMhgDlycQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PlanOfCareActivityProcedureTemplateId PlannedProcedure2Instruction2InversionInd PlannedProcedure2Code PlannedProcedure2StatusCode PlannedProcedure2StatusCodeP PlannedProcedure2TargetSiteCode' templateId.root='2.16.840.1.113883.10.20.22.4.41' templateId.extension='2014-06-09' statusCode.code='active' constraints.validation.warning='PlannedProcedure2EffectiveTime PlannedProcedure2AuthorParticipation' constraints.validation.info='PlannedProcedure2MethodCode PlannedProcedure2TargetSiteCodeP PlannedProcedure2Performer PlannedProcedure2PatientPriorityPreference PlannedProcedure2ProviderPriorityPreference PlannedProcedure2Indication2 PlannedProcedure2Instruction2 PlannedProcedure2PlannedCoverage' targetSiteCode.codeSystem='2.16.840.1.113883.6.96' targetSiteCode.codeSystemName='SNOMEDCT' constraints.validation.dependOn.PlannedProcedure2TargetSiteCode='PlannedProcedure2TargetSiteCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vyOHsIokEeSkH97cUQxLGA" base_Class="_Yj45YOgREeO-iJTuAv7BKQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PlanOfCareActivitySubstanceAdministrationTemplateId PlannedMedicationActivity2StatusCode PlannedMedicationActivity2StatusCodeP PlannedMedicationActivity2EffectiveTime PlannedMedicationActivity2RouteCode PlannedMedicationActivity2ApproachSiteCode PlannedMedicationActivity2AdministrationUnitCode PlannedMedicationActivity2Consumable PlannedMedicationActivity2ConsumableMedicationInformation2 PlannedMedicationActivity2PreconditionTypeCode PlannedMedicationActivity2PreconditionPreconditionForSubstanceAdministration2' templateId.root='2.16.840.1.113883.10.20.22.4.42' templateId.extension='2014-06-09' statusCode.code='active' constraints.validation.info='PlannedMedicationActivity2RepeatNumber PlannedMedicationActivity2RouteCodeP PlannedMedicationActivity2ApproachSiteCodeP PlannedMedicationActivity2DoseQuantity PlannedMedicationActivity2RateQuantity PlannedMedicationActivity2MaxDoseQuantity PlannedMedicationActivity2AdministrationUnitCodeP PlannedMedicationActivity2Performer PlannedMedicationActivity2PatientPriorityPreference PlannedMedicationActivity2ProviderPriorityPreference PlannedMedicationActivity2Indication2 PlannedMedicationActivity2Instruction2 PlannedMedicationActivity2Precondition' routeCode.codeSystem='2.16.840.1.113883.3.26.1.1' routeCode.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.PlannedMedicationActivity2RouteCode='PlannedMedicationActivity2RouteCodeP' approachSiteCode.codeSystem='2.16.840.1.113883.6.96' approachSiteCode.codeSystemName='SNOMEDCT' constraints.validation.dependOn.PlannedMedicationActivity2ApproachSiteCode='PlannedMedicationActivity2ApproachSiteCodeP' administrationUnitCode.codeSystemName='' constraints.validation.dependOn.PlannedMedicationActivity2AdministrationUnitCode='PlannedMedicationActivity2AdministrationUnitCodeP' constraints.validation.warning='PlannedMedicationActivity2AuthorParticipation PlannedMedicationActivity2IVLPQdoseQuantityUnit PlannedMedicationActivity2IVLPQrateQuantityUnit' constraints.validation.query='PlannedMedicationActivity2IVLPQdoseQuantityUnit PlannedMedicationActivity2IVLPQrateQuantityUnit PlannedMedicationActivity2ConsumableMedicationInformation2 PlannedMedicationActivity2PreconditionTypeCode PlannedMedicationActivity2PreconditionPreconditionForSubstanceAdministration2'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolPlannedMedicationActivity2IVLPQdoseQuantity unit='1' constraints.validation.warning='PlannedMedicationActivity2IVLPQdoseQuantityUnit'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolPlannedMedicationActivity2IVLPQrateQuantity unit='1' constraints.validation.warning='PlannedMedicationActivity2IVLPQrateQuantityUnit'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolPlannedMedicationActivity2Consumable constraints.validation.error='PlannedMedicationActivity2ConsumableMedicationInformation2'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolPlannedMedicationActivity2Precondition typeCode='PRCN' constraints.validation.error='PlannedMedicationActivity2PreconditionTypeCode PlannedMedicationActivity2PreconditionPreconditionForSubstanceAdministration2'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vyzWgIokEeSkH97cUQxLGA" base_Class="_vEd1cOg0EeO-iJTuAv7BKQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PlanOfCareActivitySupplyTemplateId PlannedSupply2StatusCode PlannedSupply2StatusCodeP' templateId.root='2.16.840.1.113883.10.20.22.4.43' templateId.extension='2014-06-09' statusCode.code='active' constraints.validation.warning='PlannedSupply2EffectiveTime PlannedSupply2AuthorParticipation' constraints.validation.info='PlannedSupply2RepeatNumber PlannedSupply2Quantity PlannedSupply2Product PlannedSupply2Performer PlannedSupply2ProductInstance PlannedSupply2PatientPriorityPreference PlannedSupply2ProviderPriorityPreference PlannedSupply2Indication2 PlannedSupply2Instruction2 PlannedSupply2PlannedCoverage'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vzIGoookEeSkH97cUQxLGA" base_Class="_Q0ODkOwlEeOqa975IP2wug">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PolicyActivityTemplateId PolicyActivityPayer PolicyActivityCoverage PolicyActivity2PolicyActivityPayerPayerAssignedEntity PolicyActivity2GuarantorPolicyActivityGuarantorGuarantorAssignedEntityCodeP PolicyActivity2GuarantorPolicyActivityGuarantorGuarantorAssignedEntityCode PolicyActivity2PolicyActivityGuarantorGuarantorAssignedEntity PolicyActivity2CoverageCoverageRoleCoveragePlayingEntityDateOfBirthInSDTCbirthTime PolicyActivity2CoverageCoverageRoleCoveragePlayingEntitySDTCBirthTime PolicyActivity2PolicyActivityCoverageCoverageRole' templateId.root='2.16.840.1.113883.10.20.22.4.61' templateId.extension='2014-06-09' constraints.validation.warning='PolicyActivityGuarantor PolicyActivity2GuarantorPolicyActivityGuarantorGuarantorAssignedEntityTelecom PolicyActivity2CoveragePolicyActivityCoverageCoverageRoleCoveragePlayingEntity' constraints.validation.info='PolicyActivity2PayerPolicyActivityPayerPayerAssignedEntityTelecom' constraints.validation.query='PolicyActivity2PayerPolicyActivityPayerPayerAssignedEntityTelecom PolicyActivity2PolicyActivityPayerPayerAssignedEntity PolicyActivity2GuarantorPolicyActivityGuarantorGuarantorAssignedEntityTelecom PolicyActivity2GuarantorPolicyActivityGuarantorGuarantorAssignedEntityCodeP PolicyActivity2GuarantorPolicyActivityGuarantorGuarantorAssignedEntityCode PolicyActivity2PolicyActivityGuarantorGuarantorAssignedEntity PolicyActivity2CoverageCoverageRoleCoveragePlayingEntityDateOfBirthInSDTCbirthTime PolicyActivity2CoverageCoverageRoleCoveragePlayingEntitySDTCBirthTime PolicyActivity2CoveragePolicyActivityCoverageCoverageRoleCoveragePlayingEntity PolicyActivity2PolicyActivityCoverageCoverageRole' constraints.validation.dependOn.PolicyActivity2GuarantorPolicyActivityGuarantorGuarantorAssignedEntityCode='PolicyActivityGuarantorGuarantorAssignedEntityCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolPolicyActivity2Payer constraints.validation.error='PolicyActivityPayerPayerAssignedEntity'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolPolicyActivity2PayerPayerAssignedEntity constraints.validation.info='PolicyActivityPayerPayerAssignedEntityTelecom'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolPolicyActivity2Guarantor constraints.validation.error='PolicyActivityGuarantorGuarantorAssignedEntity'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolPolicyActivity2GuarantorGuarantorAssignedEntity constraints.validation.warning='PolicyActivityGuarantorGuarantorAssignedEntityTelecom' code.code='GUAR' code.codeSystem='2.16.840.1.113883.5.110' code.codeSystemName='HL7RoleClass' code.displayName='Guarantor' constraints.validation.error='PolicyActivityGuarantorGuarantorAssignedEntityCode PolicyActivityGuarantorGuarantorAssignedEntityCodeP' constraints.validation.dependOn.PolicyActivityGuarantorGuarantorAssignedEntityCode='PolicyActivityGuarantorGuarantorAssignedEntityCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolPolicyActivity2Coverage constraints.validation.error='PolicyActivityCoverageCoverageRole'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolPolicyActivity2CoverageCoverageRole constraints.validation.warning='PolicyActivityCoverageCoverageRoleCoveragePlayingEntity'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolPolicyActivity2CoverageCoverageRoleCoveragePlayingEntity constraints.validation.error='PolicyActivity2CoverageCoverageRoleCoveragePlayingEntitySDTCBirthTime'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vzZzcYokEeSkH97cUQxLGA" base_Class="__SgUwOwuEeOqa975IP2wug">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PostprocedureDiagnosisTemplateId PostprocedureDiagnosisCode PostprocedureDiagnosisCodeP PostprocedureDiagnosisProblemObservation2' templateId.root='2.16.840.1.113883.10.20.22.4.51' templateId.extension='2014-06-09' code.code='59769-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Postprocedure Diagnosis' constraints.validation.dependOn.PostprocedureDiagnosisCode='PostprocedureDiagnosisCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vzhvQIokEeSkH97cUQxLGA" base_Class="_5l3g0OzYEeOnE-G4kptBiw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PreoperativeDiagnosisTemplateId PreoperativeDiagnosisCode PreoperativeDiagnosisCodeP PreoperativeDiagnosisProblemObservation2' templateId.root='2.16.840.1.113883.10.20.22.4.65' templateId.extension='2014-06-09' code.code='10219-4' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Preoperative Diagnosis' constraints.validation.dependOn.PreoperativeDiagnosisCode='PreoperativeDiagnosisCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vzoc8YokEeSkH97cUQxLGA" base_Class="_y5C8IOzbEeOnE-G4kptBiw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProblemConcernActTemplateId ProblemConcernAct2EffectiveTimeLow ProblemConcernActStatusCode ProblemConcernActStatusCodeP ProblemConcernActEffectiveTime ProblemConcernActCode ProblemConcernActCodeP ProblemConcernActProblemObservation2' templateId.root='2.16.840.1.113883.10.20.22.4.3' templateId.extension='2014-06-09' constraints.validation.info='ProblemConcernAct2EffectiveTimeHigh ProblemConcernAct2ProviderPriorityPreference' constraints.validation.dependOn.ProblemConcernActStatusCode='ProblemConcernActStatusCodeP' code.code='CONC' code.codeSystem='2.16.840.1.113883.5.6' code.codeSystemName='HL7ActClass' code.displayName='Concern' constraints.validation.dependOn.ProblemConcernActCode='ProblemConcernActCodeP' constraints.validation.warning='ProblemConcernAct2AuthorParticipation'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_vz7X4IokEeSkH97cUQxLGA" base_Class="_prDAkPDCEeOKPKE9au0oug">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProblemObservationTemplateId ProblemObservation2HasOnsetDate ProblemObservationEffectiveTime ProblemObservationValueP' templateId.root='2.16.840.1.113883.10.20.22.4.4' templateId.extension='2014-06-09' constraints.validation.info='ProblemObservation2HasResolutionDate ProblemObservationNegationInd ProblemObservation2PatientPriorityPreference ProblemObservation2PrognosisObservation ProblemObservation2ProviderPriorityPreference ProblemObservation2CDQualifier ProblemObservation2CDCode' value.codeSystem='2.16.840.1.113883.6.96' value.codeSystemName='SNOMEDCT' constraints.validation.warning='ProblemObservationValue ProblemObservation2AuthorParticipation' constraints.validation.dependOn.ProblemObservationValue='ProblemObservationValueP' constraints.validation.query='ProblemObservation2CDQualifier ProblemObservation2CDCode'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolProblemObservation2CD constraints.validation.info='ProblemObservation2CDQualifier ProblemObservation2CDCode'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_v0QIAookEeSkH97cUQxLGA" base_Class="_CFMuYPDbEeOKPKE9au0oug">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProcedureActivityActTemplateId ProcedureActivityAct2InstructionsInversion' templateId.root='2.16.840.1.113883.10.20.22.4.12' templateId.extension='2014-06-09' constraints.validation.info='ProcedureActivityActInstruction2 ProcedureActivityActIndication2 ProcedureActivityActMedicationActivity2'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_v0W1sIokEeSkH97cUQxLGA" base_Class="_QoLWAPDjEeOKPKE9au0oug">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProcedureActivityObservationTemplateId ProcedureActivityObservation2InstructionsInversion ProcedureActivityObservationTargetSiteCode' templateId.root='2.16.840.1.113883.10.20.22.4.13' templateId.extension='2014-06-09' targetSiteCode.codeSystem='2.16.840.1.113883.6.96' targetSiteCode.codeSystemName='SNOMEDCT' constraints.validation.warning='ProcedureActivityObservationTargetSiteCodeP' constraints.validation.dependOn.ProcedureActivityObservationTargetSiteCode='ProcedureActivityObservationTargetSiteCodeP' constraints.validation.info='ProcedureActivityObservationIndication2 ProcedureActivityObservationMedicationActivity2 ProcedureActivityObservationInstruction2'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_v0h00YokEeSkH97cUQxLGA" base_Class="_fCVOQPDqEeOKPKE9au0oug">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProcedureActivityProcedureTemplateId ProcedureActivityProcedure2InstructionsInversion ProcedureActivityProcedureTargetSiteCode' templateId.root='2.16.840.1.113883.10.20.22.4.14' templateId.extension='2014-06-09' targetSiteCode.codeSystem='2.16.840.1.113883.6.96' targetSiteCode.codeSystemName='SNOMEDCT' constraints.validation.warning='ProcedureActivityProcedureTargetSiteCodeP' constraints.validation.dependOn.ProcedureActivityProcedureTargetSiteCode='ProcedureActivityProcedureTargetSiteCodeP' constraints.validation.info='ProcedureActivityProcedureIndication2 ProcedureActivityProcedureMedicationActivity2 ProcedureActivityProcedureInstruction2 ProcedureActivityProcedureSpecimen'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_v0uCEYokEeSkH97cUQxLGA" base_Class="_U3yosPDxEeOKPKE9au0oug">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ReactionObservationTemplateId ReactionObservation2ProcedureActivityProcedureInversionInd ReactionObservation2MedicationActivityInversionInd ReactionObservation2SeverityObservationInversionInd ReactionObservationCode ReactionObservationCodeP' templateId.root='2.16.840.1.113883.10.20.22.4.9' templateId.extension='2014-06-09' code.code='ASSERTION' code.codeSystem='2.16.840.1.113883.5.4' code.codeSystemName='HL7ActCode' constraints.validation.dependOn.ReactionObservationCode='ReactionObservationCodeP' constraints.validation.info='ReactionObservationProcedureActivityProcedure2 ReactionObservationMedicationActivity2 ReactionObservationSeverityObservation2'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_v05BMYokEeSkH97cUQxLGA" base_Class="_H85E0PF7EeOmsLWmq5fnqQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ResultObservationTemplateId ResultObservationEffectiveTime' templateId.root='2.16.840.1.113883.10.20.22.4' templateId.extension='2014-06-09' constraints.validation.warning='ResultObservation2CodeValue ResultObservation2AuthorParticipation'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_v0-gwIokEeSkH97cUQxLGA" base_Class="_gU40UPGEEeOmsLWmq5fnqQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ResultOrganizerTemplateId ResultOrganizerResultObservation2' templateId.root='2.16.840.1.113883.10.20.22.4.1' templateId.extension='2014-06-09' constraints.validation.warning='ResultOrganizer2CodeValue ResultOrganizer2AuthorParticipation' constraints.validation.info='ResultOrganizer2EffectiveTime'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_v1HDoIokEeSkH97cUQxLGA" base_Class="_B0oKYPJdEeO2NaSiicarcg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='SeverityObservationTemplateId SeverityObservationCode SeverityObservationCodeP' templateId.root='2.16.840.1.113883.10.20.22.4.8' templateId.extension='2014-06-09' code.code='SEV' code.codeSystem='2.16.840.1.113883.5.4' code.codeSystemName='HL7ActCode' code.displayName='Severity' constraints.validation.dependOn.SeverityObservationCode='SeverityObservationCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_v1PmgIokEeSkH97cUQxLGA" base_Class="_b_iGIPJfEeO2NaSiicarcg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='SocialHistoryObservationTemplateId SocialHistoryObservationCodeP SocialHistoryObservation2EffectiveTime' templateId.root='2.16.840.1.113883.10.20.22.4.38' templateId.extension='2014-06-09' constraints.validation.warning='SocialHistoryObservationValue SocialHistoryObservationCode SocialHistoryObservation2AuthorParticipation' code.codeSystem='2.16.840.1.113883.6.96' code.codeSystemName='SNOMEDCT'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_v1aloIokEeSkH97cUQxLGA" base_Class="_K3M6IPKJEeOn7bMsPcStOw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='SubstanceOrDeviceAllergyObservationTemplateId SubstanceOrDeviceAllergyObservation2ReactionInversionIndicator SubstanceOrDeviceAllergyObservation2SeverityInversionIndicator SubstanceOrDeviceAllergyObservationEffectiveTime SubstanceOrDeviceAllergyObservationValue SubstanceOrDeviceAllergyObservationValueP SubstanceOrDeviceAllergyObservationCode SubstanceOrDeviceAllergyObservationCodeP SubstanceOrDeviceAllergyObservation2IVLTSLow SubstanceOrDeviceAllergyObservation2ParticipantParticipantRolePlayingEntityAllergySpecificMedication SubstanceOrDeviceAllergyObservation2ParticipantParticipantRolePlayingEntityOriginalTextReference SubstanceOrDeviceAllergyObservation2ParticipantParticipantRolePlayingEntityReferenceValue SubstanceOrDeviceAllergyObservation2ParticipantParticipantRolePlayingEntityOriginalTextReferenceValue SubstanceOrDeviceAllergyObservation2ParticipantParticipantRolePlayingEntityAllergyClassMedication SubstanceOrDeviceAllergyObservation2ParticipantParticipantRolePlayingEntityAllergyFoodOtherSubstance SubstanceOrDeviceAllergyObservation2ParticipantParticipantRoleSubstanceOrDeviceAllergyObservationParticipantParticipantRolePlayingEntityCode SubstanceOrDeviceAllergyObservation2ParticipantSubstanceOrDeviceAllergyObservationParticipantParticipantRolePlayingEntity SubstanceOrDeviceAllergyObservation2SubstanceOrDeviceAllergyObservationParticipantParticipantRole' templateId.root='2.16.840.1.113883.10.20.24.3.90' templateId.extension='2014-06-09' value.codeSystem='2.16.840.1.113883.6.96' value.codeSystemName='SNOMEDCT' constraints.validation.dependOn.SubstanceOrDeviceAllergyObservationValue='SubstanceOrDeviceAllergyObservationValueP' code.code='ASSERTION' code.codeSystem='2.16.840.1.113883.5.4' code.codeSystemName='HL7ActCode' code.displayName='Assertion' constraints.validation.dependOn.SubstanceOrDeviceAllergyObservationCode='SubstanceOrDeviceAllergyObservationCodeP' constraints.validation.warning='SubstanceOrDeviceAllergyObservationParticipant SubstanceOrDeviceAllergyObservationReactionObservation2 SubstanceOrDeviceAllergyObservation2AuthorParticipation' constraints.validation.info='SubstanceOrDeviceAllergyObservationSeverityObservation2 SubstanceOrDeviceAllergyObservation2IVLTSHigh' constraints.validation.query='SubstanceOrDeviceAllergyObservation2IVLTSLow SubstanceOrDeviceAllergyObservation2IVLTSHigh SubstanceOrDeviceAllergyObservation2ParticipantParticipantRolePlayingEntityAllergySpecificMedication SubstanceOrDeviceAllergyObservation2ParticipantParticipantRolePlayingEntityOriginalTextReference SubstanceOrDeviceAllergyObservation2ParticipantParticipantRolePlayingEntityReferenceValue SubstanceOrDeviceAllergyObservation2ParticipantParticipantRolePlayingEntityOriginalTextReferenceValue SubstanceOrDeviceAllergyObservation2ParticipantParticipantRolePlayingEntityAllergyClassMedication SubstanceOrDeviceAllergyObservation2ParticipantParticipantRolePlayingEntityAllergyFoodOtherSubstance SubstanceOrDeviceAllergyObservation2ParticipantParticipantRoleSubstanceOrDeviceAllergyObservationParticipantParticipantRolePlayingEntityCode SubstanceOrDeviceAllergyObservation2ParticipantSubstanceOrDeviceAllergyObservationParticipantParticipantRolePlayingEntity SubstanceOrDeviceAllergyObservation2SubstanceOrDeviceAllergyObservationParticipantParticipantRole'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolSubstanceOrDeviceAllergyObservation2IVLTS constraints.validation.error='SubstanceOrDeviceAllergyObservation2IVLTSLow' constraints.validation.info='SubstanceOrDeviceAllergyObservation2IVLTSHigh'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolSubstanceOrDeviceAllergyObservation2Participant constraints.validation.error='SubstanceOrDeviceAllergyObservationParticipantParticipantRole'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolSubstanceOrDeviceAllergyObservation2ParticipantParticipantRole constraints.validation.error='SubstanceOrDeviceAllergyObservationParticipantParticipantRolePlayingEntity'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolSubstanceOrDeviceAllergyObservation2ParticipantParticipantRolePlayingEntity constraints.validation.error='SubstanceOrDeviceAllergyObservationParticipantParticipantRolePlayingEntityCode'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_v18KEYokEeSkH97cUQxLGA" base_Class="_qHUXwPMxEeOUvapeh9bVvQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='TobaccoUseTemplateId TobaccoUseEffectiveTime TobaccoUseCode TobaccoUseCodeP' templateId.root='2.16.840.1.113883.10.20.22.4.85' templateId.extension='2014-06-09' code.code='229819007' code.codeSystem='2.16.840.1.113883.6.96' code.codeSystemName='SNOMEDCT' code.displayName='Tobacco use and exposure' constraints.validation.dependOn.TobaccoUseCode='TobaccoUseCodeP' constraints.validation.warning='TobaccoUse2AuthorParticipation' constraints.validation.info='TobaccoUse2IVLTSHigh' constraints.validation.query='TobaccoUse2IVLTSHigh'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolTobaccoUse2IVLTS constraints.validation.info='TobaccoUse2IVLTSHigh'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_v2HJMYokEeSkH97cUQxLGA" base_Class="__zeTcPM3EeOUvapeh9bVvQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='VitalSignObservationTemplateId VitalSignObservationValue VitalSignObservation2PQUnit' templateId.root='2.16.840.1.113883.10.20.22.4.27' templateId.extension='2014-06-09' constraints.validation.warning='VitalSignObservation2AuthorParticipation' constraints.validation.query='VitalSignObservation2PQUnit'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolVitalSignObservation2PQ unit='1' constraints.validation.error='VitalSignObservation2PQUnit'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_v2N24IokEeSkH97cUQxLGA" base_Class="_dDupoPV2EeONioZkBKP8eQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='VitalSignsOrganizerTemplateId VitalSignsOrganizerCode VitalSignsOrganizerCodeP VitalSignsOrganizerVitalSignObservation2' templateId.root='2.16.840.1.113883.10.20.22.4.26' templateId.extension='2014-06-09' code.code='46680005' code.codeSystem='2.16.840.1.113883.6.96' code.codeSystemName='SNOMEDCT' code.displayName='Vital signs' constraints.validation.dependOn.VitalSignsOrganizerCode='VitalSignsOrganizerCodeP' constraints.validation.info='VitalSignsOrganizerEffectiveTime' constraints.validation.warning='VitalSignsOrganizer2AuthorParticipation'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_v282sIokEeSkH97cUQxLGA" base_Class="_ze150PitEeOXlK95I8tUew">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='CognitiveStatusObservation2TemplateId CognitiveStatusObservation2ClassCode CognitiveStatusObservation2MoodCode CognitiveStatusObservation2Id CognitiveStatusObservation2Code CognitiveStatusObservation2CodeP CognitiveStatusObservation2StatusCode CognitiveStatusObservation2StatusCodeP CognitiveStatusObservation2EffectiveTime CognitiveStatusObservation2Value' templateId.root='2.16.840.1.113883.10.20.22.4.74' templateId.extension='2014-06-09' constraints.validation.warning='CognitiveStatusObservation2ValueDatatype CognitiveStatusObservation2Text CognitiveStatusObservation2AuthorParticipation' classCode='OBS' moodCode='EVN' code.code='311465003' code.codeSystem='2.16.840.1.113883.6.96' code.codeSystemName='SNOMEDCT' code.displayName='Cognitive functions' constraints.validation.dependOn.CognitiveStatusObservation2Code='CognitiveStatusObservation2CodeP' statusCode.code='completed' constraints.validation.info='CognitiveStatusObservation2NonMedicinalSupplyActivity2 CognitiveStatusObservation2CaregiverCharacteristics CognitiveStatusObservation2AssessmentScaleObservation CognitiveStatusObservation2ReferenceRange'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_v3ZioIokEeSkH97cUQxLGA" base_Class="_aetyEPu_EeOyiMEKhdqMGA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='AnesthesiaSectionTemplateId AnesthesiaSectionCode AnesthesiaSectionCodeP' templateId.root='2.16.840.1.113883.10.20.22.2.25' templateId.extension='2014-06-09' code.code='59774-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Anesthesia' constraints.validation.dependOn.AnesthesiaSectionCode='AnesthesiaSectionCodeP' constraints.validation.info='AnesthesiaSectionProcedureActivityProcedure2 AnesthesiaSectionMedicationActivity2'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_v3iskIokEeSkH97cUQxLGA" base_Class="_q_8twPvVEeOvZJBdQKQrqQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='AssessmentAndPlanSectionTemplateId AssessmentAndPlanSectionCode AssessmentAndPlanSectionCodeP' templateId.root='2.16.840.1.113883.10.20.22.2.9' templateId.extension='2014-06-09' code.code='51847-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Assessment and Plan' constraints.validation.dependOn.AssessmentAndPlanSectionCode='AssessmentAndPlanSectionCodeP' constraints.validation.info='AssessmentAndPlanSectionPlannedAct2'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_v3qoYIokEeSkH97cUQxLGA" base_Class="_6M-msPvXEeOes-3T-2HryA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ComplicationsSectionTemplateId ComplicationsSectionCode ComplicationsSectionCodeP' templateId.root='2.16.840.1.113883.10.20.22.2.37' templateId.extension='2014-06-09' code.code='55109-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Complications' constraints.validation.dependOn.ComplicationsSectionCode='ComplicationsSectionCodeP' constraints.validation.info='ComplicationsSectionProblemObservation2'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_v3ykMIokEeSkH97cUQxLGA" base_Class="_kgM0YPvbEeOJwYDYIUCQDg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='EncountersSectionEntriesOptionalTemplateId EncountersSectionEntriesOptionalCode EncountersSectionEntriesOptionalCodeP' templateId.root='2.16.840.1.113883.10.20.22.2.22' templateId.extension='2014-06-09' code.code='46240-8' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Encounters' constraints.validation.dependOn.EncountersSectionEntriesOptionalCode='EncountersSectionEntriesOptionalCodeP' constraints.validation.warning='EncountersSectionEntriesOptionalEncounterActivity2'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_v36gAIokEeSkH97cUQxLGA" base_Class="_8rMFkPyHEeOozpLKXSm5NA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='FunctionalStatusSectionTemplateId FunctionalStatusSectionCode FunctionalStatusSectionCodeP' templateId.root='2.16.840.1.113883.10.20.22.2.14' templateId.extension='2014-06-09' code.code='47420-5' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Functional Status' constraints.validation.dependOn.FunctionalStatusSectionCode='FunctionalStatusSectionCodeP' constraints.validation.info='FunctionalStatusSectionFunctionalStatusOrganizer2 FunctionalStatusSectionFunctionalStatusObservation2 FunctionalStatusSectionNonMedicinalSupplyActivity2 FunctionalStatusSection2SelfCareActivities FunctionalStatusSection2SensoryAndSpeechStatus'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_v4Mz4IokEeSkH97cUQxLGA" base_Class="_sZlggPyhEeOC19UEcu7MOw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='HistoryOfPastIllnessSectionTemplateId HistoryOfPastIllnessSectionCode HistoryOfPastIllnessSectionCodeP' templateId.root='2.16.840.1.113883.10.20.22.2.20' templateId.extension='2014-06-09' code.code='11348-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='History of Past Illness' constraints.validation.dependOn.HistoryOfPastIllnessSectionCode='HistoryOfPastIllnessSectionCodeP' constraints.validation.info='HistoryOfPastIllnessSectionProblemObservation2'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_v4V90IokEeSkH97cUQxLGA" base_Class="_ctJgAPylEeOc0tW1-DpN-Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='HospitalAdmissionDiagnosisSectionTemplateId HospitalAdmissionDiagnosisSectionCode HospitalAdmissionDiagnosisSectionCodeP' templateId.root='2.16.840.1.113883.10.20.22.2.43' templateId.extension='2014-06-09' code.code='46241-6' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Hospital Admission Diagnosis' constraints.validation.dependOn.HospitalAdmissionDiagnosisSectionCode='HospitalAdmissionDiagnosisSectionCodeP' constraints.validation.warning='HospitalAdmissionDiagnosisSectionHospitalAdmissionDiagnosis2'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_v4egsIokEeSkH97cUQxLGA" base_Class="_ZLY3MPyqEeOlg_Cnc5bODw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='HospitalAdmissionMedicationsSectionEntriesOptionalTemplateId HospitalAdmissionMedicationsSectionEntriesOptionalCode HospitalAdmissionMedicationsSectionEntriesOptionalCodeP' templateId.root='2.16.840.1.113883.10.20.22.2.44' templateId.extension='2014-06-09' code.code='42346-7' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Medications on Admission' constraints.validation.dependOn.HospitalAdmissionMedicationsSectionEntriesOptionalCode='HospitalAdmissionMedicationsSectionEntriesOptionalCodeP' constraints.validation.warning='HospitalAdmissionMedicationsSectionEntriesOptionalAdmissionMedication2'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_v4mcgYokEeSkH97cUQxLGA" base_Class="_jfuGYPytEeOmn53IDV99zw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='HospitalDischargeDiagnosisSectionTemplateId HospitalDischargeDiagnosisSectionCode HospitalDischargeDiagnosisSectionCodeP' templateId.root='2.16.840.1.113883.10.20.22.2.24' templateId.extension='2014-06-09' code.code='11535-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Hospital Discharge Diagnosis' constraints.validation.dependOn.HospitalDischargeDiagnosisSectionCode='HospitalDischargeDiagnosisSectionCodeP' constraints.validation.warning='HospitalDischargeDiagnosisSectionHospitalDischargeDiagnosis2'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_v4u_YIokEeSkH97cUQxLGA" base_Class="_HlfBYPyzEeOfAK77IvEBUw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='HospitalDischargeMedicationsSectionEntriesOptionalTemplateId' templateId.root='2.16.840.1.113883.10.20.22.2.11' templateId.extension='2014-06-09' constraints.validation.warning='HospitalDischargeMedicationsSectionEntriesOptionalDischargeMedication2'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_v4xboYokEeSkH97cUQxLGA" base_Class="_kdQhIPy3EeO1SvUcmWeLDQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ImmunizationsSectionEntriesOptionalTemplateId ImmunizationsSectionEntriesOptionalCode ImmunizationsSectionEntriesOptionalCodeP' templateId.root='2.16.840.1.113883.10.20.22.2' templateId.extension='2014-06-09' code.code='11369-6' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Immunizations' constraints.validation.dependOn.ImmunizationsSectionEntriesOptionalCode='ImmunizationsSectionEntriesOptionalCodeP' constraints.validation.warning='ImmunizationsSectionEntriesOptionalImmunizationActivity2'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_v45-gIokEeSkH97cUQxLGA" base_Class="_k8L2YP1HEeOVx4YMwgfjlA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='InstructionsSectionTemplateId InstructionsSectionCode InstructionsSectionCodeP' templateId.root='2.16.840.1.113883.10.20.22.2.45' templateId.extension='2014-06-09' code.code='69730-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Instructions' constraints.validation.dependOn.InstructionsSectionCode='InstructionsSectionCodeP' constraints.validation.warning='InstructionsSectionInstruction2'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_v5B6UIokEeSkH97cUQxLGA" base_Class="_YCS1AP1WEeOW-qBXb0kbTA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='InterventionsSectionTemplateId InterventionsSectionCode InterventionsSectionCodeP' templateId.root='2.16.840.1.113883.10.20.21.2.3' templateId.extension='2014-06-09' code.code='62387-6' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Interventions Provided' constraints.validation.dependOn.InterventionsSectionCode='InterventionsSectionCodeP' constraints.validation.warning='InterventionsSection2InterventionAct'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_v5KdMIokEeSkH97cUQxLGA" base_Class="_5OKxwP1bEeO5Hq-yrsJSmg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='MedicalEquipmentSectionTemplateId MedicalEquipmentSectionCode MedicalEquipmentSectionCodeP' templateId.root='2.16.840.1.113883.10.20.22.2.23' templateId.extension='2014-06-09' code.code='46264-8' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Medical Equipment' constraints.validation.dependOn.MedicalEquipmentSectionCode='MedicalEquipmentSectionCodeP' constraints.validation.warning='MedicalEquipmentSectionNonMedicinalSupplyActivity2 MedicalEquipmentSection2MedicalEquipmentOrganizer MedicalEquipmentSection2ProcedureActivityProcedure2'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_v5U1QIokEeSkH97cUQxLGA" base_Class="_F37nMP4jEeOwFalSp0fRiw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='MedicationsAdministeredSectionTemplateId MedicationsAdministeredSectionCode MedicationsAdministeredSectionCodeP' templateId.root='2.16.840.1.113883.10.20.22.2.38' templateId.extension='2014-06-09' code.code='29549-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Medications Administered' constraints.validation.dependOn.MedicationsAdministeredSectionCode='MedicationsAdministeredSectionCodeP' constraints.validation.info='MedicationsAdministeredSectionMedicationActivity2'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_v5emQIokEeSkH97cUQxLGA" base_Class="_twgM0P4lEeOzC5ykp-XCaA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PayersSectionTemplateId PayersSectionCode PayersSectionCodeP' templateId.root='2.16.840.1.113883.10.20.22.2.18' templateId.extension='2014-06-09' code.code='48768-6' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Payers' constraints.validation.dependOn.PayersSectionCode='PayersSectionCodeP' constraints.validation.warning='PayersSectionCoverageActivity2'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_v5plYIokEeSkH97cUQxLGA" base_Class="_-nZiYP4uEeObaveuCI77uA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PhysicalExamSectionTemplateId PhysicalExamSectionCode PhysicalExamSectionCodeP' templateId.root='2.16.840.1.113883.10.20.2.10' templateId.extension='2014-06-09' code.code='29545-1' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Physical Findings' constraints.validation.dependOn.PhysicalExamSectionCode='PhysicalExamSectionCodeP' constraints.validation.info='PhysicalExamSection2WoundObservation PhysicalExamSectionHighestPressureUlcerStage PhysicalExamSectionNumberOfPressureUlcersObservation'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_v54O4IokEeSkH97cUQxLGA" base_Class="_bwml0P4yEeO_Yb9cO8w3bA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PlanOfCareSectionTemplateId PlanOfCareSectionCode PlanOfCareSectionCodeP' templateId.root='2.16.840.1.113883.10.20.22.2.10' templateId.extension='2014-06-09' code.code='18776-5' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Plan of Treatment' constraints.validation.dependOn.PlanOfCareSectionCode='PlanOfCareSectionCodeP' constraints.validation.info='PlanOfCareSectionPlannedObservation2 PlanOfCareSectionPlannedEncounter2 PlanOfCareSectionPlannedAct2 PlanOfCareSectionPlannedProcedure2 PlanOfCareSectionPlannedMedicationActivity2 PlanOfCareSectionPlannedSupply2 PlanOfCareSectionInstruction2 PlanOfTreatmentSection2HandoffCommunication PlanOfTreatmentSection2NutritionRecommendations'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_v6M_AYokEeSkH97cUQxLGA" base_Class="_dz0ZwP49EeO_F_2qLv6FWQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PlannedProcedureSectionTemplateId PlannedProcedureSectionCode PlannedProcedureSectionCodeP' templateId.root='2.16.840.1.113883.10.20.22.2.30' templateId.extension='2014-06-09' code.code='59772-4' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Planned Procedure' constraints.validation.dependOn.PlannedProcedureSectionCode='PlannedProcedureSectionCodeP' constraints.validation.info='PlannedProcedureSectionPlannedProcedure2'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_v6U60ookEeSkH97cUQxLGA" base_Class="_MLNngP5BEeOmw9RN80Tpig">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PostprocedureDiagnosisSectionTemplateId PostprocedureDiagnosisSectionCode PostprocedureDiagnosisSectionCodeP' templateId.root='2.16.840.1.113883.10.20.22.2.36' templateId.extension='2014-06-09' code.code='59769-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Postprocedure Diagnosis' constraints.validation.dependOn.PostprocedureDiagnosisSectionCode='PostprocedureDiagnosisSectionCodeP' constraints.validation.warning='PostprocedureDiagnosisSectionPostprocedureDiagnosis2'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_v6ddsIokEeSkH97cUQxLGA" base_Class="_JFd3MP5EEeOBnLkJOVC8NQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PreoperativeDiagnosisSectionTemplateId PreoperativeDiagnosisSectionCode PreoperativeDiagnosisSectionCodeP' templateId.root='2.16.840.1.113883.10.20.22.2.34' templateId.extension='2014-06-09' code.code='10219-4' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Preoperative Diagnosis' constraints.validation.dependOn.PreoperativeDiagnosisSectionCode='PreoperativeDiagnosisSectionCodeP' constraints.validation.warning='PreoperativeDiagnosisSectionPreoperativeDiagnosis2'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_v6lZgIokEeSkH97cUQxLGA" base_Class="_lLOykP5FEeO_r7yO9mhwnA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProcedureFindingsSectionTemplateId ProcedureFindingsSectionCode ProcedureFindingsSectionCodeP' templateId.root='2.16.840.1.113883.10.20.22.2.28' templateId.extension='2014-06-09' code.code='59776-5' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Procedure Findings' constraints.validation.dependOn.ProcedureFindingsSectionCode='ProcedureFindingsSectionCodeP' constraints.validation.info='ProcedureFindingsSectionProblemObservation2'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_v6tVUYokEeSkH97cUQxLGA" base_Class="_5_O94AByEeSjnfOPJpFg3A">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProcedureIndicationsSectionTemplateId ProcedureIndicationsSectionCode ProcedureIndicationsSectionCodeP' templateId.root='2.16.840.1.113883.10.20.22.2.29' templateId.extension='2014-06-09' code.code='59768-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Procedure Indications' constraints.validation.dependOn.ProcedureIndicationsSectionCode='ProcedureIndicationsSectionCodeP' constraints.validation.info='ProcedureIndicationsSectionIndication2'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_v61RIYokEeSkH97cUQxLGA" base_Class="_80dMoAB0EeSLOb2O6vSPzg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProceduresSectionEntriesOptionalTemplateId ProceduresSectionEntriesOptionalCode ProceduresSectionEntriesOptionalCodeP' templateId.root='2.16.840.1.113883.10.20.22.2.7' templateId.extension='2014-06-09' code.code='47519-4' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='History of Procedures' constraints.validation.dependOn.ProceduresSectionEntriesOptionalCode='ProceduresSectionEntriesOptionalCodeP' constraints.validation.info='ProceduresSectionEntriesOptionalProcedureActivityProcedure2 ProceduresSectionEntriesOptionalProcedureActivityObservation2 ProceduresSectionEntriesOptionalProcedureActivityAct2'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_v7CFcIokEeSkH97cUQxLGA" base_Class="_Ya0H0AB5EeS20Pddu0dxVw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ReasonForReferralSectionTemplateId ReasonForReferralSectionCode ReasonForReferralSectionCodeP' templateId.root='1.3.6.1.4.1.19376.1.5.3.1.3.1' templateId.extension='2014-06-09' code.code='42349-1' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Reason for Referral' constraints.validation.dependOn.ReasonForReferralSectionCode='ReasonForReferralSectionCodeP' constraints.validation.info='ReasonForReferralSection2PatientReferralAct'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_v7KBQIokEeSkH97cUQxLGA" base_Class="_yaJ3QAFAEeSaVZ5WxWd94w">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ResultsSectionEntriesOptionalTemplateId ResultsSectionEntriesOptionalCode ResultsSectionEntriesOptionalCodeP' templateId.root='2.16.840.1.113883.10.20.22.2.3' templateId.extension='2014-06-09' code.code='30954-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Relevant diagnostic tests and/or laboratory data' constraints.validation.dependOn.ResultsSectionEntriesOptionalCode='ResultsSectionEntriesOptionalCodeP' constraints.validation.warning='ResultsSectionEntriesOptionalResultOrganizer2'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_v7R9EIokEeSkH97cUQxLGA" base_Class="_wLWZMAFHEeSG_MJH-zNFRw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='SocialHistorySectionTemplateId SocialHistorySectionCode SocialHistorySectionCodeP' templateId.root='2.16.840.1.113883.10.20.22.2.17' templateId.extension='2014-06-09' code.code='29762-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Social History' constraints.validation.dependOn.SocialHistorySectionCode='SocialHistorySectionCodeP' constraints.validation.info='SocialHistorySectionSocialHistoryObservation2 SocialHistorySectionTobaccoUse2 SocialHistorySection2CaregiverCharacteristics SocialHistorySection2CulturalAndReligiousObservation SocialHistorySection2CharacteristicsOfHomeEnvironment' constraints.validation.warning='SocialHistorySectionCurrentSmokingStatus2'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_v7gmkIokEeSkH97cUQxLGA" base_Class="_8LkzYAFTEeSmasYc71ZgMQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='VitalSignsSectionEntriesOptionalTemplateId VitalSignsSectionEntriesOptionalCode VitalSignsSectionEntriesOptionalCodeP' templateId.root='2.16.840.1.113883.10.20.22.2.4' templateId.extension='2014-06-09' code.code='8716-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Vital Signs' constraints.validation.dependOn.VitalSignsSectionEntriesOptionalCode='VitalSignsSectionEntriesOptionalCodeP' constraints.validation.warning='VitalSignsSectionEntriesOptionalVitalSignsOrganizer2'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_v7oiYIokEeSkH97cUQxLGA" base_Class="_jsKhYAFXEeSLIY0bHb-fFQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='AdvanceDirectivesSectionEntriesOptionalTemplateId AdvanceDirectivesSectionEntriesOptionalCode AdvanceDirectivesSectionEntriesOptionalCodeP' templateId.root='2.16.840.1.113883.10.20.22.2.21' templateId.extension='2014-06-09' code.code='42348-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Advance Directives' constraints.validation.dependOn.AdvanceDirectivesSectionEntriesOptionalCode='AdvanceDirectivesSectionEntriesOptionalCodeP' constraints.validation.info='AdvanceDirectivesSectionEntriesOptionalAdvanceDirectiveOrganizer'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_v7weMIokEeSkH97cUQxLGA" base_Class="_JUvaUAFaEeS0nNJt6oyOyQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='MedicationsSectionEntriesOptionalTemplateId MedicationsSectionEntriesOptionalCode MedicationsSectionEntriesOptionalCodeP' templateId.root='2.16.840.1.113883.10.20.22.2.1' templateId.extension='2014-06-09' code.code='10160-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='History of medication use' constraints.validation.dependOn.MedicationsSectionEntriesOptionalCode='MedicationsSectionEntriesOptionalCodeP' constraints.validation.warning='MedicationsSectionEntriesOptionalMedicationActivity2'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_v75BEIokEeSkH97cUQxLGA" base_Class="_ZgLioAFkEeSJ2uHfynwxCw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProblemSectionEntriesOptionalTemplateId ProblemSectionEntriesOptionalCode ProblemSectionEntriesOptionalCodeP' templateId.root='2.16.840.1.113883.10.20.22.2.5' templateId.extension='2014-06-09' code.code='11450-4' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Problem List' constraints.validation.dependOn.ProblemSectionEntriesOptionalCode='ProblemSectionEntriesOptionalCodeP' constraints.validation.warning='ProblemSectionEntriesOptionalProblemConcernAct2' constraints.validation.info='ProblemSectionEntriesOptional2HealthStatusObservation2'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_v8CyEIokEeSkH97cUQxLGA" base_Class="_ZFbCkAIPEeS-F85KYVlDyA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='AdvanceDirectivesSectionEntriesOptionalTemplateId AdvanceDirectivesSectionEntriesOptionalAdvanceDirectiveOrganizer' templateId.root='2.16.840.1.113883.10.20.22.2.21.1' templateId.extension='2014-06-09'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_v8F1YYokEeSkH97cUQxLGA" base_Class="_nWAcMAIjEeSVzfoPSatgpg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='AllergiesSectionEntriesOptionalTemplateId AllergiesSectionEntriesOptionalCode AllergiesSectionEntriesOptionalCodeP' templateId.root='2.16.840.1.113883.10.20.22.2.6' templateId.extension='2014-06-09' code.code='48765-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Allergies, adverse reactions, alerts' constraints.validation.dependOn.AllergiesSectionEntriesOptionalCode='AllergiesSectionEntriesOptionalCodeP' constraints.validation.warning='AllergiesSectionEntriesOptionalAllergyConcernAct2'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_v8OYQIokEeSkH97cUQxLGA" base_Class="_EONPMAInEeSr1aKUYorURA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='AllergiesSectionEntriesOptionalTemplateId AllergiesSectionEntriesOptionalCode AllergiesSectionEntriesOptionalCodeP AllergiesSection2Title AllergiesSection2Text AllergiesSectionEntriesOptionalAllergyConcernAct2' templateId.root='2.16.840.1.113883.10.20.22.2.6.1' templateId.extension='2014-06-09' code.code='48765-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Allergies, adverse reactions, alerts' constraints.validation.dependOn.AllergiesSectionEntriesOptionalCode='AllergiesSectionEntriesOptionalCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_v8ZXYIokEeSkH97cUQxLGA" base_Class="_ogD-EAIvEeScubSeRE1upQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='EncountersSectionEntriesOptionalTemplateId EncountersSectionEntriesOptionalCode EncountersSectionEntriesOptionalCodeP EncountersSection2Text EncountersSection2Title EncountersSectionEntriesOptionalEncounterActivity2' templateId.root='2.16.840.1.113883.10.20.22.2.22.1' templateId.extension='2014-06-09' code.code='46240-8' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Encounters' constraints.validation.dependOn.EncountersSectionEntriesOptionalCode='EncountersSectionEntriesOptionalCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_v8k9kIokEeSkH97cUQxLGA" base_Class="_Jt0moAI0EeSRkrs1G7P_XQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='HospitalDischargeMedicationsSectionEntriesOptionalTemplateId DischargeMedicationsSection2Code DischargeMedicationsSection2CodeP DischargeMedicationsSection2Title DischargeMedicationsSection2Text HospitalDischargeMedicationsSectionEntriesOptionalDischargeMedication2' templateId.root='2.16.840.1.113883.10.20.22.2.11.1' templateId.extension='2014-06-09' code.code='10183-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Hospital Discharge Medications' constraints.validation.dependOn.DischargeMedicationsSection2Code='DischargeMedicationsSection2CodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_v8v8sIokEeSkH97cUQxLGA" base_Class="_14bikALNEeSIPYXg7AgJzw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ImmunizationsSectionEntriesOptionalTemplateId ImmunizationsSectionEntriesOptionalCode ImmunizationsSectionEntriesOptionalCodeP ImmunizationsSection2Title ImmunizationsSection2Text ImmunizationsSectionEntriesOptionalImmunizationActivity2' templateId.root='2.16.840.1.113883.10.20.22.2.2.1' templateId.extension='2014-06-09' code.code='11369-6' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Immunizations' constraints.validation.dependOn.ImmunizationsSectionEntriesOptionalCode='ImmunizationsSectionEntriesOptionalCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_v87i4IokEeSkH97cUQxLGA" base_Class="_P2mp4ALQEeS0YMHMf4rRtQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='MedicationsSectionEntriesOptionalTemplateId MedicationsSectionEntriesOptionalCode MedicationsSectionEntriesOptionalCodeP MedicationsSection2Title MedicationsSection2Text MedicationsSectionEntriesOptionalMedicationActivity2' templateId.root='2.16.840.1.113883.10.20.22.2.1.1' templateId.extension='2014-06-09' code.code='10160-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='History of medication use' constraints.validation.dependOn.MedicationsSectionEntriesOptionalCode='MedicationsSectionEntriesOptionalCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_v9HJEIokEeSkH97cUQxLGA" base_Class="_IXrA4ALVEeSyydFGYJajGA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProblemSectionEntriesOptionalTemplateId ProblemSectionEntriesOptionalCode ProblemSectionEntriesOptionalCodeP ProblemSection2Title ProblemSection2Text ProblemSectionEntriesOptionalProblemConcernAct2' templateId.root='2.16.840.1.113883.10.20.22.2.5.1' templateId.extension='2014-06-09' code.code='11450-4' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Problem List' constraints.validation.dependOn.ProblemSectionEntriesOptionalCode='ProblemSectionEntriesOptionalCodeP' constraints.validation.info='ProblemSectionEntriesOptional2HealthStatusObservation2'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_v9UkcIokEeSkH97cUQxLGA" base_Class="_N6wUUALoEeSBA9s7kRnaEg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProceduresSectionEntriesOptionalTemplateId ProceduresSection2HasProcedureActivity ProceduresSectionEntriesOptionalCode ProceduresSectionEntriesOptionalCodeP ProceduresSection2Title ProceduresSection2Text' templateId.root='2.16.840.1.113883.10.20.22.2.7.1' templateId.extension='2014-06-09' code.code='47519-4' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='History of Procedures' constraints.validation.dependOn.ProceduresSectionEntriesOptionalCode='ProceduresSectionEntriesOptionalCodeP' constraints.validation.info='ProceduresSectionEntriesOptionalProcedureActivityProcedure2 ProceduresSectionEntriesOptionalProcedureActivityObservation2 ProceduresSectionEntriesOptionalProcedureActivityAct2'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_v9jN8IokEeSkH97cUQxLGA" base_Class="_bAAhEALtEeSueJWOLw5iaQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ResultsSectionEntriesOptionalTemplateId ResultsSectionEntriesOptionalCode ResultsSectionEntriesOptionalCodeP ResultsSection2Title ResultsSection2Text ResultsSectionEntriesOptionalResultOrganizer2' templateId.root='2.16.840.1.113883.10.20.22.2.3.1' templateId.extension='2014-06-09' code.code='30954-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Relevant diagnostic tests and/or laboratory data' constraints.validation.dependOn.ResultsSectionEntriesOptionalCode='ResultsSectionEntriesOptionalCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_v906wIokEeSkH97cUQxLGA" base_Class="_D3010ALzEeSM0Jd2D1FgKw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='VitalSignsSectionEntriesOptionalTemplateId VitalSignsSectionEntriesOptionalCode VitalSignsSectionEntriesOptionalCodeP VitalSignsSection2Title VitalSignsSection2Text VitalSignsSectionEntriesOptionalVitalSignsOrganizer2' templateId.root='2.16.840.1.113883.10.20.22.2.4.1' templateId.extension='2014-06-09' code.code='8716-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Vital Signs' constraints.validation.dependOn.VitalSignsSectionEntriesOptionalCode='VitalSignsSectionEntriesOptionalCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_v-ZigIokEeSkH97cUQxLGA" base_Class="_PkP3oCFmEeSt4IEYu7xgbw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='GeneralHeaderConstraintsTemplateId ConsultationNote2DoesNotHaveAssementAndPlanSection2WhenAssementAndPlanOfTreatment2ArePresent ConsultationNote2HasReasonForReferral2OrReasonForVisit ConsultationNote2Code ConsultationNote2CodeP ConsultationNote2InFulfillmentOf ConsultationNote2ComponentOf ConsultationNote2HistoryOfPresentIllnessSection ConsultationNote2AllergiesSection2 ConsultationNote2ProblemSection2 ConsultationNote2ParticipantAssociatedEntityAssociatedPersonName ConsultationNote2ParticipantAssociatedEntityClassCode ConsultationNote2ParticipantAssociatedEntityId ConsultationNote2ParticipantAssociatedEntityTelecom ConsultationNote2ParticipantAssociatedEntityAssociatedPerson ConsultationNote2ParticipantTypeCode ConsultationNote2ParticipantAssociatedEntity ConsultationNote2InFulfillmentOfOrderId ConsultationNote2InFulfillmentOfOrder ConsultationNote2ComponentOfEncompassingEncounterResponsiblePartyAssignedEntityHasPersonOrganizationOrBoth ConsultationNote2ComponentOfEncompassingEncounterResponsiblePartyAssignedEntity ConsultationNote2ComponentOfEncompassingEncounterEncounterParticipantAssignedEntityHasPersonOrganizationOrBoth ConsultationNote2ComponentOfEncompassingEncounterEncounterParticipantAssignedEntity ConsultationNote2ComponentOfEncompassingEncounterPreciseToTheDay ConsultationNote2ComponentOfEncompassingEncounterId ConsultationNote2ComponentOfEncompassingEncounterEffectiveTime ConsultationNote2ComponentOfEncompassingEncounter' templateId.root='2.16.840.1.113883.10.20.22.1.4' templateId.extension='2014-06-09' constraints.validation.info='ConsultationNote2HasAnAssementAndPlanSection2OrBothAssementSectionAndPlanOfTreatmentSection2 GeneralHeaderConstraintsTitle ConsultationNote2AssessmentSection ConsultationNote2AssessmentAndPlanSection2 ConsultationNote2PlanOfTreatmentSection2 ConsultationNote2ReasonForReferralSection2 ConsultationNote2ReasonForVisitSection ConsultationNote2ChiefComplaintSection ConsultationNote2ChiefComplaintAndReasonForVisitSection ConsultationNote2GeneralStatusSection ConsultationNote2HistoryOfPastIllnessSection2 ConsultationNote2ImmunizationsSectionEntriesOptional2 ConsultationNote2ProceduresSectionEntriesOptional2 ConsultationNote2SocialHistorySection2 ConsultationNote2VitalSignsSection2 ConsultationNote2AdvanceDirectivesSectionEntriesOptional2 ConsultationNote2FunctionalStatusSection2 ConsultationNote2ReviewOfSystemsSection ConsultationNote2MedicalEquipmentSection2 ConsultationNote2MentalStatusSection ConsultationNote2NutritionSection ConsultationNote2ParticipantAssociatedEntityScopingOrganization ConsultationNote2ComponentOfEncompassingEncounterPreciseToTheSecond ConsultationNote2ComponentOfEncompassingEncounterResponsibleParty ConsultationNote2ComponentOfEncompassingEncounterEncounterParticipant' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' constraints.validation.dependOn.ConsultationNote2Code='ConsultationNote2CodeP' constraints.validation.warning='ConsultationNote2Participant ConsultationNote2PhysicalExamSection2 ConsultationNote2MedicationsSection2 ConsultationNote2ResultsSection2 ConsultationNote2ParticipantAssociatedEntityAddr ConsultationNote2ComponentOfEncompassingEncounterPreciseToTheMinute ConsultationNote2ComponentOfEncompassingEncounterIfMorePreciseThanDayIncludeTimeZoneOffset' constraints.validation.query='ConsultationNote2ParticipantAssociatedEntityAssociatedPersonName ConsultationNote2ParticipantAssociatedEntityClassCode ConsultationNote2ParticipantAssociatedEntityId ConsultationNote2ParticipantAssociatedEntityAddr ConsultationNote2ParticipantAssociatedEntityTelecom ConsultationNote2ParticipantAssociatedEntityAssociatedPerson ConsultationNote2ParticipantAssociatedEntityScopingOrganization ConsultationNote2ParticipantTypeCode ConsultationNote2ParticipantAssociatedEntity ConsultationNote2InFulfillmentOfOrderId ConsultationNote2InFulfillmentOfOrder ConsultationNote2ComponentOfEncompassingEncounterResponsiblePartyAssignedEntityHasPersonOrganizationOrBoth ConsultationNote2ComponentOfEncompassingEncounterResponsiblePartyAssignedEntity ConsultationNote2ComponentOfEncompassingEncounterEncounterParticipantAssignedEntityHasPersonOrganizationOrBoth ConsultationNote2ComponentOfEncompassingEncounterEncounterParticipantAssignedEntity ConsultationNote2ComponentOfEncompassingEncounterPreciseToTheDay ConsultationNote2ComponentOfEncompassingEncounterPreciseToTheMinute ConsultationNote2ComponentOfEncompassingEncounterPreciseToTheSecond ConsultationNote2ComponentOfEncompassingEncounterIfMorePreciseThanDayIncludeTimeZoneOffset ConsultationNote2ComponentOfEncompassingEncounterId ConsultationNote2ComponentOfEncompassingEncounterEffectiveTime ConsultationNote2ComponentOfEncompassingEncounterResponsibleParty ConsultationNote2ComponentOfEncompassingEncounterEncounterParticipant ConsultationNote2ComponentOfEncompassingEncounter'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolConsultationNote2Participant typeCode='CALLBCK' constraints.validation.error='ConsultationNote2ParticipantTypeCode ConsultationNote2ParticipantAssociatedEntity'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolConsultationNote2ParticipantAssociatedEntity classCode='ASSIGNED' constraints.validation.error='ConsultationNote2ParticipantAssociatedEntityClassCode ConsultationNote2ParticipantAssociatedEntityId ConsultationNote2ParticipantAssociatedEntityTelecom ConsultationNote2ParticipantAssociatedEntityAssociatedPerson' constraints.validation.warning='ConsultationNote2ParticipantAssociatedEntityAddr' constraints.validation.info='ConsultationNote2ParticipantAssociatedEntityScopingOrganization'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolConsultationNote2ParticipantAssociatedEntityAssociatedPerson constraints.validation.error='ConsultationNote2ParticipantAssociatedEntityAssociatedPersonName'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolConsultationNote2InFulfillmentOf constraints.validation.error='ConsultationNote2InFulfillmentOfOrder'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolConsultationNote2InFulfillmentOfOrder constraints.validation.error='ConsultationNote2InFulfillmentOfOrderId'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolConsultationNote2ComponentOf constraints.validation.error='ConsultationNote2ComponentOfEncompassingEncounter'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolConsultationNote2ComponentOfEncompassingEncounter constraints.validation.error='ConsultationNote2ComponentOfEncompassingEncounterPreciseToTheDay ConsultationNote2ComponentOfEncompassingEncounterId ConsultationNote2ComponentOfEncompassingEncounterEffectiveTime' constraints.validation.warning='ConsultationNote2ComponentOfEncompassingEncounterPreciseToTheMinute ConsultationNote2ComponentOfEncompassingEncounterIfMorePreciseThanDayIncludeTimeZoneOffset' constraints.validation.info='ConsultationNote2ComponentOfEncompassingEncounterPreciseToTheSecond ConsultationNote2ComponentOfEncompassingEncounterResponsibleParty ConsultationNote2ComponentOfEncompassingEncounterEncounterParticipant'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolConsultationNote2ComponentOfEncompassingEncounterResponsibleParty constraints.validation.error='ConsultationNote2ComponentOfEncompassingEncounterResponsiblePartyAssignedEntityHasPersonOrganizationOrBoth ConsultationNote2ComponentOfEncompassingEncounterResponsiblePartyAssignedEntity'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolConsultationNote2ComponentOfEncompassingEncounterEncounterParticipant constraints.validation.error='ConsultationNote2ComponentOfEncompassingEncounterEncounterParticipantAssignedEntityHasPersonOrganizationOrBoth ConsultationNote2ComponentOfEncompassingEncounterEncounterParticipantAssignedEntity'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_v_mcYIokEeSkH97cUQxLGA" base_Class="_lPMNYCGjEeSt4IEYu7xgbw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='GeneralHeaderConstraintsTemplateId ContinuityOfCareDocument2Code ContinuityOfCareDocument2CodeP ContinuityOfCareDocument2Author ContinuityOfCareDocument2DocumentationOf ContinuityOfCareDocument2AllergiesSection2 ContinuityOfCareDocument2MedicationsSection2 ContinuityOfCareDocument2ProblemSection2 ContinuityOfCareDocument2ResultsSection2 ContinuityOfCareDocument2SocialHistorySection2 ContinuityOfCareDocument2VitalSignsSection2 ContinuityOfCareDocument2AuthorAssignedAuthorHasAssignedPersonOrRepresentedOrganization ContinuityOfCareDocument2AuthorAssignedAuthorHasRepresentOrganization ContinuityOfCareDocument2AuthorAssignedAuthor ContinuityOfCareDocument2DocumentationOfServiceEventIVLTSLow ContinuityOfCareDocument2DocumentationOfServiceEventIVLTSHigh ContinuityOfCareDocument2DocumentationOfServiceEventPerformerAssignedEntityId ContinuityOfCareDocument2DocumentationOfServiceEventPerformerTypeCode ContinuityOfCareDocument2DocumentationOfServiceEventClassCode ContinuityOfCareDocument2DocumentationOfServiceEventEffectiveTime ContinuityOfCareDocument2DocumentationOfServiceEvent' templateId.root='2.16.840.1.113883.10.20.22.1.2' templateId.extension='2014-06-09' code.code='34133-9' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Summarization of Episode Note' constraints.validation.dependOn.ContinuityOfCareDocument2Code='ContinuityOfCareDocument2CodeP' constraints.validation.warning='ContinuityOfCareDocument2ProceduresSection2 ContinuityOfCareDocument2PlanOfTreatmentSection2 ContinuityOfCareDocument2DocumentationOfServiceEventPerformerAssignedEntityHasNationalProviderIdentifier ContinuityOfCareDocument2DocumentationOfServiceEventPerformer' constraints.validation.info='ContinuityOfCareDocument2AdvanceDirectivesSectionEntriesOptional2 ContinuityOfCareDocument2EncountersSectionEntriesOptional2 ContinuityOfCareDocument2FunctionalStatusSection2 ContinuityOfCareDocument2ImmunizationsSection2 ContinuityOfCareDocument2MedicalEquipmentSection2 ContinuityOfCareDocument2PayersSection2 ContinuityOfCareDocument2MentalStatusSection ContinuityOfCareDocument2DocumentationOfServiceEventPerformerAssignedEntityAssignedPerson ContinuityOfCareDocument2DocumentationOfServiceEventPerformerAssignedEntity' constraints.validation.query='ContinuityOfCareDocument2AuthorAssignedAuthorHasAssignedPersonOrRepresentedOrganization ContinuityOfCareDocument2AuthorAssignedAuthorHasRepresentOrganization ContinuityOfCareDocument2AuthorAssignedAuthor ContinuityOfCareDocument2DocumentationOfServiceEventIVLTSLow ContinuityOfCareDocument2DocumentationOfServiceEventIVLTSHigh ContinuityOfCareDocument2DocumentationOfServiceEventPerformerAssignedEntityHasNationalProviderIdentifier ContinuityOfCareDocument2DocumentationOfServiceEventPerformerAssignedEntityId ContinuityOfCareDocument2DocumentationOfServiceEventPerformerAssignedEntityAssignedPerson ContinuityOfCareDocument2DocumentationOfServiceEventPerformerTypeCode ContinuityOfCareDocument2DocumentationOfServiceEventPerformerAssignedEntity ContinuityOfCareDocument2DocumentationOfServiceEventClassCode ContinuityOfCareDocument2DocumentationOfServiceEventEffectiveTime ContinuityOfCareDocument2DocumentationOfServiceEventPerformer ContinuityOfCareDocument2DocumentationOfServiceEvent'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolContinuityOfCareDocument2Author constraints.validation.error='ContinuityOfCareDocument2AuthorAssignedAuthor'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolContinuityOfCareDocument2AuthorAssignedAuthor constraints.validation.error='ContinuityOfCareDocument2AuthorAssignedAuthorHasAssignedPersonOrRepresentedOrganization ContinuityOfCareDocument2AuthorAssignedAuthorHasRepresentOrganization'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolContinuityOfCareDocument2DocumentationOf constraints.validation.error='ContinuityOfCareDocument2DocumentationOfServiceEvent'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolContinuityOfCareDocument2DocumentationOfServiceEvent classCode='PCPR' constraints.validation.error='ContinuityOfCareDocument2DocumentationOfServiceEventClassCode ContinuityOfCareDocument2DocumentationOfServiceEventEffectiveTime ContinuityOfCareDocument2DocumentationOfServiceEventIVLTSLow ContinuityOfCareDocument2DocumentationOfServiceEventIVLTSHigh' constraints.validation.warning='ContinuityOfCareDocument2DocumentationOfServiceEventPerformer' constraints.validation.query='ContinuityOfCareDocument2DocumentationOfServiceEventIVLTSLow ContinuityOfCareDocument2DocumentationOfServiceEventIVLTSHigh'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolContinuityOfCareDocument2DocumentationOfServiceEventIVLTS constraints.validation.error='ContinuityOfCareDocument2DocumentationOfServiceEventIVLTSLow ContinuityOfCareDocument2DocumentationOfServiceEventIVLTSHigh'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolContinuityOfCareDocument2DocumentationOfServiceEventPerformer typeCode='PRF' constraints.validation.error='ContinuityOfCareDocument2DocumentationOfServiceEventPerformerTypeCode' constraints.validation.info='ContinuityOfCareDocument2DocumentationOfServiceEventPerformerAssignedEntity'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolContinuityOfCareDocument2DocumentationOfServiceEventPerformerAssignedEntity constraints.validation.warning='ContinuityOfCareDocument2DocumentationOfServiceEventPerformerAssignedEntityHasNationalProviderIdentifier' constraints.validation.error='ContinuityOfCareDocument2DocumentationOfServiceEventPerformerAssignedEntityId' constraints.validation.info='ContinuityOfCareDocument2DocumentationOfServiceEventPerformerAssignedEntityAssignedPerson'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_wAOHcIokEeSkH97cUQxLGA" base_Class="_4JRRsCJnEeSBLYc2hU6GfA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='GeneralHeaderConstraintsTemplateId DiagnosticImagingReport2Id DiagnosticImagingReport2CodeP DiagnosticImagingReport2DocumentationOf DiagnosticImagingReport2FindingsSection DiagnosticImagingReport2Component2 DiagnosticImagingReport2Informant DiagnosticImagingReport2IIRoot DiagnosticImagingReport2ParticipantAssociatedEntityPersonName DiagnosticImagingReport2ParticipantAssociatedEntityAssociatedPerson DiagnosticImagingReport2ParticipantAssociatedEntity DiagnosticImagingReport2InFulfillmentOfOrderId DiagnosticImagingReport2InFulfillmentOfOrder DiagnosticImagingReport2DocumentationOfServiceEventClassCode DiagnosticImagingReport2DocumentationOfServiceEventCode DiagnosticImagingReport2DocumentationOfServiceEvent DiagnosticImagingReport2RelatedDocumentParentDocumentId DiagnosticImagingReport2RelatedDocumentParentDocument DiagnosticImagingReport2ComponentOfEncompassingEncounterResponsiblePartyAssignedEntity DiagnosticImagingReport2ComponentOfEncompassingEncounterPreciseToTheDay DiagnosticImagingReport2ComponentOfEncompassingEncounterId DiagnosticImagingReport2ComponentOfEncompassingEncounterEffectiveTime DiagnosticImagingReport2ComponentOfEncompassingEncounter DiagnosticImagingReport2ComponentStructuredBodyComponent3SectionSubjectFetusSubjectContext DiagnosticImagingReport2ComponentStructuredBodyComponent3SectionSectionsHaveText DiagnosticImagingReport2ComponentStructuredBodyComponent3SectionCodeP DiagnosticImagingReport2ComponentStructuredBodyComponent3Section DiagnosticImagingReport2ComponentStructuredBody' templateId.root='2.16.840.1.113883.10.20.22.1.5' templateId.extension='2014-06-09' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' constraints.validation.warning='DiagnosticImagingReport2Code DiagnosticImagingReport2DICOMObjectCatalogSection DiagnosticImagingReport2DocumentationOfServiceEventId DiagnosticImagingReport2DocumentationOfServiceEventPerformer DiagnosticImagingReport2ComponentOfEncompassingEncounterResponsiblePartyAssignedEntityHasAssignPersonOrRepresentedOrganization DiagnosticImagingReport2ComponentOfEncompassingEncounterPreciseToTheMinute DiagnosticImagingReport2ComponentOfEncompassingEncounterIfMorePreciseThanDayIncludeTimeZoneOffset DiagnosticImagingReport2ComponentOfEncompassingEncounterPhysicianofRecordParticipant2 DiagnosticImagingReport2ComponentStructuredBodyComponent3SectionCode DiagnosticImagingReport2ComponentStructuredBodyComponent3SectionTitle DiagnosticImagingReport2ComponentStructuredBodyComponent3SectionText' constraints.validation.dependOn.DiagnosticImagingReport2Code='DiagnosticImagingReport2CodeP' constraints.validation.info='DiagnosticImagingReport2InformationRecipient DiagnosticImagingReport2Participant DiagnosticImagingReport2InFulfillmentOf DiagnosticImagingReport2RelatedDocument DiagnosticImagingReport2ComponentOf DiagnosticImagingReport2ComponentOfEncompassingEncounterPreciseToTheSecond DiagnosticImagingReport2ComponentOfEncompassingEncounterResponsibleParty DiagnosticImagingReport2ComponentStructuredBodyComponent3SectionSubject DiagnosticImagingReport2ComponentStructuredBodyComponent3SectionAuthor DiagnosticImagingReport2ComponentStructuredBodyComponent3SectionProcedureContext DiagnosticImagingReport2ComponentStructuredBodyComponent3SectionTextObservation DiagnosticImagingReport2ComponentStructuredBodyComponent3SectionCodeObservations DiagnosticImagingReport2ComponentStructuredBodyComponent3SectionQuantityMeasurementObservation DiagnosticImagingReport2ComponentStructuredBodyComponent3SectionSOPInstanceObservation DiagnosticImagingReport2ComponentStructuredBodyComponent3' constraints.validation.query='DiagnosticImagingReport2IIRoot DiagnosticImagingReport2ParticipantAssociatedEntityPersonName DiagnosticImagingReport2ParticipantAssociatedEntityAssociatedPerson DiagnosticImagingReport2ParticipantAssociatedEntity DiagnosticImagingReport2InFulfillmentOfOrderId DiagnosticImagingReport2InFulfillmentOfOrder DiagnosticImagingReport2DocumentationOfServiceEventClassCode DiagnosticImagingReport2DocumentationOfServiceEventId DiagnosticImagingReport2DocumentationOfServiceEventCode DiagnosticImagingReport2DocumentationOfServiceEventPerformer DiagnosticImagingReport2DocumentationOfServiceEvent DiagnosticImagingReport2RelatedDocumentParentDocumentId DiagnosticImagingReport2RelatedDocumentParentDocument DiagnosticImagingReport2ComponentOfEncompassingEncounterResponsiblePartyAssignedEntityHasAssignPersonOrRepresentedOrganization DiagnosticImagingReport2ComponentOfEncompassingEncounterResponsiblePartyAssignedEntity DiagnosticImagingReport2ComponentOfEncompassingEncounterPreciseToTheDay DiagnosticImagingReport2ComponentOfEncompassingEncounterPreciseToTheMinute DiagnosticImagingReport2ComponentOfEncompassingEncounterPreciseToTheSecond DiagnosticImagingReport2ComponentOfEncompassingEncounterIfMorePreciseThanDayIncludeTimeZoneOffset DiagnosticImagingReport2ComponentOfEncompassingEncounterId DiagnosticImagingReport2ComponentOfEncompassingEncounterEffectiveTime DiagnosticImagingReport2ComponentOfEncompassingEncounterResponsibleParty DiagnosticImagingReport2ComponentOfEncompassingEncounterPhysicianofRecordParticipant2 DiagnosticImagingReport2ComponentOfEncompassingEncounter DiagnosticImagingReport2ComponentStructuredBodyComponent3SectionSubjectFetusSubjectContext DiagnosticImagingReport2ComponentStructuredBodyComponent3SectionSectionsHaveText DiagnosticImagingReport2ComponentStructuredBodyComponent3SectionCode DiagnosticImagingReport2ComponentStructuredBodyComponent3SectionCodeP DiagnosticImagingReport2ComponentStructuredBodyComponent3SectionTitle DiagnosticImagingReport2ComponentStructuredBodyComponent3SectionText DiagnosticImagingReport2ComponentStructuredBodyComponent3SectionSubject DiagnosticImagingReport2ComponentStructuredBodyComponent3SectionAuthor DiagnosticImagingReport2ComponentStructuredBodyComponent3SectionProcedureContext DiagnosticImagingReport2ComponentStructuredBodyComponent3SectionTextObservation DiagnosticImagingReport2ComponentStructuredBodyComponent3SectionCodeObservations DiagnosticImagingReport2ComponentStructuredBodyComponent3SectionQuantityMeasurementObservation DiagnosticImagingReport2ComponentStructuredBodyComponent3SectionSOPInstanceObservation DiagnosticImagingReport2ComponentStructuredBodyComponent3Section DiagnosticImagingReport2ComponentStructuredBodyComponent3 DiagnosticImagingReport2ComponentStructuredBody'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolDiagnosticImagingReport2II constraints.validation.error='DiagnosticImagingReport2IIRoot'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolDiagnosticImagingReport2Participant constraints.validation.error='DiagnosticImagingReport2ParticipantAssociatedEntity'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolDiagnosticImagingReport2ParticipantAssociatedEntity constraints.validation.error='DiagnosticImagingReport2ParticipantAssociatedEntityAssociatedPerson'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolDiagnosticImagingReport2ParticipantAssociatedEntityPerson constraints.validation.error='DiagnosticImagingReport2ParticipantAssociatedEntityPersonName'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolDiagnosticImagingReport2InFulfillmentOf constraints.validation.error='DiagnosticImagingReport2InFulfillmentOfOrder'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolDiagnosticImagingReport2InFulfillmentOfOrder constraints.validation.error='DiagnosticImagingReport2InFulfillmentOfOrderId'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolDiagnosticImagingReport2DocumentationOf constraints.validation.error='DiagnosticImagingReport2DocumentationOfServiceEvent'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolDiagnosticImagingReport2DocumentationOfServiceEvent classCode='ACT' constraints.validation.error='DiagnosticImagingReport2DocumentationOfServiceEventClassCode DiagnosticImagingReport2DocumentationOfServiceEventCode' constraints.validation.warning='DiagnosticImagingReport2DocumentationOfServiceEventId DiagnosticImagingReport2DocumentationOfServiceEventPerformer'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolDiagnosticImagingReport2RelatedDocument constraints.validation.error='DiagnosticImagingReport2RelatedDocumentParentDocument'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolDiagnosticImagingReport2RelatedDocumentParentDocument constraints.validation.error='DiagnosticImagingReport2RelatedDocumentParentDocumentId'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolDiagnosticImagingReport2ComponentOf constraints.validation.error='DiagnosticImagingReport2ComponentOfEncompassingEncounter'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolDiagnosticImagingReport2ComponentOfEncompassingEncounter constraints.validation.error='DiagnosticImagingReport2ComponentOfEncompassingEncounterPreciseToTheDay DiagnosticImagingReport2ComponentOfEncompassingEncounterId DiagnosticImagingReport2ComponentOfEncompassingEncounterEffectiveTime' constraints.validation.warning='DiagnosticImagingReport2ComponentOfEncompassingEncounterPreciseToTheMinute DiagnosticImagingReport2ComponentOfEncompassingEncounterIfMorePreciseThanDayIncludeTimeZoneOffset DiagnosticImagingReport2ComponentOfEncompassingEncounterPhysicianofRecordParticipant2' constraints.validation.info='DiagnosticImagingReport2ComponentOfEncompassingEncounterPreciseToTheSecond DiagnosticImagingReport2ComponentOfEncompassingEncounterResponsibleParty'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolDiagnosticImagingReport2ComponentOfEncompassingEncounterResponsibleParty constraints.validation.error='DiagnosticImagingReport2ComponentOfEncompassingEncounterResponsiblePartyAssignedEntity'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolDiagnosticImagingReport2ComponentOfEncompassingEncounterResponsiblePartyAssignedEntity constraints.validation.warning='DiagnosticImagingReport2ComponentOfEncompassingEncounterResponsiblePartyAssignedEntityHasAssignPersonOrRepresentedOrganization'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolDiagnosticImagingReport2Component constraints.validation.error='DiagnosticImagingReport2ComponentStructuredBody'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolDiagnosticImagingReport2ComponentStructuredBody constraints.validation.info='DiagnosticImagingReport2ComponentStructuredBodyComponent3'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolDiagnosticImagingReport2ComponentStructuredBodyComponent3 constraints.validation.error='DiagnosticImagingReport2ComponentStructuredBodyComponent3Section'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolDiagnosticImagingReport2ComponentStructuredBodyComponent3Section constraints.validation.error='DiagnosticImagingReport2ComponentStructuredBodyComponent3SectionSectionsHaveText DiagnosticImagingReport2ComponentStructuredBodyComponent3SectionCodeP' code.codeSystem='1.2.840.10008.2.16.4' code.codeSystemName='DCM' constraints.validation.warning='DiagnosticImagingReport2ComponentStructuredBodyComponent3SectionCode DiagnosticImagingReport2ComponentStructuredBodyComponent3SectionTitle DiagnosticImagingReport2ComponentStructuredBodyComponent3SectionText' constraints.validation.info='DiagnosticImagingReport2ComponentStructuredBodyComponent3SectionSubject DiagnosticImagingReport2ComponentStructuredBodyComponent3SectionAuthor DiagnosticImagingReport2ComponentStructuredBodyComponent3SectionProcedureContext DiagnosticImagingReport2ComponentStructuredBodyComponent3SectionTextObservation DiagnosticImagingReport2ComponentStructuredBodyComponent3SectionCodeObservations DiagnosticImagingReport2ComponentStructuredBodyComponent3SectionQuantityMeasurementObservation DiagnosticImagingReport2ComponentStructuredBodyComponent3SectionSOPInstanceObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolDiagnosticImagingReport2ComponentStructuredBodyComponent3SectionSubject constraints.validation.error='DiagnosticImagingReport2ComponentStructuredBodyComponent3SectionSubjectFetusSubjectContext'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_wBO0EIokEeSkH97cUQxLGA" base_Class="_89EzQCP5EeS4d9o7u1_H3A">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='GeneralHeaderConstraintsTemplateId DischargeSummary2DoesNotHaveChiefComplaintAndReasonForVisitWithChiefComplaintSectionOrReasonSection DischargeSummary2Code DischargeSummary2CodeP DischargeSummary2ComponentOf DischargeSummary2AllergiesSectionEntriesOptional2 DischargeSummary2HospitalCourseSection DischargeSummary2PlanOfTreatmentSection2 DischargeSummary2ComponentOfEncompassingEncounterIVLTSLow DischargeSummary2ComponentOfEncompassingEncounterIVLTSHigh DischargeSummary2ComponentOfEncompassingEncounterEncounterParticipantAssignedEntityHasPersonOrOrganization DischargeSummary2ComponentOfEncompassingEncounterEncounterParticipantAssignedEntity DischargeSummary2ComponentOfEncompassingEncounterResponsiblePartyAssignedEntityHasPersonOrOrganization DischargeSummary2ComponentOfEncompassingEncounterResponsiblePartyAssignedEntity DischargeSummary2ComponentOfEncompassingEncounterEffectiveTime DischargeSummary2ComponentOfEncompassingEncounterDischargeDispositionCodeP DischargeSummary2ComponentOfEncompassingEncounter' templateId.root='2.16.840.1.113883.10.20.22.1.8' templateId.extension='2014-06-09' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' constraints.validation.dependOn.DischargeSummary2Code='DischargeSummary2CodeP' constraints.validation.info='DischargeSummary2Participant DischargeSummary2ChiefComplaintSection DischargeSummary2ChiefComplaintAndReasonForVisitSection DischargeSummary2NutritionSection DischargeSummary2FunctionalStatusSection2 DischargeSummary2HistoryOfPastIllnessSection2 DischargeSummary2HistoryOfPresentIllnessSection DischargeSummary2HospitalConsultationsSection DischargeSummary2HospitalDischargeInstructionsSection DischargeSummary2HospitalDischargePhysicalSection DischargeSummary2HospitalDischargeStudiesSummarySection DischargeSummary2ImmunizationsSectionEntriesOptional2 DischargeSummary2ProblemSectionEntriesOptional2 DischargeSummary2ProceduresSectionEntriesOptional2 DischargeSummary2ReasonForVisitSection DischargeSummary2ReviewOfSystemsSection DischargeSummary2SocialHistorySection2 DischargeSummary2VitalSignsSectionEntriesOptional2 DischargeSummary2ComponentOfEncompassingEncounterEncounterParticipant DischargeSummary2ComponentOfEncompassingEncounterResponsibleParty' constraints.validation.query='DischargeSummary2ComponentOfEncompassingEncounterIVLTSLow DischargeSummary2ComponentOfEncompassingEncounterIVLTSHigh DischargeSummary2ComponentOfEncompassingEncounterEncounterParticipantAssignedEntityHasPersonOrOrganization DischargeSummary2ComponentOfEncompassingEncounterEncounterParticipantAssignedEntity DischargeSummary2ComponentOfEncompassingEncounterResponsiblePartyAssignedEntityHasPersonOrOrganization DischargeSummary2ComponentOfEncompassingEncounterResponsiblePartyAssignedEntity DischargeSummary2ComponentOfEncompassingEncounterEffectiveTime DischargeSummary2ComponentOfEncompassingEncounterDischargeDispositionCode DischargeSummary2ComponentOfEncompassingEncounterDischargeDispositionCodeP DischargeSummary2ComponentOfEncompassingEncounterEncounterParticipant DischargeSummary2ComponentOfEncompassingEncounterResponsibleParty DischargeSummary2ComponentOfEncompassingEncounter' constraints.validation.warning='DischargeSummary2ComponentOfEncompassingEncounterDischargeDispositionCode'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolDischargeSummary2ComponentOf constraints.validation.error='DischargeSummary2ComponentOfEncompassingEncounter'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolDischargeSummary2ComponentOfEncompassingEncounter constraints.validation.error='DischargeSummary2ComponentOfEncompassingEncounterEffectiveTime DischargeSummary2ComponentOfEncompassingEncounterDischargeDispositionCodeP DischargeSummary2ComponentOfEncompassingEncounterIVLTSLow DischargeSummary2ComponentOfEncompassingEncounterIVLTSHigh' dischargeDispositionCode.codeSystem='2.16.840.1.113883.6.301.5' dischargeDispositionCode.codeSystemName='NUBC UB-04 FL17-Patient Status' constraints.validation.warning='DischargeSummary2ComponentOfEncompassingEncounterDischargeDispositionCode' constraints.validation.info='DischargeSummary2ComponentOfEncompassingEncounterEncounterParticipant DischargeSummary2ComponentOfEncompassingEncounterResponsibleParty' constraints.validation.query='DischargeSummary2ComponentOfEncompassingEncounterIVLTSLow DischargeSummary2ComponentOfEncompassingEncounterIVLTSHigh'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolDischargeSummary2ComponentOfEncompassingEncounterIVLTS constraints.validation.error='DischargeSummary2ComponentOfEncompassingEncounterIVLTSLow DischargeSummary2ComponentOfEncompassingEncounterIVLTSHigh'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolDischargeSummary2ComponentOfEncompassingEncounterEncounterParticipant constraints.validation.error='DischargeSummary2ComponentOfEncompassingEncounterEncounterParticipantAssignedEntityHasPersonOrOrganization DischargeSummary2ComponentOfEncompassingEncounterEncounterParticipantAssignedEntity'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolDischargeSummary2ComponentOfEncompassingEncounterResponsibleParty constraints.validation.error='DischargeSummary2ComponentOfEncompassingEncounterResponsiblePartyAssignedEntityHasPersonOrOrganization DischargeSummary2ComponentOfEncompassingEncounterResponsiblePartyAssignedEntity'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_wCKoMIokEeSkH97cUQxLGA" base_Class="_4mLhsCluEeSoCqqrpX8LzQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='GeneralHeaderConstraintsTemplateId HistoryAndPhysicalNote2HasChiefComplaintAndReasonForVisitChiefComplaintOrReasonForVisit HistoryAndPhysicalNote2HasAnAssementAndPlanSection2OrBothAssementSectionAndPlanOfTreatmentSection2 HistoryAndPhysicalNote2DoesNotHaveAssementAndPlanSection2WhenAssementAndPlanOfTreatment2ArePresent HistoryAndPhysicalNote2DoesNotHaveChiefComplaintAndReasonForVisitWithChiefComplaintSectionOrReasonSection HistoryAndPhysicalNote2Code HistoryAndPhysicalNote2CodeP HistoryAndPhysicalNote2ComponentOf HistoryAndPhysicalNote2AllergiesSectionEntriesOptional2 HistoryAndPhysicalNote2GeneralStatusSection HistoryAndPhysicalNote2HistoryOfPastIllnessSection2 HistoryAndPhysicalNote2MedicationsSectionEntriesOptional2 HistoryAndPhysicalNote2PhysicalExamSection2 HistoryAndPhysicalNote2ResultsSectionEntriesOptional2 HistoryAndPhysicalNote2ReviewOfSystemsSection HistoryAndPhysicalNote2SocialHistorySection2 HistoryAndPhysicalNote2VitalSignsSectionEntriesOptional2 HistoryAndPhysicalNote2InformationRecipientIntendedRecipient HistoryAndPhysicalNote2ComponentOfEncompassingEncounterResponsiblePartyAssignedEntityHasPersonOrOrganization HistoryAndPhysicalNote2ComponentOfEncompassingEncounterResponsiblePartyAssignedEntity HistoryAndPhysicalNote2ComponentOfEncompassingEncounterEncounterParticipantAssignedEntityHasPersonOrOrganization HistoryAndPhysicalNote2ComponentOfEncompassingEncounterEncounterParticipantAssignedEntity HistoryAndPhysicalNote2ComponentOfEncompassingEncounterPreciseToTheDay HistoryAndPhysicalNote2ComponentOfEncompassingEncounterId HistoryAndPhysicalNote2ComponentOfEncompassingEncounterEffectiveTime HistoryAndPhysicalNote2ComponentOfEncompassingEncounter' templateId.root='2.16.840.1.113883.10.20.22.1.3' templateId.extension='2014-06-09' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' constraints.validation.dependOn.HistoryAndPhysicalNote2Code='HistoryAndPhysicalNote2CodeP' constraints.validation.info='HistoryAndPhysicalNote2InformationRecipient HistoryAndPhysicalNote2Participant HistoryAndPhysicalNote2InFulfillmentOf HistoryAndPhysicalNote2AssessmentSection HistoryAndPhysicalNote2PlanOfTreatmentSection2 HistoryAndPhysicalNote2AssessmentAndPlanSection2 HistoryAndPhysicalNote2ChiefComplaintSection HistoryAndPhysicalNote2ChiefComplaintAndReasonForVisitSection HistoryAndPhysicalNote2ImmunizationsSectionEntriesOptional2 HistoryAndPhysicalNote2InstructionsSection2 HistoryAndPhysicalNote2ProblemSectionEntriesOptional2 HistoryAndPhysicalNote2ProceduresSectionEntriesOptional2 HistoryAndPhysicalNote2ReasonForVisitSection HistoryAndPhysicalNote2ComponentOfEncompassingEncounterPreciseToTheSecond HistoryAndPhysicalNote2ComponentOfEncompassingEncounterResponsibleParty HistoryAndPhysicalNote2ComponentOfEncompassingEncounterEncounterParticipant HistoryAndPhysicalNote2ComponentOfEncompassingEncounterLocation' constraints.validation.warning='HistoryAndPhysicalNote2HistoryOfPresentIllnessSection HistoryAndPhysicalNote2ComponentOfEncompassingEncounterPreciseToTheMinute HistoryAndPhysicalNote2ComponentOfEncompassingEncounterIfMorePreciseThanDayIncludeTimeZoneOffset' constraints.validation.query='HistoryAndPhysicalNote2InformationRecipientIntendedRecipient HistoryAndPhysicalNote2ComponentOfEncompassingEncounterResponsiblePartyAssignedEntityHasPersonOrOrganization HistoryAndPhysicalNote2ComponentOfEncompassingEncounterResponsiblePartyAssignedEntity HistoryAndPhysicalNote2ComponentOfEncompassingEncounterEncounterParticipantAssignedEntityHasPersonOrOrganization HistoryAndPhysicalNote2ComponentOfEncompassingEncounterEncounterParticipantAssignedEntity HistoryAndPhysicalNote2ComponentOfEncompassingEncounterPreciseToTheDay HistoryAndPhysicalNote2ComponentOfEncompassingEncounterPreciseToTheMinute HistoryAndPhysicalNote2ComponentOfEncompassingEncounterPreciseToTheSecond HistoryAndPhysicalNote2ComponentOfEncompassingEncounterIfMorePreciseThanDayIncludeTimeZoneOffset HistoryAndPhysicalNote2ComponentOfEncompassingEncounterId HistoryAndPhysicalNote2ComponentOfEncompassingEncounterEffectiveTime HistoryAndPhysicalNote2ComponentOfEncompassingEncounterResponsibleParty HistoryAndPhysicalNote2ComponentOfEncompassingEncounterEncounterParticipant HistoryAndPhysicalNote2ComponentOfEncompassingEncounterLocation HistoryAndPhysicalNote2ComponentOfEncompassingEncounter'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolHistoryAndPhysicalNote2InformationRecipient constraints.validation.error='HistoryAndPhysicalNote2InformationRecipientIntendedRecipient'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolHistoryAndPhysicalNote2ComponentOf constraints.validation.error='HistoryAndPhysicalNote2ComponentOfEncompassingEncounter'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolHistoryAndPhysicalNote2ComponentOfEncompassingEncounter constraints.validation.error='HistoryAndPhysicalNote2ComponentOfEncompassingEncounterPreciseToTheDay HistoryAndPhysicalNote2ComponentOfEncompassingEncounterId HistoryAndPhysicalNote2ComponentOfEncompassingEncounterEffectiveTime' constraints.validation.warning='HistoryAndPhysicalNote2ComponentOfEncompassingEncounterPreciseToTheMinute HistoryAndPhysicalNote2ComponentOfEncompassingEncounterIfMorePreciseThanDayIncludeTimeZoneOffset' constraints.validation.info='HistoryAndPhysicalNote2ComponentOfEncompassingEncounterPreciseToTheSecond HistoryAndPhysicalNote2ComponentOfEncompassingEncounterResponsibleParty HistoryAndPhysicalNote2ComponentOfEncompassingEncounterEncounterParticipant HistoryAndPhysicalNote2ComponentOfEncompassingEncounterLocation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolHistoryAndPhysicalNote2ComponentOfEncompassingEncounterResponsibleParty constraints.validation.error='HistoryAndPhysicalNote2ComponentOfEncompassingEncounterResponsiblePartyAssignedEntityHasPersonOrOrganization HistoryAndPhysicalNote2ComponentOfEncompassingEncounterResponsiblePartyAssignedEntity'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolHistoryAndPhysicalNote2ComponentOfEncompassingEncounterEncounterParticipant constraints.validation.error='HistoryAndPhysicalNote2ComponentOfEncompassingEncounterEncounterParticipantAssignedEntityHasPersonOrOrganization HistoryAndPhysicalNote2ComponentOfEncompassingEncounterEncounterParticipantAssignedEntity'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_wC7dMIokEeSkH97cUQxLGA" base_Class="_aH1CYC1fEeSoCqqrpX8LzQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='GeneralHeaderConstraintsTemplateId OperativeNote2Code OperativeNote2CodeP OperativeNote2DocumentationOf OperativeNote2AnesthesiaSection2 OperativeNote2ComplicationsSection2 OperativeNote2PreoperativeDiagnosisSection2 OperativeNote2ProcedureEstimatedBloodLossSection OperativeNote2ProcedureFindingsSection2 OperativeNote2ProcedureSpecimensTakenSection OperativeNote2ProcedureDescriptionSection OperativeNote2PostoperativeDiagnosisSection OperativeNote2DocumentationOfServiceEventIVLTSLow OperativeNote2DocumentationOfServiceEventPerformerAssignedEntityCodeP OperativeNote2DocumentationOfServiceEventPerformerTypeCode OperativeNote2DocumentationOfServiceEventPerformerAssignedEntity OperativeNote2DocumentationOfServiceEventEffectiveTimeHasHighWhenNoWidth OperativeNote2DocumentationOfServiceEventEffectiveTimeNoHighIfWidth OperativeNote2DocumentationOfServiceEventPreciseToTheDay OperativeNote2DocumentationOfServiceEventProcedureCodes OperativeNote2DocumentationOfServiceEventEffectiveTime OperativeNote2DocumentationOfServiceEventCode OperativeNote2DocumentationOfServiceEventPerformer OperativeNote2DocumentationOfServiceEvent OperativeNote2AuthorizationConsentClassCode OperativeNote2AuthorizationConsentMoodCode OperativeNote2AuthorizationConsentStatusCode OperativeNote2AuthorizationTypeCode OperativeNote2AuthorizationConsent' templateId.root='2.16.840.1.113883.10.20.22.1.7' templateId.extension='2014-06-09' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' constraints.validation.dependOn.OperativeNote2Code='OperativeNote2CodeP' constraints.validation.info='OperativeNote2Authorization OperativeNote2ProcedureImplantsSection OperativeNote2OperativeNoteFluidSection OperativeNote2OperativeNoteSurgicalProcedureSection OperativeNote2PlanOfTreatmentSection2 OperativeNote2PlannedProcedureSection2 OperativeNote2ProcedureDispositionSection OperativeNote2ProcedureIndicationsSection2 OperativeNote2SurgicalDrainsSection OperativeNote2DocumentationOfServiceEventPreciseToTheSecond' constraints.validation.query='OperativeNote2DocumentationOfServiceEventIVLTSLow OperativeNote2DocumentationOfServiceEventPerformerAssignedEntityCode OperativeNote2DocumentationOfServiceEventPerformerAssignedEntityCodeP OperativeNote2DocumentationOfServiceEventPerformerTypeCode OperativeNote2DocumentationOfServiceEventPerformerAssignedEntity OperativeNote2DocumentationOfServiceEventEffectiveTimeHasHighWhenNoWidth OperativeNote2DocumentationOfServiceEventEffectiveTimeNoHighIfWidth OperativeNote2DocumentationOfServiceEventPreciseToTheDay OperativeNote2DocumentationOfServiceEventPreciseToTheMinute OperativeNote2DocumentationOfServiceEventPreciseToTheSecond OperativeNote2DocumentationOfServiceEventIfMorePreciseThanDayIncludeTimeZoneOffset OperativeNote2DocumentationOfServiceEventProcedureCodes OperativeNote2DocumentationOfServiceEventEffectiveTime OperativeNote2DocumentationOfServiceEventCode OperativeNote2DocumentationOfServiceEventPerformer OperativeNote2DocumentationOfServiceEvent OperativeNote2AuthorizationConsentClassCode OperativeNote2AuthorizationConsentMoodCode OperativeNote2AuthorizationConsentStatusCode OperativeNote2AuthorizationTypeCode OperativeNote2AuthorizationConsent' constraints.validation.warning='OperativeNote2DocumentationOfServiceEventPerformerAssignedEntityCode OperativeNote2DocumentationOfServiceEventPreciseToTheMinute OperativeNote2DocumentationOfServiceEventIfMorePreciseThanDayIncludeTimeZoneOffset'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolOperativeNote2DocumentationOf constraints.validation.error='OperativeNote2DocumentationOfServiceEvent'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolOperativeNote2DocumentationOfServiceEvent constraints.validation.error='OperativeNote2DocumentationOfServiceEventEffectiveTimeHasHighWhenNoWidth OperativeNote2DocumentationOfServiceEventEffectiveTimeNoHighIfWidth OperativeNote2DocumentationOfServiceEventPreciseToTheDay OperativeNote2DocumentationOfServiceEventProcedureCodes OperativeNote2DocumentationOfServiceEventEffectiveTime OperativeNote2DocumentationOfServiceEventCode OperativeNote2DocumentationOfServiceEventPerformer OperativeNote2DocumentationOfServiceEventIVLTSLow' constraints.validation.warning='OperativeNote2DocumentationOfServiceEventPreciseToTheMinute OperativeNote2DocumentationOfServiceEventIfMorePreciseThanDayIncludeTimeZoneOffset' constraints.validation.info='OperativeNote2DocumentationOfServiceEventPreciseToTheSecond' constraints.validation.query='OperativeNote2DocumentationOfServiceEventIVLTSLow'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolOperativeNote2DocumentationOfServiceEventIVLTS constraints.validation.error='OperativeNote2DocumentationOfServiceEventIVLTSLow'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolOperativeNote2DocumentationOfServiceEventPerformer typeCode='PPRF' constraints.validation.error='OperativeNote2DocumentationOfServiceEventPerformerTypeCode OperativeNote2DocumentationOfServiceEventPerformerAssignedEntity'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolOperativeNote2DocumentationOfServiceEventPerformerAssignedEntity code.codeSystem='2.16.840.1.113883.12.443' code.codeSystemName='Provider Role (HL7)' constraints.validation.warning='OperativeNote2DocumentationOfServiceEventPerformerAssignedEntityCode' constraints.validation.error='OperativeNote2DocumentationOfServiceEventPerformerAssignedEntityCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolOperativeNote2Authorization typeCode='AUTH' constraints.validation.error='OperativeNote2AuthorizationTypeCode OperativeNote2AuthorizationConsent'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolOperativeNote2AuthorizationConsent classCode='CONS' constraints.validation.error='OperativeNote2AuthorizationConsentClassCode OperativeNote2AuthorizationConsentMoodCode OperativeNote2AuthorizationConsentStatusCode' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_wDyY0IokEeSkH97cUQxLGA" base_Class="_JD8b0C4pEeSoCqqrpX8LzQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='GeneralHeaderConstraintsTemplateId ProcedureNote2HasAnAssementAndPlanSection2OrBothAssementSectionAndPlanOfTreatmentSection2 ProcedureNote2SectionTitles ProcedureNote2DoesNotHaveAssementAndPlanSection2WhenAssementAndPlanOfTreatment2ArePresent ProcedureNote2DoesNotHaveChiefComplaintAndReasonForVisitWithChiefComplaintSectionOrReasonSection ProcedureNote2Code ProcedureNote2CodeP ProcedureNote2DocumentationOf ProcedureNote2ComplicationsSection2 ProcedureNote2ProcedureDescriptionSection ProcedureNote2ProcedureIndicationsSection2 ProcedureNote2PostprocedureDiagnosisSection2 ProcedureNote2ParticipantAssociatedEntityClassCode ProcedureNote2ParticipantAssociatedEntityAssociatedPerson ProcedureNote2ParticipantTypeCode ProcedureNote2ParticipantFunctionCode ProcedureNote2ParticipantFunctionCodeP ProcedureNote2ParticipantAssociatedEntity ProcedureNote2DocumentationOfServiceEventIVLTSLow ProcedureNote2DocumentationOfServiceEventPerformerAssignedEntityCode ProcedureNote2DocumentationOfServiceEventPerformerTypeCode ProcedureNote2DocumentationOfServiceEventPerformerAssignedEntity ProcedureNote2DocumentationOfServiceEventEffectiveTimeHasHighWhenNoWidth ProcedureNote2DocumentationOfServiceEventEffectiveTimeNoHighIfWidth ProcedureNote2DocumentationOfServiceEventPreciseToTheDay ProcedureNote2DocumentationOfServiceEventProcedureCodes ProcedureNote2DocumentationOfServiceEventEffectiveTime ProcedureNote2DocumentationOfServiceEventCode ProcedureNote2DocumentationOfServiceEventPerformer ProcedureNote2DocumentationOfServiceEvent ProcedureNote2AuthorizationConsentClassCode ProcedureNote2AuthorizationConsentMoodCode ProcedureNote2AuthorizationConsentStatusCode ProcedureNote2AuthorizationTypeCode ProcedureNote2AuthorizationConsent ProcedureNote2ComponentOfEncompassingEncounterEncounterParticipantTypeCode ProcedureNote2ComponentOfEncompassingEncounterLocationHealthCareFacilityId ProcedureNote2ComponentOfEncompassingEncounterLocationHealthCareFacility ProcedureNote2ComponentOfEncompassingEncounterCode ProcedureNote2ComponentOfEncompassingEncounterLocation ProcedureNote2ComponentOfEncompassingEncounter' templateId.root='2.16.840.1.113883.10.20.22.1.6' templateId.extension='2014-06-09' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' constraints.validation.dependOn.ProcedureNote2Code='ProcedureNote2CodeP' constraints.validation.info='ProcedureNote2Participant ProcedureNote2Authorization ProcedureNote2AssessmentSection ProcedureNote2AssessmentAndPlanSection2 ProcedureNote2PlanOfTreatmentSection2 ProcedureNote2AllergiesSectionEntriesOptional2 ProcedureNote2AnesthesiaSection2 ProcedureNote2ChiefComplaintSection ProcedureNote2ChiefComplaintAndReasonForVisitSection ProcedureNote2FamilyHistorySection ProcedureNote2HistoryOfPastIllnessSection2 ProcedureNote2HistoryOfPresentIllnessSection ProcedureNote2MedicalHistorySection ProcedureNote2MedicationsSectionEntriesOptional2 ProcedureNote2MedicationsAdministeredSection2 ProcedureNote2PhysicalExamSection2 ProcedureNote2PlannedProcedureSection2 ProcedureNote2ProcedureDispositionSection ProcedureNote2ProcedureEstimatedBloodLossSection ProcedureNote2ProcedureFindingsSection2 ProcedureNote2ProcedureImplantsSection ProcedureNote2ProcedureSpecimensTakenSection ProcedureNote2ProceduresSectionEntriesOptional2 ProcedureNote2ReasonForVisitSection ProcedureNote2ReviewOfSystemsSection ProcedureNote2SocialHistorySection2 ProcedureNote2DocumentationOfServiceEventPreciseToTheSecond ProcedureNote2ComponentOfEncompassingEncounterEncounterParticipant' constraints.validation.warning='ProcedureNote2ComponentOf ProcedureNote2DocumentationOfServiceEventPerformerAssignedEntityCodeP ProcedureNote2DocumentationOfServiceEventPreciseToTheMinute ProcedureNote2DocumentationOfServiceEventIfMorePreciseThanDayIncludeTimeZoneOffset ProcedureNote2ComponentOfEncompassingEncounterId' constraints.validation.query='ProcedureNote2ParticipantAssociatedEntityClassCode ProcedureNote2ParticipantAssociatedEntityAssociatedPerson ProcedureNote2ParticipantTypeCode ProcedureNote2ParticipantFunctionCode ProcedureNote2ParticipantFunctionCodeP ProcedureNote2ParticipantAssociatedEntity ProcedureNote2DocumentationOfServiceEventIVLTSLow ProcedureNote2DocumentationOfServiceEventPerformerAssignedEntityCodeP ProcedureNote2DocumentationOfServiceEventPerformerAssignedEntityCode ProcedureNote2DocumentationOfServiceEventPerformerTypeCode ProcedureNote2DocumentationOfServiceEventPerformerAssignedEntity ProcedureNote2DocumentationOfServiceEventEffectiveTimeHasHighWhenNoWidth ProcedureNote2DocumentationOfServiceEventEffectiveTimeNoHighIfWidth ProcedureNote2DocumentationOfServiceEventPreciseToTheDay ProcedureNote2DocumentationOfServiceEventPreciseToTheMinute ProcedureNote2DocumentationOfServiceEventPreciseToTheSecond ProcedureNote2DocumentationOfServiceEventIfMorePreciseThanDayIncludeTimeZoneOffset ProcedureNote2DocumentationOfServiceEventProcedureCodes ProcedureNote2DocumentationOfServiceEventEffectiveTime ProcedureNote2DocumentationOfServiceEventCode ProcedureNote2DocumentationOfServiceEventPerformer ProcedureNote2DocumentationOfServiceEvent ProcedureNote2AuthorizationConsentClassCode ProcedureNote2AuthorizationConsentMoodCode ProcedureNote2AuthorizationConsentStatusCode ProcedureNote2AuthorizationTypeCode ProcedureNote2AuthorizationConsent ProcedureNote2ComponentOfEncompassingEncounterEncounterParticipantTypeCode ProcedureNote2ComponentOfEncompassingEncounterLocationHealthCareFacilityId ProcedureNote2ComponentOfEncompassingEncounterLocationHealthCareFacility ProcedureNote2ComponentOfEncompassingEncounterId ProcedureNote2ComponentOfEncompassingEncounterCode ProcedureNote2ComponentOfEncompassingEncounterEncounterParticipant ProcedureNote2ComponentOfEncompassingEncounterLocation ProcedureNote2ComponentOfEncompassingEncounter' constraints.validation.dependOn.ProcedureNote2DocumentationOfServiceEventPerformerAssignedEntityCode='ProcedureNote2DocumentationOfServiceEventPerformerAssignedEntityCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolProcedureNote2Participant typeCode='IND' constraints.validation.error='ProcedureNote2ParticipantTypeCode ProcedureNote2ParticipantFunctionCode ProcedureNote2ParticipantFunctionCodeP ProcedureNote2ParticipantAssociatedEntity' functionCode.code='PCP' functionCode.codeSystem='2.16.840.1.113883.5.88' functionCode.codeSystemName='ParticipationFunction' functionCode.displayName='Primary Care Physician'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolProcedureNote2ParticipantAssociatedEntity classCode='PROV' constraints.validation.error='ProcedureNote2ParticipantAssociatedEntityClassCode ProcedureNote2ParticipantAssociatedEntityAssociatedPerson'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolProcedureNote2DocumentationOf constraints.validation.error='ProcedureNote2DocumentationOfServiceEvent'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolProcedureNote2DocumentationOfServiceEvent constraints.validation.error='ProcedureNote2DocumentationOfServiceEventEffectiveTimeHasHighWhenNoWidth ProcedureNote2DocumentationOfServiceEventEffectiveTimeNoHighIfWidth ProcedureNote2DocumentationOfServiceEventPreciseToTheDay ProcedureNote2DocumentationOfServiceEventProcedureCodes ProcedureNote2DocumentationOfServiceEventEffectiveTime ProcedureNote2DocumentationOfServiceEventCode ProcedureNote2DocumentationOfServiceEventPerformer ProcedureNote2DocumentationOfServiceEventIVLTSLow' constraints.validation.warning='ProcedureNote2DocumentationOfServiceEventPreciseToTheMinute ProcedureNote2DocumentationOfServiceEventIfMorePreciseThanDayIncludeTimeZoneOffset' constraints.validation.info='ProcedureNote2DocumentationOfServiceEventPreciseToTheSecond' constraints.validation.query='ProcedureNote2DocumentationOfServiceEventIVLTSLow'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolProcedureNote2DocumentationOfServiceEventIVLTS constraints.validation.error='ProcedureNote2DocumentationOfServiceEventIVLTSLow'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolProcedureNote2DocumentationOfServiceEventPerformer typeCode='PPRF' constraints.validation.error='ProcedureNote2DocumentationOfServiceEventPerformerTypeCode ProcedureNote2DocumentationOfServiceEventPerformerAssignedEntity'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolProcedureNote2DocumentationOfServiceEventPerformerAssignedEntity code.codeSystem='2.16.840.1.113883.6.101' code.codeSystemName='NUCC Health Care Provider Taxonomy' constraints.validation.error='ProcedureNote2DocumentationOfServiceEventPerformerAssignedEntityCode' constraints.validation.warning='ProcedureNote2DocumentationOfServiceEventPerformerAssignedEntityCodeP' constraints.validation.dependOn.ProcedureNote2DocumentationOfServiceEventPerformerAssignedEntityCode='ProcedureNote2DocumentationOfServiceEventPerformerAssignedEntityCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolProcedureNote2Authorization typeCode='AUTH' constraints.validation.error='ProcedureNote2AuthorizationTypeCode ProcedureNote2AuthorizationConsent'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolProcedureNote2AuthorizationConsent classCode='CONS' constraints.validation.error='ProcedureNote2AuthorizationConsentClassCode ProcedureNote2AuthorizationConsentMoodCode ProcedureNote2AuthorizationConsentStatusCode' moodCode='EVN'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolProcedureNote2ComponentOf constraints.validation.error='ProcedureNote2ComponentOfEncompassingEncounter'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolProcedureNote2ComponentOfEncompassingEncounter constraints.validation.warning='ProcedureNote2ComponentOfEncompassingEncounterId' constraints.validation.error='ProcedureNote2ComponentOfEncompassingEncounterCode ProcedureNote2ComponentOfEncompassingEncounterLocation' constraints.validation.info='ProcedureNote2ComponentOfEncompassingEncounterEncounterParticipant'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolProcedureNote2ComponentOfEncompassingEncounterEncounterParticipant typeCode='REF' constraints.validation.error='ProcedureNote2ComponentOfEncompassingEncounterEncounterParticipantTypeCode'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolProcedureNote2ComponentOfEncompassingEncounterLocation constraints.validation.error='ProcedureNote2ComponentOfEncompassingEncounterLocationHealthCareFacility'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolProcedureNote2ComponentOfEncompassingEncounterLocationHealthCareFacility constraints.validation.error='ProcedureNote2ComponentOfEncompassingEncounterLocationHealthCareFacilityId'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_wFGAYIokEeSkH97cUQxLGA" base_Class="_qVEVkC-aEeSoCqqrpX8LzQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='GeneralHeaderConstraintsTemplateId ProgressNote2HasAnAssementAndPlanSection2OrBothAssementSectionAndPlanOfTreatmentSection2 ProgressNote2DoesNotHaveAssementAndPlanSection2WhenAssementAndPlanOfTreatment2ArePresent ProgressNote2Code ProgressNote2CodeP ProgressNote2ComponentOf ProgressNote2DocumentationOfServiceEventEffectiveTimeHasHighWhenNoWidth ProgressNote2DocumentationOfServiceEventPreciseToTheDay ProgressNote2DocumentationOfServiceEventTemplateId ProgressNote2DocumentationOfServiceEventClassCode ProgressNote2DocumentationOfServiceEvent ProgressNote2ComponentOfEncompassingEncounterIVLTSLow ProgressNote2ComponentOfEncompassingEncounterLocationHealthCareFacilityId ProgressNote2ComponentOfEncompassingEncounterLocationHealthCareFacility ProgressNote2ComponentOfEncompassingEncounterPreciseToTheDay ProgressNote2ComponentOfEncompassingEncounterId ProgressNote2ComponentOfEncompassingEncounterEffectiveTime ProgressNote2ComponentOfEncompassingEncounterLocation ProgressNote2ComponentOfEncompassingEncounter' templateId.root='2.16.840.1.113883.10.20.22.1.9' templateId.extension='2014-06-09' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' constraints.validation.dependOn.ProgressNote2Code='ProgressNote2CodeP' constraints.validation.warning='ProgressNote2DocumentationOf ProgressNote2DocumentationOfServiceEventIVLTSLow ProgressNote2DocumentationOfServiceEventPreciseToTheMinute ProgressNote2DocumentationOfServiceEventIfMorePreciseThanDayIncludeTimeZoneOffset ProgressNote2DocumentationOfServiceEventEffectiveTime ProgressNote2ComponentOfEncompassingEncounterPreciseToTheMinute ProgressNote2ComponentOfEncompassingEncounterIfMorePreciseThanDayIncludeTimeZoneOffset' constraints.validation.info='ProgressNote2AssessmentSection ProgressNote2PlanOfTreatmentSection2 ProgressNote2AssessmentAndPlanSection2 ProgressNote2AllergiesSectionEntriesOptional2 ProgressNote2ChiefComplaintSection ProgressNote2InterventionsSection2 ProgressNote2InstructionsSection2 ProgressNote2MedicationsSectionEntriesOptional2 ProgressNote2ObjectiveSection ProgressNote2PhysicalExamSection2 ProgressNote2ProblemSectionEntriesOptional2 ProgressNote2ResultsSectionEntriesOptional2 ProgressNote2ReviewOfSystemsSection ProgressNote2SubjectiveSection ProgressNote2VitalSignsSectionEntriesOptional2 ProgressNote2DocumentationOfServiceEventPreciseToTheSecond ProgressNote2ComponentOfEncompassingEncounterPreciseToTheSecond' constraints.validation.query='ProgressNote2DocumentationOfServiceEventIVLTSLow ProgressNote2DocumentationOfServiceEventEffectiveTimeHasHighWhenNoWidth ProgressNote2DocumentationOfServiceEventPreciseToTheDay ProgressNote2DocumentationOfServiceEventPreciseToTheMinute ProgressNote2DocumentationOfServiceEventPreciseToTheSecond ProgressNote2DocumentationOfServiceEventIfMorePreciseThanDayIncludeTimeZoneOffset ProgressNote2DocumentationOfServiceEventTemplateId ProgressNote2DocumentationOfServiceEventClassCode ProgressNote2DocumentationOfServiceEventEffectiveTime ProgressNote2DocumentationOfServiceEvent ProgressNote2ComponentOfEncompassingEncounterIVLTSLow ProgressNote2ComponentOfEncompassingEncounterLocationHealthCareFacilityId ProgressNote2ComponentOfEncompassingEncounterLocationHealthCareFacility ProgressNote2ComponentOfEncompassingEncounterPreciseToTheDay ProgressNote2ComponentOfEncompassingEncounterPreciseToTheMinute ProgressNote2ComponentOfEncompassingEncounterPreciseToTheSecond ProgressNote2ComponentOfEncompassingEncounterIfMorePreciseThanDayIncludeTimeZoneOffset ProgressNote2ComponentOfEncompassingEncounterId ProgressNote2ComponentOfEncompassingEncounterEffectiveTime ProgressNote2ComponentOfEncompassingEncounterLocation ProgressNote2ComponentOfEncompassingEncounter'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolProgressNote2DocumentationOf constraints.validation.error='ProgressNote2DocumentationOfServiceEvent'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolProgressNote2DocumentationOfServiceEvent constraints.validation.error='ProgressNote2DocumentationOfServiceEventTemplateId ProgressNote2DocumentationOfServiceEventEffectiveTimeHasHighWhenNoWidth ProgressNote2DocumentationOfServiceEventPreciseToTheDay ProgressNote2DocumentationOfServiceEventClassCode' templateId.root='2.16.840.1.113883.10.20.21.3.1' constraints.validation.warning='ProgressNote2DocumentationOfServiceEventPreciseToTheMinute ProgressNote2DocumentationOfServiceEventIfMorePreciseThanDayIncludeTimeZoneOffset ProgressNote2DocumentationOfServiceEventEffectiveTime ProgressNote2DocumentationOfServiceEventIVLTSLow' constraints.validation.info='ProgressNote2DocumentationOfServiceEventPreciseToTheSecond' classCode='PCPR' constraints.validation.query='ProgressNote2DocumentationOfServiceEventIVLTSLow'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolProgressNote2DocumentationOfServiceEventIVLTS constraints.validation.warning='ProgressNote2DocumentationOfServiceEventIVLTSLow'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolProgressNote2ComponentOf constraints.validation.error='ProgressNote2ComponentOfEncompassingEncounter'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolProgressNote2ComponentOfEncompassingEncounter constraints.validation.error='ProgressNote2ComponentOfEncompassingEncounterPreciseToTheDay ProgressNote2ComponentOfEncompassingEncounterId ProgressNote2ComponentOfEncompassingEncounterEffectiveTime ProgressNote2ComponentOfEncompassingEncounterLocation ProgressNote2ComponentOfEncompassingEncounterIVLTSLow' constraints.validation.warning='ProgressNote2ComponentOfEncompassingEncounterPreciseToTheMinute ProgressNote2ComponentOfEncompassingEncounterIfMorePreciseThanDayIncludeTimeZoneOffset' constraints.validation.info='ProgressNote2ComponentOfEncompassingEncounterPreciseToTheSecond' constraints.validation.query='ProgressNote2ComponentOfEncompassingEncounterIVLTSLow'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolProgressNote2ComponentOfEncompassingEncounterIVLTS constraints.validation.error='ProgressNote2ComponentOfEncompassingEncounterIVLTSLow'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolProgressNote2ComponentOfEncompassingEncounterLocation constraints.validation.error='ProgressNote2ComponentOfEncompassingEncounterLocationHealthCareFacility'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolProgressNote2ComponentOfEncompassingEncounterLocationHealthCareFacility constraints.validation.error='ProgressNote2ComponentOfEncompassingEncounterLocationHealthCareFacilityId'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_wF1nQIokEeSkH97cUQxLGA" base_Class="_MrNuQC-6EeSoCqqrpX8LzQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='GeneralHeaderConstraintsTemplateId UnstructuredDocument2RecordTarget UnstructuredDocument2Custodian UnstructuredDocument2Component UnstructuredDocument2RecordTargetPatientRoleId UnstructuredDocument2RecordTargetPatientRole UnstructuredDocument2CustodianAssignedCustodianRepresentedCustodianOrganization UnstructuredDocument2CustodianAssignedCustodian UnstructuredDocument2ComponentNonXMLBodyMediaTypeFileFormats UnstructuredDocument2ComponentNonXMLBodyText UnstructuredDocument2ComponentNonXMLBody' templateId.root='2.16.840.1.113883.10.20.22.1.10' templateId.extension='2014-06-09' constraints.validation.query='UnstructuredDocument2RecordTargetPatientRoleId UnstructuredDocument2RecordTargetPatientRole UnstructuredDocument2CustodianAssignedCustodianRepresentedCustodianOrganization UnstructuredDocument2CustodianAssignedCustodian UnstructuredDocument2ComponentNonXMLBodyEDMediaType UnstructuredDocument2ComponentNonXMLBodyMediaTypeFileFormats UnstructuredDocument2ComponentNonXMLBodyText UnstructuredDocument2ComponentNonXMLBody' constraints.validation.info='UnstructuredDocument2ComponentNonXMLBodyEDMediaType'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolUnstructuredDocument2RecordTarget constraints.validation.error='UnstructuredDocument2RecordTargetPatientRole'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolUnstructuredDocument2RecordTargetPatientRole constraints.validation.error='UnstructuredDocument2RecordTargetPatientRoleId'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolUnstructuredDocument2Custodian constraints.validation.error='UnstructuredDocument2CustodianAssignedCustodian'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolUnstructuredDocument2CustodianAssignedCustodian constraints.validation.error='UnstructuredDocument2CustodianAssignedCustodianRepresentedCustodianOrganization'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolUnstructuredDocument2Component constraints.validation.error='UnstructuredDocument2ComponentNonXMLBody'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolUnstructuredDocument2ComponentNonXMLBody constraints.validation.error='UnstructuredDocument2ComponentNonXMLBodyMediaTypeFileFormats UnstructuredDocument2ComponentNonXMLBodyText' constraints.validation.info='UnstructuredDocument2ComponentNonXMLBodyEDMediaType' constraints.validation.query='UnstructuredDocument2ComponentNonXMLBodyEDMediaType'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolUnstructuredDocument2ComponentNonXMLBodyED mediaType='text/plain' constraints.validation.info='UnstructuredDocument2ComponentNonXMLBodyEDMediaType'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_wGAmYookEeSkH97cUQxLGA" base_Class="_XA96QDhDEeS1WeMhbm6GZw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PreconditionForSubstanceAdministrationTemplateId PreconditionForSubstanceAdministrationCode PreconditionForSubstanceAdministrationCodeP PreconditionForSubstanceAdministrationValue PreconditionForSubstanceAdministrationValueP' templateId.root='2.16.840.1.113883.10.20.22.4.25' templateId.extension='2014-06-09' code.code='ASSERTION' code.codeSystem='2.16.840.1.113883.5.4' code.codeSystemName='HL7ActCode' code.displayName='Assertion' constraints.validation.info='PreconditionForSubstanceAdministrationText' value.codeSystem='2.16.840.1.113883.6.96' value.codeSystemName='SNOMEDCT'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_wIRQMIokEeSkH97cUQxLGA" base_Class="_YYgjwIC3EeS108flGLVEBA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='NumberOfPressureUlcersObservationTemplateId NumberOfPressureUlcersObservationCode NumberOfPressureUlcersObservationCodeP NumberOfPressureUlcersObservationEntryRelationship NumberOfPressureUlcersObservation2EntryRelationshipNumberOfPressureUlcersObservationEntryRelationshipObservationClassCode NumberOfPressureUlcersObservation2EntryRelationshipNumberOfPressureUlcersObservationEntryRelationshipObservationMoodCode NumberOfPressureUlcersObservation2EntryRelationshipObservationCodeP NumberOfPressureUlcersObservation2EntryRelationshipObservationCode NumberOfPressureUlcersObservation2EntryRelationshipNumberOfPressureUlcersObservationEntryRelationshipObservationValueP NumberOfPressureUlcersObservation2NumberOfPressureUlcersObservationEntryRelationshipTypeCode NumberOfPressureUlcersObservation2NumberOfPressureUlcersObservationEntryRelationshipObservation' templateId.root='2.16.840.1.113883.10.20.22.4.76' templateId.extension='2014-06-09' code.code='75277-4' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Number of pressure ulcers' constraints.validation.dependOn.NumberOfPressureUlcersObservationCode='NumberOfPressureUlcersObservationCodeP' constraints.validation.query='NumberOfPressureUlcersObservation2EntryRelationshipNumberOfPressureUlcersObservationEntryRelationshipObservationClassCode NumberOfPressureUlcersObservation2EntryRelationshipNumberOfPressureUlcersObservationEntryRelationshipObservationMoodCode NumberOfPressureUlcersObservation2EntryRelationshipObservationCodeP NumberOfPressureUlcersObservation2EntryRelationshipObservationCode NumberOfPressureUlcersObservation2EntryRelationshipNumberOfPressureUlcersObservationEntryRelationshipObservationValueP NumberOfPressureUlcersObservation2EntryRelationshipNumberOfPressureUlcersObservationEntryRelationshipObservationValue NumberOfPressureUlcersObservation2NumberOfPressureUlcersObservationEntryRelationshipTypeCode NumberOfPressureUlcersObservation2NumberOfPressureUlcersObservationEntryRelationshipObservation' constraints.validation.dependOn.NumberOfPressureUlcersObservation2EntryRelationshipObservationCode='NumberOfPressureUlcersObservation2EntryRelationshipObservationCodeP' constraints.validation.warning='NumberOfPressureUlcersObservation2EntryRelationshipNumberOfPressureUlcersObservationEntryRelationshipObservationValue' constraints.validation.dependOn.NumberOfPressureUlcersObservation2EntryRelationshipNumberOfPressureUlcersObservationEntryRelationshipObservationValue='NumberOfPressureUlcersObservationEntryRelationshipObservationValueP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolNumberOfPressureUlcersObservation2EntryRelationship typeCode='SUBJ' constraints.validation.error='NumberOfPressureUlcersObservationEntryRelationshipTypeCode NumberOfPressureUlcersObservationEntryRelationshipObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/consolNumberOfPressureUlcersObservation2EntryRelationshipObservation classCode='OBS' constraints.validation.error='NumberOfPressureUlcersObservationEntryRelationshipObservationClassCode NumberOfPressureUlcersObservationEntryRelationshipObservationMoodCode NumberOfPressureUlcersObservation2EntryRelationshipObservationCode NumberOfPressureUlcersObservation2EntryRelationshipObservationCodeP NumberOfPressureUlcersObservationEntryRelationshipObservationValueP' moodCode='EVN' code.code='ASSERTION' code.codeSystem='2.16.840.1.113883.5.4' code.codeSystemName='HL7ActCode' code.displayName='Assertion' constraints.validation.dependOn.NumberOfPressureUlcersObservation2EntryRelationshipObservationCode='NumberOfPressureUlcersObservation2EntryRelationshipObservationCodeP' value.codeSystem='2.16.840.1.113883.6.96' value.codeSystemName='SNOMEDCT' constraints.validation.warning='NumberOfPressureUlcersObservationEntryRelationshipObservationValue' constraints.validation.dependOn.NumberOfPressureUlcersObservationEntryRelationshipObservationValue='NumberOfPressureUlcersObservationEntryRelationshipObservationValueP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_wIn1gIokEeSkH97cUQxLGA" base_Class="_YvV88IV5EeSRBMdZotACQg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='FamilyHistoryObservationTemplateId FamilyHistoryObservationCodeP' templateId.root='2.16.840.1.113883.10.20.22.4.46' templateId.extension='2014-06-09' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' constraints.validation.warning='FamilyHistoryObservationCode' constraints.validation.dependOn.FamilyHistoryObservationCode='FamilyHistoryObservationCodeP'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_wIt8IIokEeSkH97cUQxLGA" base_Generalization="_6wieMIbpEeSxzopshBnQuw"/>
  <Ecore:EClass xmi:id="_wIujMYokEeSkH97cUQxLGA" base_Class="_6whQEIbpEeSxzopshBnQuw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='FamilyHistoryOrganizerTemplateId FamilyHistoryOrganizer2Id FamilyHistoryOrganizerFamilyHistoryObservation2' templateId.root='2.16.840.1.113883.10.20.22.4.45' templateId.extension='2014-06-09'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_wIy0oIokEeSkH97cUQxLGA" base_Class="_NGivoIevEeSBauRYePLghA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='FamilyHistorySectionTemplateId' templateId.root='2.16.840.1.113883.10.20.22.2.15' templateId.extension='2014-06-09' constraints.validation.info='FamilyHistorySectionFamilyHistoryOrganizer2'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_wI3GEIokEeSkH97cUQxLGA" base_Class="_zKKIUIe9EeSBauRYePLghA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PhysicianReadingStudyPerformerTemplateId' templateId.root='2.16.840.1.113883.10.20.6.2.1' templateId.extension='2014-06-09'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_wI47QIokEeSkH97cUQxLGA" base_Class="_S0oqIIfLEeSBauRYePLghA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='CourseOfCareSectionTemplateId CourseOfCareSectionCode CourseOfCareSectionCodeP CourseOfCareSectionTitle CourseOfCareSectionText' templateId.root='2.16.840.1.113883.10.20.22.2.64' code.code='8648-8' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Hospital Course Narrative'</annotation>
  </Ecore:EClass>
</xmi:XMI>
