<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="classId" xml:lang="en-us">
<title>Unstructured Document - conformance rules</title>
<shortdesc id="shortdesc">[ClinicalDocument: templateId <tt>2.16.840.1.113883.10.20.19.1</tt>]</shortdesc>
<prolog id="prolog">
<metadata><category>ClinicalDocument</category></metadata>
<resourceid id="2.16.840.1.113883.10.20.19.1"/>
</prolog>
<body>
<section id="description">
<p>This document type is not intended to be a replacement for IHE's XDS-SD (Cross-Transaction Specifications and Content Specifications, Scanned Documents Module) profile. Rather, it serves a more generic use case. XDS-SD is specifically for scanned documents, and limits content to PDF-A or text. This Unstructured Documents implementation guide is applicable not only for scanned documents in non-PDF formats, but also for clinical documents produced through word processing applications, etc.</p>
</section>
<ol id="conformance">
<li><b>SHALL</b> conform to <xref href="../GeneralHeaderConstraints.dita">General Header Constraints</xref> template (templateId: <tt>2.16.840.1.113883.10.20.3</tt>)</li>
<li>Contains exactly one [1..1] <tt><b>confidentialityCode</b></tt>
<ul><li>If the confidentialityCode cannot be determined for an Unstructured Document instance, the HL7 code "N" (normal confidentiality) is recommended.</li></ul></li>
<li><b>SHALL</b> contain exactly one [1..1] <tt><b>effectiveTime</b></tt> (CONF-UD-11)
<ul><li>The effectiveTime records the time of creation of the original document. If the referenced document is a scan, the date of scan can be recorded in dataEnterer. If the date of creation of the original document is not known, CDA allows the document effectiveTime to have a  nullFlavor.</li></ul></li>
<li>Contains at least one [1..*] <tt><b>author</b></tt>, such that
<ul><li>The author represents the person who created the original document. If the referenced document is a scan, the person who did the scan must be recorded in dataEnterer. If address and telecom are not known, they can be represented with nullFlavors.</li></ul><ol>
<li>An assignedAuthor element contains an addr element. If addr is unknown it <b>SHALL</b> be represented using the appropriate flavor of null. (CONF-UD-25)<ul><li><codeblock>[OCL]: not author.assignedAuthor.addr-&gt;isEmpty()</codeblock></li></ul></li>
<li>An assignedAuthor element contains a telecom element. If telecom is unknown it <b>SHALL</b> be represented using the appropriate flavor of null. (CONF-UD-26)<ul><li><codeblock>[OCL]: not author.assignedAuthor.telecom-&gt;isEmpty()</codeblock></li></ul></li></ol></li>
<li><b>SHALL</b> contain exactly one [1..1] <tt><b>custodian</b></tt> (CONF-UD-27), such that
<ol>
<li>The custodian element <b>SHALL</b> contain an assignedCustodian/representedCustodianOrganization element. (CONF-UD-28)<ul><li><codeblock>[OCL]: not custodian.assignedCustodian.representedCustodianOrganization.oclIsUndefined()</codeblock></li></ul></li>
<li>A representedCustodianOrganization element <b>SHALL</b> contain an id element. (CONF-UD-29)<ul><li><codeblock>[OCL]: not custodian.assignedCustodian.representedCustodianOrganization.id-&gt;isEmpty()</codeblock></li></ul></li>
<li>A representedCustodianOrganization element <b>SHALL</b> contain a name element. (CONF-UD-30)<ul><li><codeblock>[OCL]: not custodian.assignedCustodian.representedCustodianOrganization.name.oclIsUndefined()</codeblock></li></ul></li>
<li>A representedCustodianOrganization element <b>SHALL</b> contain a telecom element. (CONF-UD-31)<ul><li><codeblock>[OCL]: not custodian.assignedCustodian.representedCustodianOrganization.telecom.oclIsUndefined()</codeblock></li></ul></li>
<li>A representedCustodianOrganization element <b>SHALL</b> contain an addr element. (CONF-UD-32)<ul><li><codeblock>[OCL]: not custodian.assignedCustodian.representedCustodianOrganization.addr.oclIsUndefined()</codeblock></li></ul></li></ol></li>
<li><b>SHALL</b> satisfy: A patientRole element contains an id element. (CONF-UD-17)<ul><li><codeblock>[OCL]: not recordTarget.patientRole.id-&gt;isEmpty()</codeblock></li></ul></li>
<li><b>SHALL</b> satisfy: Contains component/nonXMLBody/text element. (CONF-UD-34)<ul><li><codeblock>[OCL]: not self.component.nonXMLBody.text.oclIsUndefined()</codeblock></li></ul></li>
<li>The text element <b>SHALL</b> either contain a reference element with a value attribute, or have a representation attribute with the value of B64, a mediaType attribute, and contain the media content (CONF-UD-35)<ul><li><codeblock>[OCL]: (not self.component.nonXMLBody.text.reference.oclIsUndefined() and self.component.nonXMLBody.text.reference.isDefined('value')) or (self.component.nonXMLBody.text.representation = datatypes::BinaryDataEncoding::B64 and self.component.nonXMLBody.text.isDefined('mediaType') and self.component.nonXMLBody.text.getText().size() &gt; 0)</codeblock></li></ul></li>
<li>The value of @mediaType <b>SHALL</b> be drawn from the value set 2.16.840.1.113883.11.20.7.1 SupportedFileFormats STATIC 20100512 (CONF-UD-36)<ul><li><codeblock>[OCL]: self.component.nonXMLBody.text.isDefined('mediaType') implies (self.component.nonXMLBody.text.mediaType = 'application/msword' or self.component.nonXMLBody.text.mediaType = 'application/pdf' or self.component.nonXMLBody.text.mediaType = 'text/plain' or self.component.nonXMLBody.text.mediaType = 'text/rtf' or self.component.nonXMLBody.text.mediaType = 'text/html' or self.component.nonXMLBody.text.mediaType = 'image/gif' or self.component.nonXMLBody.text.mediaType = 'image/tiff' or self.component.nonXMLBody.text.mediaType = 'image/jpeg' or self.component.nonXMLBody.text.mediaType = 'image/png')</codeblock></li></ul></li>
</ol>
<ol id="aggregate">
<li><b>SHALL</b> conform to <xref href="../GeneralHeaderConstraints.dita">General Header Constraints</xref> template (templateId: <tt>2.16.840.1.113883.10.20.3</tt>)</li>
<li><b>SHALL</b> contain exactly one [1..1] <tt><b>realmCode</b></tt><tt><b>/@code</b>="US" </tt> (CONF-HP-15)
</li>
<li><b>SHALL</b> contain exactly one [1..1] <tt><b>typeId</b></tt> (CONF-HP-16)
<ul><li>The clinical document type ID identifies the constraints imposed by CDA R2 on the
content, essentially acting as a version identifier.</li></ul></li>
<li><b>SHALL</b> contain exactly one [1..1] <tt><b>id</b></tt> (CONF-HP-17)
<ul><li>The ClinicalDocument/id element is an instance identifier data type (see HL7 Version 3
Abstract Data in Section 5 REFERENCES). The root attribute is a UUID or OID. The
root uniquely identifies the scope of the extension. The root and extension attributes
uniquely identify the document.</li></ul></li>
<li><b>SHALL</b> contain exactly one [1..1] <tt><b>code</b></tt> (CONF-HP-21)
<ul><li>Specifies the type of the clinical document.</li></ul></li>
<li><b>SHALL</b> contain exactly one [1..1] <tt><b>title</b></tt> (CONF-HP-22)
<ul><li>Specifies the local name used for the document.
Note that the title does not need to be the same as the display name provided with the
document type code. For example, the display name provided by LOINC&#174; as an aid in
debugging may be "HISTORY AND PHYSICAL." The title can be localized, as appropriate.</li></ul></li>
<li><b>SHALL</b> contain exactly one [1..1] <tt><b>effectiveTime</b></tt> (CONF-UD-11)
<ul><li>The effectiveTime records the time of creation of the original document. If the referenced document is a scan, the date of scan can be recorded in dataEnterer. If the date of creation of the original document is not known, CDA allows the document effectiveTime to have a  nullFlavor.</li></ul></li>
<li>Contains exactly one [1..1] <tt><b>confidentialityCode</b></tt>
<ul><li>If the confidentialityCode cannot be determined for an Unstructured Document instance, the HL7 code "N" (normal confidentiality) is recommended.</li></ul></li>
<li><b>SHALL</b> contain exactly one [1..1] <tt><b>languageCode</b></tt> (CONF-HP-24)
</li>
<li>Contains at least one [1..*] <tt><b>recordTarget</b></tt>, where its type is <xref href="../RecordTarget.dita">Record Target</xref>
</li>
<li>Contains at least one [1..*] <tt><b>author</b></tt>, where its type is <xref href="../Author.dita">Author</xref>
<ol>
<li>An assignedAuthor element contains an addr element. If addr is unknown it <b>SHALL</b> be represented using the appropriate flavor of null. (CONF-UD-25)<ul><li><codeblock>[OCL]: not author.assignedAuthor.addr-&gt;isEmpty()</codeblock></li></ul></li>
<li>An assignedAuthor element contains a telecom element. If telecom is unknown it <b>SHALL</b> be represented using the appropriate flavor of null. (CONF-UD-26)<ul><li><codeblock>[OCL]: not author.assignedAuthor.telecom-&gt;isEmpty()</codeblock></li></ul></li></ol></li>
<li>Contains exactly one [1..1] <tt><b>custodian</b></tt>, where its type is <xref href="../Custodian.dita">Custodian</xref>
<ol>
<li>The custodian element <b>SHALL</b> contain an assignedCustodian/representedCustodianOrganization element. (CONF-UD-28)<ul><li><codeblock>[OCL]: not custodian.assignedCustodian.representedCustodianOrganization.oclIsUndefined()</codeblock></li></ul></li>
<li>A representedCustodianOrganization element <b>SHALL</b> contain an id element. (CONF-UD-29)<ul><li><codeblock>[OCL]: not custodian.assignedCustodian.representedCustodianOrganization.id-&gt;isEmpty()</codeblock></li></ul></li>
<li>A representedCustodianOrganization element <b>SHALL</b> contain a name element. (CONF-UD-30)<ul><li><codeblock>[OCL]: not custodian.assignedCustodian.representedCustodianOrganization.name.oclIsUndefined()</codeblock></li></ul></li>
<li>A representedCustodianOrganization element <b>SHALL</b> contain a telecom element. (CONF-UD-31)<ul><li><codeblock>[OCL]: not custodian.assignedCustodian.representedCustodianOrganization.telecom.oclIsUndefined()</codeblock></li></ul></li>
<li>A representedCustodianOrganization element <b>SHALL</b> contain an addr element. (CONF-UD-32)<ul><li><codeblock>[OCL]: not custodian.assignedCustodian.representedCustodianOrganization.addr.oclIsUndefined()</codeblock></li></ul></li></ol></li>
<li>Contains exactly one [1..1] <tt><b>component</b></tt>, where its type is <xref href="../Component2.dita">Component2</xref>
</li>
<li>Contains at least one [1..*] <tt><b>author</b></tt>, such that
<ol>
<li>An assignedAuthor element contains an addr element. If addr is unknown it <b>SHALL</b> be represented using the appropriate flavor of null. (CONF-UD-25)<ul><li><codeblock>[OCL]: not author.assignedAuthor.addr-&gt;isEmpty()</codeblock></li></ul></li>
<li>An assignedAuthor element contains a telecom element. If telecom is unknown it <b>SHALL</b> be represented using the appropriate flavor of null. (CONF-UD-26)<ul><li><codeblock>[OCL]: not author.assignedAuthor.telecom-&gt;isEmpty()</codeblock></li></ul></li></ol><ul><li>The author element represents the creator of the clinical document. If the role of the
actor is the entry of information from his or her own knowledge or application of skills,
that actor is the author. If one actor provides information to another actor who filters,
reasons, or algorithmically creates new information, then that second actor is also an
author, having created information from his or her own knowledge or skills. However,
that determination is independent from the determination of the first actor's
authorship.</li></ul></li>
<li>Contains zero or one [0..1] <tt><b>dataEnterer</b></tt>, such that
<ul><li><p>The dataEnterer element represents the person who transferred the information from
other sources into the clinical document, where the other sources wrote the content of
the note. The guiding rule of thumb is that an author provides the content found
within the header or body of the document, subject to their own interpretation. The
dataEnterer adds information to the electronic system. A person can participate as
both author and dataEnterer.</p>
<p>If the role of the actor is to transfer information from one source to another (e.g.,
transcription or transfer from paper form to electronic system), that actor is considered
a dataEnterer.</p></li></ul></li>
<li>Contains exactly one [1..1] <tt><b>custodian</b></tt>, such that
<ol>
<li>The custodian element <b>SHALL</b> contain an assignedCustodian/representedCustodianOrganization element. (CONF-UD-28)<ul><li><codeblock>[OCL]: not custodian.assignedCustodian.representedCustodianOrganization.oclIsUndefined()</codeblock></li></ul></li>
<li>A representedCustodianOrganization element <b>SHALL</b> contain an id element. (CONF-UD-29)<ul><li><codeblock>[OCL]: not custodian.assignedCustodian.representedCustodianOrganization.id-&gt;isEmpty()</codeblock></li></ul></li>
<li>A representedCustodianOrganization element <b>SHALL</b> contain a name element. (CONF-UD-30)<ul><li><codeblock>[OCL]: not custodian.assignedCustodian.representedCustodianOrganization.name.oclIsUndefined()</codeblock></li></ul></li>
<li>A representedCustodianOrganization element <b>SHALL</b> contain a telecom element. (CONF-UD-31)<ul><li><codeblock>[OCL]: not custodian.assignedCustodian.representedCustodianOrganization.telecom.oclIsUndefined()</codeblock></li></ul></li>
<li>A representedCustodianOrganization element <b>SHALL</b> contain an addr element. (CONF-UD-32)<ul><li><codeblock>[OCL]: not custodian.assignedCustodian.representedCustodianOrganization.addr.oclIsUndefined()</codeblock></li></ul></li></ol><ul><li>Based on the CDA R2 constraints (Section 4.2.2.3 of the CDA Normative Web Edition.
See Section 5 REFERENCES), the custodian element is required and is the custodian of
the clinical document.</li></ul></li>
<li>Contains zero or more [0..*] <tt><b>informationRecipient</b></tt>, such that
<ul><li>informationRecipient, when used in the context of a referral or request for consultation,
this records the intended recipient of the information at the time the document is
created. The intended recipient may also be the health chart of the patient, in which
case the receivedOrganization is the scoping organization of that chart.</li></ul></li>
<li>Contains zero or one [0..1] <tt><b>legalAuthenticator</b></tt>, such that
<ul><li><p>The legalAuthenticator element identifies the legal authenticator of the document and
must be present if the document has been legally authenticated. Based on local
practice, clinical documents may be released before legal authentication. This implies
that a clinical document that does not contain this element has not been legally
authenticated.</p>
<p>The act of legal authentication requires a certain privilege be granted to the legal
authenticator depending upon local policy. All clinical documents have the potential for
legal authentication, given the appropriate credentials.</p>
<p>Local policies may choose to delegate the function of legal authentication to a device or
system that generates the clinical document. In these cases, the legal authenticator is
a person accepting responsibility for the document, not the generating device or system.</p></li></ul></li>
<li>Contains zero or more [0..*] <tt><b>authenticator</b></tt>, such that
<ul><li><p>The authenticator identifies the participant who attested to the accuracy of the
information in the document.</p>
<p>Automated systems, such as a PHR, that allow a clinical document to be generated need to give
special consideration to authentication permissions because the information contained in the
document may come from sources or contain information that the author cannot validate.</p></li></ul></li>
<li>Contains at least one [1..*] <tt><b>author</b></tt>, such that
<ol>
<li>An assignedAuthor element contains an addr element. If addr is unknown it <b>SHALL</b> be represented using the appropriate flavor of null. (CONF-UD-25)<ul><li><codeblock>[OCL]: not author.assignedAuthor.addr-&gt;isEmpty()</codeblock></li></ul></li>
<li>An assignedAuthor element contains a telecom element. If telecom is unknown it <b>SHALL</b> be represented using the appropriate flavor of null. (CONF-UD-26)<ul><li><codeblock>[OCL]: not author.assignedAuthor.telecom-&gt;isEmpty()</codeblock></li></ul></li></ol><ul><li>The author represents the person who created the original document. If the referenced document is a scan, the person who did the scan must be recorded in dataEnterer. If address and telecom are not known, they can be represented with nullFlavors.</li></ul></li>
<li><b>SHALL</b> contain exactly one [1..1] <tt><b>custodian</b></tt> (CONF-UD-27), such that
<ol>
<li>The custodian element <b>SHALL</b> contain an assignedCustodian/representedCustodianOrganization element. (CONF-UD-28)<ul><li><codeblock>[OCL]: not custodian.assignedCustodian.representedCustodianOrganization.oclIsUndefined()</codeblock></li></ul></li>
<li>A representedCustodianOrganization element <b>SHALL</b> contain an id element. (CONF-UD-29)<ul><li><codeblock>[OCL]: not custodian.assignedCustodian.representedCustodianOrganization.id-&gt;isEmpty()</codeblock></li></ul></li>
<li>A representedCustodianOrganization element <b>SHALL</b> contain a name element. (CONF-UD-30)<ul><li><codeblock>[OCL]: not custodian.assignedCustodian.representedCustodianOrganization.name.oclIsUndefined()</codeblock></li></ul></li>
<li>A representedCustodianOrganization element <b>SHALL</b> contain a telecom element. (CONF-UD-31)<ul><li><codeblock>[OCL]: not custodian.assignedCustodian.representedCustodianOrganization.telecom.oclIsUndefined()</codeblock></li></ul></li>
<li>A representedCustodianOrganization element <b>SHALL</b> contain an addr element. (CONF-UD-32)<ul><li><codeblock>[OCL]: not custodian.assignedCustodian.representedCustodianOrganization.addr.oclIsUndefined()</codeblock></li></ul></li></ol></li>
<li><b>SHALL</b> satisfy: All patient, guardianPerson, assignedPerson, maintainingPerson, relatedPerson, intendedRecipient/informationRecipient, associatedPerson, and relatedSubject/subject elements have a name. (CONF-HP-6)<ul><li><codeblock>[OCL]: -- implemented in Java using XPath selector</codeblock></li><li><codeblock>[XPath]: *[self::cda:patient or self::cda:guardianPerson or self::cda:assignedPerson
   or self::cda:maintainingPerson or self::cda:relatedPerson or self::cda:associatedPerson
   or self::cda:intendedRecipient/cda:informationRecipient or self::cda:relatedSubject/cda:subject]</codeblock></li></ul></li>
<li><b>SHALL</b> satisfy: All patientRole, assignedAuthor, assignedEntity[not(parent::dataEnterer)] and associatedEntity elements have an addr and telecom element. (CONF-HP-7)<ul><li><codeblock>[OCL]: -- implemented in Java using XPath selector</codeblock></li><li><codeblock>[XPath]: *[self::cda:patientRole or self::cda:assignedAuthor or self::cda:assignedEntity[not(parent::cda:dataEnterer)]  or self::cda:associatedEntity]</codeblock></li></ul></li>
<li><b>SHOULD</b> satisfy: All guardian, dataEnterer/assignedEntity, relatedEntity, intendedRecipient, relatedSubject and participantRole elements have an addr and telecom element. (CONF-HP-8)<ul><li><codeblock>[OCL]: -- implemented in Java using XPath selector</codeblock></li><li><codeblock>[XPath]: *[self::cda:guardian or self::cda:assignedEntity[parent::cda:dataEnterer] or self::cda:relatedEntity or self::cda:intendedRecipient or self::cda:relatedSubject or self::cda:participantRole]</codeblock></li></ul></li>
<li><b>SHALL</b> satisfy: All guardianOrganization, providerOrganization, wholeOrganization, representedOrganization, representedCustodianOrganization, receivedOrganization, scopingOrganization and serviceProviderOrganization elements have name, addr and telecom elements. (CONF-HP-9)<ul><li>When name, address, or telecom information is unknown and where these elements are
required to be present, as with CDA conformance if the information is unknown, these
elements will be represented using an appropriate value for the nullFlavor attribute on
the element. Legal values according to this specification come from the HL7 NullFlavor
vocabulary.</li></ul><ul><li><codeblock>[OCL]: -- implemented in Java using XPath selector</codeblock></li><li><codeblock>[XPath]: *[self::cda:guardianOrganization or self::cda:providerOrganization or self::cda:wholeOrganization or self::cda:representedOrganization or self::cda:representedCustodianOrganization or self::cda:receivedOrganization or self::cda:scopingOrganization or self::cda:serviceProviderOrganization]</codeblock></li></ul></li>
<li>Times or time intervals found in the ClinicalDocument/effectiveTime,
author/time, dataEnterer/time, legalAuthenticator/time, authenticator/time and
encompassingEncounter/effectiveTime elements <b>SHALL</b> be precise to the day, <b>SHALL</b>
include a time zone if more precise than to the day, and <b>SHOULD</b> be precise to the
second. (CONF-HP-10)<ul><li><codeblock>[OCL]: -- implemented in Java using XPath selector</codeblock></li><li><codeblock>[XPath]: /cda:ClinicalDocument/cda:effectiveTime | //cda:author/cda:time | //cda:dataEnterer/cda:time | //cda:encompassingEncounter/cda:effectiveTime</codeblock></li></ul></li>
<li>Times or time intervals found in the asOrganizationPartOf/effectiveTime,
asMaintainedEntity/effectiveTime, relatedEntity/effectiveTime,
serviceEvent/effectiveTime, ClinicalDocument/participant/time,
serviceEvent/performer/time and encounterParticipant/time <b>SHALL</b> be precise at
least to the year, <b>SHOULD</b> be precise to the day, and <b>MAY</b> omit time zone. (CONF-HP-11)<ul><li><codeblock>[OCL]: cda::OrganizationPartOf.allInstances()-&gt;select( effectiveTime.oclIsUndefined()).oclAsType( ecore::EObject)-&gt; union(  cda::MaintainedEntity.allInstances()-&gt;select( effectiveTime.oclIsUndefined()).oclAsType( ecore::EObject) )-&gt;union( cda::RelatedEntity.allInstances()-&gt;select( effectiveTime.oclIsUndefined()).oclAsType( ecore::EObject) )-&gt;union(cda::RelatedEntity.allInstances()-&gt;select( effectiveTime.oclIsUndefined()).oclAsType( ecore::EObject) )-&gt;union(cda::RelatedEntity.allInstances()-&gt;select( effectiveTime.oclIsUndefined()).oclAsType( ecore::EObject) )-&gt;union(cda::ServiceEvent.allInstances()-&gt;select( effectiveTime.oclIsUndefined()).oclAsType( ecore::EObject) )-&gt;union(cda::EncounterParticipant.allInstances()-&gt;select( time.oclIsUndefined()).oclAsType( ecore::EObject))-&gt;union(self.participant-&gt;select( time.oclIsUndefined()).oclAsType( ecore::EObject))-&gt;union(cda::OrganizationPartOf.allInstances().effectiveTime-&gt;union(cda::MaintainedEntity.allInstances().effectiveTime)-&gt;union( cda::RelatedEntity.allInstances().effectiveTime)-&gt;union(cda::RelatedEntity.allInstances().effectiveTime)-&gt;union(cda::RelatedEntity.allInstances().effectiveTime)-&gt;union(cda::ServiceEvent.allInstances().effectiveTime)-&gt;union(cda::EncounterParticipant.allInstances().time)-&gt;union(self.participant.time)-&gt;select(current : datatypes::IVL_TS  |  ((not current.low.oclIsUndefined()) and (current.low.value.oclIsUndefined() or current.low.value.size() &lt; 4)) or ((not current.center.oclIsUndefined()) and (current.center.value.oclIsUndefined() or current.center.value.size() &lt; 4)) or ((not current.high.oclIsUndefined()) and (current.high.value.oclIsUndefined() or current.high.value.size() &lt; 4)) or (current.low.oclIsUndefined() and current.center.oclIsUndefined() and current.high.oclIsUndefined()) ).oclAsType( ecore::EObject))</codeblock></li></ul></li>
<li><b>SHALL</b> satisfy: Telephone numbers match the regular expression pattern tel:\+?[-0-9().]+ (CONF-HP-12)<ul><li>The telecom element is used to provide a contact telephone number for the various
participants that require it. The value attribute ofthis elements is a URL that specifies
the telephone number, as indicated by the TEL data type.</li><li>All telephone numbers are to be encoded using a restricted form of the tel: URL scheme. 
A telephone number used for voice calls begins with the URL scheme tel:. If the
number is a global phone number, it starts with a plus (+) sign. The remaining number
is made up of the dialing digits and an optional extension and may also contain visual
separators.</li></ul><ul><li><codeblock>[OCL]: -- implemented in Java using XPath selector</codeblock></li><li><codeblock>[XPath]: //*[self::cda:telecom]</codeblock></li></ul></li>
<li><b>SHALL</b> satisfy: At least one dialing digit is present in the phone number after visual separators are removed. (CONF-HP-13)<ul><li><codeblock>[OCL]: -- implemented in Java using XPath selector</codeblock></li><li><codeblock>[XPath]: //*[self::cda:telecom]</codeblock></li></ul></li>
<li><b>SHALL</b> satisfy: If the telephone number is unknown it is represented using the appropriate flavor of null. (CONF-HP-14)<ul><li>There is no way to distinguish between an unknown phone number and an unknown
e-mail or other telecommunications address. Therefore, the following convention will be
used: Any telecom element that uses a flavor of null (has a nullFlavor attribute) is
assumed to be a telephone number, which is the only required telecommunications
address element within this DSTU.</li></ul><ul><li><codeblock>[OCL]: -- implemented in Java using XPath selector</codeblock></li><li><codeblock>[XPath]: //*[self::cda:telecom]</codeblock></li></ul></li>
<li><b>SHALL</b> satisfy: The extension attribute of the typeId element is POCD_HD000040. (CONF-HP-16)<ul><li><codeblock>[OCL]: self.typeId.extension = 'POCD_HD000040'</codeblock></li></ul></li>
<li><b>SHALL</b> satisfy: The id/@root attribute is a syntactically correct UUID or OID. (CONF-HP-17)<ul><li><codeblock>[OCL]: self.id.matches('root','([0-2])(.([1-9][0-9]*|0))+') or self.id.matches('root','([A-Fa-f0-9]{8})(\\\\-[A-Fa-f0-9]{4}){3}(\\\\-[A-Fa-f0-9]{12})')</codeblock></li></ul></li>
<li><b>SHALL</b> satisfy: UUIDs are represented in the form XXXXXXXX-XXXX-XXXX-XXXXXXXXXXXXXXXX, where each X is a character from the set [A-Fa-f0-9]. (CONF-HP-18)<ul><li>UNIMPLEMENTABLE</li></ul></li>
<li>OIDs are represented in dotted decimal notation, where each decimal number is either 0, or starts with a nonzero digit. More formally, an OID <b>SHALL</b> be in the form ([0-2])(.([1-9][0-9]*|0))+. (CONF-HP-19)<ul><li><p>Organizations that wish to use OIDs should properly register their OID root and ensure
uniqueness of the OID roots used in identifiers. A large number of mechanisms exist
for obtaining OID roots for free or for a reasonable fee. HL7 maintains an OID registry
page from which organizations may request an OID root under the HL7 OID root. This
page can be accessed at: http://www.hl7.org/oid.</p>
<p>Another useful resource lists the many ways to obtain a registered OID Root for free or
a small fee anywhere in the world and is located at:
http://www.dclunie.com/medical-image-faq/html/part8.html#UIDRegistration. </p>
<p>The manner in which the OID root is obtained is not constrained by this DSTU.</p></li><li>UNIMPLEMENTABLE</li></ul></li>
<li><b>SHALL</b> satisfy: OIDs are no more than 64 characters in length. (CONF-HP-20)<ul><li>OIDs are limited by this specification to no more than 64 characters in length for
compatibility with other standards and Implementation Guides.</li></ul><ul><li><codeblock>[OCL]: self.id-&gt;select((not id.root.oclIsUndefined()) and id.root.size() &gt; 64 )</codeblock></li></ul></li>
<li><b>SHALL</b> satisfy: languageCode has the form nn, or nn-CC. (CONF-HP-25)<ul><li><codeblock>[OCL]: self.languageCode.matches('code','(([a-z]{2})(\\\\-[A-Z]{2})?)')</codeblock></li></ul></li>
<li><b>SHALL</b> satisfy: The nn portion of languageCode is a legal ISO-639-1 language code in lowercase. (CONF-HP-26)<ul><li>UNIMPLEMENTABLE</li></ul></li>
<li>The CC portion languageCode, if present, <b>SHALL</b> be an ISO-3166 country code in uppercase. (CONF-HP-27)<ul><li>UNIMPLEMENTABLE</li></ul></li>
<li>Both setId and versionNumber <b>SHALL</b> be present or both <b>SHALL</b> be absent. (CONF-HP-28)<ul><li>The ClinicalDocument/setId element uses the instance identifier (II) data type. The root
attribute is a UUID or OID that uniquely identifies the scope of the identifier, and the
extension attribute is a value that is unique within the scope of the root for the set of
versions of the document. See Document Identification, Revisions, and Addenda in
Section 4.2.3.1 of the CDA Specification for some examples showing the use of the setId
element.</li></ul><ul><li><codeblock>[OCL]: (self.setId.oclIsUndefined() and self.versionNumber.oclIsUndefined())
   xor (not self.setId.oclIsUndefined() and not self.versionNumber.oclIsUndefined())</codeblock></li></ul></li>
<li>The @extension and/or @root of setId and id <b>SHALL</b> be different when both are present. (CONF-HP-29)<ul><li><codeblock>[OCL]: (not self.setId.oclIsUndefined() and not self.id.oclIsUndefined())
   implies (self.setId.root &lt;&gt; self.id.root or self.setId.extension &lt;&gt; self.id.extension)</codeblock></li></ul></li>
<li>A copyTime element <b>SHALL NOT</b> be present. (CONF-HP-30)<ul><li>The ClinicalDocument/copyTime element has been deprecated in CDA R2.</li></ul><ul><li><codeblock>[OCL]: self.copyTime.oclIsUndefined()</codeblock></li></ul></li>
<li><b>SHALL</b> satisfy: At least one recordTarget/patientRole element is present. (CONF-HP-31)<ul><li><codeblock>[OCL]: self.recordTarget-&gt;size() &gt; 0 and self.recordTarget-&gt;exists(target : cda::RecordTarget | not target.patientRole.oclIsUndefined())</codeblock></li></ul></li>
<li>A patient/birthTime element <b>SHALL</b> be present. The patient/birthTime
element <b>SHALL</b> be precise at least to the year, and <b>SHOULD</b> be precise at least to the
day, and <b>MAY</b> omit time zone. If unknown, it <b>SHALL</b> be represented using a flavor of
null. (CONF-HP-32)<ul><li><codeblock>[OCL]: self.recordTarget-&gt;forAll(target : cda::RecordTarget | not target.patientRole.oclIsUndefined()
   implies (not target.patientRole.patient.birthTime.value.oclIsUndefined()
      or not target.patientRole.patient.birthTime.nullFlavor.oclIsUndefined()))</codeblock></li></ul></li>
<li>A patient/administrativeGenderCode element <b>SHALL</b> be present. If
unknown, it <b>SHALL</b> be represented using a flavor of null. Values for
administrativeGenderCode <b>SHOULD</b> be drawn from the HL7 AdministrativeGender
vocabulary. (CONF-HP-33)<ul><li>TODO: add OCL test for terminology</li></ul><ul><li><codeblock>[OCL]: self.recordTarget-&gt;forAll(target : cda::RecordTarget | not target.patientRole.oclIsUndefined()
   implies (not target.patientRole.patient.administrativeGenderCode.code.oclIsUndefined()
      or not target.patientRole.patient.administrativeGenderCode.nullFlavor.oclIsUndefined()))</codeblock></li></ul></li>
<li>The maritalStatusCode, religiousAffiliationCode, raceCode and
ethnicGroupCode <b>MAY</b> be present. If maritalStatusCode, religiousAffiliationCode,
raceCode and ethnicGroupCode elements are present, they <b>SHOULD</b> be encoded using
the appropriate HL7 vocabularies. (CONF-HP-34)</li>
<li><b>SHOULD</b> satisfy: The guardian element is present when the patient is a minor child. (CONF-HP-35)<ul><li>UNIMPLEMENTABLE</li></ul></li>
<li><b>MAY</b> satisfy: The providerOrganization element is present. (CONF-HP-36)<ul><li><codeblock>[OCL]: self.recordTarget-&gt;exists(target : cda::RecordTarget | not target.patientRole.providerOrganization.oclIsUndefined())</codeblock></li></ul></li>
<li><b>SHALL</b> satisfy: The author/time element is present. (CONF-HP-37)<ul><li>The author/time element represents the start time of the author's
participation in the creation of the clinical document.</li></ul><ul><li><codeblock>[OCL]: self.author-&gt;forAll(author : cda::Author | not author.time.oclIsUndefined())</codeblock></li></ul></li>
<li><b>SHALL</b> satisfy: The assignedAuthor/id element is present. (CONF-HP-38)<ul><li><codeblock>[OCL]: self.author-&gt;forAll(author : cda::Author | author.assignedAuthor.id-&gt;size() &gt; 0)</codeblock></li></ul></li>
<li><b>SHALL</b> satisfy: An assignedAuthor element contains at least one assignedPerson
or assignedAuthoringDevice elements. (CONF-HP-39)<ul><li><codeblock>[OCL]: self.author-&gt;forAll(author : cda::Author | not author.assignedAuthor.assignedPerson.oclIsUndefined() 
   or not author.assignedAuthor.assignedAuthoringDevice.oclIsUndefined())</codeblock></li></ul></li>
<li><b>SHALL</b> satisfy: When dataEnterer is present, an assignedEntity/assignedPerson element is present. (CONF-HP-40)<ul><li><codeblock>[OCL]: not self.dataEnterer.oclIsUndefined() implies not self.dataEnterer.assignedEntity.assignedPerson.oclIsUndefined()</codeblock></li></ul></li>
<li>The dataEnterer/time element <b>MAY</b> be present. If present, it represents the starting time of entry of the data. (CONF-HP-41)<ul><li><codeblock>[OCL]: not self.dataEnterer.oclIsUndefined() implies not self.dataEnterer.time.oclIsUndefined()</codeblock></li></ul></li>
<li><b>MAY</b> satisfy: The informant element is present. (CONF-HP-42)<ul><li><codeblock>[OCL]: self.informant-&gt;size() &gt; 0</codeblock></li></ul></li>
<li>When informant is present, an assignedEntity/assignedPerson or
relatedEntity/relatedPerson element <b>SHALL</b> be present. (CONF-HP-43)<ul><li><codeblock>[OCL]: self.informant-&gt;forAll(i : cda::Informant12 | not i.assignedEntity.assignedPerson.oclIsUndefined()
   or not i.relatedEntity.relatedPerson.oclIsUndefined())</codeblock></li></ul></li>
<li>When the informant is a healthcare provider with an assigned role, the
informant <b>SHALL</b> be represented using the assignedEntity element (CONF-HP-44)<ul><li>Assigned health care providers may be a source of information when a document is
created. (e.g., a nurse's aide who provides information about a recent significant health
care event that occurred within an acute care facility.) In these cases, the
assignedEntity element is used.</li><li>UNIMPLEMENTABLE</li></ul></li>
<li>Allowable values for informant/relatedEntity/@classCode <b>SHALL</b> be CON,
PRS, CAREGIVER, AGNT or PROV from the RoleClass vocabulary. (CONF-HP-45)<ul><li><p>When the informant is a personal relation, that informant is represented in the
relatedEntity element. The code element of the relatedEntity describes the relationship
between the informant and the patient.</p>
<p>The relationship between the informant and the patient needs to be described to help
the receiver of the clinical document understand the information in the document.</p></li><li>UNIMPLEMENTABLE</li></ul></li>
<li>When relatedEntity/@classCode is PRS, values in relatedEntity/code
<b>SHALL</b> come from the HL7 PersonalRelationshipRoleType vocabulary or from
SNOMED, any subtype of "Person in the family" (303071001). (CONF-HP-46)</li>
<li>When an informant is an unrelated person not otherwise specified, the
value relatedEntity/@classCode <b>SHALL</b> be set to CON to indicate that this person is a
contact. (CONF-HP-47)<ul><li>Individuals with no prior personal relationship to the patient (e.g., a witness to a
significant health care event) may provide information about the patient.</li><li>UNIMPLEMENTABLE</li></ul></li>
<li>When the informant is a healthcare provider without an assigned role,
the informant <b>SHALL</b> be represented using the relatedEntity element and the value of
relatedEntity/@classCode <b>SHALL</b> be set to PROV. (CONF-HP-48)<ul><li>A health care provider who does not have an assigned role at the institution may
provide information. To record an informant that does not have an assigned role that
can be represented within the context of the document, the information will be
represented using the relatedEntity element and the value of relatedEntity/@classCode
will be set to PROV.</li><li>UNIMPLEMENTABLE</li></ul></li>
<li>When the informant is a healthcare provider, the value of relatedEntity/code <b>SHOULD</b> be present and indicate the type of healthcare provider. (CONF-HP-49)<ul><li>UNIMPLEMENTABLE</li></ul></li>
<li>The ClinicalDocument/informationRecipient element <b>MAY</b> be present.
When informationRecipient is used, at least one
informationRecipient/intendedRecipient/informationRecipient or
informationRecipient/intendedRecipient/receivedOrganization <b>SHALL</b> be present. (CONF-HP-50)</li>
<li>The assignedEntity/assignedPerson element <b>SHALL</b> be present in legalAuthenticator. (CONF-HP-51)<ul><li><codeblock>[OCL]: not self.legalAuthenticator.oclIsUndefined() implies not self.legalAuthenticator.assignedEntity.assignedPerson.oclIsUndefined()</codeblock></li></ul></li>
<li>The assignedEntity/assignedPerson element <b>SHALL</b> be present in an authenticator element. (CONF-HP-52)<ul><li><codeblock>[OCL]: self.authenticator-&gt;forAll(auth : cda::Authenticator | auth.assignedEntity-&gt;forAll(entity : cda::AssignedEntity |
   not entity.assignedPerson.oclIsUndefined()))</codeblock></li></ul></li>
<li>Times or time intervals found in the ClinicalDocument/effectiveTime,
author/time, dataEnterer/time, legalAuthenticator/time, authenticator/time and
encompassingEncounter/effectiveTime elements <b>SHALL</b> be precise to the day, <b>SHALL</b>
include a time zone if more precise than to the day, and <b>SHOULD</b> be precise to the
second. (CONF-HP-10)<ul><li>Should portion of CON-HP-10 constraitn</li></ul><ul><li><codeblock>[OCL]: -- implemented in Java using XPath selector</codeblock></li><li><codeblock>[XPath]: /cda:ClinicalDocument/cda:effectiveTime | //cda:author/cda:time | //cda:dataEnterer/cda:time | //cda:encompassingEncounter/cda:effectiveTime</codeblock></li></ul></li>
<li>Times or time intervals found in the asOrganizationPartOf/effectiveTime,
asMaintainedEntity/effectiveTime, relatedEntity/effectiveTime,
serviceEvent/effectiveTime, ClinicalDocument/participant/time,
serviceEvent/performer/time and encounterParticipant/time <b>SHALL</b> be precise at
least to the year, <b>SHOULD</b> be precise to the day, and <b>MAY</b> omit time zone. (CONF-HP-11)<ul><li>Should portion of CON-HP-11 constraint</li></ul><ul><li><codeblock>[OCL]: cda::OrganizationPartOf.allInstances()-&gt;select( effectiveTime.oclIsUndefined()).oclAsType( ecore::EObject)-&gt; union(  cda::MaintainedEntity.allInstances()-&gt;select( effectiveTime.oclIsUndefined()).oclAsType( ecore::EObject) )-&gt;union( cda::RelatedEntity.allInstances()-&gt;select( effectiveTime.oclIsUndefined()).oclAsType( ecore::EObject) )-&gt;union(cda::RelatedEntity.allInstances()-&gt;select( effectiveTime.oclIsUndefined()).oclAsType( ecore::EObject) )-&gt;union(cda::RelatedEntity.allInstances()-&gt;select( effectiveTime.oclIsUndefined()).oclAsType( ecore::EObject) )-&gt;union(cda::ServiceEvent.allInstances()-&gt;select( effectiveTime.oclIsUndefined()).oclAsType( ecore::EObject) )-&gt;union(cda::EncounterParticipant.allInstances()-&gt;select( time.oclIsUndefined()).oclAsType( ecore::EObject))-&gt;union(self.participant-&gt;select( time.oclIsUndefined()).oclAsType( ecore::EObject))-&gt;union(cda::OrganizationPartOf.allInstances().effectiveTime-&gt;union(cda::MaintainedEntity.allInstances().effectiveTime)-&gt;union( cda::RelatedEntity.allInstances().effectiveTime)-&gt;union(cda::RelatedEntity.allInstances().effectiveTime)-&gt;union(cda::RelatedEntity.allInstances().effectiveTime)-&gt;union(cda::ServiceEvent.allInstances().effectiveTime)-&gt;union(cda::EncounterParticipant.allInstances().time)-&gt;union(self.participant.time)-&gt;select(current : datatypes::IVL_TS  |  ((not current.low.oclIsUndefined()) and (current.low.value.oclIsUndefined() or current.low.value.size() &lt; 8)) or ((not current.center.oclIsUndefined()) and (current.center.value.oclIsUndefined() or current.center.value.size() &lt; 8)) or ((not current.high.oclIsUndefined()) and (current.high.value.oclIsUndefined() or current.high.value.size() &lt; 8)) or (current.low.oclIsUndefined() and current.center.oclIsUndefined() and current.high.oclIsUndefined()) ).oclAsType( ecore::EObject))</codeblock></li></ul></li>
<li><b>SHALL</b> satisfy: A patientRole element contains an id element. (CONF-UD-17)<ul><li><codeblock>[OCL]: not recordTarget.patientRole.id-&gt;isEmpty()</codeblock></li></ul></li>
<li>An assignedAuthor element contains an addr element. If addr is unknown it <b>SHALL</b> be represented using the appropriate flavor of null. (CONF-UD-25)<ul><li><codeblock>[OCL]: not author.assignedAuthor.addr-&gt;isEmpty()</codeblock></li></ul></li>
<li>An assignedAuthor element contains a telecom element. If telecom is unknown it <b>SHALL</b> be represented using the appropriate flavor of null. (CONF-UD-26)<ul><li><codeblock>[OCL]: not author.assignedAuthor.telecom-&gt;isEmpty()</codeblock></li></ul></li>
<li>The custodian element <b>SHALL</b> contain an assignedCustodian/representedCustodianOrganization element. (CONF-UD-28)<ul><li><codeblock>[OCL]: not custodian.assignedCustodian.representedCustodianOrganization.oclIsUndefined()</codeblock></li></ul></li>
<li>A representedCustodianOrganization element <b>SHALL</b> contain an id element. (CONF-UD-29)<ul><li><codeblock>[OCL]: not custodian.assignedCustodian.representedCustodianOrganization.id-&gt;isEmpty()</codeblock></li></ul></li>
<li>A representedCustodianOrganization element <b>SHALL</b> contain a name element. (CONF-UD-30)<ul><li><codeblock>[OCL]: not custodian.assignedCustodian.representedCustodianOrganization.name.oclIsUndefined()</codeblock></li></ul></li>
<li>A representedCustodianOrganization element <b>SHALL</b> contain a telecom element. (CONF-UD-31)<ul><li><codeblock>[OCL]: not custodian.assignedCustodian.representedCustodianOrganization.telecom.oclIsUndefined()</codeblock></li></ul></li>
<li>A representedCustodianOrganization element <b>SHALL</b> contain an addr element. (CONF-UD-32)<ul><li><codeblock>[OCL]: not custodian.assignedCustodian.representedCustodianOrganization.addr.oclIsUndefined()</codeblock></li></ul></li>
<li><b>SHALL</b> satisfy: Contains component/nonXMLBody/text element. (CONF-UD-34)<ul><li><codeblock>[OCL]: not self.component.nonXMLBody.text.oclIsUndefined()</codeblock></li></ul></li>
<li>The text element <b>SHALL</b> either contain a reference element with a value attribute, or have a representation attribute with the value of B64, a mediaType attribute, and contain the media content (CONF-UD-35)<ul><li><codeblock>[OCL]: (not self.component.nonXMLBody.text.reference.oclIsUndefined() and self.component.nonXMLBody.text.reference.isDefined('value')) or (self.component.nonXMLBody.text.representation = datatypes::BinaryDataEncoding::B64 and self.component.nonXMLBody.text.isDefined('mediaType') and self.component.nonXMLBody.text.getText().size() &gt; 0)</codeblock></li></ul></li>
<li>The value of @mediaType <b>SHALL</b> be drawn from the value set 2.16.840.1.113883.11.20.7.1 SupportedFileFormats STATIC 20100512 (CONF-UD-36)<ul><li><codeblock>[OCL]: self.component.nonXMLBody.text.isDefined('mediaType') implies (self.component.nonXMLBody.text.mediaType = 'application/msword' or self.component.nonXMLBody.text.mediaType = 'application/pdf' or self.component.nonXMLBody.text.mediaType = 'text/plain' or self.component.nonXMLBody.text.mediaType = 'text/rtf' or self.component.nonXMLBody.text.mediaType = 'text/html' or self.component.nonXMLBody.text.mediaType = 'image/gif' or self.component.nonXMLBody.text.mediaType = 'image/tiff' or self.component.nonXMLBody.text.mediaType = 'image/jpeg' or self.component.nonXMLBody.text.mediaType = 'image/png')</codeblock></li></ul></li>
</ol>
<codeblock id="example"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<ClinicalDocument xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:hl7-org:v3" xsi:schemaLocation="urn:hl7-org:v3 CDA.xsd">
  <realmCode code="US"/>
  <typeId root="2.16.840.1.113883.1.3"/>
  <templateId root="2.16.840.1.113883.10.20.3"/>
  <templateId root="2.16.840.1.113883.10.20.19.1"/>
  <id root="133386236"/>
  <code code="Value"/>
  <title/>
  <effectiveTime/>
  <confidentialityCode code="Value"/>
  <languageCode/>
  <recordTarget>
    <realmCode/>
    <typeId root="2.16.840.1.113883.1.3"/>
    <patientRole/>
  </recordTarget>
  <author>
    <realmCode/>
    <typeId root="2.16.840.1.113883.1.3"/>
    <time/>
    <assignedAuthor/>
  </author>
  <custodian/>
  <component/>
</ClinicalDocument>]]></codeblock>
</body>
</topic>
